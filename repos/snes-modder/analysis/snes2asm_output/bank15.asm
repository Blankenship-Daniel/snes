.BANK 15 SLOT 0
.ORG $0000

.SECTION "Bank15" FORCE

	and ($70.b),Y		; 31 70 ; AND accumulator with memory ($70.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $70		; 30 70 ; Branch if minus to $30, $70 [Flow: branch]
	tsb $70.b		; 04 70 ; Test and set bits $70.b [Reads: Accumulator] [Flags: Z]
	ora $70.b,S		; 03 70 ; OR accumulator with stack relative $70.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	and ($30.b),Y		; 31 30 ; AND accumulator with memory ($30.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $30.b,S		; 03 30 ; OR accumulator with stack relative $30.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tsb $30.b		; 04 30 ; Test and set bits $30.b [Reads: Accumulator] [Flags: Z]
	and ($30.b)		; 32 30 ; AND accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($70.b)		; 32 70 ; AND accumulator with memory (indirect) ($70.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $30.b		; 05 30 ; Logical OR $30.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $70.b		; 05 70 ; Logical OR $70.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	adc ($00.b),Y		; 71 00 ; Add with carry ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($6A.b),Y		; 11 6A ; OR accumulator with memory ($6A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($08.b),Y		; 11 08 ; OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($08.b),Y		; 11 08 ; OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	ora ($45.b),Y		; 11 45 ; OR accumulator with memory ($45.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $0A		; 30 0A ; Branch if minus to $30, $0A [Flow: branch]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	.db $10, $07		; 10 07 ; Branch if plus to $10, $07 [Flow: branch]
	.db $30, $13		; 30 13 ; Branch if minus to $30, $13 [Flow: branch]
	.db $30, $14		; 30 14 ; Branch if minus to $30, $14 [Flow: branch]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $15		; 30 15 ; Branch if minus to $30, $15 [Flow: branch]
	.db $30, $15		; 30 15 ; Branch if minus to $30, $15 [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $70, $14		; 70 14 ; Branch if overflow set to $70, $14 [Flow: branch]
	.db $70, $13		; 70 13 ; Branch if overflow set to $70, $13 [Flow: branch]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $70, $14		; 70 14 ; Branch if overflow set to $70, $14 [Flow: branch]
	.db $30, $15		; 30 15 ; Branch if minus to $30, $15 [Flow: branch]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $30, $15		; 30 15 ; Branch if minus to $30, $15 [Flow: branch]
	.db $70, $14		; 70 14 ; Branch if overflow set to $70, $14 [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $13		; 70 13 ; Branch if overflow set to $70, $13 [Flow: branch]
	.db $70, $13		; 70 13 ; Branch if overflow set to $70, $13 [Flow: branch]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $30, $13		; 30 13 ; Branch if minus to $30, $13 [Flow: branch]
	.db $70, $0A		; 70 0A ; Branch if overflow set to $70, $0A [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $70, $07		; 70 07 ; Branch if overflow set to $70, $07 [Flow: branch]
	.db $50, $09		; 50 09 ; Branch if overflow clear to $50, $09 [Flow: branch]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	.db $50, $45		; 50 45 ; Branch if overflow clear to $50, $45 [Flow: branch]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($55.b),Y		; 11 55 ; OR accumulator with memory ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($46.b),Y		; 11 46 ; OR accumulator with memory ($46.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($17.b),Y		; 11 17 ; OR accumulator with memory ($17.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	ora ($1F.b),Y		; 11 1F ; OR accumulator with memory ($1F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $30, $11		; 30 11 ; Branch if minus to $30, $11 [Flow: branch]
	.db $30, $20		; 30 20 ; Branch if minus to $30, $20 [Flow: branch]
	.db $30, $21		; 30 21 ; Branch if minus to $30, $21 [Flow: branch]
	.db $30, $12		; 30 12 ; Branch if minus to $30, $12 [Flow: branch]
	.db $30, $12		; 30 12 ; Branch if minus to $30, $12 [Flow: branch]
	.db $70, $22		; 70 22 ; Branch if overflow set to $70, $22 [Flow: branch]
	.db $30, $22		; 30 22 ; Branch if minus to $30, $22 [Flow: branch]
	.db $70, $11		; 70 11 ; Branch if overflow set to $70, $11 [Flow: branch]
	.db $70, $10		; 70 10 ; Branch if overflow set to $70, $10 [Flow: branch]
	.db $70, $21		; 70 21 ; Branch if overflow set to $70, $21 [Flow: branch]
	.db $70, $20		; 70 20 ; Branch if overflow set to $70, $20 [Flow: branch]
	.db $70, $11		; 70 11 ; Branch if overflow set to $70, $11 [Flow: branch]
	.db $30, $12		; 30 12 ; Branch if minus to $30, $12 [Flow: branch]
	.db $30, $21		; 30 21 ; Branch if minus to $30, $21 [Flow: branch]
	.db $30, $22		; 30 22 ; Branch if minus to $30, $22 [Flow: branch]
	.db $30, $12		; 30 12 ; Branch if minus to $30, $12 [Flow: branch]
	.db $70, $11		; 70 11 ; Branch if overflow set to $70, $11 [Flow: branch]
	.db $70, $22		; 70 22 ; Branch if overflow set to $70, $22 [Flow: branch]
	.db $70, $21		; 70 21 ; Branch if overflow set to $70, $21 [Flow: branch]
	.db $70, $10		; 70 10 ; Branch if overflow set to $70, $10 [Flow: branch]
	.db $70, $10		; 70 10 ; Branch if overflow set to $70, $10 [Flow: branch]
	.db $30, $20		; 30 20 ; Branch if minus to $30, $20 [Flow: branch]
	.db $70, $20		; 70 20 ; Branch if overflow set to $70, $20 [Flow: branch]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $70, $17		; 70 17 ; Branch if overflow set to $70, $17 [Flow: branch]
	.db $70, $20		; 70 20 ; Branch if overflow set to $70, $20 [Flow: branch]
	.db $70, $1F		; 70 1F ; Branch if overflow set to $70, $1F [Flow: branch]
	.db $70, $46		; 70 46 ; Branch if overflow set to $70, $46 [Flow: branch]
	eor ($55.b),Y		; 51 55 ; Exclusive OR accumulator with memory ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($18.b),Y		; 11 18 ; OR accumulator with memory ($18.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($71.b),Y		; 11 71 ; OR accumulator with memory ($71.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($52.b),Y		; 11 52 ; OR accumulator with memory ($52.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($71.b),Y		; 11 71 ; OR accumulator with memory ($71.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($18.b),Y		; 51 18 ; Exclusive OR accumulator with memory ($18.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($52.b),Y		; 51 52 ; Exclusive OR accumulator with memory ($52.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5A.b),Y		; 11 5A ; OR accumulator with memory ($5A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($00.b),Y		; 31 00 ; AND accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6A.b),Y		; 11 6A ; OR accumulator with memory ($6A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($31.b),Y		; 11 31 ; OR accumulator with memory ($31.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $32		; 30 32 ; Branch if minus to $30, $32 [Flow: branch]
	.db $30, $04		; 30 04 ; Branch if minus to $30, $04 [Flow: branch]
	.db $30, $05		; 30 05 ; Branch if minus to $30, $05 [Flow: branch]
	.db $30, $32		; 30 32 ; Branch if minus to $30, $32 [Flow: branch]
	.db $70, $31		; 70 31 ; Branch if overflow set to $70, $31 [Flow: branch]
	.db $70, $05		; 70 05 ; Branch if overflow set to $70, $05 [Flow: branch]
	.db $70, $04		; 70 04 ; Branch if overflow set to $70, $04 [Flow: branch]
	.db $70, $30		; 70 30 ; Branch if overflow set to $70, $30 [Flow: branch]
	.db $70, $30		; 70 30 ; Branch if overflow set to $70, $30 [Flow: branch]
	.db $30, $03		; 30 03 ; Branch if minus to $30, $03 [Flow: branch]
	.db $70, $03		; 70 03 ; Branch if overflow set to $70, $03 [Flow: branch]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	.db $70, $5A		; 70 5A ; Branch if overflow set to $70, $5A [Flow: branch]
	adc ($03.b),Y		; 71 03 ; Add with carry ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $6A		; 70 6A ; Branch if overflow set to $70, $6A [Flow: branch]
	adc ($62.b),Y		; 71 62 ; Add with carry ($62.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($63.b),Y		; 11 63 ; OR accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($63.b),Y		; 11 63 ; OR accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($62.b),Y		; 51 62 ; Exclusive OR accumulator with memory ($62.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($09.b),Y		; 51 09 ; Exclusive OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7A.b),Y		; 11 7A ; OR accumulator with memory ($7A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5B.b),Y		; 11 5B ; OR accumulator with memory ($5B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($00.b),Y		; 31 00 ; AND accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $7B		; 30 7B ; Branch if minus to $30, $7B [Flow: branch]
	and ($3E.b),Y		; 31 3E ; AND accumulator with memory ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $30, $08		; 30 08 ; Branch if minus to $30, $08 [Flow: branch]
	.db $30, $09		; 30 09 ; Branch if minus to $30, $09 [Flow: branch]
	.db $30, $45		; 30 45 ; Branch if minus to $30, $45 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	.db $30, $0A		; 30 0A ; Branch if minus to $30, $0A [Flow: branch]
	.db $70, $1A		; 70 1A ; Branch if overflow set to $70, $1A [Flow: branch]
	.db $10, $1A		; 10 1A ; Branch if plus to $10, $1A [Flow: branch]
	.db $50, $3E		; 50 3E ; Branch if overflow clear to $50, $3E [Flow: branch]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $70, $7B		; 70 7B ; Branch if overflow set to $70, $7B [Flow: branch]
	adc ($7A.b),Y		; 71 7A ; Add with carry ($7A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($01.b),Y		; 51 01 ; Exclusive OR accumulator with memory ($01.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5B.b),Y		; 11 5B ; OR accumulator with memory ($5B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6B.b),Y		; 11 6B ; OR accumulator with memory ($6B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($10.b),Y		; 31 10 ; AND accumulator with memory ($10.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $1F		; 30 1F ; Branch if minus to $30, $1F [Flow: branch]
	.db $30, $20		; 30 20 ; Branch if minus to $30, $20 [Flow: branch]
	.db $30, $55		; 30 55 ; Branch if minus to $30, $55 [Flow: branch]
	ora ($46.b),Y		; 11 46 ; OR accumulator with memory ($46.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($47.b),Y		; 11 47 ; OR accumulator with memory ($47.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($47.b),Y		; 11 47 ; OR accumulator with memory ($47.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($29.b),Y		; 51 29 ; Exclusive OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($29.b),Y		; 11 29 ; OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6B.b),Y		; 51 6B ; Exclusive OR accumulator with memory ($6B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($00.b),Y		; 71 00 ; Add with carry ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($1F.b),Y		; 11 1F ; OR accumulator with memory ($1F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	ora ($5A.b),Y		; 11 5A ; OR accumulator with memory ($5A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($30.b),Y		; 31 30 ; AND accumulator with memory ($30.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $6A		; 30 6A ; Branch if minus to $30, $6A [Flow: branch]
	ora ($03.b),Y		; 11 03 ; OR accumulator with memory ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	.db $70, $5A		; 70 5A ; Branch if overflow set to $70, $5A [Flow: branch]
	adc ($03.b),Y		; 71 03 ; Add with carry ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $6A		; 70 6A ; Branch if overflow set to $70, $6A [Flow: branch]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($02.b),Y		; 11 02 ; OR accumulator with memory ($02.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($13.b),Y		; 51 13 ; Exclusive OR accumulator with memory ($13.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($12.b),Y		; 51 12 ; Exclusive OR accumulator with memory ($12.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($03.b),Y		; 51 03 ; Exclusive OR accumulator with memory ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($03.b),Y		; 11 03 ; OR accumulator with memory ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3A.b),Y		; 51 3A ; Exclusive OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3A.b),Y		; 11 3A ; OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($0A.b),Y		; 51 0A ; Exclusive OR accumulator with memory ($0A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $09		; 70 09 ; Branch if overflow set to $70, $09 [Flow: branch]
	.db $70, $07		; 70 07 ; Branch if overflow set to $70, $07 [Flow: branch]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	eor ($45.b),Y		; 51 45 ; Exclusive OR accumulator with memory ($45.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($24.b),Y		; 51 24 ; Exclusive OR accumulator with memory ($24.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b),Y		; 51 35 ; Exclusive OR accumulator with memory ($35.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($34.b),Y		; 51 34 ; Exclusive OR accumulator with memory ($34.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $19		; 80 19 ; Branch always to $80, $19 [Flow: branch]
	.db $80, $59		; 80 59 ; Branch always to $80, $59 [Flow: branch]
	.db $90, $19		; 90 19 ; Branch if carry clear to $90, $19 [Flow: branch]
	.db $90, $59		; 90 59 ; Branch if carry clear to $90, $59 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($17.b),Y		; 11 17 ; OR accumulator with memory ($17.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $46		; 70 46 ; Branch if overflow set to $70, $46 [Flow: branch]
	eor ($1F.b),Y		; 51 1F ; Exclusive OR accumulator with memory ($1F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	ora ($55.b),Y		; 11 55 ; OR accumulator with memory ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($AA51.w)		; 6C 51 AA ; Jump indirect to ($AA51.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	adc ($00.b),Y		; 71 00 ; Add with carry ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($6A.b),Y		; 51 6A ; Exclusive OR accumulator with memory ($6A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora ($69.b),Y		; 11 69 ; OR accumulator with memory ($69.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $6E11.w		; 6E 11 6E ; Rotate right $6E11.w [Flags: ZNC]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc #$51.b		; 69 51 ; Add #$51.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($11.b),Y		; 11 11 ; OR accumulator with memory ($11.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($10.b),Y		; 11 10 ; OR accumulator with memory ($10.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($10.b),Y		; 11 10 ; OR accumulator with memory ($10.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($20.b),Y		; 51 20 ; Exclusive OR accumulator with memory ($20.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($20.b),Y		; 11 20 ; OR accumulator with memory ($20.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2A.b),Y		; 51 2A ; Exclusive OR accumulator with memory ($2A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora ($51.b),Y		; 11 51 ; OR accumulator with memory ($51.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $6251.w,X		; 3C 51 62 ; Test bits $6251.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	and ($63.b),Y		; 31 63 ; AND accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($09.b),Y		; 31 09 ; AND accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($00.b),Y		; 31 00 ; AND accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($08.b),Y		; 11 08 ; OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($0A.b),Y		; 11 0A ; OR accumulator with memory ($0A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $13		; 30 13 ; Branch if minus to $30, $13 [Flow: branch]
	.db $30, $07		; 30 07 ; Branch if minus to $30, $07 [Flow: branch]
	.db $10, $00		; 10 00 ; Branch if plus to $10, $00 [Flow: branch]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	.db $70, $7B		; 70 7B ; Branch if overflow set to $70, $7B [Flow: branch]
	adc ($02.b),Y		; 71 02 ; Add with carry ($02.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $7A		; 70 7A ; Branch if overflow set to $70, $7A [Flow: branch]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $5B		; 70 5B ; Branch if overflow set to $70, $5B [Flow: branch]
	adc ($21.b),Y		; 71 21 ; Add with carry ($21.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($2B.b),Y		; 51 2B ; Exclusive OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($30.b),Y		; 11 30 ; OR accumulator with memory ($30.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($67.b),Y		; 51 67 ; Exclusive OR accumulator with memory ($67.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($77.b),Y		; 31 77 ; AND accumulator with memory ($77.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($72.b),Y		; 31 72 ; AND accumulator with memory ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($73.b),Y		; 31 73 ; AND accumulator with memory ($73.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($7E.b),Y		; B1 7E ; Load accumulator ($7E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($7E.b),Y		; 31 7E ; AND accumulator with memory ($7E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($4C.b),Y		; 71 4C ; Add with carry ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lda ($4C.b),Y		; B1 4C ; Load accumulator ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($77.b),Y		; F1 77 ; Subtract with carry ($77.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($67.b),Y		; 71 67 ; Add with carry ($67.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($56.b),Y		; 71 56 ; Add with carry ($56.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($72.b),Y		; 71 72 ; Add with carry ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($2B.b),Y		; 71 2B ; Add with carry ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($21.b),Y		; 11 21 ; OR accumulator with memory ($21.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($30.b),Y		; 11 30 ; OR accumulator with memory ($30.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($31.b),Y		; 11 31 ; OR accumulator with memory ($31.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($01.b),Y		; 11 01 ; OR accumulator with memory ($01.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($08.b),Y		; 11 08 ; OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	.db $30, $45		; 30 45 ; Branch if minus to $30, $45 [Flow: branch]
	eor ($45.b),Y		; 51 45 ; Exclusive OR accumulator with memory ($45.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $0A		; 30 0A ; Branch if minus to $30, $0A [Flow: branch]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	.db $10, $1A		; 10 1A ; Branch if plus to $10, $1A [Flow: branch]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	.db $70, $09		; 70 09 ; Branch if overflow set to $70, $09 [Flow: branch]
	.db $70, $1A		; 70 1A ; Branch if overflow set to $70, $1A [Flow: branch]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	.db $50, $00		; 50 00 ; Branch if overflow clear to $50, $00 [Flow: branch]
	ora ($04.b),Y		; 11 04 ; OR accumulator with memory ($04.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($14.b),Y		; 31 14 ; AND accumulator with memory ($14.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($15.b),Y		; 11 15 ; OR accumulator with memory ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($05.b),Y		; 31 05 ; AND accumulator with memory ($05.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($05.b),Y		; 31 05 ; AND accumulator with memory ($05.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($6F.b),Y		; 71 6F ; Add with carry ($6F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($6F.b),Y		; 31 6F ; AND accumulator with memory ($6F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($04.b),Y		; 71 04 ; Add with carry ($04.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($00.b),Y		; 71 00 ; Add with carry ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($15.b),Y		; 11 15 ; OR accumulator with memory ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($14.b),Y		; 71 14 ; Add with carry ($14.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($17.b),Y		; 51 17 ; Exclusive OR accumulator with memory ($17.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $30, $1F		; 30 1F ; Branch if minus to $30, $1F [Flow: branch]
	.db $30, $20		; 30 20 ; Branch if minus to $30, $20 [Flow: branch]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $70, $6B		; 70 6B ; Branch if overflow set to $70, $6B [Flow: branch]
	adc ($20.b),Y		; 71 20 ; Add with carry ($20.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $1F		; 70 1F ; Branch if overflow set to $70, $1F [Flow: branch]
	.db $70, $72		; 70 72 ; Branch if overflow set to $70, $72 [Flow: branch]
	lda ($56.b),Y		; B1 56 ; Load accumulator ($56.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($72.b),Y		; 31 72 ; AND accumulator with memory ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($57.b),Y		; 31 57 ; AND accumulator with memory ($57.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($4C.b),Y		; 31 4C ; AND accumulator with memory ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($4C.b),Y		; B1 4C ; Load accumulator ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($4C.b),Y		; F1 4C ; Subtract with carry ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($4C.b),Y		; 31 4C ; AND accumulator with memory ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($57.b),Y		; 71 57 ; Add with carry ($57.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($72.b),Y		; 71 72 ; Add with carry ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($73.b),Y		; F1 73 ; Subtract with carry ($73.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($72.b),Y		; 71 72 ; Add with carry ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($31.b),Y		; 71 31 ; Add with carry ($31.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5B.b),Y		; 11 5B ; OR accumulator with memory ($5B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7A.b),Y		; 11 7A ; OR accumulator with memory ($7A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7B.b),Y		; 11 7B ; OR accumulator with memory ($7B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $15		; 30 15 ; Branch if minus to $30, $15 [Flow: branch]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $70, $55		; 70 55 ; Branch if overflow set to $70, $55 [Flow: branch]
	eor ($55.b),Y		; 51 55 ; Exclusive OR accumulator with memory ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($46.b),Y		; 11 46 ; OR accumulator with memory ($46.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($47.b),Y		; 11 47 ; OR accumulator with memory ($47.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($29.b),Y		; 11 29 ; OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($47.b),Y		; 11 47 ; OR accumulator with memory ($47.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($46.b),Y		; 51 46 ; Exclusive OR accumulator with memory ($46.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($29.b),Y		; 51 29 ; Exclusive OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($72.b),Y		; 11 72 ; OR accumulator with memory ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($73.b),Y		; B1 73 ; Load accumulator ($73.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($72.b),Y		; 31 72 ; AND accumulator with memory ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($73.b),Y		; 31 73 ; AND accumulator with memory ($73.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($73.b),Y		; B1 73 ; Load accumulator ($73.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($72.b),Y		; F1 72 ; Subtract with carry ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($73.b),Y		; F1 73 ; Subtract with carry ($73.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($72.b),Y		; 71 72 ; Add with carry ($72.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($00.b),Y		; 71 00 ; Add with carry ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($6B.b),Y		; 11 6B ; OR accumulator with memory ($6B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($01.b),Y		; 31 01 ; AND accumulator with memory ($01.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1F.b),Y		; 11 1F ; OR accumulator with memory ($1F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $66		; 30 66 ; Branch if minus to $30, $66 [Flow: branch]
	and ($64.b),Y		; 31 64 ; AND accumulator with memory ($64.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($76.b),Y		; 31 76 ; AND accumulator with memory ($76.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($33.b),Y		; 11 33 ; OR accumulator with memory ($33.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5C.b),Y		; 11 5C ; OR accumulator with memory ($5C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($5C.b),Y		; 31 5C ; AND accumulator with memory ($5C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($4D.b),Y		; 71 4D ; Add with carry ($4D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($4D.b),Y		; 11 4D ; OR accumulator with memory ($4D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($64.b),Y		; 51 64 ; Exclusive OR accumulator with memory ($64.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($66.b),Y		; 71 66 ; Add with carry ($66.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($33.b),Y		; 71 33 ; Add with carry ($33.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($76.b),Y		; 51 76 ; Exclusive OR accumulator with memory ($76.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($02.b),Y		; 51 02 ; Exclusive OR accumulator with memory ($02.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($12.b),Y		; 11 12 ; OR accumulator with memory ($12.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($13.b),Y		; 11 13 ; OR accumulator with memory ($13.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($31.b),Y		; 11 31 ; OR accumulator with memory ($31.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5A.b),Y		; 11 5A ; OR accumulator with memory ($5A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($00.b),Y		; 31 00 ; AND accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6A.b),Y		; 11 6A ; OR accumulator with memory ($6A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($78.b),Y		; 11 78 ; OR accumulator with memory ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5D11.w,X		; 5D 11 5D ; Exclusive OR accumulator with memory $5D11.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $7851.w,Y		; 79 51 78 ; Add $7851.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $11.b		; 24 11 ; Test bits $11.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	and $11.b		; 25 11 ; Logical AND $11.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $11.b,X		; 34 11 ; Test bits $11.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and $11.b,X		; 35 11 ; Logical AND $11.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $71.b,X		; 56 71 ; Logical shift right $71.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc ($F1.b)		; 72 F1 ; Add with carry (indirect) ($F1.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$71.b],Y		; 57 71 ; Exclusive OR accumulator with memory (long indexed) [$71.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($71.b)		; 72 71 ; Add with carry (indirect) ($71.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($11.b,X)		; 01 11 ; Logical OR ($11.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($AA11.w)		; 6C 11 AA ; Jump indirect to ($AA11.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2311.w,X		; 3D 11 23 ; AND accumulator with memory $2311.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($23.b),Y		; 11 23 ; OR accumulator with memory ($23.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3B.b),Y		; 51 3B ; Exclusive OR accumulator with memory ($3B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cop $11.b		; 02 11 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	eor ($12.b),Y		; 51 12 ; Exclusive OR accumulator with memory ($12.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($13.b),Y		; 11 13 ; OR accumulator with memory ($13.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($23.b),Y		; 11 23 ; OR accumulator with memory ($23.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $3B.b		; 14 3B ; Test and reset bits $3B.b [Reads: Accumulator] [Flags: Z]
	ora ($8B.b),Y		; 11 8B ; OR accumulator with memory ($8B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $4D2F0D.l		; 2F 0D 2F 4D ; AND accumulator with memory (long) $4D2F0D.l [Writes: Accumulator] [Flags: ZN]
	rol $2E0D.w		; 2E 0D 2E ; Rotate left $2E0D.w [Flags: ZNC]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc [$71.b],Y		; 77 71 ; Add with carry (long indexed) [$71.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$71.b]		; 67 71 ; Add with carry (long) [$71.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($71.b,S),Y		; 73 71 ; Add with carry (stack relative indirect indexed) ($71.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($71.b)		; 72 71 ; Add with carry (indirect) ($71.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora ($7B.b),Y		; 11 7B ; OR accumulator with memory ($7B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($00.b),Y		; 31 00 ; AND accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	.db $70, $2F		; 70 2F ; Branch if overflow set to $70, $2F [Flow: branch]
	.db $70, $03		; 70 03 ; Branch if overflow set to $70, $03 [Flow: branch]
	.db $70, $3F		; 70 3F ; Branch if overflow set to $70, $3F [Flow: branch]
	.db $70, $3E		; 70 3E ; Branch if overflow set to $70, $3E [Flow: branch]
	.db $30, $15		; 30 15 ; Branch if minus to $30, $15 [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $70, $3D		; 70 3D ; Branch if overflow set to $70, $3D [Flow: branch]
	.db $70, $3C		; 70 3C ; Branch if overflow set to $70, $3C [Flow: branch]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $70, $AA		; 70 AA ; Branch if overflow set to $70, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $AA70.w		; 0E 70 AA ; Arithmetic shift left $AA70.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $51.b,X		; 55 51 ; Exclusive OR accumulator with memory $51.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $51.b		; 02 51 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($51.b,S),Y		; 13 51 ; OR accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($51.b)		; 12 51 ; OR accumulator with memory (indirect) ($51.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $08AA70.l		; 0F 70 AA 08 ; OR accumulator with memory (long) $08AA70.l [Writes: Accumulator] [Flags: ZN]
	ora $08AA70.l,X		; 1F 70 AA 08 ; Logical OR long $08AA70.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $08AA70.l		; 2F 70 AA 08 ; AND accumulator with memory (long) $08AA70.l [Writes: Accumulator] [Flags: ZN]
	and $08AA70.l,X		; 3F 70 AA 08 ; AND accumulator with memory (long,X) $08AA70.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3E.b),Y		; 51 3E ; Exclusive OR accumulator with memory ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $3D		; 70 3D ; Branch if overflow set to $70, $3D [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $3C		; 70 3C ; Branch if overflow set to $70, $3C [Flow: branch]
	.db $70, $AA		; 70 AA ; Branch if overflow set to $70, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $70.b		; 00 70 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl $5370.w		; 0E 70 53 ; Arithmetic shift left $5370.w [Flags: ZNC]
	and ($53.b),Y		; 31 53 ; AND accumulator with memory ($53.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($53.b),Y		; 71 53 ; Add with carry ($53.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lda ($53.b),Y		; B1 53 ; Load accumulator ($53.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($00.b),Y		; F1 00 ; Subtract with carry ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($31.b),Y		; 11 31 ; OR accumulator with memory ($31.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	.db $30, $09		; 30 09 ; Branch if minus to $30, $09 [Flow: branch]
	.db $30, $18		; 30 18 ; Branch if minus to $30, $18 [Flow: branch]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	.db $10, $08		; 10 08 ; Branch if plus to $10, $08 [Flow: branch]
	eor ($03.b),Y		; 51 03 ; Exclusive OR accumulator with memory ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3A.b),Y		; 51 3A ; Exclusive OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3A.b),Y		; 11 3A ; OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($03.b),Y		; 51 03 ; Exclusive OR accumulator with memory ($03.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($08.b),Y		; 11 08 ; OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3A.b),Y		; 11 3A ; OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3A.b),Y		; 11 3A ; OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($29.b),Y		; 51 29 ; Exclusive OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	.db $50, $0D		; 50 0D ; Branch if overflow clear to $50, $0D [Flow: branch]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $10, $29		; 10 29 ; Branch if plus to $10, $29 [Flow: branch]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $2A10.w		; 0D 10 2A ; Logical OR $2A10.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $10, $2A		; 10 2A ; Branch if plus to $10, $2A [Flow: branch]
	.db $50, $2D		; 50 2D ; Branch if overflow clear to $50, $2D [Flow: branch]
	.db $10, $2D		; 10 2D ; Branch if plus to $10, $2D [Flow: branch]
	.db $50, $2F		; 50 2F ; Branch if overflow clear to $50, $2F [Flow: branch]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	.db $30, $3F		; 30 3F ; Branch if minus to $30, $3F [Flow: branch]
	.db $30, $03		; 30 03 ; Branch if minus to $30, $03 [Flow: branch]
	.db $30, $0A		; 30 0A ; Branch if minus to $30, $0A [Flow: branch]
	.db $70, $09		; 70 09 ; Branch if overflow set to $70, $09 [Flow: branch]
	.db $50, $07		; 50 07 ; Branch if overflow clear to $50, $07 [Flow: branch]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $1E		; 50 1E ; Branch if overflow clear to $50, $1E [Flow: branch]
	.db $50, $06		; 50 06 ; Branch if overflow clear to $50, $06 [Flow: branch]
	ora ($44.b),Y		; 11 44 ; OR accumulator with memory ($44.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($16.b),Y		; 11 16 ; OR accumulator with memory ($16.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($44.b),Y		; 11 44 ; OR accumulator with memory ($44.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($06.b),Y		; 51 06 ; Exclusive OR accumulator with memory ($06.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($16.b),Y		; 51 16 ; Exclusive OR accumulator with memory ($16.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($CB.b),Y		; 51 CB ; Exclusive OR accumulator with memory ($CB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $CC		; 10 CC ; Branch if plus to $10, $CC [Flow: branch]
	.db $10, $DB		; 10 DB ; Branch if plus to $10, $DB [Flow: branch]
	.db $10, $DC		; 10 DC ; Branch if plus to $10, $DC [Flow: branch]
	.db $10, $CC		; 10 CC ; Branch if plus to $10, $CC [Flow: branch]
	.db $50, $CB		; 50 CB ; Branch if overflow clear to $50, $CB [Flow: branch]
	.db $50, $DC		; 50 DC ; Branch if overflow clear to $50, $DC [Flow: branch]
	.db $50, $DB		; 50 DB ; Branch if overflow clear to $50, $DB [Flow: branch]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	.db $10, $08		; 10 08 ; Branch if plus to $10, $08 [Flow: branch]
	.db $10, $1E		; 10 1E ; Branch if plus to $10, $1E [Flow: branch]
	.db $10, $18		; 10 18 ; Branch if plus to $10, $18 [Flow: branch]
	.db $10, $09		; 10 09 ; Branch if plus to $10, $09 [Flow: branch]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	.db $10, $1A		; 10 1A ; Branch if plus to $10, $1A [Flow: branch]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	.db $50, $09		; 50 09 ; Branch if overflow clear to $50, $09 [Flow: branch]
	.db $50, $1A		; 50 1A ; Branch if overflow clear to $50, $1A [Flow: branch]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	.db $10, $18		; 10 18 ; Branch if plus to $10, $18 [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $10, $17		; 10 17 ; Branch if plus to $10, $17 [Flow: branch]
	.db $70, $29		; 70 29 ; Branch if overflow set to $70, $29 [Flow: branch]
	.db $50, $1F		; 50 1F ; Branch if overflow clear to $50, $1F [Flow: branch]
	.db $70, $0D		; 70 0D ; Branch if overflow set to $70, $0D [Flow: branch]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $11.b		; 26 11 ; Rotate left $11.b [Reads: Direct Page] [Flags: ZNC]
	adc $11.b,S		; 63 11 ; Add with carry (stack relative) $11.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	rol $11.b,X		; 36 11 ; Rotate left $11.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$11.b],Y		; 37 11 ; AND accumulator with memory (long indexed) [$11.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $51.b,S		; 63 51 ; Add with carry (stack relative) $51.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	rol $51.b		; 26 51 ; Rotate left $51.b [Reads: Direct Page] [Flags: ZNC]
	and [$51.b],Y		; 37 51 ; AND accumulator with memory (long indexed) [$51.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $51.b,X		; 36 51 ; Rotate left $51.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	xba		; EB ; Exchange B and A accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	.db $10, $EC		; 10 EC ; Branch if plus to $10, $EC [Flow: branch]
	.db $10, $FB		; 10 FB ; Branch if plus to $10, $FB [Flow: branch]
	.db $10, $FC		; 10 FC ; Branch if plus to $10, $FC [Flow: branch]
	.db $10, $EC		; 10 EC ; Branch if plus to $10, $EC [Flow: branch]
	.db $50, $EB		; 50 EB ; Branch if overflow clear to $50, $EB [Flow: branch]
	.db $50, $FC		; 50 FC ; Branch if overflow clear to $50, $FC [Flow: branch]
	.db $50, $FB		; 50 FB ; Branch if overflow clear to $50, $FB [Flow: branch]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and #$10.b		; 29 10 ; Logical AND #$10.b with accumulator [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	.db $10, $0D		; 10 0D ; Branch if plus to $10, $0D [Flow: branch]
	.db $10, $2D		; 10 2D ; Branch if plus to $10, $2D [Flow: branch]
	.db $10, $2A		; 10 2A ; Branch if plus to $10, $2A [Flow: branch]
	.db $50, $29		; 50 29 ; Branch if overflow clear to $50, $29 [Flow: branch]
	.db $50, $2D		; 50 2D ; Branch if overflow clear to $50, $2D [Flow: branch]
	.db $50, $0D		; 50 0D ; Branch if overflow clear to $50, $0D [Flow: branch]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $8C08.w		; 8C 08 8C ; Store Y register to $8C08.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $8F08.w		; 9C 08 8F ; Store zero to $8F08.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA08.l		; 8F 08 BA 08 ; Store accumulator (long) $08BA08.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $488C08.l		; 8F 08 8C 48 ; Store accumulator (long) $488C08.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08AA48.l,X		; 9F 48 AA 08 ; Store accumulator (long,X) $08AA48.l,X [Reads: Accumulator, X Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $8C48.w,X		; 9E 48 8C ; Store zero to $8C48.w,X [Reads: X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora ($7A.b),Y		; 11 7A ; OR accumulator with memory ($7A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5B.b),Y		; 11 5B ; OR accumulator with memory ($5B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($00.b),Y		; 31 00 ; AND accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $9C		; 30 9C ; Branch if minus to $30, $9C [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $BAC8.w		; 9C C8 BA ; Store zero to $BAC8.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $888F88.l		; 8F 88 8F 88 ; Store accumulator (long) $888F88.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $888FC8.l,X		; 9F C8 8F 88 ; Store accumulator (long,X) $888FC8.l,X [Reads: Accumulator, X Index]
	sty $9EC8.w		; 8C C8 9E ; Store Y register to $9EC8.w [Reads: Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sty $AAC8.w		; 8C C8 AA ; Store Y register to $AAC8.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $70		; 10 70 ; Branch if plus to $10, $70 [Flow: branch]
	ora $702070.l		; 0F 70 20 70 ; OR accumulator with memory (long) $702070.l [Writes: Accumulator] [Flags: ZN]
	ora $088E70.l,X		; 1F 70 8E 08 ; Logical OR long $088E70.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $BA08.w		; 8E 08 BA ; Store X register to $BA08.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $8CC8.w		; 9C C8 8C ; Store zero to $8CC8.w
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sty $AAC8.w		; 8C C8 AA ; Store Y register to $AAC8.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9C88.w		; 8C 88 9C ; Store Y register to $9C88.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $AA88.w		; 8C 88 AA ; Store Y register to $AA88.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $0E30.w,X		; 3C 30 0E ; Test bits $0E30.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	.db $30, $3D		; 30 3D ; Branch if minus to $30, $3D [Flow: branch]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $30, $0F		; 30 0F ; Branch if minus to $30, $0F [Flow: branch]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $30, $1F		; 30 1F ; Branch if minus to $30, $1F [Flow: branch]
	.db $30, $20		; 30 20 ; Branch if minus to $30, $20 [Flow: branch]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	.db $70, $3C		; 70 3C ; Branch if overflow set to $70, $3C [Flow: branch]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $30, $7A		; 30 7A ; Branch if minus to $30, $7A [Flow: branch]
	eor ($7A.b),Y		; 51 7A ; Exclusive OR accumulator with memory ($7A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $30, $AA		; 30 AA ; Branch if minus to $30, $AA [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	wai		; CB ; Wait for interrupt
	.db $10, $CC		; 10 CC ; Branch if plus to $10, $CC [Flow: branch]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cpy $CB50.w		; CC 50 CB ; Compare $CB50.w with Y register [Reads: Y Index] [Flags: ZNC]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $3C30.w		; 0E 30 3C ; Arithmetic shift left $3C30.w [Flags: ZNC]
	.db $30, $3D		; 30 3D ; Branch if minus to $30, $3D [Flow: branch]
	.db $30, $00		; 30 00 ; Branch if minus to $30, $00 [Flow: branch]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $DB		; 30 DB ; Branch if minus to $30, $DB [Flow: branch]
	.db $10, $DC		; 10 DC ; Branch if plus to $10, $DC [Flow: branch]
	.db $10, $EB		; 10 EB ; Branch if plus to $10, $EB [Flow: branch]
	.db $10, $EC		; 10 EC ; Branch if plus to $10, $EC [Flow: branch]
	.db $10, $DC		; 10 DC ; Branch if plus to $10, $DC [Flow: branch]
	.db $50, $DB		; 50 DB ; Branch if overflow clear to $50, $DB [Flow: branch]
	.db $50, $EC		; 50 EC ; Branch if overflow clear to $50, $EC [Flow: branch]
	.db $50, $EB		; 50 EB ; Branch if overflow clear to $50, $EB [Flow: branch]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08AA30.l		; 0F 30 AA 08 ; OR accumulator with memory (long) $08AA30.l [Writes: Accumulator] [Flags: ZN]
	ora $114230.l,X		; 1F 30 42 11 ; Logical OR long $114230.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $11.b,S		; 43 11 ; Exclusive OR accumulator with stack relative $11.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($11.b)		; 52 11 ; Exclusive OR accumulator with memory (indirect) ($11.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora ($43.b),Y		; 11 43 ; OR accumulator with memory ($43.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($42.b),Y		; 51 42 ; Exclusive OR accumulator with memory ($42.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($52.b),Y		; 51 52 ; Exclusive OR accumulator with memory ($52.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($FB.b),Y		; 51 FB ; Exclusive OR accumulator with memory ($FB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $FC		; 10 FC ; Branch if plus to $10, $FC [Flow: branch]
	.db $10, $06		; 10 06 ; Branch if plus to $10, $06 [Flow: branch]
	ora ($44.b),Y		; 11 44 ; OR accumulator with memory ($44.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($FC.b),Y		; 11 FC ; OR accumulator with memory ($FC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $FB		; 50 FB ; Branch if overflow clear to $50, $FB [Flow: branch]
	.db $50, $44		; 50 44 ; Branch if overflow clear to $50, $44 [Flow: branch]
	eor ($06.b),Y		; 51 06 ; Exclusive OR accumulator with memory ($06.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $08AA30.l		; 2F 30 AA 08 ; AND accumulator with memory (long) $08AA30.l [Writes: Accumulator] [Flags: ZN]
	and $111630.l,X		; 3F 30 16 11 ; AND accumulator with memory (long,X) $111630.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora ($26.b),Y		; 11 26 ; OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($63.b),Y		; 11 63 ; OR accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($16.b),Y		; 51 16 ; Exclusive OR accumulator with memory ($16.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($63.b),Y		; 51 63 ; Exclusive OR accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($36.b),Y		; 51 36 ; Exclusive OR accumulator with memory ($36.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($37.b),Y		; 11 37 ; OR accumulator with memory ($37.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($69.b),Y		; 11 69 ; OR accumulator with memory ($69.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($68.b),Y		; 51 68 ; Exclusive OR accumulator with memory ($68.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($37.b),Y		; 51 37 ; Exclusive OR accumulator with memory ($37.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($36.b),Y		; 51 36 ; Exclusive OR accumulator with memory ($36.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($68.b),Y		; 51 68 ; Exclusive OR accumulator with memory ($68.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($69.b),Y		; 11 69 ; OR accumulator with memory ($69.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($66.b),Y		; 11 66 ; OR accumulator with memory ($66.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	stz $48.b		; [PATTERN: Memory clearing operation] 64 48 ; Store zero to $48.b
	rol $7450.w		; 2E 50 74 ; Rotate left $7450.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc $48.b		; 65 48 ; Add $48.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	adc $48.b,X		; 75 48 ; Add $48.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	lsr $BA88.w		; 4E 88 BA ; Logical shift right $BA88.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $BA08.w		; 4E 08 BA ; Logical shift right $BA08.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $BA		; 62 48 BA ; Push effective relative address $62, $48, $BA [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy #$50.b		; A0 50 ; Load #$50.b into Y register [Writes: Y Index] [Flags: ZN]
	eor ($48.b,S),Y		; 53 48 ; XOR accumulator (stack relative indirect indexed) ($48.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $48		; 42 48 ; Reserved instruction
	adc $48.b,S		; 63 48 ; Add with carry (stack relative) $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	eor ($08.b),Y		; 51 08 ; Exclusive OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($48.b,S),Y		; 73 48 ; Add with carry (stack relative indirect indexed) ($48.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $48, $43		; 62 48 43 ; Push effective relative address $62, $48, $43 [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc ($48.b)		; 72 48 ; Add with carry (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	.db $50, $64		; 50 64 ; Branch if overflow clear to $50, $64 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $487470.l,X		; 1F 70 74 48 ; Logical OR long $487470.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $B0, $10		; B0 10 ; Branch if carry set to $B0, $10 [Flow: branch]
	lda ($10.b),Y		; B1 10 ; Load accumulator ($10.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $6450.w		; 1C 50 64 ; Test and reset bits $6450.w [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsb $7450.w		; 0C 50 74 ; Test and set bits $7450.w [Reads: Accumulator] [Flags: Z]
	pha		; [PATTERN: Memory clearing operation] 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror $48.b		; 66 48 ; Rotate right $48.b [Reads: Direct Page] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	ror $48.b,X		; 76 48 ; Rotate right $48.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	adc $48.b		; 65 48 ; Add $48.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $4308.w,Y		; 79 08 43 ; Add $4308.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $BA08.w,Y		; 79 08 BA ; Add $BA08.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($48.b,S),Y		; 53 48 ; XOR accumulator (stack relative indirect indexed) ($48.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $48.b,S		; 63 48 ; Add with carry (stack relative) $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	ror $48.b		; 66 48 ; Rotate right $48.b [Reads: Direct Page] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror $48.b,X		; 76 48 ; Rotate right $48.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor ($48.b)		; [PATTERN: Memory clearing operation] 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $50.b		; 66 50 ; Rotate right $50.b [Reads: Direct Page] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	ror $50.b,X		; 76 50 ; Rotate right $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	.db $30, $18		; 30 18 ; Branch if minus to $30, $18 [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $10, $09		; 10 09 ; Branch if plus to $10, $09 [Flow: branch]
	.db $30, $0A		; 30 0A ; Branch if minus to $30, $0A [Flow: branch]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	.db $10, $07		; 10 07 ; Branch if plus to $10, $07 [Flow: branch]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	.db $70, $09		; 70 09 ; Branch if overflow set to $70, $09 [Flow: branch]
	.db $70, $07		; 70 07 ; Branch if overflow set to $70, $07 [Flow: branch]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $1E		; 50 1E ; Branch if overflow clear to $50, $1E [Flow: branch]
	.db $50, $8B		; 50 8B ; Branch if overflow clear to $50, $8B [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($48.b,X)		; A1 48 ; Load accumulator ($48.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $AA		; 62 48 AA ; Push effective relative address $62, $48, $AA [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ldy #$48.b		; A0 48 ; Load #$48.b into Y register [Writes: Y Index] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	adc ($08.b),Y		; 71 08 ; Add with carry ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc ($28.b,X)		; 61 28 ; Add with carry ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $28		; 70 28 ; Branch if overflow set to $70, $28 [Flow: branch]
	adc ($28.b),Y		; 71 28 ; Add with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and #$10.b		; 29 10 ; Logical AND #$10.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora [$30.b],Y		; 17 30 ; OR accumulator with memory (long indexed) [$30.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1F10.w		; 0D 10 1F ; Logical OR $1F10.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $30, $F9		; 30 F9 ; Branch if minus to $30, $F9 [Flow: branch]
	and #$FA.b		; 29 FA ; Logical AND #$FA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$EB.b		; 29 EB ; Logical AND #$EB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FA.b		; 09 FA ; Logical OR #$FA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$F9.b		; 69 F9 ; Add #$F9.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$EF.b		; 69 EF ; Add #$EF.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor #$EB.b		; 49 EB ; Exclusive OR #$EB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$DB.b		; 49 DB ; Exclusive OR #$DB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $8B.b,X		; 15 8B ; OR accumulator with memory $8B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	ora $DB.b,X		; 15 DB ; OR accumulator with memory $DB.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $B0, $08		; B0 08 ; Branch if carry set to $B0, $08 [Flow: branch]
	lda ($08.b),Y		; B1 08 ; Load accumulator ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	xce		; FB ; Exchange carry and emulation bits [Flags: C]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FC.b		; 09 FC ; Logical OR #$FC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EC.b		; 09 EC ; Logical OR #$EC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$FB.b		; 49 FB ; Exclusive OR #$FB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$EC.b		; 49 EC ; Exclusive OR #$EC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$FC.b		; 49 FC ; Exclusive OR #$FC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$53.b		; 49 53 ; Exclusive OR #$53.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$48.b],Y		; 57 48 ; Exclusive OR accumulator with memory (long indexed) [$48.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $AA10.w,X		; 1D 10 AA ; OR accumulator with memory $AA10.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $1D10.w,X		; 1E 10 1D ; Arithmetic shift left $1D10.w,X [Reads: X Index] [Flags: ZNC]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $AA50.w,X		; 1E 50 AA ; Arithmetic shift left $AA50.w,X [Reads: X Index] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dec $DF28.w,X		; DE 28 DF ; Decrement memory $DF28.w,X [Reads: X Index] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc ($28.b)		; F2 28 ; Subtract with carry (indirect) ($28.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp $28DF28.l,X		; DF 28 DF 28 ; Compare accumulator (long,X) $28DF28.l,X [Reads: Accumulator, X Index] [Flags: ZNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp $68DE28.l,X		; DF 28 DE 68 ; Compare accumulator (long,X) $68DE28.l,X [Reads: Accumulator, X Index] [Flags: ZNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($68.b)		; F2 68 ; Subtract with carry (indirect) ($68.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $AA14.w,X		; BD 14 AA ; Load $AA14.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc ($28.b)		; F2 28 ; Subtract with carry (indirect) ($28.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b)		; F2 28 ; Subtract with carry (indirect) ($28.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($68.b)		; F2 68 ; Subtract with carry (indirect) ($68.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($68.b)		; F2 68 ; Subtract with carry (indirect) ($68.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ldx $AA14.w		; AE 14 AA ; Load $AA14.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA14.w		; AE 14 AA ; Load $AA14.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $0810.w,X		; 1D 10 08 ; OR accumulator with memory $0810.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $1E		; 30 1E ; Branch if minus to $30, $1E [Flow: branch]
	.db $10, $18		; 10 18 ; Branch if plus to $10, $18 [Flow: branch]
	.db $10, $8A		; 10 8A ; Branch if plus to $10, $8A [Flow: branch]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($28.b)		; F2 28 ; Subtract with carry (indirect) ($28.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pea $F528.w		; F4 28 F5 ; Push absolute address $F528.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $28.b,X		; F5 28 ; Subtract $28.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc $28.b,X		; F5 28 ; Subtract $28.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: X Index, Direct Page] [Flags: ZNC]
	sbc $28.b		; E5 28 ; Subtract $28.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cpy $28.b		; C4 28 ; Compare $28.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cmp $28.b		; C5 28 ; Compare $28.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc $68.b		; E5 68 ; Subtract $68.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cpx $68.b		; E4 68 ; Compare $68.b with X register [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $68.b		; C5 68 ; Compare $68.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $68.b		; C4 68 ; Compare $68.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	sbc ($28.b,S),Y		; F3 28 ; Subtract with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($68.b)		; F2 68 ; Subtract with carry (indirect) ($68.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc $28.b,X		; F5 28 ; Subtract $28.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pea $8B68.w		; F4 68 8B ; Push absolute address $8B68.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp [$08.b]		; C7 08 ; Compare accumulator (long) [$08.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp [$08.b],Y		; D7 08 ; Compare accumulator (long indexed) [$08.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cld		; D8 ; Clear decimal flag [Flags: D]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp #$08.b		; C9 08 ; Compare #$08.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cmp $D808.w,Y		; D9 08 D8 ; Compare accumulator $D808.w,Y [Reads: Y Index] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc #$08.b		; E9 08 ; Subtract #$08.b from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	sed		; F8 ; Set decimal flag [Flags: D]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $E908.w,Y		; F9 08 E9 ; Subtract with carry $E908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sed		; F8 ; Set decimal flag [Flags: D]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp #$48.b		; C9 48 ; Compare #$48.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cld		; D8 ; Clear decimal flag [Flags: D]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $C848.w,Y		; D9 48 C8 ; Compare accumulator $C848.w,Y [Reads: Y Index] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc [$08.b]		; E7 08 ; Subtract with carry (long) [$08.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc [$08.b],Y		; F7 08 ; Subtract with carry (long indexed) [$08.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldx $AA14.w		; AE 14 AA ; Load $AA14.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $AA94.w,X		; BD 94 AA ; Load $AA94.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $48AF48.l		; AF 48 AF 48 ; Load long $48AF48.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $198248.l,X		; BF 48 82 19 ; Load long $198248.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $82, $59, $92		; 82 59 92 ; Branch always long to $82, $59, $92 [Flow: branch]
	ora $5992.w,Y		; 19 92 59 ; OR accumulator with memory $5992.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $0CFD08.l		; EF 08 FD 0C ; Subtract with carry (long) $0CFD08.l [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $EF4C.w,X		; FD 4C EF ; Subtract with carry $EF4C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $484608.l,X		; BF 08 46 48 ; Load long $484608.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $48.b,X		; 56 48 ; Logical shift right $48.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $44,$48		; 54 48 44 ; Move block negative $44,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $48.b		; 45 48 ; Exclusive OR $48.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvn $44,$48		; 54 48 44 ; Move block negative $44,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D48.w		; 4D 48 4D ; Exclusive OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $50AF50.l		; AF 50 AF 50 ; Load long $50AF50.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $08AA50.l,X		; BF 50 AA 08 ; Load long $08AA50.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1989.w,Y		; 19 89 19 ; OR accumulator with memory $1989.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1999.w,Y		; 19 99 19 ; OR accumulator with memory $1999.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $10BF.w,Y		; 19 BF 10 ; OR accumulator with memory $10BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $50.b		; 46 50 ; Logical shift right $50.b [Reads: Direct Page] [Flags: ZNC]
	lsr $50.b,X		; 56 50 ; Logical shift right $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $AA,$48		; 54 48 AA ; Move block negative $AA,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	eor $4DDB.w		; 4D DB 4D ; Exclusive OR $4DDB.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $0DDA1D.l		; 6F 1D DA 0D ; Add with carry (long) $0DDA1D.l [Writes: Accumulator] [Flags: ZVNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1D6F.w		; 4D 6F 1D ; Exclusive OR $1D6F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $0DDB1D.l		; 6F 1D DB 0D ; Add with carry (long) $0DDB1D.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	adc $0DDB1D.l		; 6F 1D DB 0D ; Add with carry (long) $0DDB1D.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	eor $09E3.w		; 4D E3 09 ; Exclusive OR $09E3.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp.w [$6F4D]		; DC 4D 6F ; Jump long indirect [$6F4D] [Flow: jump]
	ora $4D45.w,X		; 1D 45 4D ; OR accumulator with memory $4D45.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b		; 45 4D ; Exclusive OR $4D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stx $08.b		; 86 08 ; Store X register to $08.b [Reads: X Index]
	mvp $44,$0D		; 44 0D 44 ; Move block positive $44,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $08A7.w		; 4D A7 08 ; Exclusive OR $08A7.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda [$48.b]		; A7 48 ; Load accumulator (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0D.b		; 45 0D ; Exclusive OR $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $48861D.l		; 6F 1D 86 48 ; Add with carry (long) $48861D.l [Writes: Accumulator] [Flags: ZVNC]
	eor $0D.b		; 45 0D ; Exclusive OR $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	cmp $E34D.w,X		; DD 4D E3 ; Compare accumulator $E34D.w,X [Reads: X Index] [Flags: ZNC]
	ora #$D7.b		; 09 D7 ; Logical OR #$D7.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $4DD9.w		; 4D D9 4D ; Exclusive OR $4DD9.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D7F1D.l		; 6F 1D 7F 1D ; Add with carry (long) $1D7F1D.l [Writes: Accumulator] [Flags: ZVNC]
	cmp $DB4D.w,Y		; D9 4D DB ; Compare accumulator $DB4D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $09E3.w		; 0D E3 09 ; Logical OR $09E3.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp.w [$E30D]		; DC 0D E3 ; Jump long indirect [$E30D] [Flow: jump]
	ora #$86.b		; 09 86 ; Logical OR #$86.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $08.b,Y		; 96 08 ; Store X register $08.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	stx $08.b,Y		; 96 08 ; Store X register $08.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lda [$08.b],Y		; B7 08 ; Load accumulator (long indexed) [$08.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda [$48.b],Y		; B7 48 ; Load accumulator (long indexed) [$48.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $48.b,Y		; 96 48 ; Store X register $48.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	stx $48.b		; 86 48 ; Store X register to $48.b [Reads: X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $48.b,Y		; 96 48 ; Store X register $48.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	cmp [$4D.b],Y		; D7 4D ; Compare accumulator (long indexed) [$4D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	adc $09E31D.l,X		; 7F 1D E3 09 ; Add long $09E31D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp [$4D.b],Y		; D7 4D ; Compare accumulator (long indexed) [$4D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	adc $0DD91D.l		; 6F 1D D9 0D ; Add with carry (long) $0DD91D.l [Writes: Accumulator] [Flags: ZVNC]
	cmp $7F0D.w,Y		; D9 0D 7F ; Compare accumulator $7F0D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $0DDD.w,X		; 1D DD 0D ; OR accumulator with memory $0DDD.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	cmp [$0D.b],Y		; D7 0D ; Compare accumulator (long indexed) [$0D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $CDD21D.l		; 6F 1D D2 CD ; Add with carry (long) $CDD21D.l [Writes: Accumulator] [Flags: ZVNC]
	cmp ($CD.b)		; D2 CD ; Compare accumulator (indirect) ($CD.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($CD.b,S),Y		; D3 CD ; Compare accumulator (stack relative indirect indexed) ($CD.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($CD.b,S),Y		; D3 CD ; Compare accumulator (stack relative indirect indexed) ($CD.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	lsr $A488.w		; 4E 88 A4 ; Logical shift right $A488.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lsr $B408.w		; 4E 08 B4 ; Logical shift right $B408.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $08.b		; A4 08 ; Load $08.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $08B488.l		; 4F 88 B4 08 ; Exclusive OR accumulator with memory (long) $08B488.l [Writes: Accumulator] [Flags: ZN]
	eor $8DD308.l		; 4F 08 D3 8D ; Exclusive OR accumulator with memory (long) $8DD308.l [Writes: Accumulator] [Flags: ZN]
	cmp ($8D.b)		; D2 8D ; Compare accumulator (indirect) ($8D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	cmp ($8D.b,S),Y		; D3 8D ; Compare accumulator (stack relative indirect indexed) ($8D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	cmp ($8D.b)		; D2 8D ; Compare accumulator (indirect) ($8D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $0DD81D.l		; 6F 1D D8 0D ; Add with carry (long) $0DD81D.l [Writes: Accumulator] [Flags: ZVNC]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $0DD6.w		; 4D D6 0D ; Exclusive OR $0DD6.w with accumulator [Writes: Accumulator] [Flags: ZN]
	dec $4D.b,X		; D6 4D ; Decrement memory $4D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	adc $0DD71D.l,X		; 7F 1D D7 0D ; Add long $0DD71D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp [$0D.b],Y		; D7 0D ; Compare accumulator (long indexed) [$0D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	adc $4DC51D.l		; 6F 1D C5 4D ; Add with carry (long) $4DC51D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $4DD41D.l		; [PATTERN: Memory clearing operation] 6F 1D D4 4D ; Add with carry (long) $4DD41D.l [Writes: Accumulator] [Flags: ZVNC]
	sbc ($C9.b)		; F2 C9 ; Subtract with carry (indirect) ($C9.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sbc ($49.b)		; F2 49 ; Subtract with carry (indirect) ($49.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	dec $D515.w,X		; DE 15 D5 ; Decrement memory $D515.w,X [Reads: X Index] [Flags: ZN]
	ora $D5.b,X		; 15 D5 ; OR accumulator with memory $D5.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $DE.b,X		; 15 DE ; OR accumulator with memory $DE.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dec $D515.w,X		; DE 15 D5 ; Decrement memory $D515.w,X [Reads: X Index] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $09.b		; [PATTERN: Memory clearing operation] 26 09 ; Rotate left $09.b [Reads: Direct Page] [Flags: ZNC]
	rol $49.b		; 26 49 ; Rotate left $49.b [Reads: Direct Page] [Flags: ZNC]
	stz $08.b		; 64 08 ; Store zero to $08.b
	sbc ($89.b)		; F2 89 ; Subtract with carry (indirect) ($89.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	sbc ($09.b)		; F2 09 ; Subtract with carry (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $0D.b		; C5 0D ; Compare $0D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $0DD41D.l		; 6F 1D D4 0D ; Add with carry (long) $0DD41D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $1D7F1D.l		; 6F 1D 7F 1D ; Add with carry (long) $1D7F1D.l [Writes: Accumulator] [Flags: ZVNC]
	cmp $D9CD.w,Y		; D9 CD D9 ; Compare accumulator $D9CD.w,Y [Reads: Y Index] [Flags: ZNC]
	cmp $1D6F.w		; CD 6F 1D ; Compare $1D6F.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $15.b,X		; D5 15 ; Compare accumulator $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $15.b,X		; D5 15 ; Compare accumulator $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	dec $3615.w,X		; DE 15 36 ; Decrement memory $3615.w,X [Reads: X Index] [Flags: ZN]
	ora #$36.b		; 09 36 ; Logical OR #$36.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$0C.b		; 49 0C ; Exclusive OR #$0C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$0C.b		; 09 0C ; Logical OR #$0C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$04.b		; 49 04 ; Exclusive OR #$04.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D04.w,X		; 1D 04 1D ; OR accumulator with memory $1D04.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $0E1D.w		; 0E 1D 0E ; Arithmetic shift left $0E1D.w [Flags: ZNC]
	ora $1D06.w,X		; 1D 06 1D ; OR accumulator with memory $1D06.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	ora $0D1D.w		; 0D 1D 0D ; Logical OR $0D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,X		; 1D AA 08 ; OR accumulator with memory $08AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clv		; B8 ; Clear overflow flag [Flags: V]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $09.b		; 00 09 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	lsr $09.b,X		; 56 09 ; Logical shift right $09.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	.db $10, $09		; 10 09 ; Branch if plus to $10, $09 [Flow: branch]
	ror $09.b		; 66 09 ; Rotate right $09.b [Reads: Direct Page] [Flags: ZNC]
	lsr $49.b,X		; 56 49 ; Logical shift right $49.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	brk $49.b		; 00 49 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ror $49.b		; 66 49 ; Rotate right $49.b [Reads: Direct Page] [Flags: ZNC]
	.db $10, $49		; 10 49 ; Branch if plus to $10, $49 [Flow: branch]
	ora $1D1F1D.l,X		; 1F 1D 1F 1D ; Logical OR long $1D1F1D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	asl $1E1D.w,X		; 1E 1D 1E ; Arithmetic shift left $1E1D.w,X [Reads: X Index] [Flags: ZNC]
	ora $1D15.w,X		; 1D 15 1D ; OR accumulator with memory $1D15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D1D.w,X		; 1D 1D 1D ; OR accumulator with memory $1D1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D16.w,X		; 1D 16 1D ; OR accumulator with memory $1D16.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sbc ($C9.b)		; F2 C9 ; Subtract with carry (indirect) ($C9.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sbc ($49.b)		; F2 49 ; Subtract with carry (indirect) ($49.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta [$08.b],Y		; 97 08 ; Store accumulator (long indexed) [$08.b],Y [Reads: Accumulator, Direct Page, Y Index]
	eor $48.b,S		; 43 48 ; Exclusive OR accumulator with stack relative $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta [$08.b]		; 87 08 ; Store accumulator (long) [$08.b] [Reads: Accumulator, Direct Page]
	clv		; B8 ; Clear overflow flag [Flags: V]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta [$08.b],Y		; 97 08 ; Store accumulator (long indexed) [$08.b],Y [Reads: Accumulator, Direct Page, Y Index]
	sta [$08.b]		; 87 08 ; Store accumulator (long) [$08.b] [Reads: Accumulator, Direct Page]
	jsr $7609.w		; 20 09 76 ; Jump to subroutine at $7609.w [Writes: Stack Pointer] [Flow: call]
	ora #$01.b		; 09 01 ; Logical OR #$01.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$11.b		; 09 11 ; Logical OR #$11.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$76.b		; 09 76 ; Logical OR #$76.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$20.b		; 49 20 ; Exclusive OR #$20.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$11.b		; 49 11 ; Exclusive OR #$11.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$01.b		; 49 01 ; Exclusive OR #$01.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$24.b		; 49 24 ; Exclusive OR #$24.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D24.w,X		; 1D 24 1D ; OR accumulator with memory $1D24.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $08.b,X		; B4 08 ; Load Y register $08.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lsr $2448.w		; 4E 48 24 ; Logical shift right $2448.w [Flags: ZNC]
	ora $1D24.w,X		; 1D 24 1D ; OR accumulator with memory $1D24.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $CDD81D.l,X		; 7F 1D D8 CD ; Add long $CDD81D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $1D7F1D.l,X		; 7F 1D 7F 1D ; Add long $1D7F1D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $1D.b,X		; 35 1D ; Logical AND $1D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b,X		; 35 1D ; Logical AND $1D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $09.b,S		; E3 09 ; Subtract stack-relative $09.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	adc $4DD21D.l		; 6F 1D D2 4D ; Add with carry (long) $4DD21D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	cmp ($4D.b,S),Y		; D3 4D ; Compare accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	.db $62, $48, $D2		; 62 48 D2 ; Push effective relative address $62, $48, $D2 [Writes: Stack Pointer]
	eor $4DD3.w		; 4D D3 4D ; Exclusive OR $4DD3.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clv		; B8 ; Clear overflow flag [Flags: V]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cmp $7F8D.w,Y		; D9 8D 7F ; Compare accumulator $7F8D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1D6F.w,X		; 1D 6F 1D ; OR accumulator with memory $1D6F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $7F8D.w,Y		; D9 8D 7F ; Compare accumulator $7F8D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1D7F.w,X		; 1D 7F 1D ; OR accumulator with memory $1D7F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D7F1D.l,X		; 7F 1D 7F 1D ; Add long $1D7F1D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08.b		; 85 08 ; Store accumulator to $08.b [Reads: Accumulator]
	sta $48.b		; 85 48 ; Store accumulator to $48.b [Reads: Accumulator]
	clv		; B8 ; Clear overflow flag [Flags: V]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta [$48.b]		; 87 48 ; Store accumulator (long) [$48.b] [Reads: Accumulator, Direct Page]
	sta [$48.b]		; 87 48 ; Store accumulator (long) [$48.b] [Reads: Accumulator, Direct Page]
	sta [$48.b],Y		; 97 48 ; Store accumulator (long indexed) [$48.b],Y [Reads: Accumulator, Direct Page, Y Index]
	sta [$48.b],Y		; 97 48 ; Store accumulator (long indexed) [$48.b],Y [Reads: Accumulator, Direct Page, Y Index]
	eor $5D08.w,X		; 5D 08 5D ; Exclusive OR accumulator with memory $5D08.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,S		; 43 08 ; Exclusive OR accumulator with stack relative $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc ($89.b)		; F2 89 ; Subtract with carry (indirect) ($89.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc ($09.b)		; F2 09 ; Subtract with carry (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $08.b,X		; 95 08 ; Store accumulator to $08.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	jsl $492209.l		; 22 09 22 49 ; Jump to subroutine long $492209.l [Writes: Stack Pointer] [Flow: call]
	.db $42, $08		; 42 08 ; Reserved instruction
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $08.b,S		; 63 08 ; Add with carry (stack relative) $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $08, $D3		; 62 08 D3 ; Push effective relative address $62, $08, $D3 [Writes: Stack Pointer]
	ora $0DD3.w		; 0D D3 0D ; Logical OR $0DD3.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp ($0D.b)		; D2 0D ; Compare accumulator (indirect) ($0D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($0D.b)		; D2 0D ; Compare accumulator (indirect) ($0D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $08601D.l		; 6F 1D 60 08 ; Add with carry (long) $08601D.l [Writes: Accumulator] [Flags: ZVNC]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $F0, $09		; F0 09 ; Branch if equal to $F0, $09 [Flow: branch]
	.db $F0, $49		; F0 49 ; Branch if equal to $F0, $49 [Flow: branch]
	.db $D0, $0D		; D0 0D ; Branch if not equal to $D0, $0D [Flow: branch]
	cmp ($0D.b),Y		; D1 0D ; Compare accumulator ($0D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	adc $1D6F1D.l		; 6F 1D 6F 1D ; Add with carry (long) $1D6F1D.l [Writes: Accumulator] [Flags: ZVNC]
	eor $08.b		; 45 08 ; Exclusive OR $08.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvp $54,$08		; 44 08 54 ; Move block positive $54,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,X		; 55 08 ; Exclusive OR accumulator with memory $08.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ora $4DD8.w		; 0D D8 4D ; Logical OR $4DD8.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D7F1D.l,X		; 7F 1D 7F 1D ; Add long $1D7F1D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D7F1D.l,X		; 7F 1D 7F 1D ; Add long $1D7F1D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	dec $0D.b,X		; [PATTERN: Memory clearing operation] D6 0D ; Decrement memory $0D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	dec $4D.b,X		; D6 4D ; Decrement memory $4D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	stz $08.b		; 64 08 ; Store zero to $08.b
	adc $08.b		; 65 08 ; Add $08.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $48AF48.l		; AF 48 AF 48 ; Load long $48AF48.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $5648.w,Y		; BE 48 56 ; Load X register $5648.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $BE08.w,Y		; BE 08 BE ; Load X register $BE08.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	.db $80, $48		; 80 48 ; Branch always to $80, $48 [Flow: branch]
	ldx $AF08.w,Y		; BE 08 AF ; Load X register $AF08.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	lsr $08.b,X		; 56 08 ; Logical shift right $08.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08AA08.l		; AF 08 AA 08 ; Load long $08AA08.l into accumulator [Writes: Accumulator] [Flags: ZN]
	eor $9748.w,X		; 5D 48 97 ; Exclusive OR accumulator with memory $9748.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $48.b,S		; 43 48 ; Exclusive OR accumulator with stack relative $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $AF48.w,X		; 5D 48 AF ; Exclusive OR accumulator with memory $AF48.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lsr $48.b		; 46 48 ; Logical shift right $48.b [Reads: Direct Page] [Flags: ZNC]
	lsr $48.b,X		; 56 48 ; Logical shift right $48.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $44,$48		; 54 48 44 ; Move block negative $44,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D48.w		; 4D 48 4D ; Exclusive OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	stx $08.b		; 86 08 ; Store X register to $08.b [Reads: X Index]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $50.b		; A6 50 ; Load $50.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4408.w		; 4D 08 44 ; Exclusive OR $4408.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc #$08.b		; 69 08 ; Add #$08.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $4608.w		; 4D 08 46 ; Exclusive OR $4608.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $084408.l		; AF 08 44 08 ; Load long $084408.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $08.b,X		; 56 08 ; Logical shift right $08.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	trb $AA.b		; 14 AA ; Test and reset bits $AA.b [Reads: Accumulator] [Flags: Z]
	trb $AF.b		; 14 AF ; Test and reset bits $AF.b [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	trb $AA.b		; 14 AA ; Test and reset bits $AA.b [Reads: Accumulator] [Flags: Z]
	trb $AA.b		; 14 AA ; Test and reset bits $AA.b [Reads: Accumulator] [Flags: Z]
	trb $AA.b		; 14 AA ; Test and reset bits $AA.b [Reads: Accumulator] [Flags: Z]
	trb $AF.b		; [PATTERN: Memory clearing operation] 14 AF ; Test and reset bits $AF.b [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	stz $08.b		; 64 08 ; Store zero to $08.b
	ror $08.b		; 66 08 ; Rotate right $08.b [Reads: Direct Page] [Flags: ZNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	ror $08.b,X		; 76 08 ; Rotate right $08.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sty $48.b,X		; 94 48 ; Store Y register $48.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	adc $2208.w		; 6D 08 22 ; Add $2208.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora #$5C.b		; 09 5C ; Logical OR #$5C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc $6D08.w		; 6D 08 6D ; Add $6D08.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $08.b		; 86 08 ; Store X register to $08.b [Reads: X Index]
	stx $10.b,Y		; 96 10 ; Store X register $10.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	stx $10.b,Y		; 96 10 ; Store X register $10.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	.db $50, $A8		; 50 A8 ; Branch if overflow clear to $50, $A8 [Flow: branch]
	.db $50, $BA		; 50 BA ; Branch if overflow clear to $50, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $BAC8.w,X		; 9D C8 BA ; Store accumulator to $BAC8.w,X [Reads: Accumulator, X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $BA88.w,X		; 9D 88 BA ; Store accumulator to $BA88.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc #$08.b		; 69 08 ; Add #$08.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $08.b		; 46 08 ; Logical shift right $08.b [Reads: Direct Page] [Flags: ZNC]
	ldx $4448.w,Y		; BE 48 44 ; Load X register $4448.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $BE08.w,Y		; BE 08 BE ; Load X register $BE08.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $4608.w,Y		; BE 08 46 ; Load X register $4608.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	mvn $48,$48		; 54 48 48 ; Move block negative $48,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $08.b		; 65 08 ; Add $08.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $48.b,S		; 43 48 ; Exclusive OR accumulator with stack relative $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $A488.w		; 4E 88 A4 ; Logical shift right $A488.w [Flags: ZNC]
	.db $50, $4E		; 50 4E ; Branch if overflow clear to $50, $4E [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $50.b,X		; B4 50 ; Load Y register $50.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	.db $62, $08, $73		; 62 08 73 ; Push effective relative address $62, $08, $73 [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b)		; 72 08 ; Add with carry (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $08.b,S		; 43 08 ; Exclusive OR accumulator with stack relative $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $BA48.w		; 8E 48 BA ; Store X register to $BA48.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $4E48.w		; 8E 48 4E ; Store X register to $4E48.w [Reads: X Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $50.b,X		; B5 50 ; Load $50.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $BA08.w		; 4E 08 BA ; Logical shift right $BA08.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta $BA48.w,X		; 9D 48 BA ; Store accumulator to $BA48.w,X [Reads: Accumulator, X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sty $AA48.w		; 8C 48 AA ; Store Y register to $AA48.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $8C48.w		; 9C 48 8C ; Store zero to $8C48.w
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta $AB08.w,X		; 9D 08 AB ; Store accumulator to $AB08.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $4848.w,Y		; 79 48 48 ; Add $4848.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $10.b		; 66 10 ; Rotate right $10.b [Reads: Direct Page] [Flags: ZNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $10.b,X		; 76 10 ; Rotate right $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $6D08.w		; 6D 08 6D ; Add $6D08.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $7F08.w,X		; 7E 08 7F ; Rotate right $7F08.w,X [Reads: X Index] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $6D08.w		; 6D 08 6D ; Add $6D08.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $487E48.l,X		; 7F 48 7E 48 ; Add long $487E48.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $9408.w		; 6D 08 94 ; Add $9408.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $492208.l		; 5C 08 22 49 ; Jump long to $492208.l [Flow: jump]
	adc $5D48.w,Y		; 79 48 5D ; Add $5D48.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4308.w,X		; 5D 08 43 ; Exclusive OR accumulator with memory $4308.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $7F08.w,X		; 7E 08 7F ; Rotate right $7F08.w,X [Reads: X Index] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $7F08.w,X		; 7E 08 7F ; Rotate right $7F08.w,X [Reads: X Index] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $487E48.l,X		; 7F 48 7E 48 ; Add long $487E48.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $487E48.l,X		; 7F 48 7E 48 ; Add long $487E48.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $08, $A1		; 62 08 A1 ; Push effective relative address $62, $08, $A1 [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy #$08.b		; A0 08 ; Load #$08.b into Y register [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1941.w,Y		; 19 41 19 ; OR accumulator with memory $1941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1941.w,Y		; 19 41 19 ; OR accumulator with memory $1941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1940.w,Y		; 19 40 19 ; OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1940.w,Y		; 19 40 19 ; OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1902.w,Y		; 19 02 19 ; OR accumulator with memory $1902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1902.w,Y		; 19 02 19 ; OR accumulator with memory $1902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $191A.w,Y		; 19 1A 19 ; OR accumulator with memory $191A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	and $3A19.w,Y		; 39 19 3A ; AND accumulator with memory $3A19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $593A.w,Y		; 19 3A 59 ; OR accumulator with memory $593A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $1961.w,Y		; 59 61 19 ; Exclusive OR accumulator with memory $1961.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $7159.w,Y		; 39 59 71 ; AND accumulator with memory $7159.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1961.w,Y		; 19 61 19 ; OR accumulator with memory $1961.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b,X)		; 61 19 ; Add with carry ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($19.b,X)		; 61 19 ; Add with carry ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $1971.w,Y		; 19 71 19 ; OR accumulator with memory $1971.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $1A19.w,Y		; 39 19 1A ; AND accumulator with memory $1A19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5960.w,Y		; 59 60 59 ; Exclusive OR accumulator with memory $5960.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $7059.w,Y		; 39 59 70 ; AND accumulator with memory $7059.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5902.w,Y		; 59 02 59 ; Exclusive OR accumulator with memory $5902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5902.w,Y		; 59 02 59 ; Exclusive OR accumulator with memory $5902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5940.w,Y		; 59 40 59 ; Exclusive OR accumulator with memory $5940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5940.w,Y		; 59 40 59 ; Exclusive OR accumulator with memory $5940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5941.w,Y		; 59 41 59 ; Exclusive OR accumulator with memory $5941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5941.w,Y		; 59 41 59 ; Exclusive OR accumulator with memory $5941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $1940.w,Y		; 59 40 19 ; Exclusive OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1903.w,Y		; 19 03 19 ; OR accumulator with memory $1903.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b)		; 72 19 ; Add with carry (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	adc ($19.b,S),Y		; 73 19 ; Add with carry (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($59.b,S),Y		; 73 59 ; Add with carry (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b)		; 72 59 ; Add with carry (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b)		; 72 19 ; Add with carry (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	adc ($59.b)		; 72 59 ; Add with carry (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5903.w,Y		; 59 03 59 ; Exclusive OR accumulator with memory $5903.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $194F.w,Y		; 59 4F 19 ; Exclusive OR accumulator with memory $194F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1951.w,Y		; 19 51 19 ; OR accumulator with memory $1951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b,X)		; 61 19 ; Add with carry ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($19.b,X)		; 61 19 ; Add with carry ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $192A.w,Y		; 19 2A 19 ; OR accumulator with memory $192A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $193A.w,Y		; 19 3A 19 ; OR accumulator with memory $193A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $596059.l		; 4F 59 60 59 ; Exclusive OR accumulator with memory (long) $596059.l [Writes: Accumulator] [Flags: ZN]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $2119.w,Y		; 39 19 21 ; AND accumulator with memory $2119.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1972.w,Y		; 19 72 19 ; OR accumulator with memory $1972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b,S),Y		; 73 19 ; Add with carry (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and $7359.w,Y		; 39 59 73 ; AND accumulator with memory $7359.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5972.w,Y		; 59 72 59 ; Exclusive OR accumulator with memory $5972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1940.w,Y		; 19 40 19 ; OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $194F.w,Y		; 19 4F 19 ; OR accumulator with memory $194F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1912.w,Y		; 19 12 19 ; OR accumulator with memory $1912.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $592A.w,Y		; 19 2A 59 ; OR accumulator with memory $592A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $1951.w,Y		; 59 51 19 ; Exclusive OR accumulator with memory $1951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5912.w,Y		; 19 12 59 ; OR accumulator with memory $5912.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $5951.w,Y		; 59 51 59 ; Exclusive OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5940.w,Y		; 59 40 59 ; Exclusive OR accumulator with memory $5940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $594059.l		; 4F 59 40 59 ; Exclusive OR accumulator with memory (long) $594059.l [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b)		; 12 39 ; OR accumulator with memory (indirect) ($39.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b)		; 12 39 ; OR accumulator with memory (indirect) ($39.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	sta $CDD8.w		; 8D D8 CD ; Store accumulator to $CDD8.w [Reads: Accumulator]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	sta $1D7F.w		; 8D 7F 1D ; Store accumulator to $1D7F.w [Reads: Accumulator]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	lsr $B408.w		; 4E 08 B4 ; Logical shift right $B408.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1961.w,Y		; 19 61 19 ; OR accumulator with memory $1961.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $192A.w,Y		; 19 2A 19 ; OR accumulator with memory $192A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $193A.w,Y		; 59 3A 19 ; Exclusive OR accumulator with memory $193A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $1961.w,Y		; 59 61 19 ; Exclusive OR accumulator with memory $1961.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($39.b,X)		; 61 39 ; Add with carry ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $39.b,S		; 43 39 ; Exclusive OR accumulator with stack relative $39.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $39.b,S		; 43 39 ; Exclusive OR accumulator with stack relative $39.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $79.b,S		; 43 79 ; Exclusive OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $79.b,S		; 43 79 ; Exclusive OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc ($39.b,X)		; 61 39 ; Add with carry ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $596059.l		; 4F 59 60 59 ; Exclusive OR accumulator with memory (long) $596059.l [Writes: Accumulator] [Flags: ZN]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $3319.w,Y		; 39 19 33 ; AND accumulator with memory $3319.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1972.w,Y		; 19 72 19 ; OR accumulator with memory $1972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	adc ($19.b,S),Y		; 73 19 ; Add with carry (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($59.b,S),Y		; 73 59 ; Add with carry (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $7159.w,Y		; 39 59 71 ; AND accumulator with memory $7159.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5972.w,Y		; 19 72 59 ; OR accumulator with memory $5972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($19.b,S),Y		; 53 19 ; XOR accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $19.b,S		; 63 19 ; Add with carry (stack relative) $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	inc $FE18.w,X		; FE 18 FE ; Increment memory $FE18.w,X [Reads: X Index] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	rol $2E19.w		; 2E 19 2E ; Rotate left $2E19.w [Flags: ZNC]
	eor $5953.w,Y		; 59 53 59 ; Exclusive OR accumulator with memory $5953.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $59.b,S		; 63 59 ; Add with carry (stack relative) $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldx $BE08.w,Y		; BE 08 BE ; Load X register $BE08.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lda $08BF08.l,X		; BF 08 BF 08 ; Load long $08BF08.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($C9.b)		; F2 C9 ; Subtract with carry (indirect) ($C9.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	mvn $55,$4D		; 54 4D 55 ; Move block negative $55,$4D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $0886.w		; 4D 86 08 ; Exclusive OR $0886.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $BA88.w		; 9C 88 BA ; Store zero to $BA88.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1941.w,Y		; 19 41 19 ; OR accumulator with memory $1941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $192A.w,Y		; 19 2A 19 ; OR accumulator with memory $192A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $192A.w,Y		; 19 2A 19 ; OR accumulator with memory $192A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $19		; 42 19 ; Reserved instruction
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b)		; 52 19 ; Exclusive OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $591B.w,Y		; 19 1B 59 ; OR accumulator with memory $591B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $591B.w,Y		; 19 1B 59 ; OR accumulator with memory $591B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b)		; 52 59 ; Exclusive OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $192A.w,Y		; 19 2A 19 ; OR accumulator with memory $192A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $192A.w,Y		; 19 2A 19 ; OR accumulator with memory $192A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5951.w,Y		; 59 51 59 ; Exclusive OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	ror $6019.w		; 6E 19 60 ; Rotate right $6019.w [Flags: ZNC]
	ora $196E.w,Y		; 19 6E 19 ; OR accumulator with memory $196E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $193A.w,Y		; 19 3A 19 ; OR accumulator with memory $193A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $2119.w,Y		; 39 19 21 ; AND accumulator with memory $2119.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $593A.w,Y		; 19 3A 59 ; OR accumulator with memory $593A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $5921.w,Y		; 59 21 59 ; Exclusive OR accumulator with memory $5921.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $6159.w,Y		; 39 59 61 ; AND accumulator with memory $6159.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1962.w,Y		; 19 62 19 ; OR accumulator with memory $1962.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $19, $62		; 62 19 62 ; Push effective relative address $62, $19, $62 [Writes: Stack Pointer]
	eor $5961.w,Y		; 59 61 59 ; Exclusive OR accumulator with memory $5961.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $59, $71		; 62 59 71 ; Push effective relative address $62, $59, $71 [Writes: Stack Pointer]
	eor $5961.w,Y		; 59 61 59 ; Exclusive OR accumulator with memory $5961.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b,X)		; 61 59 ; Add with carry ($59.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($59.b),Y		; 71 59 ; Add with carry ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($59.b),Y		; 71 59 ; Add with carry ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $196E.w,Y		; 59 6E 19 ; Exclusive OR accumulator with memory $196E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	ror $6E19.w		; 6E 19 6E ; Rotate right $6E19.w [Flags: ZNC]
	ora $1934.w,Y		; 19 34 19 ; OR accumulator with memory $1934.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $3F19.w,X		; 3E 19 3F ; Rotate left $3F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $1972.w,Y		; 19 72 19 ; OR accumulator with memory $1972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b,S),Y		; 73 19 ; Add with carry (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($19.b,S),Y		; 13 19 ; OR accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b,S),Y		; 73 59 ; Add with carry (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($59.b)		; 72 59 ; Add with carry (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $193F19.l,X		; 3F 19 3F 19 ; AND accumulator with memory (long,X) $193F19.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $19, $3F		; 62 19 3F ; Push effective relative address $62, $19, $3F [Writes: Stack Pointer]
	ora $1923.w,Y		; 19 23 19 ; OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $59, $33		; 62 59 33 ; Push effective relative address $62, $59, $33 [Writes: Stack Pointer]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $593319.l,X		; 3F 19 33 59 ; AND accumulator with memory (long,X) $593319.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $193F19.l,X		; 3F 19 3F 19 ; AND accumulator with memory (long,X) $193F19.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	ror $3F19.w		; 6E 19 3F ; Rotate right $3F19.w [Flags: ZNC]
	ora $593E.w,Y		; 19 3E 59 ; OR accumulator with memory $593E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $50AF50.l		; AF 50 AF 50 ; Load long $50AF50.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $4650.w,Y		; BE 50 46 ; Load X register $4650.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	.db $50, $81		; 50 81 ; Branch if overflow clear to $50, $81 [Flow: branch]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta $08.b,X		; 95 08 ; Store accumulator to $08.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	adc $BB08.w,Y		; 79 08 BB ; Add $BB08.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $50.b		; 66 50 ; Rotate right $50.b [Reads: Direct Page] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror $50.b,X		; 76 50 ; Rotate right $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $504650.l		; AF 50 46 50 ; Load long $504650.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $50.b,X		; 56 50 ; Logical shift right $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $7B,$50		; 54 50 7B ; Move block negative $7B,$50 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5D08.w,X		; 5D 08 5D ; Exclusive OR accumulator with memory $5D08.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,S		; 43 08 ; Exclusive OR accumulator with stack relative $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $7948.w,X		; 5D 48 79 ; Exclusive OR accumulator with memory $7948.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $48.b,S		; 43 48 ; Exclusive OR accumulator with stack relative $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $6A48.w,X		; 5D 48 6A ; Exclusive OR accumulator with memory $6A48.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $486A88.l		; 4F 88 6A 48 ; Exclusive OR accumulator with memory (long) $486A88.l [Writes: Accumulator] [Flags: ZN]
	eor $084708.l		; 4F 08 47 08 ; Exclusive OR accumulator with memory (long) $084708.l [Writes: Accumulator] [Flags: ZN]
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	adc $08.b,S		; 63 08 ; Add with carry (stack relative) $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9E08.w		; 8C 08 9E ; Store Y register to $9E08.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $8F08.w		; 8C 08 8F ; Store Y register to $8F08.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA08.l,X		; 9F 08 BA 08 ; Store accumulator (long,X) $08BA08.l,X [Reads: Accumulator, X Index]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $10.b		; A6 10 ; Load $10.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	eor $4408.w		; 4D 08 44 ; Exclusive OR $4408.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $48.b		; 86 48 ; Store X register to $48.b [Reads: X Index]
	eor $8C08.w		; 4D 08 8C ; Exclusive OR $8C08.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $9F08.w,X		; 9E 08 9F ; Store zero to $9F08.w,X [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA08.l,X		; 9F 08 BA 08 ; Store accumulator (long,X) $08BA08.l,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA48.l,X		; 9F 48 BA 08 ; Store accumulator (long,X) $08BA48.l,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $8C48.w,X		; 9E 48 8C ; Store zero to $8C48.w,X [Reads: X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA48.l,X		; 9F 48 BA 08 ; Store accumulator (long,X) $08BA48.l,X [Reads: Accumulator, X Index]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BAC8.l,X		; 9F C8 BA 08 ; Store accumulator (long,X) $08BAC8.l,X [Reads: Accumulator, X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	.db $10, $9D		; 10 9D ; Branch if plus to $10, $9D [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $50.b,Y		; 96 50 ; Store X register $50.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	stx $48.b		; 86 48 ; Store X register to $48.b [Reads: X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	.db $10, $96		; 10 96 ; Branch if plus to $10, $96 [Flow: branch]
	.db $50, $48		; 50 48 ; Branch if overflow clear to $50, $48 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $08.b		; 66 08 ; Rotate right $08.b [Reads: Direct Page] [Flags: ZNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $08.b,X		; 76 08 ; Rotate right $08.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $AA08.w		; 8C 08 AA ; Store Y register to $AA08.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $BA08.w		; 8D 08 BA ; Store accumulator to $BA08.w [Reads: Accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $C89EC8.l,X		; 9F C8 9E C8 ; Store accumulator (long,X) $C89EC8.l,X [Reads: Accumulator, X Index]
	sty $8CC8.w		; 8C C8 8C ; Store Y register to $8CC8.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	stz $AA88.w,X		; 9E 88 AA ; Store zero to $AA88.w,X [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08AB88.l,X		; 9F 88 AB 08 ; Store accumulator (long,X) $08AB88.l,X [Reads: Accumulator, X Index]
	sty $9E88.w		; 8C 88 9E ; Store Y register to $9E88.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $BA48.w		; 9C 48 BA ; Store zero to $BA48.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $AA48.w		; 8C 48 AA ; Store Y register to $AA48.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $AA48.w		; 8D 48 AA ; Store accumulator to $AA48.w [Reads: Accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $10.b		; A4 10 ; Load $10.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $10B488.l		; 4F 88 B4 10 ; Exclusive OR accumulator with memory (long) $10B488.l [Writes: Accumulator] [Flags: ZN]
	eor $088C08.l		; 4F 08 8C 08 ; Exclusive OR accumulator with memory (long) $088C08.l [Writes: Accumulator] [Flags: ZN]
	sta $8D08.w,X		; 9D 08 8D ; Store accumulator to $8D08.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $09.b		; 00 09 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $09		; 10 09 ; Branch if plus to $10, $09 [Flow: branch]
	lsr $09.b,X		; 56 09 ; Logical shift right $09.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $49.b,X		; 56 49 ; Logical shift right $49.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $09.b		; 66 09 ; Rotate right $09.b [Reads: Direct Page] [Flags: ZNC]
	ror $49.b		; 66 49 ; Rotate right $49.b [Reads: Direct Page] [Flags: ZNC]
	brk $49.b		; 00 49 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $49		; 10 49 ; Branch if plus to $10, $49 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $8C48.w,X		; 9D 48 8C ; Store accumulator to $8C48.w,X [Reads: Accumulator, X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta $BA48.w		; 8D 48 BA ; Store accumulator to $BA48.w [Reads: Accumulator]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta $9DC8.w		; 8D C8 9D ; Store accumulator to $9DC8.w [Reads: Accumulator]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sty $AAC8.w		; 8C C8 AA ; Store Y register to $AAC8.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $AA09.w		; 20 09 AA ; Jump to subroutine at $AA09.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora ($09.b,X)		; 01 09 ; Logical OR ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ror $09.b,X		; 76 09 ; Rotate right $09.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $49.b,X		; 76 49 ; Rotate right $49.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($49.b),Y		; 11 49 ; OR accumulator with memory ($49.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $AA49.w		; 20 49 AA ; Jump to subroutine at $AA49.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora ($49.b,X)		; 01 49 ; Logical OR ($49.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $AB88.w		; 8D 88 AB ; Store accumulator to $AB88.w [Reads: Accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9D88.w		; 8C 88 9D ; Store Y register to $9D88.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $10.b,X		; B5 10 ; Load $10.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $08BA88.l		; 4F 88 BA 08 ; Exclusive OR accumulator with memory (long) $08BA88.l [Writes: Accumulator] [Flags: ZN]
	eor $088C08.l		; 4F 08 8C 08 ; Exclusive OR accumulator with memory (long) $088C08.l [Writes: Accumulator] [Flags: ZN]
	sta $8E08.w,X		; 9D 08 8E ; Store accumulator to $8E08.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $AAC8.w		; 8D C8 AA ; Store accumulator to $AAC8.w [Reads: Accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $AAC8.w		; 8C C8 AA ; Store Y register to $AAC8.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx #$15.b		; A2 15 ; Load #$15.b into X register [Writes: X Index] [Flags: ZN]
	ldx #$55.b		; A2 55 ; Load #$55.b into X register [Writes: X Index] [Flags: ZN]
	lda ($15.b)		; B2 15 ; Load accumulator (indirect) ($15.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda ($55.b)		; B2 55 ; Load accumulator (indirect) ($55.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $AA88.w		; 8D 88 AA ; Store accumulator to $AA88.w [Reads: Accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9D88.w		; 8C 88 9D ; Store Y register to $9D88.w [Reads: Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sty $BA48.w		; 8C 48 BA ; Store Y register to $BA48.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $DF48.w		; 8E 48 DF ; Store X register to $DF48.w [Reads: X Index]
	ora $5DDF.w,X		; 1D DF 5D ; OR accumulator with memory $5DDF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $DDDF9D.l,X		; DF 9D DF DD ; Compare accumulator (long,X) $DDDF9D.l,X [Reads: Accumulator, X Index] [Flags: ZNC]
	stx $BA08.w		; 8E 08 BA ; Store X register to $BA08.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9D88.w		; 8C 88 9D ; Store Y register to $9D88.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $9D48.w		; 8E 48 9D ; Store X register to $9D48.w [Reads: X Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sty $ABC8.w		; 8C C8 AB ; Store Y register to $ABC8.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $BAC8.w,X		; 9D C8 BA ; Store accumulator to $BAC8.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA88.l,X		; 9F 88 BA 08 ; Store accumulator (long,X) $08BA88.l,X [Reads: Accumulator, X Index]
	sta $08BA88.l,X		; 9F 88 BA 08 ; Store accumulator (long,X) $08BA88.l,X [Reads: Accumulator, X Index]
	sty $8F88.w		; 8C 88 8F ; Store Y register to $8F88.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $08AA08.l		; AF 08 AA 08 ; Load long $08AA08.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $08AF08.l,X		; BF 08 AF 08 ; Load long $08AF08.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,X		; 55 08 ; Exclusive OR accumulator with memory $08.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $08.b		; 46 08 ; Logical shift right $08.b [Reads: Direct Page] [Flags: ZNC]
	lda $085408.l,X		; BF 08 54 08 ; Load long $085408.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $08.b,X		; 56 08 ; Logical shift right $08.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ldy #$19.b		; A0 19 ; Load #$19.b into Y register [Writes: Y Index] [Flags: ZN]
	ldy #$59.b		; A0 59 ; Load #$59.b into Y register [Writes: Y Index] [Flags: ZN]
	.db $B0, $19		; B0 19 ; Branch if carry set to $B0, $19 [Flow: branch]
	.db $B0, $59		; B0 59 ; Branch if carry set to $B0, $59 [Flow: branch]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08BA88.l		; 4F 88 BA 08 ; Exclusive OR accumulator with memory (long) $08BA88.l [Writes: Accumulator] [Flags: ZN]
	eor $10BE08.l		; 4F 08 BE 10 ; Exclusive OR accumulator with memory (long) $10BE08.l [Writes: Accumulator] [Flags: ZN]
	lda $508110.l		; AF 10 81 50 ; Load long $508110.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $10.b		; 46 10 ; Logical shift right $10.b [Reads: Direct Page] [Flags: ZNC]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08BA10.l		; AF 10 BA 08 ; Load long $08BA10.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $10.b		; 46 10 ; Logical shift right $10.b [Reads: Direct Page] [Flags: ZNC]
	lda $105410.l		; [PATTERN: Memory clearing operation] AF 10 54 10 ; Load long $105410.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $10.b,X		; 56 10 ; Logical shift right $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $08.b		; 64 08 ; Store zero to $08.b
	ror $10.b		; 66 10 ; Rotate right $10.b [Reads: Direct Page] [Flags: ZNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	ror $10.b,X		; 76 10 ; Rotate right $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $08.b,X		; 95 08 ; Store accumulator to $08.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $4748.w,Y		; 79 48 47 ; Add $4748.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; [PATTERN: Memory clearing operation] 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	eor [$08.b],Y		; 57 08 ; Exclusive OR accumulator with memory (long indexed) [$08.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b		; 64 08 ; Store zero to $08.b
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $0874.w		; 0D 74 08 ; Logical OR $0874.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	sta $1D7F.w		; 8D 7F 1D ; Store accumulator to $1D7F.w [Reads: Accumulator]
	adc $8DD81D.l,X		; 7F 1D D8 8D ; Add long $8DD81D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cld		; D8 ; Clear decimal flag [Flags: D]
	cmp $0845.w		; CD 45 08 ; Compare $0845.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc [$08.b]		; 67 08 ; Add with carry (long) [$08.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$08.b],Y		; 77 08 ; Add with carry (long indexed) [$08.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	sty $15.b		; 84 15 ; Store Y register to $15.b [Reads: Y Index]
	sty $55.b		; 84 55 ; Store Y register to $55.b [Reads: Y Index]
	sty $15.b,X		; 94 15 ; Store Y register $15.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	sta $15.b		; 85 15 ; Store accumulator to $15.b [Reads: Accumulator]
	sty $15.b		; 84 15 ; Store Y register to $15.b [Reads: Y Index]
	sty $55.b		; 84 55 ; Store Y register to $55.b [Reads: Y Index]
	sta $55.b		; 85 55 ; Store accumulator to $55.b [Reads: Accumulator]
	sty $55.b,X		; 94 55 ; Store Y register $55.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	sty $15.b		; 84 15 ; Store Y register to $15.b [Reads: Y Index]
	stz $9415.w,X		; 9E 15 94 ; Store zero to $9415.w,X [Reads: X Index]
	ora $94.b,X		; 15 94 ; OR accumulator with memory $94.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $9E.b,X		; 55 9E ; Exclusive OR accumulator with memory $9E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $84.b,X		; 55 84 ; Exclusive OR accumulator with memory $84.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $94.b,X		; 55 94 ; Exclusive OR accumulator with memory $94.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $94.b,X		; 15 94 ; OR accumulator with memory $94.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $A4.b,X		; 55 A4 ; Exclusive OR accumulator with memory $A4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $B4C8.w		; 4E C8 B4 ; Logical shift right $B4C8.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $9748.w		; 4E 48 97 ; Logical shift right $9748.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5D08.w,X		; 5D 08 5D ; Exclusive OR accumulator with memory $5D08.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora [$4D.b]		; 07 4D ; OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $9748.w,X		; 5D 48 97 ; Exclusive OR accumulator with memory $9748.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora [$0D.b]		; 07 0D ; OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1748.w,X		; 5D 48 17 ; Exclusive OR accumulator with memory $1748.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D08.w		; 0D 08 0D ; Logical OR $0D08.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $0840.w		; 0D 40 08 ; Logical OR $0840.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora #$0D.b		; 09 0D ; Logical OR #$0D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$4D.b		; 09 4D ; Logical OR #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4D17.w		; 4D 17 4D ; Exclusive OR $4D17.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $4850.w		; 4D 50 48 ; Exclusive OR $4850.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $190D.w,Y		; 19 0D 19 ; OR accumulator with memory $190D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $0870.w		; 4D 70 08 ; Exclusive OR $0870.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($08.b),Y		; 71 08 ; Add with carry ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $48.b		; A4 48 ; Load $48.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $B408.w,Y		; 79 08 B4 ; Add $B408.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	mvp $4D,$48		; 44 48 4D ; Move block positive $4D,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $6C48.w		; 4D 48 6C ; Exclusive OR $6C48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc $7D08.w,X		; 7D 08 7D ; Add $7D08.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4408.w		; 4D 08 44 ; Exclusive OR $4408.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $6C08.w		; 4D 08 6C ; Exclusive OR $6C08.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($7C08.w,X)		; 7C 08 7C ; Jump indirect indexed to ($7C08.w,X) [Reads: X Index] [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($7A48.w,X)		; 7C 48 7A ; Jump indirect indexed to ($7A48.w,X) [Reads: X Index] [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($4E48.w,X)		; 7C 48 4E ; Jump indirect indexed to ($4E48.w,X) [Reads: X Index] [Flow: jump]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $6A08.w		; 4E 08 6A ; Logical shift right $6A08.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	mvn $F2,$0D		; 54 0D F2 ; Move block negative $F2,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	bit #$86.b		; 89 86 ; Test bits #$86.b with accumulator [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $0D.b,X		; 55 0D ; Exclusive OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,S		; A3 15 ; Load accumulator (stack relative) $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	lda $55.b,S		; A3 55 ; Load accumulator (stack relative) $55.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	lda ($15.b,S),Y		; B3 15 ; Load accumulator (stack relative indirect indexed) ($15.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($55.b,S),Y		; B3 55 ; Load accumulator (stack relative indirect indexed) ($55.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $48.b,S		; 63 48 ; Add with carry (stack relative) $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	stx $15.b		; 86 15 ; Store X register to $15.b [Reads: X Index]
	sta [$15.b]		; 87 15 ; Store accumulator (long) [$15.b] [Reads: Accumulator, Direct Page]
	stx $15.b,Y		; 96 15 ; Store X register $15.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	sta [$15.b],Y		; 97 15 ; Store accumulator (long indexed) [$15.b],Y [Reads: Accumulator, Direct Page, Y Index]
	sta [$55.b]		; 87 55 ; Store accumulator (long) [$55.b] [Reads: Accumulator, Direct Page]
	stx $55.b		; 86 55 ; Store X register to $55.b [Reads: X Index]
	sta [$55.b],Y		; 97 55 ; Store accumulator (long indexed) [$55.b],Y [Reads: Accumulator, Direct Page, Y Index]
	stx $55.b,Y		; 96 55 ; Store X register $55.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	stx $95.b,Y		; 96 95 ; Store X register $95.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	sta [$95.b],Y		; 97 95 ; Store accumulator (long indexed) [$95.b],Y [Reads: Accumulator, Direct Page, Y Index]
	stx $95.b		; 86 95 ; Store X register to $95.b [Reads: X Index]
	sta [$95.b]		; 87 95 ; Store accumulator (long) [$95.b] [Reads: Accumulator, Direct Page]
	sta [$D5.b],Y		; 97 D5 ; Store accumulator (long indexed) [$D5.b],Y [Reads: Accumulator, Direct Page, Y Index]
	stx $D5.b,Y		; 96 D5 ; Store X register $D5.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	sta [$D5.b]		; 87 D5 ; Store accumulator (long) [$D5.b] [Reads: Accumulator, Direct Page]
	stx $D5.b		; 86 D5 ; Store X register to $D5.b [Reads: X Index]
	sta $08.b,X		; 95 08 ; Store accumulator to $08.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($6C51.w)		; 6C 51 6C ; Jump indirect to ($6C51.w) [Flow: jump]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($6C11.w)		; 6C 11 6C ; Jump indirect to ($6C11.w) [Flow: jump]
	cmp ($6C.b),Y		; D1 6C ; Compare accumulator ($6C.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $2D31.w		; 2C 31 2D ; Test bits $2D31.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	and ($22.b),Y		; 31 22 ; AND accumulator with memory ($22.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($40.b),Y		; 31 40 ; AND accumulator with memory ($40.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($2D.b),Y		; 31 2D ; AND accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($2C.b),Y		; 71 2C ; Add with carry ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($40.b),Y		; 71 40 ; Add with carry ($40.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($22.b),Y		; 71 22 ; Add with carry ($22.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($32.b),Y		; 71 32 ; Add with carry ($32.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($41.b),Y		; 31 41 ; AND accumulator with memory ($41.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($4E.b),Y		; 31 4E ; AND accumulator with memory ($4E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($28.b),Y		; 31 28 ; AND accumulator with memory ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($41.b),Y		; 31 41 ; AND accumulator with memory ($41.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($32.b),Y		; 71 32 ; Add with carry ($32.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($28.b),Y		; 71 28 ; Add with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($4E.b),Y		; 71 4E ; Add with carry ($4E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5E.b),Y		; 71 5E ; Add with carry ($5E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($FE.b),Y		; 11 FE ; OR accumulator with memory ($FE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $7C		; 10 7C ; Branch if plus to $10, $7C [Flow: branch]
	ora ($7F.b),Y		; 11 7F ; OR accumulator with memory ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($FE.b),Y		; 11 FE ; OR accumulator with memory ($FE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $5E		; 50 5E ; Branch if overflow clear to $50, $5E [Flow: branch]
	eor ($7F.b),Y		; 51 7F ; Exclusive OR accumulator with memory ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($7C.b),Y		; 51 7C ; Exclusive OR accumulator with memory ($7C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($55.b),Y		; 51 55 ; Exclusive OR accumulator with memory ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($42.b),Y		; 11 42 ; OR accumulator with memory ($42.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($52.b),Y		; 11 52 ; OR accumulator with memory ($52.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($43.b),Y		; 11 43 ; OR accumulator with memory ($43.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($43.b),Y		; 11 43 ; OR accumulator with memory ($43.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($42.b),Y		; 51 42 ; Exclusive OR accumulator with memory ($42.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($55.b),Y		; 51 55 ; Exclusive OR accumulator with memory ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($52.b),Y		; 51 52 ; Exclusive OR accumulator with memory ($52.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($62.b),Y		; 11 62 ; OR accumulator with memory ($62.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($63.b),Y		; 11 63 ; OR accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($63.b),Y		; 11 63 ; OR accumulator with memory ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($62.b),Y		; 51 62 ; Exclusive OR accumulator with memory ($62.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($00.b),Y		; 51 00 ; Exclusive OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($01.b),Y		; 11 01 ; OR accumulator with memory ($01.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($00.b),Y		; 11 00 ; OR accumulator with memory ($00.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	.db $10, $07		; 10 07 ; Branch if plus to $10, $07 [Flow: branch]
	.db $10, $60		; 10 60 ; Branch if plus to $10, $60 [Flow: branch]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc ($28.b,X)		; 61 28 ; Add with carry ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $28		; 70 28 ; Branch if overflow set to $70, $28 [Flow: branch]
	eor [$39.b]		; 47 39 ; Exclusive OR accumulator with memory (long) [$39.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc ($28.b,X)		; 61 28 ; Add with carry ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$79.b]		; 47 79 ; Exclusive OR accumulator with memory (long) [$79.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($28.b),Y		; 71 28 ; Add with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lsr $39.b		; 46 39 ; Logical shift right $39.b [Reads: Direct Page] [Flags: ZNC]
	eor [$39.b]		; 47 39 ; Exclusive OR accumulator with memory (long) [$39.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	xba		; EB ; Exchange B and A accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$47.b		; 09 47 ; Logical OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $7946.w,Y		; 79 46 79 ; Add $7946.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $49EB49.l		; EF 49 EB 49 ; Subtract with carry (long) $49EB49.l [Writes: Accumulator] [Flags: ZVNC]
	stx $4F08.w		; 8E 08 4F ; Store X register to $4F08.w [Reads: X Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $08.b		; A5 08 ; Load $08.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $397A08.l		; 4F 08 7A 39 ; Exclusive OR accumulator with memory (long) $397A08.l [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $3957.w,Y		; 39 57 39 ; AND accumulator with memory $3957.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$39.b]		; 67 39 ; Add with carry (long) [$39.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $797A.w,Y		; 79 7A 79 ; Add $797A.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$79.b]		; 67 79 ; Add with carry (long) [$79.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$79.b],Y		; 57 79 ; Exclusive OR accumulator with memory (long indexed) [$79.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $08, $A1		; 62 08 A1 ; Push effective relative address $62, $08, $A1 [Writes: Stack Pointer]
	.db $10, $A0		; 10 A0 ; Branch if plus to $10, $A0 [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $B0, $08		; B0 08 ; Branch if carry set to $B0, $08 [Flow: branch]
	.db $62, $48, $46		; 62 48 46 ; Push effective relative address $62, $48, $46 [Writes: Stack Pointer]
	and $3947.w,Y		; 39 47 39 ; AND accumulator with memory $3947.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $09EF.w,Y		; 19 EF 09 ; OR accumulator with memory $09EF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$79.b]		; 47 79 ; Exclusive OR accumulator with memory (long) [$79.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $79.b		; 46 79 ; Logical shift right $79.b [Reads: Direct Page] [Flags: ZNC]
	sbc $192849.l		; EF 49 28 19 ; Subtract with carry (long) $192849.l [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $08, $B1		; 62 08 B1 ; Push effective relative address $62, $08, $B1 [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $08		; 42 08 ; Reserved instruction
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $0860.w		; 0D 60 08 ; Logical OR $0860.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $4D48.w		; 0D 48 4D ; Logical OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($48.b,S),Y		; 53 48 ; XOR accumulator (stack relative indirect indexed) ($48.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $48		; 42 48 ; Reserved instruction
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4852.w		; 4D 52 48 ; Exclusive OR $4852.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy #$48.b		; A0 48 ; Load #$48.b into Y register [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $3808.w		; 8E 08 38 ; Store X register to $3808.w [Reads: X Index]
	ora $197C.w,Y		; 19 7C 19 ; OR accumulator with memory $197C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $BA19.w		; 1C 19 BA ; Test and reset bits $BA19.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($3859.w,X)		; 7C 59 38 ; Jump indirect indexed to ($3859.w,X) [Reads: X Index] [Flow: jump]
	ora $08BA.w,Y		; 19 BA 08 ; OR accumulator with memory $08BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $A019.w		; 1C 19 A0 ; Test and reset bits $A019.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $AA48.w		; 8E 48 AA ; Store X register to $AA48.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor #$0D.b		; 49 0D ; Exclusive OR #$0D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $590D.w,Y		; 59 0D 59 ; Exclusive OR accumulator with memory $590D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D69.w		; 0D 69 0D ; Logical OR $0D69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	ora $4D58.w		; 0D 58 4D ; Logical OR $4D58.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $4D68.w		; 0D 68 4D ; Logical OR $4D68.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $494D.w,Y		; 59 4D 49 ; Exclusive OR accumulator with memory $494D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D69.w		; 4D 69 4D ; Exclusive OR $4D69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $AA4D.w,Y		; 59 4D AA ; Exclusive OR accumulator with memory $AA4D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $AA08.w		; 8E 08 AA ; Store X register to $AA08.w [Reads: X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sty $8E88.w		; 8C 88 8E ; Store Y register to $8E88.w [Reads: Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $84C8.w		; 8C C8 84 ; Store Y register to $84C8.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc #$0D.b		; 69 0D ; Add #$0D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF09.l,X		; FF 09 FF 0D ; Subtract with carry (long,X) $0DFF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $09FF09.l,X		; FF 09 FF 09 ; Subtract with carry (long,X) $09FF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $09FF09.l,X		; FF 09 FF 09 ; Subtract with carry (long,X) $09FF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DC009.l,X		; FF 09 C0 1D ; Subtract with carry (long,X) $1DC009.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($1D.b,X)		; C1 1D ; Compare accumulator ($1D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cpy #$1D.b		; C0 1D ; Compare #$1D.b with Y register [Reads: Y Index] [Flags: ZNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cpy #$1D.b		; C0 1D ; Compare #$1D.b with Y register [Reads: Y Index] [Flags: ZNC]
	sbc $1DC11D.l,X		; FF 1D C1 1D ; Subtract with carry (long,X) $1DC11D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4D6949.l,X		; FF 49 69 4D ; Subtract with carry (long,X) $4D6949.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $49FF49.l,X		; FF 49 FF 49 ; Subtract with carry (long,X) $49FF49.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DC11D.l,X		; FF 1D C1 1D ; Subtract with carry (long,X) $1DC11D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4629.w,Y		; F9 29 46 ; Subtract with carry $4629.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $09EB.w,Y		; 39 EB 09 ; AND accumulator with memory $09EB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $794609.l		; EF 09 46 79 ; Subtract with carry (long) $794609.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $EF69.w,Y		; F9 69 EF ; Subtract with carry $EF69.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor #$EB.b		; 49 EB ; Exclusive OR #$EB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$83.b		; 49 83 ; Exclusive OR #$83.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($08.b,S),Y		; 93 08 ; Store accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $7808.w,X		; 5D 08 78 ; Exclusive OR accumulator with memory $7808.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08.b,S		; A3 08 ; Load accumulator (stack relative) $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($08.b,S),Y		; B3 08 ; Load accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $08		; 42 08 ; Reserved instruction
	.db $82, $08, $52		; 82 08 52 ; Branch always long to $82, $08, $52 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($08.b)		; 92 08 ; Store accumulator (indirect) ($08.b) [Reads: Accumulator, Direct Page]
	ldx #$08.b		; A2 08 ; Load #$08.b into X register [Writes: X Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($08.b)		; B2 08 ; Load accumulator (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $0D4C.w		; 0D 4C 0D ; Logical OR $0D4C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $0D5C.w		; 0D 5C 0D ; Logical OR $0D5C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $4D0D.w		; 4D 0D 4D ; Exclusive OR $4D0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $0D5D.w		; 4D 5D 0D ; Exclusive OR $0D5D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $4C4D.w,X		; 5D 4D 4C ; Exclusive OR accumulator with memory $4C4D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D4B.w		; 4D 4B 4D ; Exclusive OR $4D4B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp $4D5B4D.l		; 5C 4D 5B 4D ; Jump long to $4D5B4D.l [Flow: jump]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $0D6C.w		; 0D 6C 0D ; Logical OR $0D6C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$4D.b		; 69 4D ; Add #$4D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $6D4D.w,Y		; 59 4D 6D ; Exclusive OR accumulator with memory $6D4D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $4D6D.w		; 0D 6D 4D ; Logical OR $4D6D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $4D48.w		; 0D 48 4D ; Logical OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp ($6B4D.w)		; 6C 4D 6B ; Jump indirect to ($6B4D.w) [Flow: jump]
	eor $0D59.w		; 4D 59 0D ; Exclusive OR $0D59.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$0D.b		; 69 0D ; Add #$0D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sbc $4D690D.l,X		; FF 0D 69 4D ; Subtract with carry (long,X) $4D690D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc #$0D.b		; 69 0D ; Add #$0D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D790D.l,X		; FF 0D 79 0D ; Subtract with carry (long,X) $0D790D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $8D790D.l,X		; FF 0D 79 8D ; Subtract with carry (long,X) $8D790D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $49FF0D.l,X		; FF 0D FF 49 ; Subtract with carry (long,X) $49FF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $FF4D.w,Y		; 79 4D FF ; Add $FF4D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora #$79.b		; 09 79 ; Logical OR #$79.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $4D78.w		; CD 78 4D ; Compare $4D78.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	cmp $4874.w		; CD 74 48 ; Compare $4874.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor $4864.w		; 4D 64 48 ; Exclusive OR $4864.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	cmp $4852.w		; CD 52 48 ; Compare $4852.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $FF0D.w,Y		; 79 0D FF ; Add $FF0D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora #$79.b		; 09 79 ; Logical OR #$79.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $09FF.w		; 8D FF 09 ; Store accumulator to $09FF.w [Reads: Accumulator]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4D5A.w		; 4D 5A 4D ; Exclusive OR $4D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $4D5A.w		; 0D 5A 4D ; Logical OR $4D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $0D6A.w		; 0D 6A 0D ; Logical OR $0D6A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $4D694D.l,X		; FF 4D 69 4D ; Subtract with carry (long,X) $4D694D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4D6A4D.l,X		; FF 4D 6A 4D ; Subtract with carry (long,X) $4D6A4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4844.w		; 4D 44 48 ; Exclusive OR $4844.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $0DFF.w		; 0D FF 0D ; Logical OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $6A,$0C		; 44 0C 6A ; Move block positive $6A,$0C [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $4DFF.w		; 0D FF 4D ; Logical OR $4DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $FF4D.w,Y		; 79 4D FF ; Add $FF4D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $CD79.w		; 0D 79 CD ; Logical OR $CD79.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $0DFF.w		; 0D FF 0D ; Logical OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $6A,$08		; 44 08 6A ; Move block positive $6A,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $09FF.w		; 0D FF 09 ; Logical OR $09FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0D5A09.l,X		; FF 09 5A 0D ; Subtract with carry (long,X) $0D5A09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $0848.w		; 0D 48 08 ; Logical OR $0848.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $0852.w		; 0D 52 08 ; Logical OR $0852.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	sta $084C.w		; 8D 4C 08 ; Store accumulator to $084C.w [Reads: Accumulator]
	jmp $A748.w		; 4C 48 A7 ; Jump to $A748.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda [$48.b]		; A7 48 ; Load accumulator (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $09FF.w		; 0D FF 09 ; Logical OR $09FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $6A,$08		; 44 08 6A ; Move block positive $6A,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $49FF.w		; 0D FF 49 ; Logical OR $49FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4D6A.w		; 4D 6A 4D ; Exclusive OR $4D6A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $04,$48		; 44 48 04 ; Move block positive $04,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $1D04.w,X		; 1D 04 1D ; OR accumulator with memory $1D04.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1988.w,Y		; 19 88 19 ; OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsb $1D.b		; 04 1D ; Test and set bits $1D.b [Reads: Accumulator] [Flags: Z]
	tsb $1D.b		; 04 1D ; Test and set bits $1D.b [Reads: Accumulator] [Flags: Z]
	ldx $0C.b,Y		; B6 0C ; Load X register $0C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: ZN]
	inc $0409.w		; EE 09 04 ; Increment $0409.w [Flags: ZN]
	ora $1D04.w,X		; 1D 04 1D ; OR accumulator with memory $1D04.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $EE09.w		; EE 09 EE ; Increment $EE09.w [Flags: ZN]
	ora #$04.b		; 09 04 ; Logical OR #$04.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D04.w,X		; 1D 04 1D ; OR accumulator with memory $1D04.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $9509.w		; EE 09 95 ; Increment $9509.w [Flags: ZN]
	ora $1D1F.w		; 0D 1F 1D ; Logical OR $1D1F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D1F1D.l,X		; 1F 1D 1F 1D ; Logical OR long $1D1F1D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $19981D.l,X		; 1F 1D 98 19 ; Logical OR long $19981D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D1F.w,Y		; 19 1F 1D ; OR accumulator with memory $1D1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $0CB61D.l,X		; 1F 1D B6 0C ; Logical OR long $0CB61D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $B609.w		; EE 09 B6 ; Increment $B609.w [Flags: ZN]
	tsb $09EE.w		; 0C EE 09 ; Test and set bits $09EE.w [Reads: Accumulator] [Flags: Z]
	inc $EE09.w		; EE 09 EE ; Increment $EE09.w [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$95.b		; 09 95 ; Logical OR #$95.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $09EE.w		; 0D EE 09 ; Logical OR $09EE.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0D.b,X		; 95 0D ; Store accumulator to $0D.b,X [Reads: Accumulator, X Index]
	ora $1D1F1D.l,X		; 1F 1D 1F 1D ; Logical OR long $1D1F1D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1988.w,Y		; 19 88 19 ; OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	ora $1998.w,Y		; 19 98 19 ; OR accumulator with memory $1998.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D14.w,Y		; 19 14 1D ; OR accumulator with memory $1D14.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	ldx $0C.b,Y		; B6 0C ; Load X register $0C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: ZN]
	inc $1409.w		; EE 09 14 ; Increment $1409.w [Flags: ZN]
	ora $1D14.w,X		; 1D 14 1D ; OR accumulator with memory $1D14.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $EE09.w		; EE 09 EE ; Increment $EE09.w [Flags: ZN]
	ora #$14.b		; 09 14 ; Logical OR #$14.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D14.w,X		; 1D 14 1D ; OR accumulator with memory $1D14.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $9509.w		; EE 09 95 ; Increment $9509.w [Flags: ZN]
	ora $1D14.w		; 0D 14 1D ; Logical OR $1D14.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	inc $EE09.w		; EE 09 EE ; Increment $EE09.w [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$69.b		; 09 69 ; Logical OR #$69.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $09FF.w		; 0D FF 09 ; Logical OR $09FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $09FF09.l,X		; FF 09 FF 09 ; Subtract with carry (long,X) $09FF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $09FF.w		; 0D FF 09 ; Logical OR $09FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $5A,$08		; 44 08 5A ; Move block positive $5A,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $09FF.w		; 4D FF 09 ; Exclusive OR $09FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $0D5A.w		; 4D 5A 0D ; Exclusive OR $0D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $19,$48		; 44 48 19 ; Move block positive $19,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	and $6D19.w		; 2D 19 6D ; Logical AND $6D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $70, $28		; 70 28 ; Branch if overflow set to $70, $28 [Flow: branch]
	adc ($28.b),Y		; 71 28 ; Add with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $08.b		; A4 08 ; Load $08.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $08.b,X		; B4 08 ; Load Y register $08.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $FB48.w,Y		; 79 48 FB ; Add $FB48.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FC.b		; 09 FC ; Logical OR #$FC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($EC.b),Y		; 11 EC ; OR accumulator with memory ($EC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($EF.b),Y		; 11 EF ; OR accumulator with memory ($EF.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$FB.b		; 49 FB ; Exclusive OR #$FB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$EC.b		; 49 EC ; Exclusive OR #$EC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($FC.b),Y		; 51 FC ; Exclusive OR accumulator with memory ($FC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($B5.b),Y		; 51 B5 ; Exclusive OR accumulator with memory ($B5.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $088E88.l		; 4F 88 8E 08 ; Exclusive OR accumulator with memory (long) $088E88.l [Writes: Accumulator] [Flags: ZN]
	eor $08AA08.l		; 4F 08 AA 08 ; Exclusive OR accumulator with memory (long) $08AA08.l [Writes: Accumulator] [Flags: ZN]
	sta $48.b,S		; 83 48 ; Store accumulator (stack relative) $48.b,S [Reads: Accumulator, Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($48.b,S),Y		; 93 48 ; Store accumulator (stack relative indirect indexed) ($48.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $48.b,S		; A3 48 ; Load accumulator (stack relative) $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($48.b,S),Y		; B3 48 ; Load accumulator (stack relative indirect indexed) ($48.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $82, $48, $42		; 82 48 42 ; Branch always long to $82, $48, $42 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta ($48.b)		; 92 48 ; Store accumulator (indirect) ($48.b) [Reads: Accumulator, Direct Page]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx #$48.b		; A2 48 ; Load #$48.b into X register [Writes: X Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($48.b)		; B2 48 ; Load accumulator (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc [$48.b]		; 67 48 ; Add with carry (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $48.b		; 45 48 ; Exclusive OR $48.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	adc [$48.b],Y		; 77 48 ; Add with carry (long indexed) [$48.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4874.w		; 4D 74 48 ; Exclusive OR $4874.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $09FF09.l,X		; FF 09 FF 09 ; Subtract with carry (long,X) $09FF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4D5A.w		; 4D 5A 4D ; Exclusive OR $4D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $09FF09.l,X		; FF 09 FF 09 ; Subtract with carry (long,X) $09FF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $4D5A.w		; 0D 5A 4D ; Logical OR $4D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor [$08.b]		; 47 08 ; Exclusive OR accumulator with memory (long) [$08.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1DF5.w		; 0D F5 1D ; Logical OR $1DF5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pea $741D.w		; F4 1D 74 ; Push absolute address $741D.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $1D.b		; E6 1D ; Increment $1D.b [Reads: Direct Page] [Flags: ZN]
	cpy $CC1D.w		; CC 1D CC ; Compare $CC1D.w with Y register [Reads: Y Index] [Flags: ZNC]
	eor $1DCC.w,X		; 5D CC 1D ; Exclusive OR accumulator with memory $1DCC.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cpy $CC5D.w		; CC 5D CC ; Compare $CC5D.w with Y register [Reads: Y Index] [Flags: ZNC]
	and $7DCC.w,X		; 3D CC 7D ; AND accumulator with memory $7DCC.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cpy $CC3D.w		; CC 3D CC ; Compare $CC3D.w with Y register [Reads: Y Index] [Flags: ZNC]
	adc $5DF4.w,X		; 7D F4 5D ; Add $5DF4.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $5D.b,X		; F5 5D ; Subtract $5D.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	inc $5D.b		; E6 5D ; Increment $5D.b [Reads: Direct Page] [Flags: ZN]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	cmp ($9D.b,X)		; C1 9D ; Compare accumulator ($9D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	sbc ($1D.b),Y		; F1 1D ; Subtract with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($1D.b,X)		; C1 1D ; Compare accumulator ($1D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
.INDEX 8
	sep #$1D		; E2 1D
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	lda $CF1C.w		; AD 1C CF ; Load $CF1C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	eor $1CAD.w,X		; 5D AD 1C ; Exclusive OR accumulator with memory $1CAD.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $AD1C.w		; AD 1C AD ; Load $AD1C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	trb $1CAD.w		; 1C AD 1C ; Test and reset bits $1CAD.w [Reads: Accumulator] [Flags: Z]
	lda $641C.w		; AD 1C 64 ; Load $641C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $1D.b,X		; F6 1D ; Increment memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	sbc ($09.b)		; F2 09 ; Subtract with carry (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pea $CC1D.w		; F4 1D CC ; Push absolute address $CC1D.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	ora $1DE6.w,X		; 1D E6 1D ; OR accumulator with memory $1DE6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cpy $CC1D.w		; CC 1D CC ; Compare $CC1D.w with Y register [Reads: Y Index] [Flags: ZNC]
	eor $5DF4.w,X		; 5D F4 5D ; Exclusive OR accumulator with memory $5DF4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cpy $E65D.w		; [PATTERN: Memory clearing operation] CC 5D E6 ; Compare $E65D.w with Y register [Reads: Y Index] [Flags: ZNC]
	eor $5DF6.w,X		; 5D F6 5D ; Exclusive OR accumulator with memory $5DF6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sbc ($49.b)		; F2 49 ; Subtract with carry (indirect) ($49.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	lda $CF1C.w		; AD 1C CF ; Load $CF1C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	eor $9DD9.w,X		; 5D D9 9D ; Exclusive OR accumulator with memory $9DD9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $AD1C.w		; AD 1C AD ; Load $AD1C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	trb $1DB4.w		; 1C B4 1D ; Test and reset bits $1DB4.w [Reads: Accumulator] [Flags: Z]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lda $AD1C.w		; AD 1C AD ; Load $AD1C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	trb $1DB4.w		; 1C B4 1D ; Test and reset bits $1DB4.w [Reads: Accumulator] [Flags: Z]
	jmp ($C759.w)		; 6C 59 C7 ; Jump indirect to ($C759.w) [Flow: jump]
	ora $5DC7.w,X		; 1D C7 5D ; OR accumulator with memory $5DC7.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp [$5D.b]		; C7 5D ; Compare accumulator (long) [$5D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($9D.b,X)		; C1 9D ; Compare accumulator ($9D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cmp ($9D.b),Y		; D1 9D ; Compare accumulator ($9D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($1D.b,X)		; C1 1D ; Compare accumulator ($1D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cmp ($1D.b),Y		; D1 1D ; Compare accumulator ($1D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	inc $DA1D.w,X		; FE 1D DA ; Increment memory $DA1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	sta $1DB4.w,X		; 9D B4 1D ; Store accumulator to $1DB4.w,X [Reads: Accumulator, X Index]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	jmp ($6C59.w)		; 6C 59 6C ; Jump indirect to ($6C59.w) [Flow: jump]
	eor $596B.w,Y		; 59 6B 59 ; Exclusive OR accumulator with memory $596B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $08AA.w,Y		; 59 AA 08 ; Exclusive OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp $CD1D.w		; CD 1D CD ; Compare $CD1D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	eor $1DC1.w,X		; 5D C1 1D ; Exclusive OR accumulator with memory $1DC1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($1D.b),Y		; D1 1D ; Compare accumulator ($1D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	dec $1D.b		; C6 1D ; Decrement $1D.b [Reads: Direct Page] [Flags: ZN]
	dec $5D.b		; C6 5D ; Decrement $5D.b [Reads: Direct Page] [Flags: ZN]
	cmp #$1D.b		; C9 1D ; Compare #$1D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$5D.b		; C9 5D ; Compare #$5D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp $CD1D.w		; CD 1D CD ; Compare $CD1D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	eor $5DD1.w,X		; 5D D1 5D ; Exclusive OR accumulator with memory $5DD1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($5D.b,X)		; C1 5D ; Compare accumulator ($5D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $D11D.w,X		; FE 1D D1 ; Increment memory $D11D.w,X [Reads: X Index] [Flags: ZN]
	cmp $DDC1.w,X		; DD C1 DD ; Compare accumulator $DDC1.w,X [Reads: X Index] [Flags: ZNC]
	cmp ($5D.b),Y		; D1 5D ; Compare accumulator ($5D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($5D.b,X)		; C1 5D ; Compare accumulator ($5D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	sbc ($C9.b)		; F2 C9 ; Subtract with carry (indirect) ($C9.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc ($49.b)		; F2 49 ; Subtract with carry (indirect) ($49.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $08, $C2		; 62 08 C2 ; Push effective relative address $62, $08, $C2 [Writes: Stack Pointer]
	ora $1DC2.w,X		; 1D C2 1D ; OR accumulator with memory $1DC2.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($1D.b)		; D2 1D ; Compare accumulator (indirect) ($1D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($1D.b)		; D2 1D ; Compare accumulator (indirect) ($1D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($1D.b,S),Y		; D3 1D ; Compare accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($1D.b,S),Y		; D3 1D ; Compare accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DD9.w,X		; 1D D9 1D ; OR accumulator with memory $1DD9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $B41D.w,Y		; D9 1D B4 ; Compare accumulator $B41D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $B459.w,X		; 5D 59 B4 ; Exclusive OR accumulator with memory $B459.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $595D.w,X		; 1D 5D 59 ; OR accumulator with memory $595D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($5D.b,S),Y		; D3 5D ; Compare accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($5D.b)		; D2 5D ; Compare accumulator (indirect) ($5D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	inc $D31D.w,X		; FE 1D D3 ; Increment memory $D31D.w,X [Reads: X Index] [Flags: ZN]
	eor $5DC2.w,X		; 5D C2 5D ; Exclusive OR accumulator with memory $5DC2.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $D2		; 62 48 D2 ; Push effective relative address $62, $48, $D2 [Writes: Stack Pointer]
	eor $5DC2.w,X		; 5D C2 5D ; Exclusive OR accumulator with memory $5DC2.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DC3.w,X		; 1D C3 1D ; OR accumulator with memory $1DC3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $5D.b,S		; C3 5D ; Compare accumulator (stack relative) $5D.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp $FE5D.w,Y		; D9 5D FE ; Compare accumulator $FE5D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $C45D.w,Y		; D9 5D C4 ; Compare accumulator $C45D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $5DC4.w,X		; 1D C4 5D ; OR accumulator with memory $5DC4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $D81D.w,X		; FE 1D D8 ; Increment memory $D81D.w,X [Reads: X Index] [Flags: ZN]
	ora $5DD8.w,X		; 1D D8 5D ; OR accumulator with memory $5DD8.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $6D19.w		; 6D 19 6D ; Add $6D19.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $1DC0.w,Y		; 59 C0 1D ; Exclusive OR accumulator with memory $1DC0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	cpy #$5D.b		; C0 5D ; Compare #$5D.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $D0, $1D		; D0 1D ; Branch if not equal to $D0, $1D [Flow: branch]
	.db $D0, $5D		; D0 5D ; Branch if not equal to $D0, $5D [Flow: branch]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	mvp $4D,$48		; 44 48 4D ; Move block positive $4D,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $7948.w		; 4D 48 79 ; Exclusive OR $7948.w with accumulator [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	cmp $B49D.w,Y		; D9 9D B4 ; Compare accumulator $B49D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $449D.w,Y		; D9 9D 44 ; Compare accumulator $449D.w,Y [Reads: Y Index] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D48.w		; 4D 48 4D ; Exclusive OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp ($4C0C.w)		; 6C 0C 4C ; Jump indirect to ($4C0C.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $7D48.w		; 4C 48 7D ; Jump to $7D48.w [Flow: jump]
	tsb $0C7D.w		; 0C 7D 0C ; Test and set bits $0C7D.w [Reads: Accumulator] [Flags: Z]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc $A60C.w,X		; 7D 0C A6 ; Add $A60C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	tsb $1059.w		; 0C 59 10 ; Test and set bits $1059.w [Reads: Accumulator] [Flags: Z]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sta $88.b,X		; 95 88 ; Store accumulator to $88.b,X [Reads: Accumulator, X Index]
	sta $C8.b,X		; 95 C8 ; Store accumulator to $C8.b,X [Reads: Accumulator, X Index]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DC5.w,X		; 1D C5 1D ; OR accumulator with memory $1DC5.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $4E1D.w,X		; FE 1D 4E ; Increment memory $4E1D.w,X [Reads: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tsb $084E.w		; 0C 4E 08 ; Test and set bits $084E.w [Reads: Accumulator] [Flags: Z]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CB7.w		; 0C B7 0C ; Test and set bits $0CB7.w [Reads: Accumulator] [Flags: Z]
	lda [$4C.b],Y		; B7 4C ; Load accumulator (long indexed) [$4C.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	jmp $1DB459.l		; 5C 59 B4 1D ; Jump long to $1DB459.l [Flow: jump]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $4D19.w		; 4D 19 4D ; Exclusive OR $4D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $1DB4.w,Y		; 59 B4 1D ; Exclusive OR accumulator with memory $1DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	jmp $AA59.w		; 4C 59 AA ; Jump to $AA59.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $554C59.l		; 5C 59 4C 55 ; Jump long to $554C59.l [Flow: jump]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	tsb $4C8B.w		; 0C 8B 4C ; Test and set bits $4C8B.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	tsb $4C8B.w		; 0C 8B 4C ; Test and set bits $4C8B.w [Reads: Accumulator] [Flags: Z]
	lda ($4C.b,X)		; A1 4C ; Load accumulator ($4C.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $AA		; 62 48 AA ; Push effective relative address $62, $48, $AA [Writes: Stack Pointer]
	jmp $4CA0.w		; 4C A0 4C ; Jump to $4CA0.w [Flow: jump]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp $D9DD.w,Y		; D9 DD D9 ; Compare accumulator $D9DD.w,Y [Reads: Y Index] [Flags: ZNC]
	cmp $1DFE.w,X		; DD FE 1D ; Compare accumulator $1DFE.w,X [Reads: X Index] [Flags: ZNC]
	jmp $AA59.w		; 4C 59 AA ; Jump to $AA59.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $594C59.l		; 5C 59 4C 59 ; Jump long to $594C59.l [Flow: jump]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $4843.w		; 0C 43 48 ; Test and set bits $4843.w [Reads: Accumulator] [Flags: Z]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $6D0C.w		; 6D 0C 6D ; Add $6D0C.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tsb $087E.w		; 0C 7E 08 ; Test and set bits $087E.w [Reads: Accumulator] [Flags: Z]
	adc $0C6D08.l,X		; 7F 08 6D 0C ; Add long $0C6D08.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $7F0C.w		; 6D 0C 7F ; Add $7F0C.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror $6D48.w,X		; 7E 48 6D ; Rotate right $6D48.w,X [Reads: X Index] [Flags: ZNC]
	tsb $0C6D.w		; 0C 6D 0C ; Test and set bits $0C6D.w [Reads: Accumulator] [Flags: Z]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $0C6B.w		; 0C 6B 0C ; Test and set bits $0C6B.w [Reads: Accumulator] [Flags: Z]
	cld		; D8 ; Clear decimal flag [Flags: D]
	sta $DDD8.w,X		; 9D D8 DD ; Store accumulator to $DDD8.w,X [Reads: Accumulator, X Index]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DCE.w,X		; 1D CE 1D ; OR accumulator with memory $1DCE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pei ($1D.b)		; D4 1D ; Push effective indirect address ($1D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	mvp $CE,$08		; 44 08 CE ; Move block positive $CE,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $9DD3.w,X		; 1D D3 9D ; OR accumulator with memory $9DD3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $D41D.w,X		; FE 1D D4 ; Increment memory $D41D.w,X [Reads: X Index] [Flags: ZN]
	ora $9DD3.w,X		; 1D D3 9D ; OR accumulator with memory $9DD3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $5DCF1D.l		; CF 1D CF 5D ; Compare accumulator (long) $5DCF1D.l [Reads: Accumulator] [Flags: ZNC]
	inc $E11D.w,X		; FE 1D E1 ; Increment memory $E11D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $5DE11D.l		; CF 1D E1 5D ; Compare accumulator (long) $5DE11D.l [Reads: Accumulator] [Flags: ZNC]
	inc $CF1D.w,X		; FE 1D CF ; Increment memory $CF1D.w,X [Reads: X Index] [Flags: ZN]
	eor $1DFE.w,X		; 5D FE 1D ; Exclusive OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $8E88.w		; 4E 88 8E ; Logical shift right $8E88.w [Flags: ZNC]
	jmp $084E.w		; 4C 4E 08 ; Jump to $084E.w [Flow: jump]
	lda $4C.b		; A5 4C ; Load $4C.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $A488.w		; 4E 88 A4 ; Logical shift right $A488.w [Flags: ZNC]
	jmp $084E.w		; 4C 4E 08 ; Jump to $084E.w [Flow: jump]
	ldy $4C.b,X		; [PATTERN: Memory clearing operation] B4 4C ; Load Y register $4C.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ror $4C.b		; 66 4C ; Rotate right $4C.b [Reads: Direct Page] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	ror $4C.b,X		; 76 4C ; Rotate right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	inc $D39D.w,X		; FE 9D D3 ; Increment memory $D39D.w,X [Reads: X Index] [Flags: ZN]
	cmp $DDD3.w,X		; DD D3 DD ; Compare accumulator $DDD3.w,X [Reads: X Index] [Flags: ZNC]
	pei ($5D.b)		; D4 5D ; Push effective indirect address ($5D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	pei ($5D.b)		; D4 5D ; Push effective indirect address ($5D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	dec $E05D.w		; CE 5D E0 ; Decrement $E05D.w [Flags: ZN]
	eor #$6C.b		; 49 6C ; Exclusive OR #$6C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $48BE.w,Y		; 59 BE 48 ; Exclusive OR accumulator with memory $48BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	stx $08.b		; 86 08 ; Store X register to $08.b [Reads: X Index]
	stx $0C.b,Y		; 96 0C ; Store X register $0C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	stx $0C.b,Y		; 96 0C ; Store X register $0C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	jmp $4873.w		; 4C 73 48 ; Jump to $4873.w [Flow: jump]
	.db $62, $48, $4E		; 62 48 4E ; Push effective relative address $62, $48, $4E [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pei ($5D.b)		; D4 5D ; Push effective indirect address ($5D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	dec $CE5D.w		; CE 5D CE ; Decrement $CE5D.w [Flags: ZN]
	eor $4854.w,X		; 5D 54 48 ; Exclusive OR accumulator with memory $4854.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $4C.b		; A6 4C ; Load $4C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	adc $4D0C.w,X		; 7D 0C 4D ; Add $4D0C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	mvp $7A,$08		; 44 08 7A ; Move block positive $7A,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tsb $084D.w		; 0C 4D 08 ; Test and set bits $084D.w [Reads: Accumulator] [Flags: Z]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	jmp $0CAA.w		; 4C AA 0C ; Jump to $0CAA.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	cmp ($9D.b,X)		; C1 9D ; Compare accumulator ($9D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cmp ($9D.b),Y		; D1 9D ; Compare accumulator ($9D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($1D.b,X)		; C1 1D ; Compare accumulator ($1D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	sbc ($1D.b),Y		; F1 1D ; Subtract with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	inc $E11D.w,X		; FE 1D E1 ; Increment memory $E11D.w,X [Reads: X Index] [Flags: ZN]
	ora $5DE1.w,X		; 1D E1 5D ; OR accumulator with memory $5DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $5DE11D.l		; CF 1D E1 5D ; Compare accumulator (long) $5DE11D.l [Reads: Accumulator] [Flags: ZNC]
	inc $CF1D.w,X		; FE 1D CF ; Increment memory $CF1D.w,X [Reads: X Index] [Flags: ZN]
	eor $1DE1.w,X		; 5D E1 1D ; Exclusive OR accumulator with memory $1DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $5DE1.w,X		; 1D E1 5D ; OR accumulator with memory $5DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $7C1D.w,X		; FE 1D 7C ; Increment memory $7C1D.w,X [Reads: X Index] [Flags: ZN]
	jmp $0C7A.w		; 4C 7A 0C ; Jump to $0C7A.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4C7C.w		; 0C 7C 4C ; Test and set bits $4C7C.w [Reads: Accumulator] [Flags: Z]
	cmp ($9D.b,X)		; C1 9D ; Compare accumulator ($9D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
.INDEX 8
	sep #$1D		; E2 1D
	cmp ($1D.b,X)		; C1 1D ; Compare accumulator ($1D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cmp ($1D.b),Y		; D1 1D ; Compare accumulator ($1D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp $1DFE5D.l		; CF 5D FE 1D ; Compare accumulator (long) $1DFE5D.l [Reads: Accumulator] [Flags: ZNC]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $1DFE1D.l		; CF 1D FE 1D ; Compare accumulator (long) $1DFE1D.l [Reads: Accumulator] [Flags: ZNC]
	inc $CF1D.w,X		; FE 1D CF ; Increment memory $CF1D.w,X [Reads: X Index] [Flags: ZN]
	eor $1DE1.w,X		; 5D E1 1D ; Exclusive OR accumulator with memory $1DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $CF1D.w,X		; FE 1D CF ; Increment memory $CF1D.w,X [Reads: X Index] [Flags: ZN]
	ora $5DF1.w,X		; 1D F1 5D ; OR accumulator with memory $5DF1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($DD.b,X)		; C1 DD ; Compare accumulator ($DD.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
.INDEX 8
	sep #$5D		; E2 5D
	cmp ($5D.b,X)		; C1 5D ; Compare accumulator ($5D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	sbc ($1D.b,S),Y		; F3 1D ; Subtract with carry (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1DE5.w,X		; 1D E5 1D ; OR accumulator with memory $1DE5.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	wai		; CB ; Wait for interrupt
	eor $1DCA.w,X		; 5D CA 1D ; Exclusive OR accumulator with memory $1DCA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	eor $1DCB.w,X		; 5D CB 1D ; Exclusive OR accumulator with memory $1DCB.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	wai		; CB ; Wait for interrupt
	eor $5DC8.w,X		; 5D C8 5D ; Exclusive OR accumulator with memory $5DC8.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($5D.b,S),Y		; F3 5D ; Subtract with carry (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	wai		; CB ; Wait for interrupt
	ora $5DE5.w,X		; 1D E5 5D ; OR accumulator with memory $5DE5.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4C83.w		; 0C 83 4C ; Test and set bits $4C83.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4C93.w		; 0C 93 4C ; Test and set bits $4C93.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	clv		; B8 ; Clear overflow flag [Flags: V]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4CAF.w		; 0C AF 4C ; Test and set bits $4CAF.w [Reads: Accumulator] [Flags: Z]
	lda $4CBE4C.l		; AF 4C BE 4C ; Load long $4CBE4C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $4C.b,X		; 56 4C ; Logical shift right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $AF0C.w,Y		; BE 0C AF ; Load X register $AF0C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	tsb $0C80.w		; 0C 80 0C ; Test and set bits $0C80.w [Reads: Accumulator] [Flags: Z]
	lsr $0C.b,X		; 56 0C ; Logical shift right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	lda $0CAA0C.l		; AF 0C AA 0C ; Load long $0CAA0C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4CA3.w		; 0C A3 4C ; Test and set bits $4CA3.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4CB3.w		; 0C B3 4C ; Test and set bits $4CB3.w [Reads: Accumulator] [Flags: Z]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $4878.w		; 0C 78 48 ; Test and set bits $4878.w [Reads: Accumulator] [Flags: Z]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $CD1D.w		; CD 1D CD ; Compare $CD1D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	eor $1DC9.w,X		; 5D C9 1D ; Exclusive OR accumulator with memory $1DC9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$5D.b		; C9 5D ; Compare #$5D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	sta [$0C.b]		; 87 0C ; Store accumulator (long) [$0C.b] [Reads: Accumulator, Direct Page]
	clv		; B8 ; Clear overflow flag [Flags: V]
	tsb $0897.w		; 0C 97 08 ; Test and set bits $0897.w [Reads: Accumulator] [Flags: Z]
	sta [$0C.b]		; 87 0C ; Store accumulator (long) [$0C.b] [Reads: Accumulator, Direct Page]
	lda $4C464C.l		; AF 4C 46 4C ; Load long $4C464C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $4C.b,X		; 56 4C ; Logical shift right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $46,$48		; 54 48 46 ; Move block negative $46,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tsb $0CAF.w		; 0C AF 0C ; Test and set bits $0CAF.w [Reads: Accumulator] [Flags: Z]
	mvp $56,$08		; 44 08 56 ; Move block positive $56,$08 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tsb $4C82.w		; 0C 82 4C ; Test and set bits $4C82.w [Reads: Accumulator] [Flags: Z]
	.db $42, $48		; 42 48 ; Reserved instruction
	sta ($4C.b)		; 92 4C ; Store accumulator (indirect) ($4C.b) [Reads: Accumulator, Direct Page]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	sta $0C.b		; 85 0C ; Store accumulator to $0C.b [Reads: Accumulator]
	sta $4C.b		; 85 4C ; Store accumulator to $4C.b [Reads: Accumulator]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4CA2.w		; 0C A2 4C ; Test and set bits $4CA2.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4CB2.w		; 0C B2 4C ; Test and set bits $4CB2.w [Reads: Accumulator] [Flags: Z]
	inc $FE9D.w,X		; FE 9D FE ; Increment memory $FE9D.w,X [Reads: X Index] [Flags: ZN]
	sta $DDD3.w,X		; 9D D3 DD ; Store accumulator to $DDD3.w,X [Reads: Accumulator, X Index]
	.db $D0, $9D		; D0 9D ; Branch if not equal to $D0, $9D [Flow: branch]
	inc $FE9D.w,X		; FE 9D FE ; Increment memory $FE9D.w,X [Reads: X Index] [Flags: ZN]
	sta $DDD0.w,X		; 9D D0 DD ; Store accumulator to $DDD0.w,X [Reads: Accumulator, X Index]
	.db $D0, $9D		; D0 9D ; Branch if not equal to $D0, $9D [Flow: branch]
	inc $FE9D.w,X		; FE 9D FE ; Increment memory $FE9D.w,X [Reads: X Index] [Flags: ZN]
	ora $DDD0.w,X		; 1D D0 DD ; OR accumulator with memory $DDD0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($9D.b,S),Y		; D3 9D ; Compare accumulator (stack relative indirect indexed) ($9D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpx #$09.b		; E0 09 ; Compare #$09.b with X register [Reads: X Index] [Flags: ZNC]
	cpx #$49.b		; E0 49 ; Compare #$49.b with X register [Reads: X Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
	pei ($1D.b)		; D4 1D ; Push effective indirect address ($1D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cpx #$09.b		; E0 09 ; Compare #$09.b with X register [Reads: X Index] [Flags: ZNC]
	dec $641D.w		; CE 1D 64 ; Decrement $641D.w [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $0C.b		; 66 0C ; Rotate right $0C.b [Reads: Direct Page] [Flags: ZNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	ror $0C.b,X		; 76 0C ; Rotate right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $9C88.w		; 4E 88 9C ; Logical shift right $9C88.w [Flags: ZNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lsr $6A08.w		; 4E 08 6A ; Logical shift right $6A08.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and ($70.b),Y		; 31 70 ; AND accumulator with memory ($70.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $30.b		; 26 30 ; Rotate left $30.b [Reads: Direct Page] [Flags: ZNC]
	and $30.b		; 25 30 ; Logical AND $30.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	.db $30, $26		; 30 26 ; Branch if minus to $30, $26 [Flow: branch]
	.db $70, $31		; 70 31 ; Branch if overflow set to $70, $31 [Flow: branch]
	.db $30, $0B		; 30 0B ; Branch if minus to $30, $0B [Flow: branch]
	.db $70, $25		; 70 25 ; Branch if overflow set to $70, $25 [Flow: branch]
	.db $70, $13		; 70 13 ; Branch if overflow set to $70, $13 [Flow: branch]
	.db $70, $0A		; 70 0A ; Branch if overflow set to $70, $0A [Flow: branch]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	.db $70, $36		; 70 36 ; Branch if overflow set to $70, $36 [Flow: branch]
	.db $10, $27		; 10 27 ; Branch if plus to $10, $27 [Flow: branch]
	.db $30, $FE		; 30 FE ; Branch if minus to $30, $FE [Flow: branch]
	.db $10, $37		; 10 37 ; Branch if plus to $10, $37 [Flow: branch]
	.db $10, $1B		; 10 1B ; Branch if plus to $10, $1B [Flow: branch]
	.db $10, $FE		; 10 FE ; Branch if plus to $10, $FE [Flow: branch]
	.db $10, $27		; 10 27 ; Branch if plus to $10, $27 [Flow: branch]
	.db $70, $1B		; 70 1B ; Branch if overflow set to $70, $1B [Flow: branch]
	.db $50, $37		; 50 37 ; Branch if overflow clear to $50, $37 [Flow: branch]
	.db $50, $0A		; 50 0A ; Branch if overflow clear to $50, $0A [Flow: branch]
	.db $30, $13		; 30 13 ; Branch if minus to $30, $13 [Flow: branch]
	.db $30, $36		; 30 36 ; Branch if minus to $30, $36 [Flow: branch]
	.db $50, $00		; 50 00 ; Branch if overflow clear to $50, $00 [Flow: branch]
	.db $30, $06		; 30 06 ; Branch if minus to $30, $06 [Flow: branch]
	.db $10, $2B		; 10 2B ; Branch if plus to $10, $2B [Flow: branch]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $2B08.w		; 8D 08 2B ; Store accumulator to $2B08.w [Reads: Accumulator]
	.db $50, $06		; 50 06 ; Branch if overflow clear to $50, $06 [Flow: branch]
	.db $50, $9D		; 50 9D ; Branch if overflow clear to $50, $9D [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sty $AA48.w		; 8C 48 AA ; Store Y register to $AA48.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1988.w,Y		; 19 88 19 ; OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1998.w,Y		; 19 98 19 ; OR accumulator with memory $1998.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1998.w,Y		; 19 98 19 ; OR accumulator with memory $1998.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $14AA.w,Y		; 19 AA 14 ; OR accumulator with memory $14AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5988.w,Y		; 59 88 59 ; Exclusive OR accumulator with memory $5988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	trb $98.b		; 14 98 ; Test and reset bits $98.b [Reads: Accumulator] [Flags: Z]
	eor $1988.w,Y		; 59 88 19 ; Exclusive OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit #$19.b		; 89 19 ; Test bits #$19.b with accumulator [Reads: Accumulator] [Flags: Z]
	tya		; [PATTERN: Memory clearing operation] 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1999.w,Y		; 19 99 19 ; OR accumulator with memory $1999.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b		; 64 08 ; Store zero to $08.b
	ror $08.b		; 66 08 ; Rotate right $08.b [Reads: Direct Page] [Flags: ZNC]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	rol $4010.w		; 2E 10 40 ; Rotate left $4010.w [Flags: ZNC]
	and $41.b,X		; 35 41 ; Logical AND $41.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $40.b,X		; 35 40 ; Logical AND $40.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $41.b,X		; 35 41 ; Logical AND $41.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $73.b,X		; 35 73 ; Logical AND $73.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $41.b,X		; 35 41 ; Logical AND $41.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $73.b,X		; 35 73 ; Logical AND $73.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $41.b,X		; 35 41 ; Logical AND $41.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $12.b,X		; 35 12 ; Logical AND $12.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $03.b,X		; 35 03 ; Logical AND $03.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $12.b,X		; 35 12 ; Logical AND $12.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $03.b,X		; 35 03 ; Logical AND $03.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $03.b,X		; 35 03 ; Logical AND $03.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $12.b,X		; 75 12 ; Add $12.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $12.b,X		; 75 12 ; Add $12.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $41.b,X		; 75 41 ; Add $41.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $73.b,X		; 75 73 ; Add $73.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $41.b,X		; 75 41 ; Add $41.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $73.b,X		; 75 73 ; Add $73.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $41.b,X		; 75 41 ; Add $41.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $40.b,X		; 75 40 ; Add $40.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $41.b,X		; 75 41 ; Add $41.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $40.b,X		; 75 40 ; Add $40.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $64.b,X		; 75 64 ; Add $64.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	.db $10, $74		; 10 74 ; Branch if plus to $10, $74 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $351230.l,X		; 1F 30 12 35 ; Logical OR long $351230.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $35.b,S		; 03 35 ; OR accumulator with stack relative $35.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($35.b)		; 12 35 ; OR accumulator with memory (indirect) ($35.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($35.b,S),Y		; 13 35 ; OR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	and $69.b,X		; 35 69 ; Logical AND $69.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $78.b,X		; 35 78 ; Logical AND $78.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $79.b,X		; 35 79 ; Logical AND $79.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $69.b,X		; 35 69 ; Logical AND $69.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $68.b,X		; 75 68 ; Add $68.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $79.b,X		; 75 79 ; Add $79.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $78.b,X		; 75 78 ; Add $78.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $12.b,X		; 75 12 ; Add $12.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $13.b,X		; 75 13 ; Add $13.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $12.b,X		; 75 12 ; Add $12.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $64.b,X		; 75 64 ; Add $64.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $7410.w		; 1C 10 74 ; Test and reset bits $7410.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $7310.w		; 0C 10 73 ; Test and set bits $7310.w [Reads: Accumulator] [Flags: Z]
	and $41.b,X		; 35 41 ; Logical AND $41.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $36.b,X		; 35 36 ; Logical AND $36.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $30.b,X		; 35 30 ; Logical AND $30.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $22.b,X		; 35 22 ; Logical AND $22.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $23.b,X		; 35 23 ; Logical AND $23.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $32.b,X		; 35 32 ; Logical AND $32.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $33.b,X		; 35 33 ; Logical AND $33.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $24.b,X		; 35 24 ; Logical AND $24.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $25.b,X		; 35 25 ; Logical AND $25.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $34.b,X		; 35 34 ; Logical AND $34.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $35.b,X		; 35 35 ; Logical AND $35.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $25.b,X		; 35 25 ; Logical AND $25.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $24.b,X		; 75 24 ; Add $24.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $35.b,X		; 75 35 ; Add $35.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $34.b,X		; 75 34 ; Add $34.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $23.b,X		; 75 23 ; Add $23.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $22.b,X		; 75 22 ; Add $22.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $33.b,X		; 75 33 ; Add $33.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $32.b,X		; 75 32 ; Add $32.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $41.b,X		; 75 41 ; Add $41.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $73.b,X		; 75 73 ; Add $73.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $30.b,X		; 75 30 ; Add $30.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $36.b,X		; 75 36 ; Add $36.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $62.b,X		; 75 62 ; Add $62.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lda ($10.b,X)		; A1 10 ; Load accumulator ($10.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $355008.l		; 4F 08 50 35 ; Exclusive OR accumulator with memory (long) $355008.l [Writes: Accumulator] [Flags: ZN]
	.db $30, $35		; 30 35 ; Branch if minus to $30, $35 [Flow: branch]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $61.b,X		; 35 61 ; Logical AND $61.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $31.b,X		; 35 31 ; Logical AND $31.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $61.b,X		; 35 61 ; Logical AND $61.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $62.b,X		; 35 62 ; Logical AND $62.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $FE.b,X		; 35 FE ; Logical AND $FE.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $09.b,X		; 34 09 ; Test bits $09.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and $29.b,X		; 35 29 ; Logical AND $29.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $19.b,X		; 35 19 ; Logical AND $19.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $39.b,X		; 35 39 ; Logical AND $39.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $45.b,X		; 35 45 ; Logical AND $45.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $46.b,X		; 35 46 ; Logical AND $46.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $55.b,X		; 35 55 ; Logical AND $55.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $56.b,X		; 35 56 ; Logical AND $56.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $46.b,X		; 35 46 ; Logical AND $46.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $45.b,X		; 75 45 ; Add $45.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $56.b,X		; 75 56 ; Add $56.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $55.b,X		; 75 55 ; Add $55.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $29.b,X		; 75 29 ; Add $29.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $09.b,X		; 75 09 ; Add $09.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $39.b,X		; 75 39 ; Add $39.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $19.b,X		; 75 19 ; Add $19.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $61.b,X		; 75 61 ; Add $61.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $31.b,X		; 75 31 ; Add $31.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $FE.b,X		; 75 FE ; Add $FE.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $62.b,X		; 74 62 ; Store zero to $62.b,X [Reads: X Index]
	adc $30.b,X		; 75 30 ; Add $30.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $50.b,X		; 75 50 ; Add $50.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $61.b,X		; 75 61 ; Add $61.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $60.b,X		; 75 60 ; Add $60.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $9C.b,X		; 75 9C ; Add $9C.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $486A88.l		; 4F 88 6A 48 ; Exclusive OR accumulator with memory (long) $486A88.l [Writes: Accumulator] [Flags: ZN]
	eor $157008.l		; 4F 08 70 15 ; Exclusive OR accumulator with memory (long) $157008.l [Writes: Accumulator] [Flags: ZN]
	adc ($15.b),Y		; 71 15 ; Add with carry ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tsb $15.b		; 04 15 ; Test and set bits $15.b [Reads: Accumulator] [Flags: Z]
	ora $15.b		; 05 15 ; Logical OR $15.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($15.b)		; 72 15 ; Add with carry (indirect) ($15.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($55.b),Y		; 71 55 ; Add with carry ($55.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $05.b,X		; 15 05 ; OR accumulator with memory $05.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $63.b,X		; 55 63 ; Exclusive OR accumulator with memory $63.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $64.b,X		; 15 64 ; OR accumulator with memory $64.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $06.b,X		; 15 06 ; OR accumulator with memory $06.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $06.b,X		; 15 06 ; OR accumulator with memory $06.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($49.b),Y		; 11 49 ; OR accumulator with memory ($49.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($58.b),Y		; 11 58 ; OR accumulator with memory ($58.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($49.b),Y		; 11 49 ; OR accumulator with memory ($49.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($48.b),Y		; 51 48 ; Exclusive OR accumulator with memory ($48.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($58.b),Y		; 51 58 ; Exclusive OR accumulator with memory ($58.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($64.b),Y		; 51 64 ; Exclusive OR accumulator with memory ($64.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $63.b,X		; 55 63 ; Exclusive OR accumulator with memory $63.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $06.b,X		; 55 06 ; Exclusive OR accumulator with memory $06.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $06.b,X		; 15 06 ; OR accumulator with memory $06.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $71.b,X		; 55 71 ; Exclusive OR accumulator with memory $71.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $72.b,X		; 15 72 ; OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $05.b,X		; 55 05 ; Exclusive OR accumulator with memory $05.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $71.b,X		; 55 71 ; Exclusive OR accumulator with memory $71.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $70.b,X		; 55 70 ; Exclusive OR accumulator with memory $70.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $05.b,X		; 55 05 ; Exclusive OR accumulator with memory $05.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $04.b,X		; 55 04 ; Exclusive OR accumulator with memory $04.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $14.b,X		; 55 14 ; Exclusive OR accumulator with memory $14.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $15.b,X		; 15 15 ; OR accumulator with memory $15.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora $15.b,X		; 15 15 ; OR accumulator with memory $15.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $15.b,X		; 16 15 ; Arithmetic shift left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $55.b,X		; 16 55 ; Arithmetic shift left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $15.b		; 26 15 ; Rotate left $15.b [Reads: Direct Page] [Flags: ZNC]
	rol $55.b		; 26 55 ; Rotate left $55.b [Reads: Direct Page] [Flags: ZNC]
	trb $0C15.w		; 1C 15 0C ; Test and reset bits $0C15.w [Reads: Accumulator] [Flags: Z]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1C.b,X		; 55 1C ; Exclusive OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0C.b,X		; 55 0C ; Exclusive OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1C.b,X		; 55 1C ; Exclusive OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $15.b,X		; 55 15 ; Exclusive OR accumulator with memory $15.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7A.b,X		; 15 7A ; OR accumulator with memory $7A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $55.b,X		; 15 55 ; OR accumulator with memory $55.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $55.b		; 14 55 ; Test and reset bits $55.b [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $0E38.w,X		; 3C 38 0E ; Test bits $0E38.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	sec		; 38 ; Set carry flag [Flags: C]
	brk $38.b		; 00 38 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $3E38.w,X		; 3D 38 3E ; AND accumulator with memory $3E38.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora ($38.b,X)		; 01 38 ; Logical OR ($38.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	cop $38.b		; 02 38 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $3D78.w,X		; 3E 78 3D ; Rotate left $3D78.w,X [Reads: X Index] [Flags: ZNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	cop $78.b		; 02 78 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($78.b,X)		; 01 78 ; Logical OR ($78.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	bit $AA78.w,X		; 3C 78 AA ; Test bits $AA78.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $78.b		; 00 78 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl $0F78.w		; 0E 78 0F ; Arithmetic shift left $0F78.w [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	.db $10, $38		; 10 38 ; Branch if plus to $10, $38 [Flow: branch]
	ora $382038.l,X		; 1F 38 20 38 ; Logical OR long $382038.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($38.b),Y		; 11 38 ; OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($38.b)		; 12 38 ; OR accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($38.b,X)		; 21 38 ; Logical AND ($38.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $781238.l		; 22 38 12 78 ; Jump to subroutine long $781238.l [Writes: Stack Pointer] [Flow: call]
	ora ($78.b),Y		; 11 78 ; OR accumulator with memory ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsl $782178.l		; 22 78 21 78 ; Jump to subroutine long $782178.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $78		; 10 78 ; Branch if plus to $10, $78 [Flow: branch]
	ora $782078.l		; 0F 78 20 78 ; OR accumulator with memory (long) $782078.l [Writes: Accumulator] [Flags: ZN]
	ora $15A878.l,X		; 1F 78 A8 15 ; Logical OR long $15A878.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda #$15.b		; A9 15 ; Load #$15.b into accumulator [Writes: Accumulator] [Flags: ZN]
	clv		; B8 ; Clear overflow flag [Flags: V]
	ora $B9.b,X		; 15 B9 ; OR accumulator with memory $B9.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $A9.b,X		; 15 A9 ; OR accumulator with memory $A9.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $A8.b,X		; 55 A8 ; Exclusive OR accumulator with memory $A8.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $B9.b,X		; 55 B9 ; Exclusive OR accumulator with memory $B9.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $B8.b,X		; 55 B8 ; Exclusive OR accumulator with memory $B8.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2F.b,X		; 55 2F ; Exclusive OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	.db $30, $38		; 30 38 ; Branch if minus to $30, $38 [Flow: branch]
	and $380338.l,X		; 3F 38 03 38 ; AND accumulator with memory (long,X) $380338.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($38.b),Y		; 31 38 ; AND accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($38.b)		; 32 38 ; AND accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $38.b		; 04 38 ; Test and set bits $38.b [Reads: Accumulator] [Flags: Z]
	ora $38.b		; 05 38 ; Logical OR $38.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($78.b)		; 32 78 ; AND accumulator with memory (indirect) ($78.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($78.b),Y		; 31 78 ; AND accumulator with memory ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $78.b		; 05 78 ; Logical OR $78.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $78.b		; 04 78 ; Test and set bits $78.b [Reads: Accumulator] [Flags: Z]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	and $780378.l		; 2F 78 03 78 ; AND accumulator with memory (long) $780378.l [Writes: Accumulator] [Flags: ZN]
	and $0D0878.l,X		; 3F 78 08 0D ; AND accumulator with memory (long,X) $0D0878.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $0D18.w		; 4D 18 0D ; Exclusive OR $0D18.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $95B8.w		; 4D B8 95 ; Exclusive OR $95B8.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda $A895.w,Y		; B9 95 A8 ; Load $A895.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $A9.b,X		; 95 A9 ; Store accumulator to $A9.b,X [Reads: Accumulator, X Index]
	sta $B9.b,X		; 95 B9 ; Store accumulator to $B9.b,X [Reads: Accumulator, X Index]
	cmp $B8.b,X		; D5 B8 ; Compare accumulator $B8.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $A9.b,X		; D5 A9 ; Compare accumulator $A9.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $A8.b,X		; D5 A8 ; Compare accumulator $A8.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	.db $10, $08		; 10 08 ; Branch if plus to $10, $08 [Flow: branch]
	sec		; 38 ; Set carry flag [Flags: C]
	asl $1810.w,X		; 1E 10 18 ; Arithmetic shift left $1810.w,X [Reads: X Index] [Flags: ZNC]
	.db $10, $09		; 10 09 ; Branch if plus to $10, $09 [Flow: branch]
	sec		; 38 ; Set carry flag [Flags: C]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $1A10.w,Y		; 19 10 1A ; OR accumulator with memory $1A10.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora #$78.b		; 09 78 ; Logical OR #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $1850.w,X		; 1D 50 18 ; OR accumulator with memory $1850.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1E		; 50 1E ; Branch if overflow clear to $50, $1E [Flow: branch]
	.db $50, $74		; 50 74 ; Branch if overflow clear to $50, $74 [Flow: branch]
	ora $4D74.w		; 0D 74 4D ; Logical OR $4D74.w with accumulator [Writes: Accumulator] [Flags: ZN]
	mvp $44,$0D		; 44 0D 44 ; Move block positive $44,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $48AA.w		; 4D AA 48 ; Exclusive OR $48AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora [$0D.b]		; 07 0D ; OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora [$4D.b]		; 07 4D ; OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	ora $198C.w,Y		; 19 8C 19 ; OR accumulator with memory $198C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $9C19.w		; 8D 19 9C ; Store accumulator to $9C19.w [Reads: Accumulator]
	ora $199D.w,Y		; 19 9D 19 ; OR accumulator with memory $199D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	mvn $54,$0D		; 54 0D 54 ; Move block negative $54,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $0D28.w		; 4D 28 0D ; Exclusive OR $0D28.w with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $0D17.w		; 4D 17 0D ; Exclusive OR $0D17.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora [$4D.b],Y		; 17 4D ; OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	eor $08AA.w,Y		; 59 AA 08 ; Exclusive OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	eor $08AA.w,Y		; 59 AA 08 ; Exclusive OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	jmp $685C28.l		; 5C 28 5C 68 ; Jump long to $685C28.l [Flow: jump]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $B0, $0C		; B0 0C ; Branch if carry set to $B0, $0C [Flow: branch]
	lda ($0C.b),Y		; B1 0C ; Load accumulator ($0C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	xce		; FB ; Exchange carry and emulation bits [Flags: C]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FC.b		; 09 FC ; Logical OR #$FC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0DEC.w		; 0D EC 0D ; Logical OR $0DEC.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $49FB49.l		; EF 49 FB 49 ; Subtract with carry (long) $49FB49.l [Writes: Accumulator] [Flags: ZVNC]
	cpx $FC4D.w		; EC 4D FC ; Compare $FC4D.w with X register [Reads: X Index] [Flags: ZNC]
	eor $8C9C.w		; 4D 9C 8C ; Exclusive OR $8C9C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $4C6A88.l		; 4F 88 6A 4C ; Exclusive OR accumulator with memory (long) $4C6A88.l [Writes: Accumulator] [Flags: ZN]
	eor $4C7B08.l		; 4F 08 7B 4C ; Exclusive OR accumulator with memory (long) $4C7B08.l [Writes: Accumulator] [Flags: ZN]
	eor $5D08.w,X		; 5D 08 5D ; Exclusive OR accumulator with memory $5D08.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,S		; 43 08 ; Exclusive OR accumulator with stack relative $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	brk $1D.b		; 00 1D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor [$1D.b]		; 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $10, $1D		; 10 1D ; Branch if plus to $10, $1D [Flow: branch]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b]		; 47 5D ; Exclusive OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	brk $5D.b		; 00 5D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor [$5D.b],Y		; 57 5D ; Exclusive OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $5D		; 10 5D ; Branch if plus to $10, $5D [Flow: branch]
	jsr $021D.w		; 20 1D 02 ; Jump to subroutine at $021D.w [Writes: Stack Pointer] [Flow: call]
	ora $1D2E.w,X		; 1D 2E 1D ; OR accumulator with memory $1D2E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $5D021D.l		; 2F 1D 02 5D ; AND accumulator with memory (long) $5D021D.l [Writes: Accumulator] [Flags: ZN]
	jsr $2F5D.w		; 20 5D 2F ; Jump to subroutine at $2F5D.w [Writes: Stack Pointer] [Flow: call]
	eor $5D2E.w,X		; 5D 2E 5D ; Exclusive OR accumulator with memory $5D2E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $6E1D.w		; 6D 1D 6E ; Add $6E1D.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora $1D7D.w,X		; 1D 7D 1D ; OR accumulator with memory $1D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $AA1D.w,X		; 7E 1D AA ; Rotate right $AA1D.w,X [Reads: X Index] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora [$0D.b]		; 07 0D ; OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$4D.b]		; 07 4D ; OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$0D.b],Y		; 17 0D ; OR accumulator with memory (long indexed) [$0D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$4D.b],Y		; 17 4D ; OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sty $48.b,X		; 94 48 ; Store Y register $48.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	adc $5C08.w		; 6D 08 5C ; Add $5C08.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $15E748.l		; 5C 48 E7 15 ; Jump long to $15E748.l [Flow: jump]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	ora $F7.b,X		; 15 F7 ; OR accumulator with memory $F7.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $F8.b,X		; 15 F8 ; OR accumulator with memory $F8.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $E8.b,X		; 15 E8 ; OR accumulator with memory $E8.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $E7.b,X		; 55 E7 ; Exclusive OR accumulator with memory $E7.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $F8.b,X		; 55 F8 ; Exclusive OR accumulator with memory $F8.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $F7.b,X		; 55 F7 ; Exclusive OR accumulator with memory $F7.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $E9.b,X		; 55 E9 ; Exclusive OR accumulator with memory $E9.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $EA.b,X		; 15 EA ; OR accumulator with memory $EA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $D0.b,X		; 15 D0 ; OR accumulator with memory $D0.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5DD0.w,X		; 1D D0 5D ; OR accumulator with memory $5DD0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	nop		; EA ; No operation
	eor $E9.b,X		; 55 E9 ; Exclusive OR accumulator with memory $E9.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $D0.b,X		; 55 D0 ; Exclusive OR accumulator with memory $D0.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5DD0.w,X		; 1D D0 5D ; OR accumulator with memory $5DD0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $9408.w		; 6D 08 94 ; Add $9408.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	cmp ($9D.b,S),Y		; D3 9D ; Compare accumulator (stack relative indirect indexed) ($9D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	inc $D41D.w,X		; FE 1D D4 ; Increment memory $D41D.w,X [Reads: X Index] [Flags: ZN]
	ora $9DD0.w,X		; 1D D0 9D ; OR accumulator with memory $9DD0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dec $C01D.w		; CE 1D C0 ; Decrement $C01D.w [Flags: ZN]
	sta $0844.w,X		; 9D 44 08 ; Store accumulator to $0844.w,X [Reads: Accumulator, X Index]
	cpx #$49.b		; E0 49 ; Compare #$49.b with X register [Reads: X Index] [Flags: ZNC]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $48.b		; A6 48 ; Load $48.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	adc $4E08.w,X		; 7D 08 4E ; Add $4E08.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $48.b,X		; B5 48 ; Load $48.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $8E08.w		; 4E 08 8E ; Logical shift right $8E08.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DE1.w,X		; 1D E1 1D ; OR accumulator with memory $1DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $5DCF1D.l		; CF 1D CF 5D ; Compare accumulator (long) $5DCF1D.l [Reads: Accumulator] [Flags: ZNC]
	inc $FE1D.w,X		; FE 1D FE ; Increment memory $FE1D.w,X [Reads: X Index] [Flags: ZN]
	ora $884E.w,X		; 1D 4E 88 ; OR accumulator with memory $884E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stx $4E48.w		; 8E 48 4E ; Store X register to $4E48.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $48.b		; A5 48 ; Load $48.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	inc $D31D.w,X		; FE 1D D3 ; Increment memory $D31D.w,X [Reads: X Index] [Flags: ZN]
	cmp $DDD0.w,X		; DD D0 DD ; Compare accumulator $DDD0.w,X [Reads: X Index] [Flags: ZNC]
	pei ($5D.b)		; D4 5D ; Push effective indirect address ($5D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	jmp $3308.w		; 4C 08 33 ; Jump to $3308.w [Flow: jump]
	.db $30, $38		; 30 38 ; Branch if minus to $30, $38 [Flow: branch]
	.db $10, $00		; 10 00 ; Branch if plus to $10, $00 [Flow: branch]
	.db $30, $34		; 30 34 ; Branch if minus to $30, $34 [Flow: branch]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	.db $30, $01		; 30 01 ; Branch if minus to $30, $01 [Flow: branch]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	.db $70, $34		; 70 34 ; Branch if overflow set to $70, $34 [Flow: branch]
	.db $70, $02		; 70 02 ; Branch if overflow set to $70, $02 [Flow: branch]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $33		; 70 33 ; Branch if overflow set to $70, $33 [Flow: branch]
	.db $50, $4C		; 50 4C ; Branch if overflow clear to $50, $4C [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	brk $70.b		; 00 70 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sec		; 38 ; Set carry flag [Flags: C]
	.db $50, $C0		; 50 C0 ; Branch if overflow clear to $50, $C0 [Flow: branch]
	cmp $5DCE.w,X		; DD CE 5D ; Compare accumulator $5DCE.w,X [Reads: X Index] [Flags: ZNC]
	cpx #$09.b		; E0 09 ; Compare #$09.b with X register [Reads: X Index] [Flags: ZNC]
	mvp $7C,$48		; 44 48 7C ; Move block positive $7C,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	trb $7C.b		; 14 7C ; Test and reset bits $7C.b [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $14AA.w,Y		; 19 AA 14 ; OR accumulator with memory $14AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1988.w,Y		; 19 88 19 ; OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and #$2B.b		; 29 2B ; Logical AND #$2B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$AA.b		; 29 AA ; Logical AND #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $2D29.w		; 2C 29 2D ; Test bits $2D29.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	and #$AA.b		; 29 AA ; Logical AND #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2C69.w		; 2D 69 2C ; Logical AND $2C69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$AA.b		; 69 AA ; Add #$AA.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	adc #$2A.b		; 69 2A ; Add #$2A.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$89.b		; 69 89 ; Add #$89.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora $198A.w,Y		; 19 8A 19 ; OR accumulator with memory $198A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $9A19.w,Y		; 99 19 9A ; Store accumulator to $9A19.w,Y [Reads: Accumulator, Y Index]
	ora $293A.w,Y		; 19 3A 29 ; OR accumulator with memory $293A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and #$6B.b		; 29 6B ; Logical AND #$6B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$3B.b		; 29 3B ; Logical AND #$3B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$3C.b		; 29 3C ; Logical AND #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$3D.b		; 29 3D ; Logical AND #$3D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7B.b		; 29 7B ; Logical AND #$7B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7C.b		; 29 7C ; Logical AND #$7C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$3D.b		; 29 3D ; Logical AND #$3D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$3C.b		; 69 3C ; Add #$3C.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$7C.b		; 69 7C ; Add #$7C.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$7B.b		; 69 7B ; Add #$7B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$3B.b		; 69 3B ; Add #$3B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$3A.b		; 69 3A ; Add #$3A.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$3B.b		; 69 3B ; Add #$3B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$6B.b		; 69 6B ; Add #$6B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$6B.b		; 69 6B ; Add #$6B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$67.b		; 29 67 ; Logical AND #$67.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$6B.b		; 29 6B ; Logical AND #$6B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$77.b		; 29 77 ; Logical AND #$77.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$42.b		; 29 42 ; Logical AND #$42.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$52.b		; 29 52 ; Logical AND #$52.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$0E.b		; 29 0E ; Logical AND #$0E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$42.b		; 69 42 ; Add #$42.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$0E.b		; 69 0E ; Add #$0E.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$52.b		; 69 52 ; Add #$52.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$67.b		; 69 67 ; Add #$67.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$6B.b		; 69 6B ; Add #$6B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$77.b		; 69 77 ; Add #$77.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$6B.b		; 69 6B ; Add #$6B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$0D.b		; 69 0D ; Add #$0D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$66.b		; 29 66 ; Logical AND #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$1D.b		; 29 1D ; Logical AND #$1D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$76.b		; 29 76 ; Logical AND #$76.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$D4.b		; 29 D4 ; Logical AND #$D4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor ($29.b),Y		; 51 29 ; Exclusive OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cpy $28.b		; C4 28 ; Compare $28.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cmp $28.b		; C5 28 ; Compare $28.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	eor ($69.b),Y		; 51 69 ; Exclusive OR accumulator with memory ($69.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pei ($68.b)		; D4 68 ; Push effective indirect address ($68.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cmp $68.b		; C5 68 ; Compare $68.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $68.b		; C4 68 ; Compare $68.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	ror $69.b		; 66 69 ; Rotate right $69.b [Reads: Direct Page] [Flags: ZNC]
	ora $7669.w		; 0D 69 76 ; Logical OR $7669.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$1D.b		; 69 1D ; Add #$1D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$6C.b		; 69 6C ; Add #$6C.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora ($65.b),Y		; 11 65 ; OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$1D.b		; 09 1D ; Logical OR #$1D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $10, $75		; 10 75 ; Branch if plus to $10, $75 [Flow: branch]
	ora ($65.b),Y		; 11 65 ; OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$6C.b		; 49 6C ; Exclusive OR #$6C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($75.b),Y		; 51 75 ; Exclusive OR accumulator with memory ($75.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b),Y		; 51 1D ; Exclusive OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1E		; 50 1E ; Branch if overflow clear to $50, $1E [Flow: branch]
	.db $10, $18		; 10 18 ; Branch if plus to $10, $18 [Flow: branch]
	.db $10, $AA		; 10 AA ; Branch if plus to $10, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $10, $53		; 10 53 ; Branch if plus to $10, $53 [Flow: branch]
	ora ($0B.b),Y		; 11 0B ; OR accumulator with memory ($0B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($29.b),Y		; 11 29 ; OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $1B		; 10 1B ; Branch if plus to $10, $1B [Flow: branch]
	ora ($0B.b),Y		; 11 0B ; OR accumulator with memory ($0B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1B		; 50 1B ; Branch if overflow clear to $50, $1B [Flow: branch]
	eor ($29.b),Y		; 51 29 ; Exclusive OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $1E		; 50 1E ; Branch if overflow clear to $50, $1E [Flow: branch]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1E10.w		; 0D 10 1E ; Logical OR $1E10.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0D51.w,X		; 1E 51 0D ; Arithmetic shift left $0D51.w,X [Reads: X Index] [Flags: ZNC]
	.db $50, $AA		; 50 AA ; Branch if overflow clear to $50, $AA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($7C0C.w)		; 6C 0C 7C ; Jump indirect to ($7C0C.w) [Flow: jump]
	tsb $0C7C.w		; 0C 7C 0C ; Test and set bits $0C7C.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1924.w		; 0C 24 19 ; Test and set bits $1924.w [Reads: Accumulator] [Flags: Z]
	eor [$19.b],Y		; 57 19 ; Exclusive OR accumulator with memory (long indexed) [$19.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $19.b,X		; 34 19 ; Test bits $19.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	adc [$19.b]		; 67 19 ; Add with carry (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$59.b],Y		; 57 59 ; Exclusive OR accumulator with memory (long indexed) [$59.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	adc [$59.b]		; 67 59 ; Add with carry (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $D51C.w		; 0C 1C D5 ; Test and set bits $D51C.w [Reads: Accumulator] [Flags: Z]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $551C.w		; 0C 1C 55 ; Test and set bits $551C.w [Reads: Accumulator] [Flags: Z]
	trb $25D5.w		; 1C D5 25 ; Test and reset bits $25D5.w [Reads: Accumulator] [Flags: Z]
	ora $1977.w,Y		; 19 77 19 ; OR accumulator with memory $1977.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $11.b,X		; 35 11 ; Logical AND $11.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($11.b,S),Y		; 33 11 ; AND accumulator (stack relative indirect indexed) ($11.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$59.b],Y		; 77 59 ; Add with carry (long indexed) [$59.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($51.b,S),Y		; 33 51 ; AND accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $51.b,X		; 35 51 ; Logical AND $51.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $1C0C.w		; ED 0C 1C ; Subtract $1C0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	sta $ED.b,X		; 95 ED ; Store accumulator to $ED.b,X [Reads: Accumulator, X Index]
	tsb $D51C.w		; 0C 1C D5 ; Test and set bits $D51C.w [Reads: Accumulator] [Flags: Z]
	trb $1C15.w		; 1C 15 1C ; Test and reset bits $1C15.w [Reads: Accumulator] [Flags: Z]
	sta $1C.b,X		; 95 1C ; Store accumulator to $1C.b,X [Reads: Accumulator, X Index]
	eor $1C.b,X		; 55 1C ; Exclusive OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $1C.b,X		; D5 1C ; Compare accumulator $1C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $60.b,X		; 95 60 ; Store accumulator to $60.b,X [Reads: Accumulator, X Index]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $61.b,X		; 95 61 ; Store accumulator to $61.b,X [Reads: Accumulator, X Index]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $61.b,X		; 95 61 ; Store accumulator to $61.b,X [Reads: Accumulator, X Index]
	ora $60.b,X		; 15 60 ; OR accumulator with memory $60.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1C.b,X		; 55 1C ; Exclusive OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $ED.b,X		; 15 ED ; OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $551C.w		; 0C 1C 55 ; Test and set bits $551C.w [Reads: Accumulator] [Flags: Z]
	sbc $700C.w		; ED 0C 70 ; Subtract $700C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $71.b,X		; 15 71 ; OR accumulator with memory $71.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $00.b,X		; 15 00 ; OR accumulator with memory $00.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D01.w		; 0D 01 0D ; Logical OR $0D01.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($15.b),Y		; 71 15 ; Add with carry ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($15.b),Y		; 71 15 ; Add with carry ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($0D.b,X)		; 01 0D ; Logical OR ($0D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($0D.b,X)		; 01 0D ; Logical OR ($0D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	adc ($15.b),Y		; 71 15 ; Add with carry ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $55		; 70 55 ; Branch if overflow set to $70, $55 [Flow: branch]
	ora ($0D.b,X)		; 01 0D ; Logical OR ($0D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $4D.b		; 00 4D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $3E15.w,X		; 3E 15 3E ; Rotate left $3E15.w,X [Reads: X Index] [Flags: ZNC]
	sta $3E.b,X		; 95 3E ; Store accumulator to $3E.b,X [Reads: Accumulator, X Index]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $43.b,X		; D5 43 ; Compare accumulator $43.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $2D73.w		; 2D 73 2D ; Logical AND $2D73.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,S),Y		; 53 2D ; XOR accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($6D.b,S),Y		; 73 6D ; Add with carry (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($2D.b,S),Y		; 73 2D ; Add with carry (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($AD.b)		; 52 AD ; Exclusive OR accumulator with memory (indirect) ($AD.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	.db $50, $29		; 50 29 ; Branch if overflow clear to $50, $29 [Flow: branch]
	.db $50, $89		; 50 89 ; Branch if overflow clear to $50, $89 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	.db $10, $5C		; 10 5C ; Branch if plus to $10, $5C [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $102948.l		; 5C 48 29 10 ; Jump long to $102948.l [Flow: jump]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	.db $10, $88		; 10 88 ; Branch if plus to $10, $88 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit #$08.b		; 89 08 ; Test bits #$08.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $50, $6D		; 50 6D ; Branch if overflow clear to $50, $6D [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	eor ($2D.b,S),Y		; 53 2D ; XOR accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b)		; 52 6D ; Exclusive OR accumulator with memory (indirect) ($6D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,S),Y		; 53 2D ; XOR accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($ED.b)		; 52 ED ; Exclusive OR accumulator with memory (indirect) ($ED.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b)		; 52 6D ; Exclusive OR accumulator with memory (indirect) ($6D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($AD.b)		; 52 AD ; Exclusive OR accumulator with memory (indirect) ($AD.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,S),Y		; 53 2D ; XOR accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b)		; 52 6D ; Exclusive OR accumulator with memory (indirect) ($6D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $2D, $63		; 62 2D 63 ; Push effective relative address $62, $2D, $63 [Writes: Stack Pointer]
	and $ED52.w		; 2D 52 ED ; Logical AND $ED52.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b)		; 52 6D ; Exclusive OR accumulator with memory (indirect) ($6D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $6D.b,S		; 63 6D ; Add with carry (stack relative) $6D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc $2D.b,S		; 63 2D ; Add with carry (stack relative) $2D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	asl $50.b,X		; 16 50 ; Arithmetic shift left $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $10.b,X		; 16 10 ; Arithmetic shift left $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	brk $70.b		; 00 70 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $30.b		; 00 30 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	bit $10.b,X		; 34 10 ; Test bits $10.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	rol $0130.w,X		; 3E 30 01 ; Rotate left $0130.w,X [Reads: X Index] [Flags: ZNC]
	.db $30, $02		; 30 02 ; Branch if minus to $30, $02 [Flow: branch]
	.db $30, $16		; 30 16 ; Branch if minus to $30, $16 [Flow: branch]
	.db $50, $61		; 50 61 ; Branch if overflow clear to $50, $61 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $70.b		; 00 70 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $9550.w		; 2E 50 95 ; Rotate left $9550.w [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sta $68.b,X		; 95 68 ; Store accumulator to $68.b,X [Reads: Accumulator, X Index]
	jmp $685C28.l		; 5C 28 5C 68 ; Jump long to $685C28.l [Flow: jump]
	ora $0D.b,S		; 03 0D ; OR accumulator with stack relative $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tsb $0D.b		; 04 0D ; Test and set bits $0D.b [Reads: Accumulator] [Flags: Z]
	ora ($0D.b,S),Y		; 13 0D ; OR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $0D.b		; 14 0D ; Test and reset bits $0D.b [Reads: Accumulator] [Flags: Z]
	tsb $4D.b		; 04 4D ; Test and set bits $4D.b [Reads: Accumulator] [Flags: Z]
	ora $4D.b,S		; 03 4D ; OR accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	trb $4D.b		; 14 4D ; Test and reset bits $4D.b [Reads: Accumulator] [Flags: Z]
	ora ($4D.b,S),Y		; 13 4D ; OR accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $0D09.w		; 0D 09 0D ; Logical OR $0D09.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $0DEE.w		; 0D EE 0D ; Logical OR $0DEE.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$4D.b		; 09 4D ; Logical OR #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $0DEE.w		; 4D EE 0D ; Exclusive OR $0DEE.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $0D18.w		; 4D 18 0D ; Exclusive OR $0D18.w with accumulator [Writes: Accumulator] [Flags: ZN]
	inc $280D.w		; EE 0D 28 ; Increment $280D.w [Flags: ZN]
	ora $0D19.w		; 0D 19 0D ; Logical OR $0D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	inc $180D.w		; EE 0D 18 ; Increment $180D.w [Flags: ZN]
	eor $4D19.w		; 4D 19 4D ; Exclusive OR $4D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $1560.w		; 4D 60 15 ; Exclusive OR $1560.w with accumulator [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $76.b,X		; 55 76 ; Exclusive OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $ED.b,X		; 55 ED ; Exclusive OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	sbc $0C0C.w		; ED 0C 0C ; Subtract $0C0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $ED.b,X		; 15 ED ; OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	tsb $0C15.w		; 0C 15 0C ; Test and set bits $0C15.w [Reads: Accumulator] [Flags: Z]
	ora $70.b,X		; 15 70 ; OR accumulator with memory $70.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $70.b,X		; 15 70 ; OR accumulator with memory $70.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $00.b,X		; 55 00 ; Exclusive OR accumulator with memory $00.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D00.w		; 0D 00 4D ; Logical OR $4D00.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0C0C.w		; ED 0C 0C ; Subtract $0C0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $ED.b,X		; 15 ED ; OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $150C.w		; 0C 0C 15 ; Test and set bits $150C.w [Reads: Accumulator] [Flags: Z]
	tsb $0C15.w		; 0C 15 0C ; Test and set bits $0C15.w [Reads: Accumulator] [Flags: Z]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $60.b,X		; 15 60 ; OR accumulator with memory $60.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $60.b,X		; 15 60 ; OR accumulator with memory $60.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $10.b,X		; 55 10 ; Exclusive OR accumulator with memory $10.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D0B.w		; 0D 0B 0D ; Logical OR $0D0B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $10, $0D		; 10 0D ; Branch if plus to $10, $0D [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $0D0B.w		; 0D 0B 0D ; Logical OR $0D0B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $0D0B.w		; 0D 0B 0D ; Logical OR $0D0B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $0D0B.w		; 0D 0B 0D ; Logical OR $0D0B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $10, $4D		; 10 4D ; Branch if plus to $10, $4D [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $4D10.w		; 0D 10 4D ; Logical OR $4D10.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $ED15.w		; 0C 15 ED ; Test and set bits $ED15.w [Reads: Accumulator] [Flags: Z]
	tsb $150C.w		; 0C 0C 15 ; Test and set bits $150C.w [Reads: Accumulator] [Flags: Z]
	sbc $760C.w		; ED 0C 76 ; Subtract $760C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $72.b,X		; 15 72 ; OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $76.b,X		; 95 76 ; Store accumulator to $76.b,X [Reads: Accumulator, X Index]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $72.b,X		; 55 72 ; Exclusive OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $76.b,X		; D5 76 ; Compare accumulator $76.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $76.b,X		; 55 76 ; Exclusive OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $76.b,X		; 55 76 ; Exclusive OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $76.b,X		; 55 76 ; Exclusive OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $CD.b,X		; 55 CD ; Exclusive OR accumulator with memory $CD.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	dec $C028.w		; CE 28 C0 ; Decrement $C028.w [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $28DD28.l		; CF 28 DD 28 ; Compare accumulator (long) $28DD28.l [Reads: Accumulator] [Flags: ZNC]
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
	cmp $DD28.w,X		; DD 28 DD ; Compare accumulator $DD28.w,X [Reads: X Index] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
	cmp $CF28.w,X		; DD 28 CF ; Compare accumulator $CF28.w,X [Reads: X Index] [Flags: ZNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
	cmp ($68.b,S),Y		; D3 68 ; Compare accumulator (stack relative indirect indexed) ($68.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $CD68.w		; CE 68 CD ; Decrement $CD68.w [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$28.b		; C0 28 ; Compare #$28.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$28.b		; C0 28 ; Compare #$28.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
	sep #$28		; E2 28
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
	cmp ($68.b,S),Y		; D3 68 ; Compare accumulator (stack relative indirect indexed) ($68.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
	cmp ($68.b,S),Y		; D3 68 ; Compare accumulator (stack relative indirect indexed) ($68.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	lda $AA14.w,X		; BD 14 AA ; Load $AA14.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA14.w		; AE 14 AA ; Load $AA14.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cpy #$28.b		; C0 28 ; Compare #$28.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($28.b,X)		; C1 28 ; Compare accumulator ($28.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	.db $D0, $28		; D0 28 ; Branch if not equal to $D0, $28 [Flow: branch]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
.ACCU 16
	rep #$28		; C2 28
	cmp $28.b,S		; C3 28 ; Compare accumulator (stack relative) $28.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $28.b,S		; C3 28 ; Compare accumulator (stack relative) $28.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp $28.b,S		; C3 28 ; Compare accumulator (stack relative) $28.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $28.b,S		; C3 28 ; Compare accumulator (stack relative) $28.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
.ACCU 16
	rep #$68		; C2 68
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($68.b,X)		; C1 68 ; Compare accumulator ($68.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($68.b),Y		; D1 68 ; Compare accumulator ($68.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	.db $D0, $68		; D0 68 ; Branch if not equal to $D0, $68 [Flow: branch]
	trb $1C15.w		; 1C 15 1C ; Test and reset bits $1C15.w [Reads: Accumulator] [Flags: Z]
	sta $1C.b,X		; 95 1C ; Store accumulator to $1C.b,X [Reads: Accumulator, X Index]
	eor $7B.b,X		; 55 7B ; Exclusive OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora #$151C.w		; 09 1C 15 ; Logical OR #$151C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $7C95.w		; 1C 95 7C ; Test and reset bits $7C95.w [Reads: Accumulator] [Flags: Z]
	ora #$097C.w		; 09 7C 09 ; Logical OR #$097C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $1C15.w		; 1C 15 1C ; Test and reset bits $1C15.w [Reads: Accumulator] [Flags: Z]
	sta $7C.b,X		; 95 7C ; Store accumulator to $7C.b,X [Reads: Accumulator, X Index]
	ora #$497B.w		; 09 7B 49 ; Logical OR #$497B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cpx #$28.b		; E0 28 ; Compare #$28.b with X register [Reads: X Index] [Flags: ZNC]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $F0, $28		; F0 28 ; Branch if equal to $F0, $28 [Flow: branch]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pei ($28.b)		; D4 28 ; Push effective indirect address ($28.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cmp $28.b,X		; D5 28 ; Compare accumulator $28.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cpy $28.b		; C4 28 ; Compare $28.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cmp $28.b		; C5 28 ; Compare $28.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $68.b,X		; D5 68 ; Compare accumulator $68.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pei ($68.b)		; D4 68 ; Push effective indirect address ($68.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cmp $68.b		; C5 68 ; Compare $68.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $68.b		; C4 68 ; Compare $68.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	sbc ($68.b,X)		; E1 68 ; Subtract with carry ($68.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cpx #$68.b		; E0 68 ; Compare #$68.b with X register [Reads: X Index] [Flags: ZNC]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $F0, $68		; F0 68 ; Branch if equal to $F0, $68 [Flow: branch]
	trb $7D15.w		; 1C 15 7D ; Test and reset bits $7D15.w [Reads: Accumulator] [Flags: Z]
	ora #$551C.w		; 09 1C 55 ; Logical OR #$551C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $6A09.w,X		; 7D 09 6A ; Add $6A09.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora #$496A.w		; 09 6A 49 ; Logical OR #$496A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora #$497A.w		; 09 7A 49 ; Logical OR #$497A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $097F09.l,X		; 7F 09 7F 09 ; Add long $097F09.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $097F09.l,X		; 7F 09 7F 09 ; Add long $097F09.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $497D09.l,X		; 7F 09 7D 49 ; Add long $497D09.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $497D09.l,X		; 7F 09 7D 49 ; Add long $497D09.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($09.b)		; 12 09 ; OR accumulator with memory (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($49.b)		; 12 49 ; OR accumulator with memory (indirect) ($49.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $492209.l		; 22 09 22 49 ; Jump to subroutine long $492209.l [Writes: Stack Pointer] [Flow: call]
	sbc $0CFD08.l		; EF 08 FD 0C ; Subtract with carry (long) $0CFD08.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $FD0C.w,X		; FD 0C FD ; Subtract with carry $FD0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $4CFD.w		; 4C FD 4C ; Jump to $4CFD.w [Flow: jump]
	sbc $0CFD48.l		; EF 48 FD 0C ; Subtract with carry (long) $0CFD48.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $1C4C.w,X		; FD 4C 1C ; Subtract with carry $1C4C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit #$551C.w		; 89 1C 55 ; Test bits #$551C.w with accumulator [Reads: Accumulator] [Flags: Z]
	trb $7CD5.w		; 1C D5 7C ; Test and reset bits $7CD5.w [Reads: Accumulator] [Flags: Z]
	bit #$897C.w		; 89 7C 89 ; Test bits #$897C.w with accumulator [Reads: Accumulator] [Flags: Z]
	trb $1C55.w		; 1C 55 1C ; Test and reset bits $1C55.w [Reads: Accumulator] [Flags: Z]
	cmp $7C.b,X		; D5 7C ; Compare accumulator $7C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	bit #$C97B.w		; 89 7B C9 ; Test bits #$C97B.w with accumulator [Reads: Accumulator] [Flags: Z]
	trb $1C55.w		; 1C 55 1C ; Test and reset bits $1C55.w [Reads: Accumulator] [Flags: Z]
	cmp $AA.b,X		; D5 AA ; Compare accumulator $AA.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $290D.w		; 0C 0D 29 ; Test and set bits $290D.w [Reads: Accumulator] [Flags: Z]
	sbc $1D0C.w		; ED 0C 1D ; Subtract $1D0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	and #$1132.w		; 29 32 11 ; Logical AND #$1132.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($51.b)		; 32 51 ; AND accumulator with memory (indirect) ($51.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $292D.w		; 0C 2D 29 ; Test and set bits $292D.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	mvp $76,$0D		; 44 0D 76 ; Move block positive $76,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $76.b,X		; 55 76 ; Exclusive OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $72.b,X		; 15 72 ; OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($15.b,X)		; 61 15 ; Add with carry ($15.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $3A.b,X		; 55 3A ; Exclusive OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora #$493A.w		; 09 3A 49 ; Logical OR #$493A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$493B.w		; 09 3B 49 ; Logical OR #$493B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $540C.w		; ED 0C 54 ; Subtract $540C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $0CED.w		; 0D ED 0C ; Logical OR $0CED.w with accumulator [Writes: Accumulator] [Flags: ZN]
	stz $0D.b		; 64 0D ; Store zero to $0D.b
	asl $11.b		; 06 11 ; Arithmetic shift left $11.b [Reads: Direct Page] [Flags: ZNC]
	ora [$11.b]		; 07 11 ; OR accumulator with memory (long) [$11.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($07.b),Y		; 11 07 ; OR accumulator with memory ($07.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($06.b),Y		; 51 06 ; Exclusive OR accumulator with memory ($06.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($38.b),Y		; 51 38 ; Exclusive OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0D.b,X		; 16 0D ; Arithmetic shift left $0D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sbc $AA0C.w		; ED 0C AA ; Subtract $AA0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AA0C.w		; ED 0C AA ; Subtract $AA0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $1C15.w		; 1C 15 1C ; Test and reset bits $1C15.w [Reads: Accumulator] [Flags: Z]
	sta $ED.b,X		; 95 ED ; Store accumulator to $ED.b,X [Reads: Accumulator, X Index]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($15.b,X)		; 61 15 ; Add with carry ($15.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($15.b,X)		; 61 15 ; Add with carry ($15.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc $AA0C.w		; ED 0C AA ; Subtract $AA0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $ED55.w		; 1C 55 ED ; Test and reset bits $ED55.w [Reads: Accumulator] [Flags: Z]
	tsb $1124.w		; 0C 24 11 ; Test and set bits $1124.w [Reads: Accumulator] [Flags: Z]
	eor [$11.b],Y		; 57 11 ; Exclusive OR accumulator with memory (long indexed) [$11.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $11.b,X		; 34 11 ; Test bits $11.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	adc [$11.b]		; 67 11 ; Add with carry (long) [$11.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$51.b],Y		; 57 51 ; Exclusive OR accumulator with memory (long indexed) [$51.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $51.b		; 24 51 ; Test bits $51.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	adc [$51.b]		; 67 51 ; Add with carry (long) [$51.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	bit $51.b,X		; 34 51 ; Test bits $51.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and $11.b		; 25 11 ; Logical AND $11.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc [$11.b],Y		; 77 11 ; Add with carry (long indexed) [$11.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $11.b,X		; 35 11 ; Logical AND $11.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($11.b,S),Y		; 33 11 ; AND accumulator (stack relative indirect indexed) ($11.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$51.b],Y		; 77 51 ; Add with carry (long indexed) [$51.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $51.b		; 25 51 ; Logical AND $51.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($51.b,S),Y		; 33 51 ; AND accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $51.b,X		; 35 51 ; Logical AND $51.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($6D.b,S),Y		; 73 6D ; Add with carry (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $6D.b,S		; 43 6D ; Exclusive OR accumulator with stack relative $6D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($AD.b)		; 52 AD ; Exclusive OR accumulator with memory (indirect) ($AD.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b,S),Y		; 53 6D ; XOR accumulator (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $2808.w		; 6D 08 28 ; Add $2808.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	.db $10, $5C		; 10 5C ; Branch if plus to $10, $5C [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $ED5248.l		; 5C 48 52 ED ; Jump long to $ED5248.l [Flow: jump]
	eor ($6D.b,S),Y		; 53 6D ; XOR accumulator (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AD.b)		; 52 AD ; Exclusive OR accumulator with memory (indirect) ($AD.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b,S),Y		; 53 6D ; XOR accumulator (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($ED.b)		; 52 ED ; Exclusive OR accumulator with memory (indirect) ($ED.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b,S),Y		; 53 6D ; XOR accumulator (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $6D.b,S		; 63 6D ; Add with carry (stack relative) $6D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $6D, $ED		; 62 6D ED ; Push effective relative address $62, $6D, $ED [Writes: Stack Pointer]
	tsb $951C.w		; 0C 1C 95 ; Test and set bits $951C.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $030C.w		; ED 0C 03 ; Subtract $030C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $0CFE.w		; 0D FE 0C ; Logical OR $0CFE.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b,S),Y		; 13 0D ; OR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $0CFE.w		; 0D FE 0C ; Logical OR $0CFE.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,S		; 03 4D ; OR accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D13.w		; 4D 13 4D ; Exclusive OR $4D13.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp [$08.b]		; C7 08 ; Compare accumulator (long) [$08.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cmp [$08.b],Y		; D7 08 ; Compare accumulator (long indexed) [$08.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	asl $0F29.w		; 0E 29 0F ; Arithmetic shift left $0F29.w [Flags: ZNC]
	and #$291E.w		; 29 1E 29 ; Logical AND #$291E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $35DE29.l,X		; 1F 29 DE 35 ; Logical OR long $35DE29.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $DE0C.w		; ED 0C DE ; Subtract $DE0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	lda $ED.b,X		; B5 ED ; Load $ED.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $08AA.w		; 0C AA 08 ; Test and set bits $08AA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AA0C.w		; ED 0C AA ; Subtract $AA0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $2F29.w		; 2E 29 2F ; Rotate left $2F29.w [Flags: ZNC]
	and #$0D48.w		; 29 48 0D ; Logical AND #$0D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $440C.w		; ED 0C 44 ; Subtract $440C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$490D.w		; 49 0D 49 ; Exclusive OR #$490D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $0D4A.w		; 4D 4A 0D ; Exclusive OR $0D4A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $4D54.w		; 4D 54 4D ; Exclusive OR $4D54.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $640C.w		; ED 0C 64 ; Subtract $640C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	eor $0CED.w		; 4D ED 0C ; Exclusive OR $0CED.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $093F09.l		; 6F 09 3F 09 ; Add with carry (long) $093F09.l [Writes: Accumulator] [Flags: ZVNC]
	adc $893F89.l		; 6F 89 3F 89 ; Add with carry (long) $893F89.l [Writes: Accumulator] [Flags: ZVNC]
	ora [$0D.b],Y		; 17 0D ; OR accumulator with memory (long indexed) [$0D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$4D.b],Y		; 17 4D ; OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $4D16.w		; 0C 16 4D ; Test and set bits $4D16.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $3C0C.w		; ED 0C 3C ; Subtract $3C0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora #$093D.w		; 09 3D 09 ; Logical OR #$093D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $3CC9.w,X		; 3D C9 3C ; AND accumulator with memory $3CC9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$0CED.w		; C9 ED 0C ; Compare #$0CED.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $72.b,X		; 55 72 ; Exclusive OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $76.b,X		; 55 76 ; Exclusive OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $08.b,X		; 55 08 ; Exclusive OR accumulator with memory $08.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $B8		; 50 B8 ; Branch if overflow clear to $50, $B8 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $50, $94		; 50 94 ; Branch if overflow clear to $50, $94 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	lsr $3C88.w		; 4E 88 3C ; Logical shift right $3C88.w [Flags: ZNC]
	.db $30, $3B		; 30 3B ; Branch if minus to $30, $3B [Flow: branch]
	.db $10, $00		; 10 00 ; Branch if plus to $10, $00 [Flow: branch]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	.db $70, $4F		; 70 4F ; Branch if overflow set to $70, $4F [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	brk $70.b		; 00 70 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $50, $3A		; 50 3A ; Branch if overflow clear to $50, $3A [Flow: branch]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $30, $1F		; 30 1F ; Branch if minus to $30, $1F [Flow: branch]
	.db $30, $20		; 30 20 ; Branch if minus to $30, $20 [Flow: branch]
	.db $30, $10		; 30 10 ; Branch if minus to $30, $10 [Flow: branch]
	.db $70, $3A		; 70 3A ; Branch if overflow set to $70, $3A [Flow: branch]
	.db $50, $20		; 50 20 ; Branch if overflow clear to $50, $20 [Flow: branch]
	.db $70, $1F		; 70 1F ; Branch if overflow set to $70, $1F [Flow: branch]
	.db $70, $1C		; 70 1C ; Branch if overflow set to $70, $1C [Flow: branch]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	.db $10, $03		; 10 03 ; Branch if plus to $10, $03 [Flow: branch]
	.db $30, $30		; 30 30 ; Branch if minus to $30, $30 [Flow: branch]
	.db $70, $1C		; 70 1C ; Branch if overflow set to $70, $1C [Flow: branch]
	.db $50, $03		; 50 03 ; Branch if overflow clear to $50, $03 [Flow: branch]
	.db $70, $2C		; 70 2C ; Branch if overflow set to $70, $2C [Flow: branch]
	.db $50, $39		; 50 39 ; Branch if overflow clear to $50, $39 [Flow: branch]
	.db $10, $08		; 10 08 ; Branch if plus to $10, $08 [Flow: branch]
	.db $30, $4E		; 30 4E ; Branch if minus to $30, $4E [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clc		; 18 ; Clear carry flag [Flags: C]
	.db $10, $08		; 10 08 ; Branch if plus to $10, $08 [Flow: branch]
	.db $70, $39		; 70 39 ; Branch if overflow set to $70, $39 [Flow: branch]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $4F		; 50 4F ; Branch if overflow clear to $50, $4F [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($1D.b),Y		; 11 1D ; OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,S		; 63 1D ; Add with carry (stack relative) $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora ($1D.b),Y		; 11 1D ; OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	adc $1D.b,S		; 63 1D ; Add with carry (stack relative) $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	jsr $711D.w		; 20 1D 71 ; Jump to subroutine at $711D.w [Writes: Stack Pointer] [Flow: call]
	ora $1D34.w,X		; 1D 34 1D ; OR accumulator with memory $1D34.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1D42.w,X		; 1D 42 1D ; OR accumulator with memory $1D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	and $1D421D.l		; 2F 1D 42 1D ; AND accumulator with memory (long) $1D421D.l [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,S),Y		; 73 1D ; Add with carry (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	brk $1D.b		; 00 1D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $10, $1D		; 10 1D ; Branch if plus to $10, $1D [Flow: branch]
	adc $1D621D.l		; 6F 1D 62 1D ; Add with carry (long) $1D621D.l [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $5D, $62		; 62 5D 62 ; Push effective relative address $62, $5D, $62 [Writes: Stack Pointer]
	ora $1D71.w,X		; 1D 71 1D ; OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $5D, $3A		; 62 5D 3A ; Push effective relative address $62, $5D, $3A [Writes: Stack Pointer]
	ora $1D7B.w,X		; 1D 7B 1D ; OR accumulator with memory $1D7B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	mvn $56,$1D		; 54 1D 56 ; Move block negative $56,$1D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	and $3D56.w,X		; 3D 56 3D ; AND accumulator with memory $3D56.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D49.w,X		; 1D 49 1D ; OR accumulator with memory $1D49.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $7D.b,X		; 56 7D ; Logical shift right $7D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $7D.b,X		; 56 7D ; Logical shift right $7D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor #$485D.w		; 49 5D 48 ; Exclusive OR #$485D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $5D3A.w,X		; 5D 3A 5D ; Exclusive OR accumulator with memory $5D3A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $1D, $54		; 62 1D 54 ; Push effective relative address $62, $1D, $54 [Writes: Stack Pointer]
	eor $5D7B.w,X		; 5D 7B 5D ; Exclusive OR accumulator with memory $5D7B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $5D, $61		; 62 5D 61 ; Push effective relative address $62, $5D, $61 [Writes: Stack Pointer]
	ora $1D71.w,X		; 1D 71 1D ; OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D751D.l,X		; 7F 1D 75 1D ; Add long $1D751D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $7D, $62		; 62 7D 62 ; Push effective relative address $62, $7D, $62 [Writes: Stack Pointer]
	and $3D71.w,X		; 3D 71 3D ; AND accumulator with memory $3D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($3D.b),Y		; 71 3D ; Add with carry ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	jsr $421D.w		; 20 1D 42 ; Jump to subroutine at $421D.w [Writes: Stack Pointer] [Flow: call]
	ora $1D34.w,X		; 1D 34 1D ; OR accumulator with memory $1D34.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D60.w,X		; 1D 60 1D ; OR accumulator with memory $1D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$1D.b],Y		; 17 1D ; OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1D27.w,X		; 5D 27 1D ; Exclusive OR accumulator with memory $1D27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $1D69.w,X		; 1D 69 1D ; OR accumulator with memory $1D69.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	ora $1D59.w,X		; 1D 59 1D ; OR accumulator with memory $1D59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc #$685D.w		; 69 5D 68 ; Add #$685D.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $5D59.w,X		; 5D 59 5D ; Exclusive OR accumulator with memory $5D59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	eor $5D17.w,X		; 5D 17 5D ; Exclusive OR accumulator with memory $5D17.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5D27.w,X		; 5D 27 5D ; Exclusive OR accumulator with memory $5D27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D71.w,X		; 1D 71 1D ; OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1D31.w,X		; 5D 31 1D ; Exclusive OR accumulator with memory $1D31.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D651D.l,X		; 5F 1D 65 1D ; Exclusive OR accumulator with memory (long,X) $1D651D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b,S),Y		; 33 1D ; AND accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,S		; 63 1D ; Add with carry (stack relative) $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc ($3D.b),Y		; 71 3D ; Add with carry ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($3D.b),Y		; 71 3D ; Add with carry ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($3D.b),Y		; 31 3D ; AND accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($3D.b),Y		; 31 3D ; AND accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1989.w,Y		; 19 89 19 ; OR accumulator with memory $1989.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	ora $1999.w,Y		; 19 99 19 ; OR accumulator with memory $1999.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $0F19.w		; 2D 19 0F ; Logical AND $0F19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $192D.w,Y		; 19 2D 19 ; OR accumulator with memory $192D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $190F.w,X		; 1D 0F 19 ; OR accumulator with memory $190F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $5D18.w,X		; 1D 18 5D ; OR accumulator with memory $5D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D2819.l		; 0F 19 28 5D ; OR accumulator with memory (long) $5D2819.l [Writes: Accumulator] [Flags: ZN]
	ora $1D1219.l		; 0F 19 12 1D ; OR accumulator with memory (long) $1D1219.l [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1D12.w,X		; 1D 12 1D ; OR accumulator with memory $1D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	and $1D521D.l		; 2F 1D 52 1D ; AND accumulator with memory (long) $1D521D.l [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $1D.b		; 66 1D ; Rotate right $1D.b [Reads: Direct Page] [Flags: ZNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	and ($1D.b,X)		; 21 1D ; Logical AND ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($5D.b,X)		; 21 5D ; Logical AND ($5D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	ror $5D.b		; 66 5D ; Rotate right $5D.b [Reads: Direct Page] [Flags: ZNC]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	brk $1D.b		; 00 1D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc $1D101D.l		; 6F 1D 10 1D ; Add with carry (long) $1D101D.l [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $71		; 62 1D 71 ; Push effective relative address $62, $1D, $71 [Writes: Stack Pointer]
	ora $1D71.w,X		; 1D 71 1D ; OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $5D, $2C		; 62 5D 2C ; Push effective relative address $62, $5D, $2C [Writes: Stack Pointer]
	ora $1D71.w,X		; 1D 71 1D ; OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $301D.w,Y		; 79 1D 30 ; Add $301D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $5D30.w,X		; 1D 30 5D ; OR accumulator with memory $5D30.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$5D.b]		; 07 5D ; OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $625D.w		; 2C 5D 62 ; Test bits $625D.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	ora $5D79.w,X		; 1D 79 5D ; OR accumulator with memory $5D79.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	jsr $711D.w		; 20 1D 71 ; Jump to subroutine at $711D.w [Writes: Stack Pointer] [Flow: call]
	ora $1D7A.w,X		; 1D 7A 1D ; OR accumulator with memory $1D7A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$771D.w		; 09 1D 77 ; Logical OR #$771D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5D77.w,X		; 1D 77 5D ; OR accumulator with memory $5D77.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b,S),Y		; 53 1D ; XOR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b,S),Y		; 53 5D ; XOR accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ror $5D.b,X		; 76 5D ; Rotate right $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora #$315D.w		; 09 5D 31 ; Logical OR #$315D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $190F.w,X		; 1D 0F 19 ; OR accumulator with memory $190F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0F1D.w,Y		; 19 1D 0F ; OR accumulator with memory $0F1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D28.w,Y		; 19 28 1D ; OR accumulator with memory $1D28.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $1D.b,S		; 23 1D ; AND accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $5D.b,S		; 23 5D ; AND accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and #$291D.w		; 29 1D 29 ; Logical AND #$291D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $5D19.w,X		; 5D 19 5D ; Exclusive OR accumulator with memory $5D19.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D2819.l		; 0F 19 28 5D ; OR accumulator with memory (long) $5D2819.l [Writes: Accumulator] [Flags: ZN]
	ora $1D4219.l		; 0F 19 42 1D ; OR accumulator with memory (long) $1D4219.l [Writes: Accumulator] [Flags: ZN]
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora $9D.b,S		; 03 9D ; OR accumulator with stack relative $9D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $0F19.w		; 2D 19 0F ; Logical AND $0F19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $9D04.w,Y		; 19 04 9D ; OR accumulator with memory $9D04.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $9D.b		; 05 9D ; Logical OR $9D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	and $0F19.w		; 2D 19 0F ; Logical AND $0F19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $190F.w,Y		; 19 0F 19 ; OR accumulator with memory $190F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $DD0519.l		; 0F 19 05 DD ; OR accumulator with memory (long) $DD0519.l [Writes: Accumulator] [Flags: ZN]
	tsb $DD.b		; 04 DD ; Test and set bits $DD.b [Reads: Accumulator] [Flags: Z]
	ora $590F59.l		; 0F 59 0F 59 ; OR accumulator with memory (long) $590F59.l [Writes: Accumulator] [Flags: ZN]
	tsb $9D.b		; 04 9D ; Test and set bits $9D.b [Reads: Accumulator] [Flags: Z]
	tsb $9D.b		; 04 9D ; Test and set bits $9D.b [Reads: Accumulator] [Flags: Z]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	ora $9D.b		; 05 9D ; Logical OR $9D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $0F19.w		; 2D 19 0F ; Logical AND $0F19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $190F.w,Y		; 19 0F 19 ; OR accumulator with memory $190F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $DD0519.l		; 0F 19 05 DD ; OR accumulator with memory (long) $DD0519.l [Writes: Accumulator] [Flags: ZN]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	tsb $9D.b		; 04 9D ; Test and set bits $9D.b [Reads: Accumulator] [Flags: Z]
	tsb $9D.b		; 04 9D ; Test and set bits $9D.b [Reads: Accumulator] [Flags: Z]
	ora $190F19.l		; 0F 19 0F 19 ; OR accumulator with memory (long) $190F19.l [Writes: Accumulator] [Flags: ZN]
	tsb $9D.b		; 04 9D ; Test and set bits $9D.b [Reads: Accumulator] [Flags: Z]
	ora $9D.b		; 05 9D ; Logical OR $9D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $194C19.l		; 0F 19 4C 19 ; OR accumulator with memory (long) $194C19.l [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $195C.w,Y		; 19 5C 19 ; OR accumulator with memory $195C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	and $1D731D.l		; 2F 1D 73 1D ; AND accumulator with memory (long) $1D731D.l [Writes: Accumulator] [Flags: ZN]
	cop $5D.b		; 02 5D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	cop $5D.b		; 02 5D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	adc ($5D.b,S),Y		; 73 5D ; Add with carry (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $5119.w		; 2D 19 51 ; Logical AND $5119.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $192D.w,X		; 1D 2D 19 ; OR accumulator with memory $192D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D0219.l		; 0F 19 02 5D ; OR accumulator with memory (long) $5D0219.l [Writes: Accumulator] [Flags: ZN]
	ora $5D5119.l		; 0F 19 51 5D ; OR accumulator with memory (long) $5D5119.l [Writes: Accumulator] [Flags: ZN]
	ora $194B19.l		; 0F 19 4B 19 ; OR accumulator with memory (long) $194B19.l [Writes: Accumulator] [Flags: ZN]
	ora $994B19.l		; 0F 19 4B 99 ; OR accumulator with memory (long) $994B19.l [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $196C.w,Y		; 19 6C 19 ; OR accumulator with memory $196C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sta $996C.w,Y		; 99 6C 99 ; Store accumulator to $996C.w,Y [Reads: Accumulator, Y Index]
	adc $1D615D.l,X		; 7F 5D 61 1D ; Add long $1D615D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,X		; 75 5D ; Add $5D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $62		; 62 1D 62 ; Push effective relative address $62, $1D, $62 [Writes: Stack Pointer]
	eor $1D71.w,X		; 5D 71 1D ; Exclusive OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $1D0A.w,X		; 1D 0A 1D ; OR accumulator with memory $1D0A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5D1A.w,X		; 1D 1A 5D ; OR accumulator with memory $5D1A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	sta $995C.w,Y		; 99 5C 99 ; Store accumulator to $995C.w,Y [Reads: Accumulator, Y Index]
	ora $994C19.l		; 0F 19 4C 99 ; OR accumulator with memory (long) $994C19.l [Writes: Accumulator] [Flags: ZN]
	jsr $711D.w		; 20 1D 71 ; Jump to subroutine at $711D.w [Writes: Stack Pointer] [Flow: call]
	ora $1D2B.w,X		; 1D 2B 1D ; OR accumulator with memory $1D2B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $5D635D.l,X		; 5F 5D 63 5D ; Exclusive OR accumulator with memory (long,X) $5D635D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($5D.b,S),Y		; 33 5D ; AND accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($5D.b),Y		; 31 5D ; AND accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $5D.b,S		; 63 5D ; Add with carry (stack relative) $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	ora ($5D.b),Y		; 11 5D ; OR accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $0F19.w		; 2D 19 0F ; Logical AND $0F19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $9D04.w,Y		; 19 04 9D ; OR accumulator with memory $9D04.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsb $9D.b		; 04 9D ; Test and set bits $9D.b [Reads: Accumulator] [Flags: Z]
	cop $5D.b		; 02 5D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora $DD.b,S		; 03 DD ; OR accumulator with stack relative $DD.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	bit $711D.w		; 2C 1D 71 ; Test bits $711D.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	ora $1D79.w,X		; 1D 79 1D ; OR accumulator with memory $1D79.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $AA1D.w,Y		; 19 1D AA ; OR accumulator with memory $AA1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $5D19.w,X		; 1D 19 5D ; OR accumulator with memory $5D19.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $08AA.w,X		; 5D AA 08 ; Exclusive OR accumulator with memory $08AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1F5D.w,Y		; 19 5D 1F ; OR accumulator with memory $1F5D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D28.w		; 4D 28 5D ; Exclusive OR $5D28.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0E0D.l,X		; 1F 0D 0E 0D ; Logical OR long $0D0E0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $0D0E.w,X		; 1D 0E 0D ; OR accumulator with memory $0D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $5D18.w,X		; 1D 18 5D ; OR accumulator with memory $5D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1819.w		; 2D 19 18 ; Logical AND $1819.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $192D.w,X		; 5D 2D 19 ; Exclusive OR accumulator with memory $192D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08AA4D.l,X		; 1F 4D AA 08 ; Logical OR long $08AA4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D0E0D.l,X		; 1F 0D 0E 0D ; Logical OR long $0D0E0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $0D0E.w,X		; 1D 0E 0D ; OR accumulator with memory $0D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $5D18.w,X		; 1D 18 5D ; OR accumulator with memory $5D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $5D28.w,X		; 1D 28 5D ; OR accumulator with memory $5D28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D1B.w,X		; 1D 1B 1D ; OR accumulator with memory $1D1B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D1B.w,X		; 1D 1B 1D ; OR accumulator with memory $1D1B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $08AA.w,X		; 1D AA 08 ; OR accumulator with memory $08AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $15.b		; 06 15 ; Arithmetic shift left $15.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $15.b,X		; 16 15 ; Arithmetic shift left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$55.b],Y		; 37 55 ; AND accumulator with memory (long indexed) [$55.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $55.b		; 06 55 ; Arithmetic shift left $55.b [Reads: Direct Page] [Flags: ZNC]
	and $1615.w,Y		; 39 15 16 ; AND accumulator with memory $1615.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $0E.b,X		; 55 0E ; Exclusive OR accumulator with memory $0E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D0E.w		; 0D 0E 0D ; Logical OR $0D0E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $0E0D.w		; 0E 0D 0E ; Arithmetic shift left $0E0D.w [Flags: ZNC]
	ora $0D1F.w		; 0D 1F 0D ; Logical OR $0D1F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $4D1F0D.l		; 0F 0D 1F 4D ; OR accumulator with memory (long) $4D1F0D.l [Writes: Accumulator] [Flags: ZN]
	ora $0D0F0D.l		; 0F 0D 0F 0D ; OR accumulator with memory (long) $0D0F0D.l [Writes: Accumulator] [Flags: ZN]
	ora $0D0F0D.l		; 0F 0D 0F 0D ; OR accumulator with memory (long) $0D0F0D.l [Writes: Accumulator] [Flags: ZN]
	ora $AA0D.w		; 0D 0D AA ; Logical OR $AA0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $15.b		; 26 15 ; Rotate left $15.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $15.b,X		; 16 15 ; Arithmetic shift left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $2655.w,Y		; 39 55 26 ; AND accumulator with memory $2655.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $39.b,X		; 55 39 ; Exclusive OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0F.b,X		; 55 0F ; Exclusive OR accumulator with memory $0F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D0F.w		; 0D 0F 0D ; Logical OR $0D0F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0F0D.l		; 0F 0D 0F 0D ; OR accumulator with memory (long) $0D0F0D.l [Writes: Accumulator] [Flags: ZN]
	lda $BC54.w,X		; BD 54 BC ; Load $BC54.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $01.b		; 14 01 ; Test and reset bits $01.b [Reads: Accumulator] [Flags: Z]
	ora $1D43.w,X		; 1D 43 1D ; OR accumulator with memory $1D43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	ror $651D.w,X		; 7E 1D 65 ; Rotate right $651D.w,X [Reads: X Index] [Flags: ZNC]
	eor $5D12.w,X		; 5D 12 5D ; Exclusive OR accumulator with memory $5D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $445D.w,X		; 7E 5D 44 ; Rotate right $445D.w,X [Reads: X Index] [Flags: ZNC]
	eor $14BF.w,X		; 5D BF 14 ; Exclusive OR accumulator with memory $14BF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $4314.w,X		; BC 14 43 ; Load Y register $4314.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	eor $5D01.w,X		; 5D 01 5D ; Exclusive OR accumulator with memory $5D01.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora $1D.b,S		; 03 1D ; OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tsb $1D.b		; 04 1D ; Test and set bits $1D.b [Reads: Accumulator] [Flags: Z]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $5D.b		; 02 5D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $5D.b		; 04 5D ; Test and set bits $5D.b [Reads: Accumulator] [Flags: Z]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora $5D.b,S		; 03 5D ; OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $15.b		; 26 15 ; Rotate left $15.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $15.b,X		; 36 15 ; Rotate left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $2615.w,Y		; 39 15 26 ; AND accumulator with memory $2615.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $38.b,X		; 55 38 ; Exclusive OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $36.b,X		; 15 36 ; OR accumulator with memory $36.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4E.b,X		; 55 4E ; Exclusive OR accumulator with memory $4E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4E.b,X		; 15 4E ; OR accumulator with memory $4E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5E.b,X		; 55 5E ; Exclusive OR accumulator with memory $5E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5E.b,X		; 15 5E ; OR accumulator with memory $5E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3B.b,X		; 55 3B ; Exclusive OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3B.b,X		; 15 3B ; OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $590F59.l		; 0F 59 0F 59 ; OR accumulator with memory (long) $590F59.l [Writes: Accumulator] [Flags: ZN]
	ora $DD.b		; 05 DD ; Logical OR $DD.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $DD.b		; 04 DD ; Test and set bits $DD.b [Reads: Accumulator] [Flags: Z]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	adc ($5D.b,S),Y		; 73 5D ; Add with carry (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $5D405D.l		; 2F 5D 40 5D ; AND accumulator with memory (long) $5D405D.l [Writes: Accumulator] [Flags: ZN]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $5D		; 50 5D ; Branch if overflow clear to $50, $5D [Flow: branch]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $5D615D.l,X		; 7F 5D 61 5D ; Add long $5D615D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,X		; 75 5D ; Add $5D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D005D.l		; 6F 5D 00 5D ; Add with carry (long) $5D005D.l [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	.db $10, $5D		; 10 5D ; Branch if plus to $10, $5D [Flow: branch]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	jsr $315D.w		; 20 5D 31 ; Jump to subroutine at $315D.w [Writes: Stack Pointer] [Flow: call]
	eor $5D2B.w,X		; 5D 2B 5D ; Exclusive OR accumulator with memory $5D2B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $AA94.w,X		; BD 94 AA ; Load $AA94.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $425D.w		; 20 5D 42 ; Jump to subroutine at $425D.w [Writes: Stack Pointer] [Flow: call]
	ora $5D34.w,X		; 1D 34 5D ; OR accumulator with memory $5D34.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $1D		; 42 1D ; Reserved instruction
	adc $5D.b,S		; 63 5D ; Add with carry (stack relative) $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora ($5D.b),Y		; 11 5D ; OR accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5D2F.w,X		; 5D 2F 5D ; Exclusive OR accumulator with memory $5D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $5D		; 50 5D ; Branch if overflow clear to $50, $5D [Flow: branch]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $62, $5D, $6F		; 62 5D 6F ; Push effective relative address $62, $5D, $6F [Writes: Stack Pointer]
	eor $1D71.w,X		; 5D 71 1D ; Exclusive OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	brk $5D.b		; 00 5D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $10, $5D		; 10 5D ; Branch if plus to $10, $5D [Flow: branch]
	.db $42, $1D		; 42 1D ; Reserved instruction
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $71		; 62 1D 71 ; Push effective relative address $62, $1D, $71 [Writes: Stack Pointer]
	eor $1D71.w,X		; 5D 71 1D ; Exclusive OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($7A48.w,X)		; 7C 48 7A ; Jump indirect indexed to ($7A48.w,X) [Reads: X Index] [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $7C14.w,X		; BD 14 7C ; Load $7C14.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($5D.b),Y		; 31 5D ; AND accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	jsr $315D.w		; 20 5D 31 ; Jump to subroutine at $315D.w [Writes: Stack Pointer] [Flow: call]
	eor $5D7A.w,X		; 5D 7A 5D ; Exclusive OR accumulator with memory $5D7A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp $0F59.w		; 4C 59 0F ; Jump to $0F59.w [Flow: jump]
	ora $595C.w,Y		; 19 5C 59 ; OR accumulator with memory $595C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	eor $596C.w,Y		; 59 6C 59 ; Exclusive OR accumulator with memory $596C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $D96C.w,Y		; 59 6C D9 ; Exclusive OR accumulator with memory $D96C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cmp $594B.w,Y		; D9 4B 59 ; Compare accumulator $594B.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $D94B19.l		; 0F 19 4B D9 ; OR accumulator with memory (long) $D94B19.l [Writes: Accumulator] [Flags: ZN]
	ora $08AA19.l		; 0F 19 AA 08 ; OR accumulator with memory (long) $08AA19.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AA8C.w,X		; FD 8C AA ; Subtract with carry $AA8C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0E0D.w		; 0E 0D 0E ; Arithmetic shift left $0E0D.w [Flags: ZNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AA0C.w,X		; FD 0C AA ; Subtract with carry $AA0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $D95BD9.l		; 5C D9 5B D9 ; Jump long to $D95BD9.l [Flow: jump]
	jmp $0FD9.w		; 4C D9 0F ; Jump to $0FD9.w [Flow: jump]
	ora $5D62.w,Y		; 19 62 5D ; OR accumulator with memory $5D62.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $AA0D.w		; 0E 0D AA ; Arithmetic shift left $AA0D.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0E0D.w		; 0E 0D 0E ; Arithmetic shift left $0E0D.w [Flags: ZNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $AA0D.w		; 0E 0D AA ; Arithmetic shift left $AA0D.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AA4C.w,X		; FD 4C AA ; Subtract with carry $AA4C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0E0D.w		; 0E 0D 0E ; Arithmetic shift left $0E0D.w [Flags: ZNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AACC.w,X		; FD CC AA ; Subtract with carry $AACC.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$0D.b],Y		; 57 0D ; Exclusive OR accumulator with memory (long indexed) [$0D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$6D.b],Y		; 57 6D ; Exclusive OR accumulator with memory (long indexed) [$6D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $2D.b,X		; 15 2D ; OR accumulator with memory $2D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$2D.b],Y		; 57 2D ; Exclusive OR accumulator with memory (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$4D.b],Y		; 57 4D ; Exclusive OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $FD8C.w,X		; FD 8C FD ; Subtract with carry $FD8C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	tsb $4CFD.w		; 0C FD 4C ; Test and set bits $4CFD.w [Reads: Accumulator] [Flags: Z]
	sbc $67CC.w,X		; FD CC 67 ; Subtract with carry $67CC.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $6D67.w		; 0D 67 6D ; Logical OR $6D67.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b,S),Y		; 13 0D ; OR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $670C.w,X		; FE 0C 67 ; Increment memory $670C.w,X [Reads: X Index] [Flags: ZN]
	and $4D67.w		; 2D 67 4D ; Logical AND $4D67.w with accumulator [Writes: Accumulator] [Flags: ZN]
	inc $134C.w,X		; FE 4C 13 ; Increment memory $134C.w,X [Reads: X Index] [Flags: ZN]
	eor $1D42.w		; 4D 42 1D ; Exclusive OR $1D42.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b,S),Y		; 13 0D ; OR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $0D130D.l,X		; 3F 0D 13 0D ; AND accumulator with memory (long,X) $0D130D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $3F0D.w,X		; 3E 0D 3F ; Rotate left $3F0D.w,X [Reads: X Index] [Flags: ZNC]
	eor $4D13.w		; 4D 13 4D ; Exclusive OR $4D13.w with accumulator [Writes: Accumulator] [Flags: ZN]
	rol $134D.w,X		; 3E 4D 13 ; Rotate left $134D.w,X [Reads: X Index] [Flags: ZNC]
	eor $5D2C.w		; 4D 2C 5D ; Exclusive OR $5D2C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $715D.w,Y		; 79 5D 71 ; Add $715D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $190F.w,X		; 1D 0F 19 ; OR accumulator with memory $190F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $190F.w,X		; 1D 0F 19 ; OR accumulator with memory $190F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $5D18.w,X		; 1D 18 5D ; OR accumulator with memory $5D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $180D.w		; 0E 0D 18 ; Arithmetic shift left $180D.w [Flags: ZNC]
	eor $0D0E.w,X		; 5D 0E 0D ; Exclusive OR accumulator with memory $0D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D194D.l,X		; 1F 4D 19 1D ; Logical OR long $1D194D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D280D.l,X		; 1F 0D 28 1D ; Logical OR long $1D280D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D18.w,X		; 1D 18 1D ; OR accumulator with memory $1D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D28.w,X		; 1D 28 1D ; OR accumulator with memory $1D28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $0D0E.w,X		; 5D 0E 0D ; Exclusive OR accumulator with memory $0D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $0D0E.w,X		; 5D 0E 0D ; Exclusive OR accumulator with memory $0D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA4D.l,X		; 1F 4D AA 08 ; Logical OR long $08AA4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA0D.l,X		; 1F 0D AA 08 ; Logical OR long $08AA0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $15.b		; 06 15 ; Arithmetic shift left $15.b [Reads: Direct Page] [Flags: ZNC]
	and [$15.b],Y		; 37 15 ; AND accumulator with memory (long indexed) [$15.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $15.b,X		; 16 15 ; Arithmetic shift left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $0615.w,Y		; 39 15 06 ; AND accumulator with memory $0615.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $55.b,X		; 16 55 ; Arithmetic shift left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $0D0F0D.l		; 0F 0D 0F 0D ; OR accumulator with memory (long) $0D0F0D.l [Writes: Accumulator] [Flags: ZN]
	ora $0F4D.w		; 0D 4D 0F ; Logical OR $0F4D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0F.w		; 0D 0F 0D ; Logical OR $0D0F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0F0D.l,X		; 1F 0D 0F 0D ; Logical OR long $0D0F0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $15264D.l,X		; 1F 4D 26 15 ; Logical OR long $15264D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1655.w,Y		; 39 55 16 ; AND accumulator with memory $1655.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $39.b,X		; 15 39 ; OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $26.b,X		; 15 26 ; OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $55.b,X		; 16 55 ; Arithmetic shift left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $15.b		; 26 15 ; Rotate left $15.b [Reads: Direct Page] [Flags: ZNC]
	and $3615.w,Y		; 39 15 36 ; AND accumulator with memory $3615.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $38.b,X		; 15 38 ; OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $26.b,X		; 15 26 ; OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $55.b,X		; 36 55 ; Rotate left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08AA0D.l,X		; 1F 0D AA 08 ; Logical OR long $08AA0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA4D.l,X		; 1F 4D AA 08 ; Logical OR long $08AA4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $55.b		; 26 55 ; Rotate left $55.b [Reads: Direct Page] [Flags: ZNC]
	lsr $1615.w		; 4E 15 16 ; Logical shift right $1615.w [Flags: ZNC]
	eor $5E.b,X		; 55 5E ; Exclusive OR accumulator with memory $5E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4E.b,X		; 15 4E ; OR accumulator with memory $4E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1F.b,X		; 55 1F ; Exclusive OR accumulator with memory $1F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $555E.w		; 4D 5E 55 ; Exclusive OR $555E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D1F0D.l,X		; 1F 0D 1F 0D ; Logical OR long $0D1F0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $1F15.w		; 4E 15 1F ; Logical shift right $1F15.w [Flags: ZNC]
	eor $155E.w		; 4D 5E 15 ; Exclusive OR $155E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $2655.w		; 4E 55 26 ; Logical shift right $2655.w [Flags: ZNC]
	ora $5E.b,X		; 15 5E ; OR accumulator with memory $5E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $16.b,X		; 55 16 ; Exclusive OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $26.b,X		; 15 26 ; OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3B.b,X		; 55 3B ; Exclusive OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $1F.b,X		; 55 1F ; Exclusive OR accumulator with memory $1F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D1F0D.l,X		; 1F 0D 1F 0D ; Logical OR long $0D1F0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $1F.b,X		; 15 1F ; OR accumulator with memory $1F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $26.b,X		; 55 26 ; Exclusive OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $15.b,X		; 16 15 ; Arithmetic shift left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $2615.w,Y		; 39 15 26 ; AND accumulator with memory $2615.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $39.b,X		; 55 39 ; Exclusive OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $26.b,X		; 55 26 ; Exclusive OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3B.b,X		; 55 3B ; Exclusive OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $36.b,X		; 15 36 ; OR accumulator with memory $36.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $26.b,X		; 55 26 ; Exclusive OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $15.b,X		; 36 15 ; Rotate left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $2615.w,Y		; 39 15 26 ; AND accumulator with memory $2615.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $38.b,X		; 55 38 ; Exclusive OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $36.b,X		; 55 36 ; Exclusive OR accumulator with memory $36.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $E1.b,X		; 55 E1 ; Exclusive OR accumulator with memory $E1.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1DE1.w,X		; 5D E1 1D ; Exclusive OR accumulator with memory $1DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $1DCF5D.l		; CF 5D CF 1D ; Compare accumulator (long) $1DCF5D.l [Reads: Accumulator] [Flags: ZNC]
	cmp ($DD.b),Y		; D1 DD ; Compare accumulator ($DD.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($DD.b,X)		; C1 DD ; Compare accumulator ($DD.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	sbc ($5D.b),Y		; F1 5D ; Subtract with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($5D.b,X)		; C1 5D ; Compare accumulator ($5D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	inc $FE9D.w,X		; FE 9D FE ; Increment memory $FE9D.w,X [Reads: X Index] [Flags: ZN]
	sta $9DFE.w,X		; 9D FE 9D ; Store accumulator to $9DFE.w,X [Reads: Accumulator, X Index]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	inc $FE9D.w,X		; FE 9D FE ; Increment memory $FE9D.w,X [Reads: X Index] [Flags: ZN]
	sta $5DE1.w,X		; 9D E1 5D ; Store accumulator to $5DE1.w,X [Reads: Accumulator, X Index]
	inc $E29D.w,X		; FE 9D E2 ; Increment memory $E29D.w,X [Reads: X Index] [Flags: ZN]
	eor $DDC1.w,X		; 5D C1 DD ; Exclusive OR accumulator with memory $DDC1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($5D.b),Y		; D1 5D ; Compare accumulator ($5D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($5D.b,X)		; C1 5D ; Compare accumulator ($5D.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	lsr $2888.w		; 4E 88 28 ; Logical shift right $2888.w [Flags: ZNC]
	.db $10, $4E		; 10 4E ; Branch if plus to $10, $4E [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $09.b		; 00 09 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($09.b,X)		; 01 09 ; Logical OR ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and $2A09.w		; 2D 09 2A ; Logical AND $2A09.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$0938.w		; 09 38 09 ; Logical OR #$0938.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora #$092B.w		; 09 2B 09 ; Logical OR #$092B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora #$0938.w		; 09 38 09 ; Logical OR #$0938.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($09.b,X)		; 01 09 ; Logical OR ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora #$092A.w		; 09 2A 09 ; Logical OR #$092A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($09.b,X)		; 01 09 ; Logical OR ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	sec		; 38 ; Set carry flag [Flags: C]
	ora #$092A.w		; 09 2A 09 ; Logical OR #$092A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora #$0901.w		; 09 01 09 ; Logical OR #$0901.w with accumulator [Writes: Accumulator] [Flags: ZN]
	brk $49.b		; 00 49 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora #$492D.w		; 09 2D 49 ; Logical OR #$492D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $3B09.w,X		; 3D 09 3B ; AND accumulator with memory $3B09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$093D.w		; 09 3D 09 ; Logical OR #$093D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $3B49.w,X		; 3D 49 3B ; AND accumulator with memory $3B49.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$493D.w		; 09 3D 49 ; Logical OR #$493D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $3B09.w,X		; 3D 09 3B ; AND accumulator with memory $3B09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$0910.w		; 09 10 09 ; Logical OR #$0910.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($09.b,X)		; 01 09 ; Logical OR ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora #$0938.w		; 09 38 09 ; Logical OR #$0938.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora #$0901.w		; 09 01 09 ; Logical OR #$0901.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($09.b,X)		; 01 09 ; Logical OR ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	sec		; 38 ; Set carry flag [Flags: C]
	ora #$093B.w		; 09 3B 09 ; Logical OR #$093B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $0149.w,X		; 3D 49 01 ; AND accumulator with memory $0149.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$4910.w		; 09 10 49 ; Logical OR #$4910.w with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora #$0921.w		; 09 21 09 ; Logical OR #$0921.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda $08.b		; A5 08 ; Load $08.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $092208.l		; 4F 08 22 09 ; Exclusive OR accumulator with memory (long) $092208.l [Writes: Accumulator] [Flags: ZN]
	jsl $087409.l		; 22 09 74 08 ; Jump to subroutine long $087409.l [Writes: Stack Pointer] [Flow: call]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora #$0922.w		; 09 22 09 ; Logical OR #$0922.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($09.b,X)		; 21 09 ; Logical AND ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor #$0918.w		; 49 18 09 ; Exclusive OR #$0918.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jsl $092209.l		; 22 09 22 09 ; Jump to subroutine long $092209.l [Writes: Stack Pointer] [Flow: call]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor #$0918.w		; 49 18 09 ; Exclusive OR #$0918.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($09.b,X)		; 21 09 ; Logical AND ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $491809.l		; 22 09 18 49 ; Jump to subroutine long $491809.l [Writes: Stack Pointer] [Flow: call]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora #$0922.w		; 09 22 09 ; Logical OR #$0922.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jsl $491809.l		; 22 09 18 49 ; Jump to subroutine long $491809.l [Writes: Stack Pointer] [Flow: call]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	and ($09.b,X)		; 21 09 ; Logical AND ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor #$484F.w		; 49 4F 48 ; Exclusive OR #$484F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda $48.b		; A5 48 ; Load $48.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cpy #$1D.b		; C0 1D ; Compare #$1D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$5D.b		; C0 5D ; Compare #$5D.b with Y register [Reads: Y Index] [Flags: ZNC]
	sbc ($1D.b),Y		; F1 1D ; Subtract with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b),Y		; F1 5D ; Subtract with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($48.b),Y		; 51 48 ; Exclusive OR accumulator with memory ($48.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $48		; 50 48 ; Branch if overflow clear to $50, $48 [Flow: branch]
	inc $CF1D.w,X		; FE 1D CF ; Increment memory $CF1D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DE1.w,X		; 1D E1 1D ; OR accumulator with memory $1DE1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $1DFE5D.l		; CF 5D FE 1D ; Compare accumulator (long) $1DFE5D.l [Reads: Accumulator] [Flags: ZNC]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $5DCF1D.l		; CF 1D CF 5D ; Compare accumulator (long) $5DCF1D.l [Reads: Accumulator] [Flags: ZNC]
	inc $E19D.w,X		; FE 9D E1 ; Increment memory $E19D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DCF.w,X		; 1D CF 1D ; OR accumulator with memory $1DCF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $5DE15D.l		; CF 5D E1 5D ; Compare accumulator (long) $5DE15D.l [Reads: Accumulator] [Flags: ZNC]
	inc $4C9D.w,X		; FE 9D 4C ; Increment memory $4C9D.w,X [Reads: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $7D48.w		; 4C 48 7D ; Jump to $7D48.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $08.b		; A6 08 ; Load $08.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($08.b),Y		; 51 08 ; Exclusive OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b		; 64 08 ; Store zero to $08.b
	sta $7408.w,Y		; 99 08 74 ; Store accumulator to $7408.w,Y [Reads: Accumulator, Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda #$AE08.w		; A9 08 AE ; Load #$AE08.w into accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $4CAA.w		; 0C AA 4C ; Test and set bits $4CAA.w [Reads: Accumulator] [Flags: Z]
	ldx $AA8C.w		; [PATTERN: Memory clearing operation] AE 8C AA ; Load $AA8C.w into X register [Writes: X Index] [Flags: ZN]
	jmp $1D45.w		; 4C 45 1D ; Jump to $1D45.w [Flow: jump]
	eor $5D.b		; 45 5D ; Exclusive OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	stz $5D.b		; [PATTERN: Memory clearing operation] 64 5D ; Store zero to $5D.b
	stz $9D.b		; 64 9D ; Store zero to $9D.b
	stz $DD.b		; 64 DD ; Store zero to $DD.b
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	eor $1D.b		; 45 1D ; Exclusive OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b]		; 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	lsr $1D.b,X		; 56 1D ; Logical shift right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor [$1D.b]		; 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b]		; 47 5D ; Exclusive OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b],Y		; 57 5D ; Exclusive OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b]		; 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,S		; 43 5D ; Exclusive OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b,S),Y		; 53 5D ; XOR accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b]		; 47 5D ; Exclusive OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b,S),Y		; 53 1D ; XOR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b],Y		; 57 5D ; Exclusive OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $5D40.w,X		; 1D 40 5D ; OR accumulator with memory $5D40.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D1B.w,X		; 1D 1B 1D ; OR accumulator with memory $1D1B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D1B.w,X		; 1D 1B 1D ; OR accumulator with memory $1D1B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b]		; [PATTERN: Memory clearing operation] 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b		; 45 5D ; Exclusive OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $5D.b,X		; 56 5D ; Logical shift right $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	stz $1D.b		; [PATTERN: Memory clearing operation] 64 1D ; Store zero to $1D.b
	stz $5D.b,X		; 74 5D ; Store zero to $5D.b,X [Reads: X Index]
	stz $1D.b,X		; 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $5D60.w,X		; 1D 60 5D ; OR accumulator with memory $5D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $5D60.w,X		; 1D 60 5D ; OR accumulator with memory $5D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	jmp $884F.w		; 4C 4F 88 ; Jump to $884F.w [Flow: jump]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	jmp $084F.w		; 4C 4F 08 ; Jump to $084F.w [Flow: jump]
	sta $6448.w,Y		; 99 48 64 ; Store accumulator to $6448.w,Y [Reads: Accumulator, Y Index]
	pha		; [PATTERN: Memory clearing operation] 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lda #$7448.w		; A9 48 74 ; Load #$7448.w into accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	stz $DD.b,X		; 74 DD ; Store zero to $DD.b,X [Reads: X Index]
	stz $9D.b,X		; 74 9D ; Store zero to $9D.b,X [Reads: X Index]
	stz $5D.b		; [PATTERN: Memory clearing operation] 64 5D ; Store zero to $5D.b
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $5D60.w,X		; 1D 60 5D ; OR accumulator with memory $5D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $5D38.w,X		; 1D 38 5D ; OR accumulator with memory $5D38.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $4CAE.w		; 4C AE 4C ; Jump to $4CAE.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $CCAE.w		; 4C AE CC ; Jump to $CCAE.w [Flow: jump]
	and $2D1D.w		; 2D 1D 2D ; Logical AND $2D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $1D3D.w,X		; 5D 3D 1D ; Exclusive OR accumulator with memory $1D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $7B5D.w,X		; 3D 5D 7B ; AND accumulator with memory $7B5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $DD7B.w,X		; 9D 7B DD ; Store accumulator to $DD7B.w,X [Reads: Accumulator, X Index]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D7B.w,X		; 1D 7B 5D ; OR accumulator with memory $5D7B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	lsr $1D.b		; 46 1D ; Logical shift right $1D.b [Reads: Direct Page] [Flags: ZNC]
	eor $1D.b,X		; 55 1D ; Exclusive OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b],Y		; 57 5D ; Exclusive OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $5D.b		; 46 5D ; Logical shift right $5D.b [Reads: Direct Page] [Flags: ZNC]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $4CAE.w		; 4C AE 4C ; Jump to $4CAE.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $CCAF.w		; 4C AF CC ; Jump to $CCAF.w [Flow: jump]
	ror $4C.b		; 66 4C ; Rotate right $4C.b [Reads: Direct Page] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror $4C.b,X		; 76 4C ; Rotate right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $0C.b		; 66 0C ; Rotate right $0C.b [Reads: Direct Page] [Flags: ZNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $0C.b,X		; 76 0C ; Rotate right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ldx $AA0C.w		; AE 0C AA ; Load $AA0C.w into X register [Writes: X Index] [Flags: ZN]
	jmp $8CAF.w		; 4C AF 8C ; Jump to $8CAF.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $0862.w		; 4C 62 08 ; Jump to $0862.w [Flow: jump]
	lda ($0C.b,X)		; A1 0C ; Load accumulator ($0C.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy #$0C.b		; A0 0C ; Load #$0C.b into Y register [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1D2D.w		; 0C 2D 1D ; Test and set bits $1D2D.w [Reads: Accumulator] [Flags: Z]
	and $AA5D.w		; 2D 5D AA ; Logical AND $AA5D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	trb $0D1D.w		; 1C 1D 0D ; Test and reset bits $0D1D.w [Reads: Accumulator] [Flags: Z]
	ora $0CAA.w,X		; 1D AA 0C ; OR accumulator with memory $0CAA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1D0D.w		; 0C 0D 1D ; Test and set bits $1D0D.w [Reads: Accumulator] [Flags: Z]
	trb $AA5D.w		; 1C 5D AA ; Test and reset bits $AA5D.w [Reads: Accumulator] [Flags: Z]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	ora $0D1D.w		; 0D 1D 0D ; Logical OR $0D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D3D.w,X		; 1D 3D 1D ; OR accumulator with memory $1D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $AA5D.w,X		; 3D 5D AA ; AND accumulator with memory $AA5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	ldx $1C0C.w		; AE 0C 1C ; Load $1C0C.w into X register [Writes: X Index] [Flags: ZN]
	ora $8CAE.w,X		; 1D AE 8C ; OR accumulator with memory $8CAE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $1D1D.w		; 0C 1D 1D ; Test and set bits $1D1D.w [Reads: Accumulator] [Flags: Z]
	ora $5D2D.w,X		; 1D 2D 5D ; OR accumulator with memory $5D2D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $3D1D.w,X		; 3D 1D 3D ; AND accumulator with memory $3D1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D2D.w,X		; 5D 2D 1D ; Exclusive OR accumulator with memory $1D2D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $3D5D.w,X		; 1D 5D 3D ; OR accumulator with memory $3D5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D3D.w,X		; 1D 3D 5D ; OR accumulator with memory $5D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D1D.w		; 0D 1D 0D ; Logical OR $0D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $9D2D.w,X		; 1D 2D 9D ; OR accumulator with memory $9D2D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1CDD.w		; 2D DD 1C ; Logical AND $1CDD.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $0CAA.w,X		; 5D AA 0C ; Exclusive OR accumulator with memory $0CAA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1C5D.w,X		; 1D 5D 1C ; OR accumulator with memory $1C5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4CAA.w,X		; 5D AA 4C ; Exclusive OR accumulator with memory $4CAA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $4CAA.w		; 4C AA 4C ; Jump to $4CAA.w [Flow: jump]
	lda $4CAF4C.l		; AF 4C AF 4C ; Load long $4CAF4C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $564C.w,Y		; BE 4C 56 ; Load X register $564C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	jmp $4868.w		; 4C 68 48 ; Jump to $4868.w [Flow: jump]
	ldx $BE0C.w,Y		; BE 0C BE ; Load X register $BE0C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	jmp $0C80.w		; 4C 80 0C ; Jump to $0C80.w [Flow: jump]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $AF0C.w,Y		; BE 0C AF ; Load X register $AF0C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	tsb $0868.w		; 0C 68 08 ; Test and set bits $0868.w [Reads: Accumulator] [Flags: Z]
	lsr $0C.b,X		; 56 0C ; Logical shift right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $4CAA.w		; 4C AA 4C ; Jump to $4CAA.w [Flow: jump]
	lda $4CAA0C.l		; AF 0C AA 4C ; Load long $4CAA0C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $0C0C.w		; AE 0C 0C ; Load $0C0C.w into X register [Writes: X Index] [Flags: ZN]
	ora $8CAE.w,X		; 1D AE 8C ; OR accumulator with memory $8CAE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $2D1D.w		; 0C 1D 2D ; Test and set bits $2D1D.w [Reads: Accumulator] [Flags: Z]
	ora $5D2D.w,X		; 1D 2D 5D ; OR accumulator with memory $5D2D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1D1D.w,X		; 3D 1D 1D ; AND accumulator with memory $1D1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $1D2D.w,X		; DD 2D 1D ; Compare accumulator $1D2D.w,X [Reads: X Index] [Flags: ZNC]
	and $0D5D.w		; 2D 5D 0D ; Logical AND $0D5D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $9D0D.w,X		; 9D 0D 9D ; Store accumulator to $9D0D.w,X [Reads: Accumulator, X Index]
	and $2D1D.w		; 2D 1D 2D ; Logical AND $2D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $9D1D.w,X		; 5D 1D 9D ; Exclusive OR accumulator with memory $9D1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1C5D.w,X		; 3D 5D 1C ; AND accumulator with memory $1C5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4CAE.w,X		; 5D AE 4C ; Exclusive OR accumulator with memory $4CAE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $AE5D.w		; 0C 5D AE ; Test and set bits $AE5D.w [Reads: Accumulator] [Flags: Z]
	cpy $1D65.w		; CC 65 1D ; Compare $1D65.w with Y register [Reads: Y Index] [Flags: ZNC]
	adc [$5D.b]		; 67 5D ; Add with carry (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$5D.b]		; 67 5D ; Add with carry (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$1D.b],Y		; 77 1D ; Add with carry (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$5D.b],Y		; 77 5D ; Add with carry (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $5D.b,X		; 76 5D ; Rotate right $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	and $393B.w,Y		; 39 3B 39 ; AND accumulator with memory $393B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $393B.w,Y		; 39 3B 39 ; AND accumulator with memory $393B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $793A.w,Y		; 39 3A 79 ; AND accumulator with memory $793A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $1D0C.w,Y		; 79 0C 1D ; Add $1D0C.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $0C5D.w		; 2D 5D 0C ; Logical AND $0C5D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5D3D.w,X		; 1D 3D 5D ; OR accumulator with memory $5D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $AE5D.w		; 0C 5D AE ; Test and set bits $AE5D.w [Reads: Accumulator] [Flags: Z]
	jmp $DD1C.w		; 4C 1C DD ; Jump to $DD1C.w [Flow: jump]
	ldx $08CC.w		; AE CC 08 ; Load $08CC.w into X register [Writes: X Index] [Flags: ZN]
	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $3941.w,Y		; 79 41 39 ; Add $3941.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $1D2D.w,Y		; 79 2D 1D ; Add $1D2D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tsb $3D5D.w		; 0C 5D 3D ; Test and set bits $3D5D.w [Reads: Accumulator] [Flags: Z]
	ora $5D0C.w,X		; 1D 0C 5D ; OR accumulator with memory $5D0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $3973.w,Y		; 39 73 39 ; AND accumulator with memory $3973.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$491D.w		; 49 1D 49 ; Exclusive OR #$491D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $7928.w,X		; 5D 28 79 ; Exclusive OR accumulator with memory $7928.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $7973.w,Y		; 79 73 79 ; Add $7973.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $1D49.w,Y		; 79 49 1D ; Add $1D49.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor #$4A5D.w		; 49 5D 4A ; Exclusive OR #$4A5D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5D4A.w,X		; 1D 4A 5D ; OR accumulator with memory $5D4A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5D6A.w,X		; 1D 6A 5D ; OR accumulator with memory $5D6A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($39.b,S),Y		; 73 39 ; Add with carry (stack relative indirect indexed) ($39.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($39.b,S),Y		; 73 39 ; Add with carry (stack relative indirect indexed) ($39.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	inc $FE1C.w,X		; FE 1C FE ; Increment memory $FE1C.w,X [Reads: X Index] [Flags: ZN]
	trb $5D0C.w		; 1C 0C 5D ; Test and reset bits $5D0C.w [Reads: Accumulator] [Flags: Z]
	ldx $0C4C.w		; AE 4C 0C ; Load $0C4C.w into X register [Writes: X Index] [Flags: ZN]
	eor $CCAE.w,X		; 5D AE CC ; Exclusive OR accumulator with memory $CCAE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b		; 64 08 ; Store zero to $08.b
	ror $0C.b		; 66 0C ; Rotate right $0C.b [Reads: Direct Page] [Flags: ZNC]
	sta ($11.b),Y		; 91 11 ; Store accumulator ($11.b),Y [Reads: Accumulator, Direct Page, Y Index]
	sta ($09.b,X)		; 81 09 ; Store accumulator ($09.b,X) [Reads: Accumulator, X Index, Direct Page]
	lda $0CBF0C.l,X		; BF 0C BF 0C ; Load long $0CBF0C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $80, $0C		; 80 0C ; Branch always to $80, $0C [Flow: branch]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $0C0C.w		; AE 0C 0C ; Load $0C0C.w into X register [Writes: X Index] [Flags: ZN]
	ora $8CAE.w,X		; 1D AE 8C ; OR accumulator with memory $8CAE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $3F9D.w		; 1C 9D 3F ; Test and reset bits $3F9D.w [Reads: Accumulator] [Flags: Z]
	sta $DD3F.w,X		; 9D 3F DD ; Store accumulator to $DD3F.w,X [Reads: Accumulator, X Index]
	and $5D3F1D.l,X		; 3F 1D 3F 5D ; AND accumulator with memory (long,X) $5D3F1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $1CFF1C.l,X		; FF 1C FF 1C ; Subtract with carry (long,X) $1CFF1C.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $5D3F1D.l,X		; 3F 1D 3F 5D ; AND accumulator with memory (long,X) $5D3F1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	ror $1D.b		; 66 1D ; Rotate right $1D.b [Reads: Direct Page] [Flags: ZNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$5D.b],Y		; 77 5D ; Add with carry (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	trb $1D9D.w		; 1C 9D 1D ; Test and reset bits $1D9D.w [Reads: Accumulator] [Flags: Z]
	sta $0CAA.w,X		; 9D AA 0C ; Store accumulator to $0CAA.w,X [Reads: Accumulator, X Index]
	trb $1D9D.w		; 1C 9D 1D ; Test and reset bits $1D9D.w [Reads: Accumulator] [Flags: Z]
	cmp $DD1C.w,X		; DD 1C DD ; Compare accumulator $DD1C.w,X [Reads: X Index] [Flags: ZNC]
	trb $AADD.w		; 1C DD AA ; Test and reset bits $AADD.w [Reads: Accumulator] [Flags: Z]
	jmp $0CBE.w		; 4C BE 0C ; Jump to $0CBE.w [Flow: jump]
	lda $0C800C.l,X		; BF 0C 80 0C ; Load long $0C800C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	ror $4C.b		; 66 4C ; Rotate right $4C.b [Reads: Direct Page] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sta ($49.b,X)		; 81 49 ; Store accumulator ($49.b,X) [Reads: Accumulator, X Index, Direct Page]
	sta ($51.b),Y		; 91 51 ; Store accumulator ($51.b),Y [Reads: Accumulator, Direct Page, Y Index]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$1D.b],Y		; 77 1D ; Add with carry (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,X		; 75 5D ; Add $5D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$5D.b]		; 67 5D ; Add with carry (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$5D.b],Y		; 77 5D ; Add with carry (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ror $5D.b		; 66 5D ; Rotate right $5D.b [Reads: Direct Page] [Flags: ZNC]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	adc [$1D.b],Y		; 77 1D ; Add with carry (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,X		; 75 5D ; Add $5D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	mvp $77,$5D		; 44 5D 77 ; Move block positive $77,$5D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $5D54.w,X		; 1D 54 5D ; OR accumulator with memory $5D54.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	mvp $67,$1D		; 44 1D 67 ; Move block positive $67,$1D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $1D54.w,X		; 5D 54 1D ; Exclusive OR accumulator with memory $1D54.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc [$5D.b],Y		; 77 5D ; Add with carry (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $48.b		; 65 48 ; Add $48.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	lsr $7548.w,X		; 5E 48 75 ; Logical shift right $7548.w,X [Reads: X Index] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ror $0848.w		; 6E 48 08 ; Rotate right $0848.w [Flags: ZNC]
	and $2D41.w		; 2D 41 2D ; Logical AND $2D41.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2D41.w		; 2D 41 2D ; Logical AND $2D41.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $2D41.w		; 6D 41 2D ; Add $2D41.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $485F.w		; 6D 5F 48 ; Add $485F.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $087148.l		; 6F 48 71 08 ; Add with carry (long) $087148.l [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2D41.w		; 2D 41 2D ; Logical AND $2D41.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2D28.w		; 2D 28 2D ; Logical AND $2D28.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($2D.b,S),Y		; 73 2D ; Add with carry (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($2D.b,S),Y		; 73 2D ; Add with carry (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $2D28.w		; 6D 28 2D ; Add $2D28.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $2D41.w		; 6D 41 2D ; Add $2D41.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	and $2D41.w		; 2D 41 2D ; Logical AND $2D41.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $6D28.w		; 6D 28 6D ; Add $6D28.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $9D3F.w		; 6D 3F 9D ; Add $9D3F.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	rol $3FDD.w,X		; 3E DD 3F ; Rotate left $3FDD.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D3E.w,X		; 1D 3E 5D ; OR accumulator with memory $5D3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $6D08.w		; 2D 08 6D ; Logical AND $6D08.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $6D18.w		; 2D 18 6D ; Logical AND $6D18.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	ora $1D59.w,X		; 1D 59 1D ; OR accumulator with memory $1D59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $1D69.w,X		; 1D 69 1D ; OR accumulator with memory $1D69.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $585D.w,Y		; 59 5D 58 ; Exclusive OR accumulator with memory $585D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D69.w,X		; 5D 69 5D ; Exclusive OR accumulator with memory $5D69.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $2D08.w,X		; 5D 08 2D ; Exclusive OR accumulator with memory $2D08.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $2D73.w		; 2D 73 2D ; Logical AND $2D73.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $2D73.w		; 6D 73 2D ; Add $2D73.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $485F.w		; 6D 5F 48 ; Add $485F.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc ($08.b,X)		; [PATTERN: Memory clearing operation] 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda ($0C.b),Y		; B1 0C ; Load accumulator ($0C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,X		; 75 5D ; Add $5D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $4D5A.w		; 0D 5A 4D ; Logical OR $4D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$490D.w		; 49 0D 49 ; Exclusive OR #$490D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $1D78.w		; 4D 78 1D ; Exclusive OR $1D78.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $361D.w,Y		; 79 1D 36 ; Add $361D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $785D.w,Y		; 79 5D 78 ; Add $785D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $5D37.w,X		; 5D 37 5D ; Exclusive OR accumulator with memory $5D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $5D.b,X		; 36 5D ; Rotate left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	inc $FE1C.w,X		; FE 1C FE ; Increment memory $FE1C.w,X [Reads: X Index] [Flags: ZN]
	trb $1CFF.w		; 1C FF 1C ; Test and reset bits $1CFF.w [Reads: Accumulator] [Flags: Z]
	sbc $884E1C.l,X		; FF 1C 4E 88 ; Subtract with carry (long,X) $884E1C.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $084E.w,X		; 1D 4E 08 ; OR accumulator with memory $084E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $0D50.w,X		; 1D 50 0D ; OR accumulator with memory $0D50.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $0D		; 70 0D ; Branch if overflow set to $70, $0D [Flow: branch]
	.db $50, $0D		; 50 0D ; Branch if overflow clear to $50, $0D [Flow: branch]
	.db $70, $0D		; 70 0D ; Branch if overflow set to $70, $0D [Flow: branch]
	eor ($1D.b),Y		; 51 1D ; Exclusive OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b		; 26 1D ; Rotate left $1D.b [Reads: Direct Page] [Flags: ZNC]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b),Y		; 51 5D ; Exclusive OR accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b]		; 27 5D ; AND accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $5D.b		; 26 5D ; Rotate left $5D.b [Reads: Direct Page] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $4D4A.w		; 0D 4A 4D ; Logical OR $4D4A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5D6A.w,X		; 1D 6A 5D ; OR accumulator with memory $5D6A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $6E1D.w,X		; 7E 1D 6E ; Rotate right $6E1D.w,X [Reads: X Index] [Flags: ZNC]
	ora $1D7E.w,X		; 1D 7E 1D ; OR accumulator with memory $1D7E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $AA1D.w		; 6E 1D AA ; Rotate right $AA1D.w [Flags: ZNC]
	tsb $4CAF.w		; 0C AF 4C ; Test and set bits $4CAF.w [Reads: Accumulator] [Flags: Z]
	lda $4CBF4C.l		; AF 4C BF 4C ; Load long $4CBF4C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $BE0C.w,Y		; BE 0C BE ; Load X register $BE0C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	jmp $0CBF.w		; 4C BF 0C ; Jump to $0CBF.w [Flow: jump]
	lda $0CBE0C.l,X		; BF 0C BE 0C ; Load long $0CBE0C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $0CBF0C.l,X		; BF 0C BF 0C ; Load long $0CBF0C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $0D600C.l,X		; BF 0C 60 0D ; Load long $0D600C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $0D38.w		; 4D 38 0D ; Exclusive OR $0D38.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $1D6E.w		; 4D 6E 1D ; Exclusive OR $1D6E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror $6E1D.w		; 6E 1D 6E ; Rotate right $6E1D.w [Flags: ZNC]
	ora $1D6E.w,X		; 1D 6E 1D ; OR accumulator with memory $1D6E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $4CAF.w		; 4C AF 4C ; Jump to $4CAF.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $CCAE.w		; 4C AE CC ; Jump to $CCAE.w [Flow: jump]
	lda $4C460C.l,X		; BF 0C 46 4C ; Load long $4C460C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $4C.b,X		; 56 4C ; Logical shift right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $80,$48		; 54 48 80 ; Move block negative $80,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tsb $0C81.w		; 0C 81 0C ; Test and set bits $0C81.w [Reads: Accumulator] [Flags: Z]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $0C		; 80 0C ; Branch always to $80, $0C [Flow: branch]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	sta ($49.b,X)		; 81 49 ; Store accumulator ($49.b,X) [Reads: Accumulator, X Index, Direct Page]
	sta ($51.b),Y		; 91 51 ; Store accumulator ($51.b),Y [Reads: Accumulator, Direct Page, Y Index]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	adc $1D.b,S		; 63 1D ; Add with carry (stack relative) $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,S		; 63 5D ; Add with carry (stack relative) $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $80, $0C		; 80 0C ; Branch always to $80, $0C [Flow: branch]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $4D60.w		; 0D 60 4D ; Logical OR $4D60.w with accumulator [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $4D60.w		; 0D 60 4D ; Logical OR $4D60.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1D6B.w,X		; 1D 6B 1D ; OR accumulator with memory $1D6B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b]		; 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b		; 45 5D ; Exclusive OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1D6B.w,X		; 1D 6B 1D ; OR accumulator with memory $1D6B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	eor $1D.b		; 45 1D ; Exclusive OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$1D.b]		; 47 1D ; Exclusive OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,X		; 55 1D ; Exclusive OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$5D.b],Y		; 57 5D ; Exclusive OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $1D.b,S		; 03 1D ; OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $5D03.w,X		; 1D 03 5D ; OR accumulator with memory $5D03.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cop $5D.b		; 02 5D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5D12.w,X		; 5D 12 5D ; Exclusive OR accumulator with memory $5D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,S),Y		; 13 1D ; OR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora #$191D.w		; 09 1D 19 ; Logical OR #$191D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5D42.w,X		; 1D 42 5D ; OR accumulator with memory $5D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5D.b,S),Y		; 13 5D ; OR accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $095D.w,Y		; 19 5D 09 ; OR accumulator with memory $095D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $9D3F.w,X		; 5D 3F 9D ; Exclusive OR accumulator with memory $9D3F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $3FDD.w,X		; 3E DD 3F ; Rotate left $3FDD.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D3C.w,X		; 1D 3C 5D ; OR accumulator with memory $5D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $4C.b		; 66 4C ; Rotate right $4C.b [Reads: Direct Page] [Flags: ZNC]
	lsr $7648.w,X		; 5E 48 76 ; Logical shift right $7648.w,X [Reads: X Index] [Flags: ZNC]
	jmp $486E.w		; 4C 6E 48 ; Jump to $486E.w [Flow: jump]
	cmp $CE3C.w		; CD 3C CE ; Compare $CE3C.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	bit $3CC0.w,X		; 3C C0 3C ; Test bits $3CC0.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $3CDD3C.l		; CF 3C DD 3C ; Compare accumulator (long) $3CDD3C.l [Reads: Accumulator] [Flags: ZNC]
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $3C.b		; C6 3C ; Decrement $3C.b [Reads: Direct Page] [Flags: ZN]
	cmp $DD3C.w,X		; DD 3C DD ; Compare accumulator $DD3C.w,X [Reads: X Index] [Flags: ZNC]
	bit $3CE2.w,X		; 3C E2 3C ; Test bits $3CE2.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp $CF3C.w,X		; DD 3C CF ; Compare accumulator $CF3C.w,X [Reads: X Index] [Flags: ZNC]
	jmp ($3CC6.w,X)		; 7C C6 3C ; Jump indirect indexed to ($3CC6.w,X) [Reads: X Index] [Flow: jump]
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $CD7C.w		; CE 7C CD ; Decrement $CD7C.w [Flags: ZN]
	jmp ($3CD2.w,X)		; 7C D2 3C ; Jump indirect indexed to ($3CD2.w,X) [Reads: X Index] [Flow: jump]
	cpy #$7C.b		; C0 7C ; Compare #$7C.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$3C.b		; C0 3C ; Compare #$3C.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$3C.b		; C0 3C ; Compare #$3C.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$7C.b		; C0 7C ; Compare #$7C.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy #$7C.b		; C0 7C ; Compare #$7C.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $3C.b		; C6 3C ; Decrement $3C.b [Reads: Direct Page] [Flags: ZN]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	dec $3C.b		; C6 3C ; Decrement $3C.b [Reads: Direct Page] [Flags: ZN]
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cpy #$3C.b		; C0 3C ; Compare #$3C.b with Y register [Reads: Y Index] [Flags: ZNC]
	cmp ($3C.b,X)		; C1 3C ; Compare accumulator ($3C.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	.db $D0, $3C		; D0 3C ; Branch if not equal to $D0, $3C [Flow: branch]
	cmp ($3C.b),Y		; D1 3C ; Compare accumulator ($3C.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
.ACCU 16
.INDEX 16
	rep #$3C		; C2 3C
	cmp $3C.b,S		; C3 3C ; Compare accumulator (stack relative) $3C.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $3C.b,S		; C3 3C ; Compare accumulator (stack relative) $3C.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp $3C.b,S		; C3 3C ; Compare accumulator (stack relative) $3C.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $3C.b,S		; C3 3C ; Compare accumulator (stack relative) $3C.b,S [Reads: Accumulator, Stack Pointer] [Flags: ZNC]
.ACCU 16
.INDEX 16
	rep #$7C		; C2 7C
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($7C.b,X)		; C1 7C ; Compare accumulator ($7C.b,X) [Reads: Accumulator, X Index, Direct Page] [Flags: ZNC]
	cpy #$D17C.w		; C0 7C D1 ; Compare #$D17C.w with Y register [Reads: Y Index] [Flags: ZNC]
	jmp ($7CD0.w,X)		; 7C D0 7C ; Jump indirect indexed to ($7CD0.w,X) [Reads: X Index] [Flow: jump]
	cpx #$E13C.w		; E0 3C E1 ; Compare #$E13C.w with X register [Reads: X Index] [Flags: ZNC]
	bit $3CF0.w,X		; 3C F0 3C ; Test bits $3CF0.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	sbc ($3C.b),Y		; F1 3C ; Subtract with carry ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($3C.b)		; D2 3C ; Compare accumulator (indirect) ($3C.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($3C.b),Y		; F1 3C ; Subtract with carry ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($3C.b),Y		; F1 3C ; Subtract with carry ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pei ($3C.b)		; D4 3C ; Push effective indirect address ($3C.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cmp $3C.b,X		; D5 3C ; Compare accumulator $3C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cpy $3C.b		; C4 3C ; Compare $3C.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cmp $3C.b		; C5 3C ; Compare $3C.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $7C.b,X		; D5 7C ; Compare accumulator $7C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pei ($7C.b)		; D4 7C ; Push effective indirect address ($7C.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cmp $7C.b		; C5 7C ; Compare $7C.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $7C.b		; C4 7C ; Compare $7C.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	sbc ($7C.b,X)		; E1 7C ; Subtract with carry ($7C.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cpx #$F17C.w		; E0 7C F1 ; Compare #$F17C.w with X register [Reads: X Index] [Flags: ZNC]
	bit $7CF0.w,X		; 3C F0 7C ; Test bits $7CF0.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	sbc [$48.b]		; E7 48 ; Subtract with carry (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc [$48.b],Y		; F7 48 ; Subtract with carry (long indexed) [$48.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc [$08.b]		; E7 08 ; Subtract with carry (long) [$08.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc [$08.b],Y		; F7 08 ; Subtract with carry (long indexed) [$08.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $150C.w		; 0C 0C 15 ; Test and set bits $150C.w [Reads: Accumulator] [Flags: Z]
	sbc $260C.w		; ED 0C 26 ; Subtract $260C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $1D27.w,X		; 1D 27 1D ; OR accumulator with memory $1D27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b]		; 27 5D ; AND accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $5D.b		; 26 5D ; Rotate left $5D.b [Reads: Direct Page] [Flags: ZNC]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $5D.b,X		; 36 5D ; Rotate left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sbc $0C0C.w		; ED 0C 0C ; Subtract $0C0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $ED.b,X		; 15 ED ; OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	tsb $0C15.w		; 0C 15 0C ; Test and set bits $0C15.w [Reads: Accumulator] [Flags: Z]
	ora $ED.b,X		; 15 ED ; OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora ($2B.b),Y		; 11 2B ; OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	eor ($2A.b),Y		; 51 2A ; Exclusive OR accumulator with memory ($2A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $3CDD3C.l		; CF 3C DD 3C ; Compare accumulator (long) $3CDD3C.l [Reads: Accumulator] [Flags: ZNC]
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	.db $42, $7D		; 42 7D ; Reserved instruction
	cmp $DD3C.w,X		; DD 3C DD ; Compare accumulator $DD3C.w,X [Reads: X Index] [Flags: ZNC]
	bit $3D42.w,X		; 3C 42 3D ; Test bits $3D42.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	cmp $DD3C.w,X		; DD 3C DD ; Compare accumulator $DD3C.w,X [Reads: X Index] [Flags: ZNC]
	bit $3CE2.w,X		; 3C E2 3C ; Test bits $3CE2.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	.db $42, $7D		; 42 7D ; Reserved instruction
	cmp $CF3C.w,X		; DD 3C CF ; Compare accumulator $CF3C.w,X [Reads: X Index] [Flags: ZNC]
	jmp ($3D42.w,X)		; 7C 42 3D ; Jump indirect indexed to ($3D42.w,X) [Reads: X Index] [Flow: jump]
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	eor ($7D.b,X)		; 41 7D ; Exclusive OR accumulator with memory ($7D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp ($3C.b,S),Y		; D3 3C ; Compare accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	eor ($7D.b),Y		; 51 7D ; Exclusive OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b,X)		; 41 3D ; Exclusive OR accumulator with memory ($3D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	eor ($7D.b,X)		; 41 7D ; Exclusive OR accumulator with memory ($7D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	eor ($7D.b),Y		; 51 7D ; Exclusive OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b,X)		; 41 3D ; Exclusive OR accumulator with memory ($3D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($7C.b,S),Y		; D3 7C ; Compare accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp $DD3C.w,X		; DD 3C DD ; Compare accumulator $DD3C.w,X [Reads: X Index] [Flags: ZNC]
	bit $3CE2.w,X		; 3C E2 3C ; Test bits $3CE2.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	inc $DD3C.w		; EE 3C DD ; Increment $DD3C.w [Flags: ZN]
	bit $3CDD.w,X		; 3C DD 3C ; Test bits $3CDD.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	inc $E23C.w		; EE 3C E2 ; Increment $E23C.w [Flags: ZN]
	bit $3CE2.w,X		; 3C E2 3C ; Test bits $3CE2.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	inc $E23C.w		; EE 3C E2 ; Increment $E23C.w [Flags: ZN]
	bit $3CE2.w,X		; 3C E2 3C ; Test bits $3CE2.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	inc $E23C.w		; EE 3C E2 ; Increment $E23C.w [Flags: ZN]
	bit $3CE2.w,X		; 3C E2 3C ; Test bits $3CE2.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
.ACCU 8
.INDEX 8
	sep #$3C		; E2 3C
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora #$6B.b		; 09 6B ; Logical OR #$6B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$AA.b		; 49 AA ; Exclusive OR #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $3D30.w,X		; 3D 30 3D ; AND accumulator with memory $3D30.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	and $3D29.w,X		; 3D 29 3D ; AND accumulator with memory $3D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $7D		; 30 7D ; Branch if minus to $30, $7D [Flow: branch]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc $7D29.w,X		; 7D 29 7D ; Add $7D29.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	adc $151C.w,X		; 7D 1C 15 ; Add $151C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $08AA.w		; 0C AA 08 ; Test and set bits $08AA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	and #$4B.b		; 29 4B ; Logical AND #$4B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$4C.b		; 29 4C ; Logical AND #$4C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$5B.b		; 29 5B ; Logical AND #$5B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($5C.b),Y		; 31 5C ; AND accumulator with memory ($5C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$4D.b		; 29 4D ; Logical AND #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$4D.b		; 29 4D ; Logical AND #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$5D.b		; 29 5D ; Logical AND #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$5D.b		; 29 5D ; Logical AND #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$4D.b		; 29 4D ; Logical AND #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$4D.b		; 69 4D ; Add #$4D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$5D.b		; 69 5D ; Add #$5D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$5D.b		; 69 5D ; Add #$5D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$4C.b		; 69 4C ; Add #$4C.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$4B.b		; 69 4B ; Add #$4B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$5C.b		; 69 5C ; Add #$5C.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$5B.b		; 69 5B ; Add #$5B.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc ($AA.b),Y		; 71 AA ; Add with carry ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	adc #$AA.b		; 69 AA ; Add #$AA.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	and ($AA.b),Y		; 31 AA ; AND accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $31.b		; 45 31 ; Exclusive OR $31.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	and ($6C.b),Y		; 31 6C ; AND accumulator with memory ($6C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$45.b		; 29 45 ; Logical AND #$45.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($AA.b),Y		; 31 AA ; AND accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $2C29.w		; 6D 29 2C ; Add $2C29.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$AA.b		; 29 AA ; Logical AND #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $6D69.w		; 2C 69 6D ; Test bits $6D69.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	adc #$AA.b		; 69 AA ; Add #$AA.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp ($5B69.w)		; 6C 69 5B ; Jump indirect to ($5B69.w) [Flow: jump]
	adc ($AA.b),Y		; 71 AA ; Add with carry ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $71.b		; 45 71 ; Exclusive OR $71.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	adc ($AA.b),Y		; 71 AA ; Add with carry ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $71.b		; 45 71 ; Exclusive OR $71.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $ED15.w		; 0C 15 ED ; Test and set bits $ED15.w [Reads: Accumulator] [Flags: Z]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	sbc $AA0C.w		; ED 0C AA ; Subtract $AA0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora ($AC.b),Y		; 11 AC ; OR accumulator with memory ($AC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $AC08.w		; AC 08 AC ; Load $AC08.w into Y register [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $5A08.w		; AC 08 5A ; Load $5A08.w into Y register [Writes: Y Index] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $28DF28.l,X		; DF 28 DF 28 ; Compare accumulator (long,X) $28DF28.l,X [Reads: Accumulator, X Index] [Flags: ZNC]
	lsr $29.b		; 46 29 ; Logical shift right $29.b [Reads: Direct Page] [Flags: ZNC]
	eor [$29.b]		; 47 29 ; Exclusive OR accumulator with memory (long) [$29.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $28DF28.l,X		; DF 28 DF 28 ; Compare accumulator (long,X) $28DF28.l,X [Reads: Accumulator, X Index] [Flags: ZNC]
	eor [$69.b]		; 47 69 ; Exclusive OR accumulator with memory (long) [$69.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $69.b		; 46 69 ; Logical shift right $69.b [Reads: Direct Page] [Flags: ZNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	and #$69.b		; 29 69 ; Logical AND #$69.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$78.b		; 29 78 ; Logical AND #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$79.b		; 29 79 ; Logical AND #$79.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$69.b		; 29 69 ; Logical AND #$69.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$68.b		; 69 68 ; Add #$68.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$79.b		; 69 79 ; Add #$79.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$78.b		; 69 78 ; Add #$78.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$02.b		; 69 02 ; Add #$02.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora #$11.b		; 09 11 ; Logical OR #$11.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$20.b		; 09 20 ; Logical OR #$20.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$23.b		; 09 23 ; Logical OR #$23.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$11.b		; 09 11 ; Logical OR #$11.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$11.b		; 09 11 ; Logical OR #$11.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$23.b		; 09 23 ; Logical OR #$23.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$23.b		; 09 23 ; Logical OR #$23.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$21.b		; 09 21 ; Logical OR #$21.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$21.b		; 09 21 ; Logical OR #$21.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$31.b		; 09 31 ; Logical OR #$31.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$31.b		; 09 31 ; Logical OR #$31.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$21.b		; 09 21 ; Logical OR #$21.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$02.b		; 09 02 ; Logical OR #$02.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$31.b		; 49 31 ; Exclusive OR #$31.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$20.b		; 09 20 ; Logical OR #$20.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$6B.b		; 49 6B ; Exclusive OR #$6B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $087B.w,Y		; 19 7B 08 ; OR accumulator with memory $087B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $FD0C.w,X		; FD 0C FD ; Subtract with carry $FD0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $0CFD.w		; 4C FD 0C ; Jump to $0CFD.w [Flow: jump]
	sbc $604C.w,X		; FD 4C 60 ; Subtract with carry $604C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $10.b,X		; 16 10 ; Arithmetic shift left $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $0010.w		; 2E 10 00 ; Rotate left $0010.w [Flags: ZNC]
	.db $30, $6D		; 30 6D ; Branch if minus to $30, $6D [Flow: branch]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $5C28.w		; 6D 28 5C ; Add $5C28.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	jmp $5D6568.l		; 5C 68 65 5D ; Jump long to $5D6568.l [Flow: jump]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $645D.w,X		; 7E 5D 64 ; Rotate right $645D.w,X [Reads: X Index] [Flags: ZNC]
	ora $14BF.w,X		; 1D BF 14 ; OR accumulator with memory $14BF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $7414.w,X		; BC 14 74 ; Load Y register $7414.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	ora $5D74.w,X		; 1D 74 5D ; OR accumulator with memory $5D74.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $BC14.w,X		; BC 14 BC ; Load Y register $BC14.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	trb $74.b		; 14 74 ; Test and reset bits $74.b [Reads: Accumulator] [Flags: Z]
	ora $5D74.w,X		; 1D 74 5D ; OR accumulator with memory $5D74.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $BC14.w,X		; BC 14 BC ; Load Y register $BC14.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	trb $43.b		; 14 43 ; Test and reset bits $43.b [Reads: Accumulator] [Flags: Z]
	eor $5D01.w,X		; 5D 01 5D ; Exclusive OR accumulator with memory $5D01.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $0E0D.w		; 2E 0D 0E ; Rotate left $0E0D.w [Flags: ZNC]
	ora $0D2E.w		; 0D 2E 0D ; Logical OR $0D2E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $420D.w		; 0E 0D 42 ; Arithmetic shift left $420D.w [Flags: ZNC]
	ora $1D42.w,X		; 1D 42 1D ; OR accumulator with memory $1D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $1D.b		; 04 1D ; Test and set bits $1D.b [Reads: Accumulator] [Flags: Z]
	tsb $1D.b		; 04 1D ; Test and set bits $1D.b [Reads: Accumulator] [Flags: Z]
	ror $645D.w,X		; 7E 5D 64 ; Rotate right $645D.w,X [Reads: X Index] [Flags: ZNC]
	and $1D42.w,X		; 3D 42 1D ; AND accumulator with memory $1D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	mvp $47,$3D		; 44 3D 47 ; Move block positive $47,$3D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	and $3D42.w,X		; 3D 42 3D ; AND accumulator with memory $3D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	and $3D3D.w,X		; 3D 3D 3D ; AND accumulator with memory $3D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $3D1D.w,X		; 3D 1D 3D ; AND accumulator with memory $3D1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $423D.w,X		; 1D 3D 42 ; OR accumulator with memory $423D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $3D42.w,X		; 1D 42 3D ; OR accumulator with memory $3D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b,S),Y		; 73 5D ; Add with carry (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	eor ($3D.b)		; 52 3D ; Exclusive OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b,X)		; 41 3D ; Exclusive OR accumulator with memory ($3D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D3D.w,X		; 1D 3D 1D ; OR accumulator with memory $1D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $3D7C.w,X		; 3D 7C 3D ; AND accumulator with memory $3D7C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($427D.w,X)		; 7C 7D 42 ; Jump indirect indexed to ($427D.w,X) [Reads: X Index] [Flow: jump]
	ora $1D42.w,X		; 1D 42 1D ; OR accumulator with memory $1D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,S),Y		; 73 1D ; Add with carry (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $3D615D.l,X		; 7F 5D 61 3D ; Add long $3D615D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,X		; 75 5D ; Add $5D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($3D.b,X)		; 61 3D ; Add with carry ($3D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	lsr $3D.b		; 46 3D ; Logical shift right $3D.b [Reads: Direct Page] [Flags: ZNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b)		; 72 1D ; Add with carry (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $7D3D.w,X		; 7D 3D 7D ; Add $7D3D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $3945.w,X		; 7D 45 39 ; Add $3945.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $79.b		; 45 79 ; Exclusive OR $79.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $1955.w,X		; 1D 55 19 ; OR accumulator with memory $1955.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $59.b,X		; 55 59 ; Exclusive OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $19.b,X		; 35 19 ; Logical AND $19.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $59.b,X		; 35 59 ; Logical AND $59.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $0D2E5D.l		; 2F 5D 2E 0D ; AND accumulator with memory (long) $0D2E5D.l [Writes: Accumulator] [Flags: ZN]
	asl $0E0D.w		; 0E 0D 0E ; Arithmetic shift left $0E0D.w [Flags: ZNC]
	ora $0D0E.w		; 0D 0E 0D ; Logical OR $0D0E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0F4D.l,X		; 1F 4D 0F 0D ; Logical OR long $0D0F4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D0F0D.l,X		; 1F 0D 0F 0D ; Logical OR long $0D0F0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jsl $5D221D.l		; 22 1D 22 5D ; Jump to subroutine long $5D221D.l [Writes: Stack Pointer] [Flow: call]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	trb $5D.b		; 14 5D ; Test and reset bits $5D.b [Reads: Accumulator] [Flags: Z]
	trb $0E0D.w		; 1C 0D 0E ; Test and reset bits $0E0D.w [Reads: Accumulator] [Flags: Z]
	ora $0D1C.w		; 0D 1C 0D ; Logical OR $0D1C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $140D.w		; 0E 0D 14 ; Arithmetic shift left $140D.w [Flags: ZNC]
	ora $5D14.w,X		; 1D 14 5D ; OR accumulator with memory $5D14.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	trb $5D.b		; 14 5D ; Test and reset bits $5D.b [Reads: Accumulator] [Flags: Z]
	bit $70.b,X		; 34 70 ; Test bits $70.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and ($50.b,S),Y		; 33 50 ; AND accumulator (stack relative indirect indexed) ($50.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($70.b,X)		; 01 70 ; Logical OR ($70.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $70.b		; 00 70 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	jmp $4C48.w		; 4C 48 4C ; Jump to $4C48.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sec		; 38 ; Set carry flag [Flags: C]
	.db $50, $7D		; 50 7D ; Branch if overflow clear to $50, $7D [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $1D.b		; 24 1D ; Test bits $1D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $5D.b		; 24 5D ; Test bits $5D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	and ($1D.b)		; 32 1D ; AND accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($5D.b)		; 32 5D ; AND accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $0E0D.w		; 1C 0D 0E ; Test and reset bits $0E0D.w [Reads: Accumulator] [Flags: Z]
	ora $0D1C.w		; 0D 1C 0D ; Logical OR $0D1C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0F4D.l,X		; 1F 4D 0F 0D ; Logical OR long $0D0F4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D0F4D.l,X		; 1F 4D 0F 0D ; Logical OR long $0D0F4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D120D.l,X		; 1F 0D 12 1D ; Logical OR long $1D120D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	ror $471D.w,X		; 7E 1D 47 ; Rotate right $471D.w,X [Reads: X Index] [Flags: ZNC]
	adc $3D44.w,X		; 7D 44 3D ; Add $3D44.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	stz $7D.b		; 64 7D ; Store zero to $7D.b
	ror $421D.w,X		; 7E 1D 42 ; Rotate right $421D.w,X [Reads: X Index] [Flags: ZNC]
	and $1D42.w,X		; 3D 42 1D ; AND accumulator with memory $1D42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $3D		; 42 3D ; Reserved instruction
	eor ($7D.b,X)		; 41 7D ; Exclusive OR accumulator with memory ($7D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($7D.b)		; 52 7D ; Exclusive OR accumulator with memory (indirect) ($7D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $3D		; 42 3D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($7D.b)		; 52 7D ; Exclusive OR accumulator with memory (indirect) ($7D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,S),Y		; 73 1D ; Add with carry (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lsr $7D.b		; 46 7D ; Logical shift right $7D.b [Reads: Direct Page] [Flags: ZNC]
	adc ($7D.b,X)		; 61 7D ; Add with carry ($7D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b)		; 72 5D ; Add with carry (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($7D.b,X)		; 61 7D ; Add with carry ($7D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D751D.l,X		; 7F 1D 75 1D ; Add long $1D751D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $5D.b		; 25 5D ; Logical AND $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor $1D31.w,X		; 5D 31 1D ; Exclusive OR accumulator with memory $1D31.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	trb $88.b		; 14 88 ; Test and reset bits $88.b [Reads: Accumulator] [Flags: Z]
	ora $1988.w,Y		; 19 88 19 ; OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1998.w,Y		; 59 98 19 ; Exclusive OR accumulator with memory $1998.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clv		; B8 ; Clear overflow flag [Flags: V]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	asl $0E0D.w		; 0E 0D 0E ; Arithmetic shift left $0E0D.w [Flags: ZNC]
	ora $0D1F.w		; 0D 1F 0D ; Logical OR $0D1F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $7C0D.w		; 0E 0D 7C ; Arithmetic shift left $7C0D.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $487C.w,Y		; 19 7C 48 ; OR accumulator with memory $487C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $6508.w,X		; 5E 08 65 ; Logical shift right $6508.w,X [Reads: X Index] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $7508.w		; 6E 08 75 ; Rotate right $7508.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA48.w		; AE 48 AA ; Load $AA48.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $60C8.w		; AE C8 60 ; Load $60C8.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $087008.l,X		; 5F 08 70 08 ; Exclusive OR accumulator with memory (long,X) $087008.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $08AA08.l		; 6F 08 AA 08 ; Add with carry (long) $08AA08.l [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $AA2D.w		; 4C 2D AA ; Jump to $AA2D.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4D2D.w		; 4D 2D 4D ; Exclusive OR $4D2D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $08AA.w		; 6D AA 08 ; Add $08AA.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($7D2D.w,X)		; 7C 2D 7D ; Jump indirect indexed to ($7D2D.w,X) [Reads: X Index] [Flow: jump]
	and $08AA.w		; 2D AA 08 ; Logical AND $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $7D2D.w,X		; 7D 2D 7D ; Add $7D2D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $08AA.w		; 2D AA 08 ; Logical AND $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $7C2D.w,X		; 7D 2D 7C ; Add $7C2D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $08AA.w		; 6D AA 08 ; Add $08AA.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $AA6D.w		; 4C 6D AA ; Jump to $AA6D.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $08AA2D.l		; 5C 2D AA 08 ; Jump long to $08AA2D.l [Flow: jump]
	jmp ($5D2D.w)		; 6C 2D 5D ; Jump indirect to ($5D2D.w) [Flow: jump]
	and $2D5D.w		; 2D 5D 2D ; Logical AND $2D5D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $6D2D.w		; 6D 2D 6D ; Add $6D2D.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and $2D4B.w		; 2D 4B 2D ; Logical AND $2D4B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $2D5B2D.l		; 6F 2D 5B 2D ; Add with carry (long) $2D5B2D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $2D6F2D.l,X		; 7F 2D 6F 2D ; Add long $2D6F2D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $2D2E2D.l		; 6F 2D 2E 2D ; Add with carry (long) $2D2E2D.l [Writes: Accumulator] [Flags: ZVNC]
	rol $6F6D.w		; 2E 6D 6F ; Rotate left $6F6D.w [Flags: ZNC]
	adc $6D4B.w		; 6D 4B 6D ; Add $6D4B.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc $6D5B6D.l,X		; 7F 6D 5B 6D ; Add long $6D5B6D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $08AA6D.l		; 5C 6D AA 08 ; Jump long to $08AA6D.l [Flow: jump]
	jmp ($AA6D.w)		; 6C 6D AA ; Jump indirect to ($AA6D.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($2D.b,X)		; 61 2D ; Add with carry ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($0D.b),Y		; 71 0D ; Add with carry ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $2D, $62		; 62 2D 62 ; Push effective relative address $62, $2D, $62 [Writes: Stack Pointer]
	adc $0D72.w		; 6D 72 0D ; Add $0D72.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc ($4D.b)		; 72 4D ; Add with carry (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($6D.b,X)		; 61 6D ; Add with carry ($6D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($4D.b),Y		; 71 4D ; Add with carry ($4D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $AA08.w,X		; BC 08 AA ; Load Y register $AA08.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $BC08.w,X		; BC 08 BC ; Load Y register $BC08.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($2D.b,X)		; 61 2D ; Add with carry ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ldy $7108.w,X		; BC 08 71 ; Load Y register $7108.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	ora $6D61.w		; 0D 61 6D ; Logical OR $6D61.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($4D.b),Y		; 71 4D ; Add with carry ($4D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $08.b		; 65 08 ; Add $08.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0D.b		; 06 0D ; Arithmetic shift left $0D.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0D.b,X		; 16 0D ; Arithmetic shift left $0D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora [$0D.b]		; 07 0D ; OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$4D.b]		; 07 4D ; OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$0D.b],Y		; 17 0D ; OR accumulator with memory (long indexed) [$0D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$4D.b],Y		; 17 4D ; OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $4D.b		; 06 4D ; Arithmetic shift left $4D.b [Reads: Direct Page] [Flags: ZNC]
	ldy $1688.w,X		; BC 88 16 ; Load Y register $1688.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ldy $BC88.w,X		; BC 88 BC ; Load Y register $BC88.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $0688.w,X		; BC 88 06 ; Load Y register $0688.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $0D.b,X		; 16 0D ; Arithmetic shift left $0D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $4D.b		; 06 4D ; Arithmetic shift left $4D.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $4D.b,X		; 16 4D ; Arithmetic shift left $4D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $62, $08, $73		; 62 08 73 ; Push effective relative address $62, $08, $73 [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	.db $10, $4F		; 10 4F ; Branch if plus to $10, $4F [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA48.w		; AE 48 AA ; Load $AA48.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08BBC8.l		; AF C8 BB 08 ; Load long $08BBC8.l into accumulator [Writes: Accumulator] [Flags: ZN]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA88.w		; AE 88 AA ; Load $AA88.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA88.w		; AE 88 AA ; Load $AA88.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AA08.w		; AE 08 AA ; Load $AA08.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08AA88.l		; AF 88 AA 08 ; Load long $08AA88.l into accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $3C38.w		; 0E 38 3C ; Arithmetic shift left $3C38.w [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	and $0038.w,X		; 3D 38 00 ; AND accumulator with memory $0038.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora ($38.b,X)		; 01 38 ; Logical OR ($38.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rol $3E38.w,X		; 3E 38 3E ; Rotate left $3E38.w,X [Reads: X Index] [Flags: ZNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	cop $38.b		; 02 38 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $78.b		; 02 78 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $3C78.w,X		; 3D 78 3C ; AND accumulator with memory $3C78.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora ($78.b,X)		; 01 78 ; Logical OR ($78.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $78.b		; 00 78 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $AA78.w		; 0E 78 AA ; Arithmetic shift left $AA78.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08AA38.l		; 0F 38 AA 08 ; OR accumulator with memory (long) $08AA38.l [Writes: Accumulator] [Flags: ZN]
	ora $381038.l,X		; 1F 38 10 38 ; Logical OR long $381038.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($38.b),Y		; 11 38 ; OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $2138.w		; 20 38 21 ; Jump to subroutine at $2138.w [Writes: Stack Pointer] [Flow: call]
	sec		; 38 ; Set carry flag [Flags: C]
	ora ($38.b)		; 12 38 ; OR accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($78.b)		; 12 78 ; OR accumulator with memory (indirect) ($78.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $782238.l		; 22 38 22 78 ; Jump to subroutine long $782238.l [Writes: Stack Pointer] [Flow: call]
	ora ($78.b),Y		; 11 78 ; OR accumulator with memory ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $78		; 10 78 ; Branch if plus to $10, $78 [Flow: branch]
	and ($78.b,X)		; 21 78 ; Logical AND ($78.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $0F78.w		; 20 78 0F ; Jump to subroutine at $0F78.w [Writes: Stack Pointer] [Flow: call]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08AA78.l,X		; 1F 78 AA 08 ; Logical OR long $08AA78.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $08AA38.l		; 2F 38 AA 08 ; AND accumulator with memory (long) $08AA38.l [Writes: Accumulator] [Flags: ZN]
	and $383038.l,X		; 3F 38 30 38 ; AND accumulator with memory (long,X) $383038.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($38.b),Y		; 31 38 ; AND accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $38.b,S		; 03 38 ; OR accumulator with stack relative $38.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tsb $38.b		; 04 38 ; Test and set bits $38.b [Reads: Accumulator] [Flags: Z]
	and ($38.b)		; 32 38 ; AND accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($78.b)		; 32 78 ; AND accumulator with memory (indirect) ($78.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $38.b		; 05 38 ; Logical OR $38.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $78.b		; 05 78 ; Logical OR $78.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($78.b),Y		; 31 78 ; AND accumulator with memory ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	tsb $78.b		; 04 78 ; Test and set bits $78.b [Reads: Accumulator] [Flags: Z]
	ora $78.b,S		; 03 78 ; OR accumulator with stack relative $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $08AA78.l		; 2F 78 AA 08 ; AND accumulator with memory (long) $08AA78.l [Writes: Accumulator] [Flags: ZN]
	and $08AA78.l,X		; 3F 78 AA 08 ; AND accumulator with memory (long,X) $08AA78.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $78.b,X		; 15 78 ; OR accumulator with memory $78.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $78.b		; 14 78 ; Test and reset bits $78.b [Reads: Accumulator] [Flags: Z]
	cop $78.b		; 02 78 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($78.b,X)		; 01 78 ; Logical OR ($78.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($78.b,S),Y		; 13 78 ; OR accumulator (stack relative indirect indexed) ($78.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($38.b,S),Y		; 13 38 ; OR accumulator (stack relative indirect indexed) ($38.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $78.b		; 00 78 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $38.b		; 00 38 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	trb $38.b		; 14 38 ; Test and reset bits $38.b [Reads: Accumulator] [Flags: Z]
	ora $38.b,X		; 15 38 ; OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($38.b,X)		; 01 38 ; Logical OR ($38.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	cop $38.b		; 02 38 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($78.b,S),Y		; 13 78 ; OR accumulator (stack relative indirect indexed) ($78.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	brk $78.b		; 00 78 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora [$58.b]		; 07 58 ; OR accumulator with memory (long) [$58.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora #$78.b		; 09 78 ; Logical OR #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $1850.w,Y		; 19 50 18 ; OR accumulator with memory $1850.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $10		; 50 10 ; Branch if overflow clear to $50, $10 [Flow: branch]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	.db $10, $38		; 10 38 ; Branch if plus to $10, $38 [Flow: branch]
	jsr $2078.w		; 20 78 20 ; Jump to subroutine at $2078.w [Writes: Stack Pointer] [Flow: call]
	sec		; 38 ; Set carry flag [Flags: C]
	.db $10, $78		; 10 78 ; Branch if plus to $10, $78 [Flow: branch]
	ora [$78.b],Y		; 17 78 ; OR accumulator with memory (long indexed) [$78.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $1F78.w		; 20 78 1F ; Jump to subroutine at $1F78.w [Writes: Stack Pointer] [Flow: call]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	lda $48BE48.l		; AF 48 BE 48 ; Load long $48BE48.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $48.b,X		; 56 48 ; Logical shift right $48.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $BF08.w,Y		; BE 08 BF ; Load X register $BF08.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	ror $48.b		; 66 48 ; Rotate right $48.b [Reads: Direct Page] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sta ($49.b,X)		; 81 49 ; Store accumulator ($49.b,X) [Reads: Accumulator, X Index, Direct Page]
	sta ($49.b),Y		; 91 49 ; Store accumulator ($49.b),Y [Reads: Accumulator, Direct Page, Y Index]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $38		; 30 38 ; Branch if minus to $30, $38 [Flow: branch]
	ora $78.b,S		; 03 78 ; OR accumulator with stack relative $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $38.b,S		; 03 38 ; OR accumulator with stack relative $38.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora #$38.b		; 09 38 ; Logical OR #$38.b with accumulator [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $0710.w,Y		; 19 10 07 ; OR accumulator with memory $0710.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora ($38.b,S),Y		; 13 38 ; OR accumulator (stack relative indirect indexed) ($38.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $38.b		; 14 38 ; Test and reset bits $38.b [Reads: Accumulator] [Flags: Z]
	brk $38.b		; 00 38 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($38.b,X)		; 01 38 ; Logical OR ($38.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $38.b,X		; 15 38 ; OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $78.b,X		; 15 78 ; OR accumulator with memory $78.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $38.b		; 02 38 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $78.b		; 02 78 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	trb $78.b		; 14 78 ; Test and reset bits $78.b [Reads: Accumulator] [Flags: Z]
	ora ($78.b,S),Y		; 13 78 ; OR accumulator (stack relative indirect indexed) ($78.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($78.b,X)		; 01 78 ; Logical OR ($78.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $78.b		; 00 78 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora #$78.b		; 09 78 ; Logical OR #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora [$58.b]		; 07 58 ; OR accumulator with memory (long) [$58.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA50.w,Y		; 19 50 AA ; OR accumulator with memory $AA50.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $4CAA.w		; 4C AA 4C ; Jump to $4CAA.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $4CAA.w		; 4C AA 4C ; Jump to $4CAA.w [Flow: jump]
	and #$10.b		; 29 10 ; Logical AND #$10.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora [$38.b],Y		; 17 38 ; OR accumulator with memory (long indexed) [$38.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1F10.w		; 0D 10 1F ; Logical OR $1F10.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora [$78.b],Y		; 17 78 ; OR accumulator with memory (long indexed) [$78.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$50.b		; 29 50 ; Logical AND #$50.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $500D78.l,X		; 1F 78 0D 50 ; Logical OR long $500D78.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sec		; 38 ; Set carry flag [Flags: C]
	ora #$38.b		; 09 38 ; Logical OR #$38.b with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	.db $10, $0A		; 10 0A ; Branch if plus to $10, $0A [Flow: branch]
	sec		; 38 ; Set carry flag [Flags: C]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	.db $10, $1A		; 10 1A ; Branch if plus to $10, $1A [Flow: branch]
	.db $50, $65		; 50 65 ; Branch if overflow clear to $50, $65 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sta ($51.b,X)		; 81 51 ; Store accumulator ($51.b,X) [Reads: Accumulator, X Index, Direct Page]
	sta ($51.b),Y		; 91 51 ; Store accumulator ($51.b),Y [Reads: Accumulator, Direct Page, Y Index]
	lda $0CAA0C.l		; AF 0C AA 0C ; Load long $0CAA0C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $0CAF0C.l,X		; BF 0C AF 0C ; Load long $0CAF0C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $0C.b		; 46 0C ; Logical shift right $0C.b [Reads: Direct Page] [Flags: ZNC]
	lda $08540C.l,X		; BF 0C 54 08 ; Load long $08540C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $0C.b,X		; 56 0C ; Logical shift right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4C6B.w		; 0C 6B 4C ; Test and set bits $4C6B.w [Reads: Accumulator] [Flags: Z]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	jmp $4C7B.w		; 4C 7B 4C ; Jump to $4C7B.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $DD09.w,X		; DD 09 DD ; Compare accumulator $DD09.w,X [Reads: X Index] [Flags: ZNC]
	ora #$98.b		; 09 98 ; Logical OR #$98.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	cmp $DD28.w,X		; DD 28 DD ; Compare accumulator $DD28.w,X [Reads: X Index] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
.ACCU 8
	sep #$28		; E2 28
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
	sep #$28		; E2 28
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
	lda ($90.b,X)		; A1 90 ; Load accumulator ($90.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $085488.l		; 4F 88 54 08 ; Exclusive OR accumulator with memory (long) $085488.l [Writes: Accumulator] [Flags: ZN]
	lda ($90.b,X)		; A1 90 ; Load accumulator ($90.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $29.b		; 05 29 ; Logical OR $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and #$15.b		; 29 15 ; Logical AND #$15.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$50.b		; 29 50 ; Logical AND #$50.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$55.b		; 29 55 ; Logical AND #$55.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$05.b		; 29 05 ; Logical AND #$05.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$65.b		; 69 65 ; Add #$65.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$15.b		; 29 15 ; Logical AND #$15.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$74.b		; 69 74 ; Add #$74.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$75.b		; 29 75 ; Logical AND #$75.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$C4.b		; 29 C4 ; Logical AND #$C4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	cmp $28.b		; C5 28 ; Compare $28.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $69.b,X		; 75 69 ; Add $69.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $69.b,X		; 74 69 ; Store zero to $69.b,X [Reads: X Index]
	cmp $68.b		; C5 68 ; Compare $68.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $68.b		; C4 68 ; Compare $68.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cmp $DD28.w,X		; DD 28 DD ; Compare accumulator $DD28.w,X [Reads: X Index] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
	cmp ($68.b,S),Y		; D3 68 ; Compare accumulator (stack relative indirect indexed) ($68.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
	sep #$28		; E2 28
	cmp ($68.b,S),Y		; D3 68 ; Compare accumulator (stack relative indirect indexed) ($68.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
.ACCU 8
	sep #$28		; E2 28
.ACCU 8
	sep #$28		; E2 28
	dec $28.b		; C6 28 ; Decrement $28.b [Reads: Direct Page] [Flags: ZN]
.ACCU 8
	sep #$28		; E2 28
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $4C15.w		; 4C 15 4C ; Jump to $4C15.w [Flow: jump]
	ora $5C.b,X		; 15 5C ; OR accumulator with memory $5C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp $AA55.w		; 4C 55 AA ; Jump to $AA55.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $554C55.l		; 5C 55 4C 55 ; Jump long to $554C55.l [Flow: jump]
	adc $2D6F2D.l,X		; 7F 2D 6F 2D ; Add long $2D6F2D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $2D.b		; 05 2D ; Logical OR $2D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2D.b,X		; 55 2D ; Exclusive OR accumulator with memory $2D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $6D7F6D.l		; 6F 6D 7F 6D ; Add with carry (long) $6D7F6D.l [Writes: Accumulator] [Flags: ZVNC]
	eor $6D.b,X		; 55 6D ; Exclusive OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b		; 05 6D ; Logical OR $6D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jmp $88BA15.l		; 5C 15 BA 88 ; Jump long to $88BA15.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2F.b,X		; 55 2F ; Exclusive OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2F.b,X		; 15 2F ; OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	jmp $555B55.l		; 5C 55 5B 55 ; Jump long to $555B55.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $2D.b,X		; 15 2D ; OR accumulator with memory $2D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $2D.b		; 65 2D ; Add $2D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $0D.b		; 25 0D ; Logical AND $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $0D.b,X		; 75 0D ; Add $0D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $6D.b		; 65 6D ; Add $6D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $4D.b,X		; 75 4D ; Add $4D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $4D.b		; 25 4D ; Logical AND $4D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA15.w,X		; 5D 15 BA ; Exclusive OR accumulator with memory $BA15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $BA15.w,X		; 5D 15 BA ; Exclusive OR accumulator with memory $BA15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	jmp ($3A15.w,X)		; 7C 15 3A ; Jump indirect indexed to ($3A15.w,X) [Reads: X Index] [Flow: jump]
	ora $7C.b,X		; 15 7C ; OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $3A.b,X		; 95 3A ; Store accumulator to $3A.b,X [Reads: Accumulator, X Index]
	sta $3A.b,X		; 95 3A ; Store accumulator to $3A.b,X [Reads: Accumulator, X Index]
	eor $7C.b,X		; 55 7C ; Exclusive OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3A.b,X		; 55 3A ; Exclusive OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $7C.b,X		; D5 7C ; Compare accumulator $7C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $BA.b,X		; D5 BA ; Compare accumulator $BA.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $BA55.w,X		; 5D 55 BA ; Exclusive OR accumulator with memory $BA55.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $1655.w,X		; 5D 55 16 ; Exclusive OR accumulator with memory $1655.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D17.w		; 0D 17 0D ; Logical OR $0D17.w with accumulator [Writes: Accumulator] [Flags: ZN]
	rol $0D.b		; 26 0D ; Rotate left $0D.b [Reads: Direct Page] [Flags: ZNC]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$4D.b],Y		; 17 4D ; OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $4D.b,X		; 16 4D ; Arithmetic shift left $4D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $4D.b		; 26 4D ; Rotate left $4D.b [Reads: Direct Page] [Flags: ZNC]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $6C.b,X		; 15 6C ; OR accumulator with memory $6C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	sta $6C.b,X		; 95 6C ; Store accumulator to $6C.b,X [Reads: Accumulator, X Index]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $B495.w		; 2E 95 B4 ; Rotate left $B495.w [Flags: ZNC]
	ora $955B.w,X		; 1D 5B 95 ; OR accumulator with memory $955B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $2F95.w		; 2E 95 2F ; Rotate left $2F95.w [Flags: ZNC]
	sta $2F.b,X		; 95 2F ; Store accumulator to $2F.b,X [Reads: Accumulator, X Index]
	cmp $7B.b,X		; D5 7B ; Compare accumulator $7B.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $7B.b,X		; 95 7B ; Store accumulator to $7B.b,X [Reads: Accumulator, X Index]
	cmp $5B.b,X		; D5 5B ; Compare accumulator $5B.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $BA.b,X		; D5 BA ; Compare accumulator $BA.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp ($6C55.w)		; 6C 55 6C ; Jump indirect to ($6C55.w) [Flow: jump]
	eor $6B.b,X		; 55 6B ; Exclusive OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6B.b,X		; 55 6B ; Exclusive OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	adc $6D15.w		; 6D 15 6D ; Add $6D15.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $12.b,X		; 55 12 ; Exclusive OR accumulator with memory $12.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D12.w		; 0D 12 4D ; Logical OR $4D12.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $0D.b		; 04 0D ; Test and set bits $0D.b [Reads: Accumulator] [Flags: Z]
	tsb $4D.b		; 04 4D ; Test and set bits $4D.b [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0C0D.w,X		; 1E 0D 0C ; Arithmetic shift left $0C0D.w,X [Reads: X Index] [Flags: ZNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $0C0D.w		; 1C 0D 0C ; Test and reset bits $0C0D.w [Reads: Accumulator] [Flags: Z]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $8D0F0D.l		; 0F 0D 0F 8D ; OR accumulator with memory (long) $8D0F0D.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $1C0D.w		; 0C 0D 1C ; Test and set bits $1C0D.w [Reads: Accumulator] [Flags: Z]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $1C4D.w		; 0C 4D 1C ; Test and set bits $1C4D.w [Reads: Accumulator] [Flags: Z]
	eor $0D14.w		; 4D 14 0D ; Exclusive OR $0D14.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $4D.b		; 14 4D ; Test and reset bits $4D.b [Reads: Accumulator] [Flags: Z]
	trb $0D.b		; 14 0D ; Test and reset bits $0D.b [Reads: Accumulator] [Flags: Z]
	trb $4D.b		; 14 4D ; Test and reset bits $4D.b [Reads: Accumulator] [Flags: Z]
	asl $1C0D.w,X		; 1E 0D 1C ; Arithmetic shift left $1C0D.w,X [Reads: X Index] [Flags: ZNC]
	ora $0D1E.w		; 0D 1E 0D ; Logical OR $0D1E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $0D0D.w		; 0C 0D 0D ; Test and set bits $0D0D.w [Reads: Accumulator] [Flags: Z]
	ora $0D1D.w		; 0D 1D 0D ; Logical OR $0D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0D.w,X		; 1D 0D 0D ; OR accumulator with memory $0D0D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D2C.w		; 0D 2C 0D ; Logical OR $0D2C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	bit $2C4D.w		; 2C 4D 2C ; Test bits $2C4D.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	sta $CD2C.w		; 8D 2C CD ; Store accumulator to $CD2C.w [Reads: Accumulator]
	ora $0D4D.w,X		; 1D 4D 0D ; OR accumulator with memory $0D4D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D0D.w		; 4D 0D 4D ; Exclusive OR $4D0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1C4D.w,X		; 1D 4D 1C ; OR accumulator with memory $1C4D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D0C.w		; 4D 0C 4D ; Exclusive OR $4D0C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $1C4D.w		; 0C 4D 1C ; Test and set bits $1C4D.w [Reads: Accumulator] [Flags: Z]
	eor $0D1E.w		; 4D 1E 0D ; Exclusive OR $0D1E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1E0D.w,X		; 1D 0D 1E ; OR accumulator with memory $1E0D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D0D.w		; 0D 0D 0D ; Logical OR $0D0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D0D.w		; 0D 0D 0D ; Logical OR $0D0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D1D.w		; 0D 1D 0D ; Logical OR $0D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0F0D.w		; 0D 0D 0F ; Logical OR $0F0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $8D0F.w		; 0D 0F 8D ; Logical OR $8D0F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $4D0FCD.l		; 0F CD 0F 4D ; OR accumulator with memory (long) $4D0FCD.l [Writes: Accumulator] [Flags: ZN]
	ora $0D4D.w		; 0D 4D 0D ; Logical OR $0D4D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $4D0D.w		; 4D 0D 4D ; Exclusive OR $4D0D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D4D.w,X		; 1D 4D 1D ; OR accumulator with memory $1D4D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D0C.w		; 4D 0C 4D ; Exclusive OR $4D0C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1C4D.w		; 0D 4D 1C ; Logical OR $1C4D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $1DE4.w		; 4D E4 1D ; Exclusive OR $1DE4.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cpx $1D.b		; E4 1D ; Compare $1D.b with X register [Reads: X Index, Direct Page] [Flags: ZNC]
	cpx $1D.b		; E4 1D ; Compare $1D.b with X register [Reads: X Index, Direct Page] [Flags: ZNC]
	cpx $1D.b		; E4 1D ; Compare $1D.b with X register [Reads: X Index, Direct Page] [Flags: ZNC]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
.INDEX 8
	sep #$1D		; E2 1D
.INDEX 8
	sep #$5D		; E2 5D
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1DFE.w,X		; 5D FE 1D ; Exclusive OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	cmp $1DFE.w,X		; DD FE 1D ; Compare accumulator $1DFE.w,X [Reads: X Index] [Flags: ZNC]
	trb $0D.b		; 14 0D ; Test and reset bits $0D.b [Reads: Accumulator] [Flags: Z]
	trb $4D.b		; 14 4D ; Test and reset bits $4D.b [Reads: Accumulator] [Flags: Z]
	bit $0D.b		; 24 0D ; Test bits $0D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $4D.b		; 24 4D ; Test bits $4D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	ora $0D.b,S		; 03 0D ; OR accumulator with stack relative $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,S		; 03 4D ; OR accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b,S),Y		; 13 0D ; OR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4D.b,S),Y		; 13 4D ; OR accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $1C0D.w,X		; 1E 0D 1C ; Arithmetic shift left $1C0D.w,X [Reads: X Index] [Flags: ZNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $1C0D.w		; 0C 0D 1C ; Test and set bits $1C0D.w [Reads: Accumulator] [Flags: Z]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $4D0FCD.l		; 0F CD 0F 4D ; OR accumulator with memory (long) $4D0FCD.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $0C4D.w		; 1C 4D 0C ; Test and reset bits $0C4D.w [Reads: Accumulator] [Flags: Z]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $08.b		; A4 08 ; Load $08.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $B4C8.w,Y		; 79 C8 B4 ; Add $B4C8.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $80, $10		; 80 10 ; Branch always to $80, $10 [Flow: branch]
	sta ($10.b,X)		; 81 10 ; Store accumulator ($10.b,X) [Reads: Accumulator, X Index, Direct Page]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	.db $80, $10		; 80 10 ; Branch always to $80, $10 [Flow: branch]
	sta ($10.b,X)		; 81 10 ; Store accumulator ($10.b,X) [Reads: Accumulator, X Index, Direct Page]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,X		; 55 08 ; Exclusive OR accumulator with memory $08.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $10.b		; 46 10 ; Logical shift right $10.b [Reads: Direct Page] [Flags: ZNC]
	lda $105410.l,X		; BF 10 54 10 ; Load long $105410.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $10.b,X		; 56 10 ; Logical shift right $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ldx $BE10.w,Y		; BE 10 BE ; Load X register $BE10.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	.db $50, $BF		; 50 BF ; Branch if overflow clear to $50, $BF [Flow: branch]
	.db $10, $BF		; 10 BF ; Branch if plus to $10, $BF [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $35.b		; 65 35 ; Add $35.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $75.b		; 65 75 ; Add $75.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $35.b		; 66 35 ; Rotate right $35.b [Reads: Direct Page] [Flags: ZNC]
	ror $75.b		; 66 75 ; Rotate right $75.b [Reads: Direct Page] [Flags: ZNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $08		; 70 08 ; Branch if overflow set to $70, $08 [Flow: branch]
	and $15.b,S		; 23 15 ; AND accumulator with stack relative $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $35.b,S		; 23 35 ; AND accumulator with stack relative $35.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc $35.b		; 65 35 ; Add $35.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($35.b,S),Y		; 33 35 ; AND accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ror $35.b		; 66 35 ; Rotate right $35.b [Reads: Direct Page] [Flags: ZNC]
	adc $75.b		; 65 75 ; Add $75.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $75.b,S		; 23 75 ; AND accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ror $75.b		; 66 75 ; Rotate right $75.b [Reads: Direct Page] [Flags: ZNC]
	and ($75.b,S),Y		; 33 75 ; AND accumulator (stack relative indirect indexed) ($75.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $55.b,S		; 23 55 ; AND accumulator with stack relative $55.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc ($08.b),Y		; 71 08 ; Add with carry ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $10, $A1		; 62 10 A1 ; Push effective relative address $62, $10, $A1 [Writes: Stack Pointer]
	.db $10, $A0		; 10 A0 ; Branch if plus to $10, $A0 [Flow: branch]
	.db $10, $5C		; 10 5C ; Branch if plus to $10, $5C [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and ($15.b,S),Y		; 33 15 ; AND accumulator (stack relative indirect indexed) ($15.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	eor ($08.b),Y		; 51 08 ; Exclusive OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($55.b,S),Y		; 33 55 ; AND accumulator (stack relative indirect indexed) ($55.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($08.b,X)		; 41 08 ; Exclusive OR accumulator with memory ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	eor ($08.b),Y		; 51 08 ; Exclusive OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldx $BE10.w,Y		; BE 10 BE ; Load X register $BE10.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	.db $50, $80		; 50 80 ; Branch if overflow clear to $50, $80 [Flow: branch]
	.db $10, $81		; 10 81 ; Branch if plus to $10, $81 [Flow: branch]
	.db $10, $54		; 10 54 ; Branch if plus to $10, $54 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D48.w		; 4D 48 4D ; Exclusive OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4C08.w,Y		; 59 08 4C ; Exclusive OR accumulator with memory $4C08.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $5A48.w		; 4C 48 5A ; Jump to $5A48.w [Flow: jump]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4C.b,X		; 15 4C ; OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $5B48.w		; 4C 48 5B ; Jump to $5B48.w [Flow: jump]
	eor $5A.b,X		; 55 5A ; Exclusive OR accumulator with memory $5A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4E.b,X		; 55 4E ; Exclusive OR accumulator with memory $4E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	jmp $4E15.w		; 4C 15 4E ; Jump to $4E15.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $3D4D15.l		; 5C 15 4D 3D ; Jump long to $3D4D15.l [Flow: jump]
	lsr $5D35.w		; 4E 35 5D ; Logical shift right $5D35.w [Flags: ZNC]
	and $355E.w,X		; 3D 5E 35 ; AND accumulator with memory $355E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $4D75.w		; 4E 75 4D ; Logical shift right $4D75.w [Flags: ZNC]
	adc $755E.w,X		; 7D 5E 75 ; Add $755E.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $4C7D.w,X		; 5D 7D 4C ; Exclusive OR accumulator with memory $4C7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4F.b,X		; 55 4F ; Exclusive OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	jmp $084F55.l		; 5C 55 4F 08 ; Jump long to $084F55.l [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $354E.w,X		; 3D 4E 35 ; AND accumulator with memory $354E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $5E3D.w,Y		; 59 3D 5E ; Exclusive OR accumulator with memory $5E3D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $4E.b,X		; 35 4E ; Logical AND $4E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $4A.b,X		; 75 4A ; Add $4A.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $755E.w,X		; 7D 5E 75 ; Add $755E.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $497D.w,Y		; 59 7D 49 ; Exclusive OR accumulator with memory $497D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6F.b,X		; 55 6F ; Exclusive OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4E.b,X		; 55 4E ; Exclusive OR accumulator with memory $4E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	adc $4E15.w,Y		; 79 15 4E ; Add $4E15.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $45.b,X		; 15 45 ; OR accumulator with memory $45.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $3D43.w,X		; 3D 43 3D ; AND accumulator with memory $3D43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $3D.b,X		; 55 3D ; Exclusive OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc [$3D.b],Y		; 77 3D ; Add with carry (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $7D.b,S		; 43 7D ; Exclusive OR accumulator with stack relative $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $7D.b		; 45 7D ; Exclusive OR $7D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc [$7D.b],Y		; 77 7D ; Add with carry (long indexed) [$7D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $7D.b,X		; 55 7D ; Exclusive OR accumulator with memory $7D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $4F55.w,Y		; 79 55 4F ; Add $4F55.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor $4F.b,X		; 55 4F ; Exclusive OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $156815.l,X		; 7F 15 68 15 ; Add long $156815.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $10, $1D		; 10 1D ; Branch if plus to $10, $1D [Flow: branch]
	bit $1D.b,X		; 34 1D ; Test bits $1D.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	adc #$3D.b		; 69 3D ; Add #$3D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor [$3D.b],Y		; 57 3D ; Exclusive OR accumulator with memory (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $3D.b,X		; 35 3D ; Logical AND $3D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$7D.b],Y		; 57 7D ; Exclusive OR accumulator with memory (long indexed) [$7D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc #$7D.b		; 69 7D ; Add #$7D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc [$7D.b]		; 67 7D ; Add with carry (long) [$7D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $7D.b,X		; 35 7D ; Logical AND $7D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $7F.b,X		; 55 7F ; Exclusive OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $34.b,X		; 55 34 ; Exclusive OR accumulator with memory $34.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D10.w,X		; 5D 10 5D ; Exclusive OR accumulator with memory $5D10.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $6B88.w		; 4E 88 6B ; Logical shift right $6B88.w [Flags: ZNC]
	ora $4E.b,X		; 15 4E ; OR accumulator with memory $4E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $21.b,X		; 15 21 ; OR accumulator with memory $21.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1CFE.w,X		; 1D FE 1C ; OR accumulator with memory $1CFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor [$15.b]		; 47 15 ; Exclusive OR accumulator with memory (long) [$15.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $FE15.w		; 6E 15 FE ; Rotate right $FE15.w [Flags: ZNC]
	jmp $6E5D21.l		; 5C 21 5D 6E ; Jump long to $6E5D21.l [Flow: jump]
	eor $47.b,X		; 55 47 ; Exclusive OR accumulator with memory $47.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6B.b,X		; 55 6B ; Exclusive OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4F.b,X		; 55 4F ; Exclusive OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4F.b,X		; 55 4F ; Exclusive OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $751D.w		; 20 1D 75 ; Jump to subroutine at $751D.w [Writes: Stack Pointer] [Flow: call]
	ora $00.b,X		; 15 00 ; OR accumulator with memory $00.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $01.b,X		; 15 01 ; OR accumulator with memory $01.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $76.b,X		; 15 76 ; OR accumulator with memory $76.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $3D77.w,X		; 3D 77 3D ; AND accumulator with memory $3D77.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $1D.b		; 46 1D ; Logical shift right $1D.b [Reads: Direct Page] [Flags: ZNC]
	inc $771C.w,X		; FE 1C 77 ; Increment memory $771C.w,X [Reads: X Index] [Flags: ZN]
	adc $7D76.w,X		; 7D 76 7D ; Add $7D76.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	inc $465C.w,X		; FE 5C 46 ; Increment memory $465C.w,X [Reads: X Index] [Flags: ZN]
	eor $5575.w,X		; 5D 75 55 ; Exclusive OR accumulator with memory $5575.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jsr $015D.w		; 20 5D 01 ; Jump to subroutine at $015D.w [Writes: Stack Pointer] [Flow: call]
	eor $00.b,X		; 55 00 ; Exclusive OR accumulator with memory $00.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $21.b,X		; 55 21 ; Exclusive OR accumulator with memory $21.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1CFE.w,X		; 1D FE 1C ; OR accumulator with memory $1CFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1D6C.w,X		; 1D 6C 1D ; OR accumulator with memory $1D6C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $215C.w,X		; FE 5C 21 ; Increment memory $215C.w,X [Reads: X Index] [Flags: ZN]
	eor $5D6C.w,X		; 5D 6C 5D ; Exclusive OR accumulator with memory $5D6C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $085B.w,X		; 5D 5B 08 ; Exclusive OR accumulator with memory $085B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $4308.w,Y		; 79 08 43 ; Add $4308.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4448.w,X		; 5D 48 44 ; Exclusive OR accumulator with memory $4448.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $54.b,X		; 15 54 ; OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0B.b,X		; 15 0B ; OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $44.b,X		; 55 44 ; Exclusive OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0B.b,X		; 55 0B ; Exclusive OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora ($15.b),Y		; 11 15 ; OR accumulator with memory ($15.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	eor [$15.b]		; 47 15 ; Exclusive OR accumulator with memory (long) [$15.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $4415.w		; 6E 15 44 ; Rotate right $4415.w [Flags: ZNC]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6E.b,X		; 15 6E ; OR accumulator with memory $6E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $47.b,X		; 55 47 ; Exclusive OR accumulator with memory $47.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $7E.b,X		; 55 7E ; Exclusive OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $44.b,X		; 55 44 ; Exclusive OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $11.b,X		; 55 11 ; Exclusive OR accumulator with memory $11.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora $7C.b,X		; 15 7C ; OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5C.b,X		; 15 5C ; OR accumulator with memory $5C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $557C.w,X		; 1D 7C 55 ; OR accumulator with memory $557C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	eor $1A.b,X		; 55 1A ; Exclusive OR accumulator with memory $1A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $485C.w,X		; 5D 5C 48 ; Exclusive OR accumulator with memory $485C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	mvn $0B,$15		; 54 15 0B ; Move block negative $0B,$15 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $54.b,X		; 15 54 ; OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0B.b,X		; 15 0B ; OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0B.b,X		; 15 0B ; OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0B.b,X		; 55 0B ; Exclusive OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $A1.b,X		; 55 A1 ; Exclusive OR accumulator with memory $A1.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $62		; 50 62 ; Branch if overflow clear to $50, $62 [Flow: branch]
	.db $50, $5C		; 50 5C ; Branch if overflow clear to $50, $5C [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy #$50.b		; A0 50 ; Load #$50.b into Y register [Writes: Y Index] [Flags: ZN]
	mvn $0B,$15		; 54 15 0B ; Move block negative $0B,$15 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $44.b,X		; 15 44 ; OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7D.b,X		; 15 7D ; OR accumulator with memory $7D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $550B.w,X		; 1D 0B 55 ; OR accumulator with memory $550B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	mvn $7D,$55		; 54 55 7D ; Move block negative $7D,$55 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $5544.w,X		; 5D 44 55 ; Exclusive OR accumulator with memory $5544.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $BACC.w,X		; 9D CC BA ; Store accumulator to $BACC.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $8C8F8C.l		; 8F 8C 8F 8C ; Store accumulator (long) $8C8F8C.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $BA8C.w,X		; 9D 8C BA ; Store accumulator to $BA8C.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $BA4C.w		; 8E 4C BA ; Store X register to $BA4C.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $0E4C.w		; 8E 4C 0E ; Store X register to $0E4C.w [Reads: X Index]
	ora $190F.w,Y		; 19 0F 19 ; OR accumulator with memory $190F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $1F19.w,X		; 1E 19 1F ; Arithmetic shift left $1F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $0C8E.w,Y		; 19 8E 0C ; OR accumulator with memory $0C8E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $BA0C.w		; 8E 0C BA ; Store X register to $BA0C.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $62, $08, $A1		; 62 08 A1 ; Push effective relative address $62, $08, $A1 [Writes: Stack Pointer]
	tsb $0CA0.w		; 0C A0 0C ; Test and set bits $0CA0.w [Reads: Accumulator] [Flags: Z]
	ora $4CA119.l,X		; 1F 19 A1 4C ; Logical OR long $4CA119.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $1E		; 62 48 1E ; Push effective relative address $62, $48, $1E [Writes: Stack Pointer]
	ora $4CA0.w,Y		; 19 A0 4C ; OR accumulator with memory $4CA0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D4019.l,X		; 1F 19 40 1D ; Logical OR long $1D4019.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $5019.w,X		; 1E 19 50 ; Arithmetic shift left $5019.w,X [Reads: X Index] [Flags: ZNC]
	ora $1D64.w,X		; 1D 64 1D ; OR accumulator with memory $1D64.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D7D.w,X		; 1D 7D 1D ; OR accumulator with memory $1D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	eor $64.b,X		; 55 64 ; Exclusive OR accumulator with memory $64.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D7D.w,X		; 5D 7D 5D ; Exclusive OR accumulator with memory $5D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b,X		; 74 5D ; Store zero to $5D.b,X [Reads: X Index]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $190F.w,X		; 5D 0F 19 ; Exclusive OR accumulator with memory $190F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $5D		; 50 5D ; Branch if overflow clear to $50, $5D [Flow: branch]
	ora $0CAA19.l,X		; 1F 19 AA 0C ; Logical OR long $0CAA19.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0C8C.w		; 0C 8C 0C ; Test and set bits $0C8C.w [Reads: Accumulator] [Flags: Z]
	stz $8C0C.w,X		; 9E 0C 8C ; Store zero to $8C0C.w,X [Reads: X Index]
	tsb $0C9E.w		; 0C 9E 0C ; Test and set bits $0C9E.w [Reads: Accumulator] [Flags: Z]
	sta $08BA0C.l,X		; 9F 0C BA 08 ; Store accumulator (long,X) $08BA0C.l,X [Reads: Accumulator, X Index]
	asl $0F19.w		; 0E 19 0F ; Arithmetic shift left $0F19.w [Flags: ZNC]
	ora $4CAF.w,Y		; 19 AF 4C ; OR accumulator with memory $4CAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldx $0E4C.w,Y		; BE 4C 0E ; Load X register $0E4C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	ora $190F.w,Y		; 19 0F 19 ; OR accumulator with memory $190F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldx $BE0C.w,Y		; BE 0C BE ; Load X register $BE0C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	jmp $190E.w		; 4C 0E 19 ; Jump to $190E.w [Flow: jump]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $0CBE.w,X		; 1D BE 0C ; OR accumulator with memory $0CBE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $152B.w,X		; 1D 2B 15 ; OR accumulator with memory $152B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $152B.w,X		; 5D 2B 15 ; Exclusive OR accumulator with memory $152B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b,X)		; 61 5D ; Add with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $190F.w,X		; 5D 0F 19 ; Exclusive OR accumulator with memory $190F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $5D		; 50 5D ; Branch if overflow clear to $50, $5D [Flow: branch]
	ldx $0E4C.w,Y		; BE 4C 0E ; Load X register $0E4C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	ora $190F.w,Y		; 19 0F 19 ; OR accumulator with memory $190F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldx $AF0C.w,Y		; BE 0C AF ; Load X register $AF0C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	sty $8C0C.w		; 8C 0C 8C ; Store Y register to $8C0C.w [Reads: Y Index]
	tsb $0C9C.w		; 0C 9C 0C ; Test and set bits $0C9C.w [Reads: Accumulator] [Flags: Z]
	sta $0C8F0C.l		; 8F 0C 8F 0C ; Store accumulator (long) $0C8F0C.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $BA0C.w		; 9C 0C BA ; Store zero to $BA0C.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $5D41.w,X		; 1D 41 5D ; OR accumulator with memory $5D41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	eor ($1D.b),Y		; 51 1D ; Exclusive OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b,X)		; 41 1D ; Exclusive OR accumulator with memory ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b,X)		; 41 5D ; Exclusive OR accumulator with memory ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b,X)		; 41 1D ; Exclusive OR accumulator with memory ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b)		; 52 5D ; Exclusive OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $152B.w,X		; 1D 2B 15 ; OR accumulator with memory $152B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $152B.w,X		; 5D 2B 15 ; Exclusive OR accumulator with memory $152B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($5D.b,S),Y		; 53 5D ; XOR accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $5D		; 42 5D ; Reserved instruction
	eor ($5D.b,X)		; 41 5D ; Exclusive OR accumulator with memory ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b)		; 52 1D ; Exclusive OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b,X)		; 41 1D ; Exclusive OR accumulator with memory ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5D51.w,X		; 5D 51 5D ; Exclusive OR accumulator with memory $5D51.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $5D		; 50 5D ; Branch if overflow clear to $50, $5D [Flow: branch]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1D61.w,X		; 1D 61 1D ; OR accumulator with memory $1D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $1D		; 50 1D ; Branch if overflow clear to $50, $1D [Flow: branch]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $2B.b,X		; 15 2B ; OR accumulator with memory $2B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2B.b,X		; 15 2B ; OR accumulator with memory $2B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2B.b,X		; 15 2B ; OR accumulator with memory $2B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D60.w,X		; 5D 60 5D ; Exclusive OR accumulator with memory $5D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b,X)		; 61 5D ; Add with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $50, $5D		; 50 5D ; Branch if overflow clear to $50, $5D [Flow: branch]
	sta $AB0C.w,X		; 9D 0C AB ; Store accumulator to $AB0C.w,X [Reads: Accumulator, X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $2A.b,X		; 15 2A ; OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $2A.b,X		; 95 2A ; Store accumulator to $2A.b,X [Reads: Accumulator, X Index]
	cmp $BA.b,X		; D5 BA ; Compare accumulator $BA.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $BA4C.w		; 9C 4C BA ; Store zero to $BA4C.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $AA4C.w		; 8C 4C AA ; Store Y register to $AA4C.w [Reads: Y Index]
	tsb $4C9C.w		; 0C 9C 4C ; Test and set bits $4C9C.w [Reads: Accumulator] [Flags: Z]
	sty $8C4C.w		; 8C 4C 8C ; Store Y register to $8C4C.w [Reads: Y Index]
	sty $8C9E.w		; 8C 9E 8C ; Store Y register to $8C9E.w [Reads: Y Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $24.b,X		; 15 24 ; OR accumulator with memory $24.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $952A.w		; 0D 2A 95 ; Logical OR $952A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0C.b,S		; E3 0C ; Subtract stack-relative $0C.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	bit $4D.b		; 24 4D ; Test bits $4D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $E3.b,X		; 55 E3 ; Exclusive OR accumulator with memory $E3.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	jmp $D52A.w		; 4C 2A D5 ; Jump to $D52A.w [Flow: jump]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $E3.b,X		; 15 E3 ; OR accumulator with memory $E3.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sty $952A.w		; 8C 2A 95 ; Store Y register to $952A.w [Reads: Y Index]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	cmp $E3.b,X		; D5 E3 ; Compare accumulator $E3.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cpy $552A.w		; CC 2A 55 ; Compare $552A.w with Y register [Reads: Y Index] [Flags: ZNC]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sta $2A.b,X		; 95 2A ; Store accumulator to $2A.b,X [Reads: Accumulator, X Index]
	cmp $60.b,X		; D5 60 ; Compare accumulator $60.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $1D71.w,X		; 1D 71 1D ; OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($5D.b)		; 72 5D ; Add with carry (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $62		; 62 1D 62 ; Push effective relative address $62, $1D, $62 [Writes: Stack Pointer]
	eor $1D72.w,X		; 5D 72 1D ; Exclusive OR accumulator with memory $1D72.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b)		; 72 5D ; Add with carry (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $63		; 62 1D 63 ; Push effective relative address $62, $1D, $63 [Writes: Stack Pointer]
	ora $1D72.w,X		; 1D 72 1D ; OR accumulator with memory $1D72.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,S),Y		; 73 1D ; Add with carry (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1B.b,X		; 15 1B ; OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1B.b,X		; 15 1B ; OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1B.b,X		; 15 1B ; OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $63.b,X		; 15 63 ; OR accumulator with memory $63.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D62.w,X		; 5D 62 5D ; Exclusive OR accumulator with memory $5D62.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b,S),Y		; 73 5D ; Add with carry (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b)		; 72 5D ; Add with carry (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $1D72.w,X		; 5D 72 1D ; Exclusive OR accumulator with memory $1D72.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta $BA4C.w,X		; 9D 4C BA ; Store accumulator to $BA4C.w,X [Reads: Accumulator, X Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b)		; 32 1D ; AND accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1F19.w,X		; 1E 19 1F ; Arithmetic shift left $1F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D32.w,Y		; 19 32 5D ; OR accumulator with memory $5D32.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b)		; 32 1D ; AND accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1F19.w,X		; 1E 19 1F ; Arithmetic shift left $1F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D32.w,Y		; 19 32 5D ; OR accumulator with memory $5D32.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $1D		; 30 1D ; Branch if minus to $30, $1D [Flow: branch]
	asl $1F19.w,X		; 1E 19 1F ; Arithmetic shift left $1F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $151B.w,Y		; 19 1B 15 ; OR accumulator with memory $151B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1E.b,X		; 15 1E ; OR accumulator with memory $1E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $191F.w,Y		; 19 1F 19 ; OR accumulator with memory $191F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $5D		; 30 5D ; Branch if minus to $30, $5D [Flow: branch]
	and ($1D.b)		; 32 1D ; AND accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1F19.w,X		; 1E 19 1F ; Arithmetic shift left $1F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D32.w,Y		; 19 32 5D ; OR accumulator with memory $5D32.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($5D.b),Y		; 31 5D ; AND accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $1F19.w,X		; 1E 19 1F ; Arithmetic shift left $1F19.w,X [Reads: X Index] [Flags: ZNC]
	ora $10BE.w,Y		; 19 BE 10 ; OR accumulator with memory $10BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $50.b		; 46 50 ; Logical shift right $50.b [Reads: Direct Page] [Flags: ZNC]
	sta ($50.b,X)		; 81 50 ; Store accumulator ($50.b,X) [Reads: Accumulator, X Index, Direct Page]
	mvn $4F,$48		; 54 48 4F ; Move block negative $4F,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora ($4F.b),Y		; 11 4F ; OR accumulator with memory ($4F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($5F.b),Y		; 51 5F ; Exclusive OR accumulator with memory ($5F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5F.b),Y		; 11 5F ; OR accumulator with memory ($5F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b),Y		; 51 6D ; Exclusive OR accumulator with memory ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6D.b),Y		; 11 6D ; OR accumulator with memory ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1E.b),Y		; 51 1E ; Exclusive OR accumulator with memory ($1E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $191F.w,Y		; 19 1F 19 ; OR accumulator with memory $191F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $C8BAC8.l		; 4F C8 BA C8 ; Exclusive OR accumulator with memory (long) $C8BAC8.l [Writes: Accumulator] [Flags: ZN]
	eor $D0B548.l		; 4F 48 B5 D0 ; Exclusive OR accumulator with memory (long) $D0B548.l [Writes: Accumulator] [Flags: ZN]
	eor $50A4C8.l		; 4F C8 A4 50 ; Exclusive OR accumulator with memory (long) $50A4C8.l [Writes: Accumulator] [Flags: ZN]
	eor $50B448.l		; 4F 48 B4 50 ; Exclusive OR accumulator with memory (long) $50B448.l [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	.db $D0, $BA		; D0 BA ; Branch if not equal to $D0, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $8F0C.w		; 8C 0C 8F ; Store Y register to $8F0C.w [Reads: Y Index]
	tsb $0C9F.w		; 0C 9F 0C ; Test and set bits $0C9F.w [Reads: Accumulator] [Flags: Z]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $0C8F0C.l		; 8F 0C 8F 0C ; Store accumulator (long) $0C8F0C.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $8348.w,Y		; 79 48 83 ; Add $8348.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tsb $190F.w		; 0C 0F 19 ; Test and set bits $190F.w [Reads: Accumulator] [Flags: Z]
	sta ($0C.b,S),Y		; 93 0C ; Store accumulator (stack relative indirect indexed) ($0C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index]
	ora $284019.l,X		; 1F 19 40 28 ; Logical OR long $284019.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($28.b,X)		; 41 28 ; Exclusive OR accumulator with memory ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	eor ($28.b),Y		; 51 28 ; Exclusive OR accumulator with memory ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $08BA0C.l,X		; 9F 0C BA 08 ; Store accumulator (long,X) $08BA0C.l,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $9848.w,Y		; 79 48 98 ; Add $9848.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $7808.w,X		; 5D 08 78 ; Exclusive OR accumulator with memory $7808.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $0C.b,S		; A3 0C ; Load accumulator (stack relative) $0C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $0CB319.l		; 0F 19 B3 0C ; OR accumulator with memory (long) $0CB319.l [Writes: Accumulator] [Flags: ZN]
	ora $084219.l,X		; 1F 19 42 08 ; Logical OR long $084219.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $82, $0C, $52		; 82 0C 52 ; Branch always long to $82, $0C, $52 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($0C.b)		; 92 0C ; Store accumulator (indirect) ($0C.b) [Reads: Accumulator, Direct Page]
	ldx #$0C.b		; A2 0C ; Load #$0C.b into X register [Writes: X Index] [Flags: ZN]
	ora $0CB219.l		; 0F 19 B2 0C ; OR accumulator with memory (long) $0CB219.l [Writes: Accumulator] [Flags: ZN]
	ora $0D8319.l,X		; 1F 19 83 0D ; Logical OR long $0D8319.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $4D.b,S		; 83 4D ; Store accumulator (stack relative) $4D.b,S [Reads: Accumulator, Stack Pointer]
	sta ($0D.b,S),Y		; 93 0D ; Store accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index]
	sta ($4D.b,S),Y		; 93 4D ; Store accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index]
	and $1D151D.l		; 2F 1D 15 1D ; AND accumulator with memory (long) $1D151D.l [Writes: Accumulator] [Flags: ZN]
	asl $2519.w,X		; 1E 19 25 ; Arithmetic shift left $2519.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D15.w,X		; 1D 15 5D ; OR accumulator with memory $5D15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D2519.l		; 0F 19 25 5D ; OR accumulator with memory (long) $5D2519.l [Writes: Accumulator] [Flags: ZN]
	and $1D049D.l		; 2F 9D 04 1D ; AND accumulator with memory (long) $1D049D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1419.w,X		; 1E 19 14 ; Arithmetic shift left $1419.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D05.w,X		; 1D 05 5D ; OR accumulator with memory $5D05.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $5D.b		; 04 5D ; Test and set bits $5D.b [Reads: Accumulator] [Flags: Z]
	trb $5D.b		; 14 5D ; Test and reset bits $5D.b [Reads: Accumulator] [Flags: Z]
	ora $E8BA19.l,X		; 1F 19 BA E8 ; Logical OR long $E8BA19.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	lda $10BA10.l		; AF 10 BA 10 ; Load long $10BA10.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $10AF10.l,X		; BF 10 AF 10 ; Load long $10AF10.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $0C.b		; 46 0C ; Logical shift right $0C.b [Reads: Direct Page] [Flags: ZNC]
	ldx $444C.w,Y		; BE 4C 44 ; Load X register $444C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	ldx $460C.w,Y		; BE 0C 46 ; Load X register $460C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	jmp $0C80.w		; 4C 80 0C ; Jump to $0C80.w [Flow: jump]
	mvn $80,$48		; 54 48 80 ; Move block negative $80,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	.db $10, $81		; 10 81 ; Branch if plus to $10, $81 [Flow: branch]
	.db $10, $55		; 10 55 ; Branch if plus to $10, $55 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	lsr $19.b,X		; 56 19 ; Logical shift right $19.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $59.b,X		; 56 59 ; Logical shift right $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $19.b,X		; 36 19 ; Rotate left $19.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $59.b,X		; 36 59 ; Rotate left $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$19.b],Y		; 37 19 ; AND accumulator with memory (long indexed) [$19.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$59.b],Y		; 37 59 ; AND accumulator with memory (long indexed) [$59.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $4B2D.w		; 0E 2D 4B ; Arithmetic shift left $4B2D.w [Flags: ZNC]
	and $2D09.w		; 2D 09 2D ; Logical AND $2D09.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b,X)		; 41 2D ; Exclusive OR accumulator with memory ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $7D2D.w		; 6E 2D 7D ; Rotate right $7D2D.w [Flags: ZNC]
	and $2D40.w		; 2D 40 2D ; Logical AND $2D40.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $50, $2D		; 50 2D ; Branch if overflow clear to $50, $2D [Flow: branch]
	adc $7D2D.w,X		; 7D 2D 7D ; Add $7D2D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $2D60.w		; 2D 60 2D ; Logical AND $2D60.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $70, $2D		; 70 2D ; Branch if overflow set to $70, $2D [Flow: branch]
	adc $7D6D.w,X		; 7D 6D 7D ; Add $7D6D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $6D70.w		; 6D 70 6D ; Add $6D70.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $6D7D.w		; 6D 7D 6D ; Add $6D7D.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ror $506D.w		; 6E 6D 50 ; Rotate right $506D.w [Flags: ZNC]
	adc $6D40.w		; 6D 40 6D ; Add $6D40.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	adc $6D0E.w		; 6D 0E 6D ; Add $6D0E.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor ($6D.b,X)		; 41 6D ; Exclusive OR accumulator with memory ($6D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora #$6D.b		; 09 6D ; Logical OR #$6D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $512D.w,Y		; 19 2D 51 ; OR accumulator with memory $512D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $AD19.w		; 2D 19 AD ; Logical AND $AD19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $2D4F.w		; 2D 4F 2D ; Logical AND $2D4F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	and $2D69.w		; 2D 69 2D ; Logical AND $2D69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	adc $6D51.w		; 6D 51 6D ; Add $6D51.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc #$6D.b		; 69 6D ; Add #$6D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor ($6D.b),Y		; 51 6D ; Exclusive OR accumulator with memory ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b),Y		; 51 6D ; Exclusive OR accumulator with memory ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $6D0A6D.l		; 4F 6D 0A 6D ; Exclusive OR accumulator with memory (long) $6D0A6D.l [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b),Y		; 51 6D ; Exclusive OR accumulator with memory ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $516D.w,Y		; 19 6D 51 ; OR accumulator with memory $516D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $ED19.w		; 6D 19 ED ; Add $ED19.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($2D.b,X)		; 61 2D ; Add with carry ($2D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $712D.w,Y		; 39 2D 71 ; AND accumulator with memory $712D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $2D1A.w		; 2D 1A 2D ; Logical AND $2D1A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $2D422D.l,X		; 5F 2D 42 2D ; Exclusive OR accumulator with memory (long,X) $2D422D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $2D6A.w		; 2D 6A 2D ; Logical AND $2D6A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $28C4.w		; 2D C4 28 ; Logical AND $28C4.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $28.b		; C5 28 ; Compare $28.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $2D6A.w		; 2D 6A 2D ; Logical AND $2D6A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $68.b		; C5 68 ; Compare $68.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $68.b		; C4 68 ; Compare $68.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	eor $6D1A6D.l,X		; 5F 6D 1A 6D ; Exclusive OR accumulator with memory (long,X) $6D1A6D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc $6D42.w		; 6D 42 6D ; Add $6D42.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc ($6D.b,X)		; 61 6D ; Add with carry ($6D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and #$6D.b		; 29 6D ; Logical AND #$6D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($6D.b),Y		; 71 6D ; Add with carry ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $116D.w,Y		; 39 6D 11 ; AND accumulator with memory $116D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$11.b		; 09 11 ; Logical OR #$11.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$D6.b		; 09 D6 ; Logical OR #$D6.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dec $48.b,X		; D6 48 ; Decrement memory $48.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $F808.w,X		; FE 08 F8 ; Increment memory $F808.w,X [Reads: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $08FE08.l,X		; FF 08 FE 08 ; Subtract with carry (long,X) $08FE08.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc $48F808.l,X		; FF 08 F8 48 ; Subtract with carry (long,X) $48F808.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cop $49.b		; 02 49 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $09.b,S		; 23 09 ; AND accumulator with stack relative $09.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsr $E649.w		; 20 49 E6 ; Jump to subroutine at $E649.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $48.b		; E6 48 ; Increment $48.b [Reads: Direct Page] [Flags: ZN]
	inc $08.b,X		; F6 08 ; Increment memory $08.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	inc $48.b,X		; F6 48 ; Increment memory $48.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clv		; B8 ; Clear overflow flag [Flags: V]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $48.b,S		; 43 48 ; Exclusive OR accumulator with stack relative $48.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $D0, $9D		; D0 9D ; Branch if not equal to $D0, $9D [Flow: branch]
	.db $D0, $DD		; D0 DD ; Branch if not equal to $D0, $DD [Flow: branch]
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpx #$09.b		; E0 09 ; Compare #$09.b with X register [Reads: X Index] [Flags: ZNC]
	cpx #$49.b		; E0 49 ; Compare #$49.b with X register [Reads: X Index] [Flags: ZNC]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	cpx #$09.b		; E0 09 ; Compare #$09.b with X register [Reads: X Index] [Flags: ZNC]
	cpx #$49.b		; E0 49 ; Compare #$49.b with X register [Reads: X Index] [Flags: ZNC]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	cpx #$09.b		; E0 09 ; Compare #$09.b with X register [Reads: X Index] [Flags: ZNC]
	cpx #$49.b		; E0 49 ; Compare #$49.b with X register [Reads: X Index] [Flags: ZNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,X		; 55 08 ; Exclusive OR accumulator with memory $08.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $8319.w		; 0E 19 83 ; Arithmetic shift left $8319.w [Flags: ZNC]
	jmp $191E.w		; 4C 1E 19 ; Jump to $191E.w [Flow: jump]
	sta ($4C.b,S),Y		; 93 4C ; Store accumulator (stack relative indirect indexed) ($4C.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index]
	sta $0C8F0C.l		; 8F 0C 8F 0C ; Store accumulator (long) $0C8F0C.l [Reads: Accumulator]
	adc $BA08.w,Y		; 79 08 BA ; Add $BA08.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $4C8C0C.l		; 8F 0C 8C 4C ; Store accumulator (long) $4C8C0C.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $0CAA4C.l,X		; 9F 4C AA 0C ; Store accumulator (long,X) $0CAA4C.l,X [Reads: Accumulator, X Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4C9E.w		; 0C 9E 4C ; Test and set bits $4C9E.w [Reads: Accumulator] [Flags: Z]
	sty $0E4C.w		; 8C 4C 0E ; Store Y register to $0E4C.w [Reads: Y Index]
	ora $4CA3.w,Y		; 19 A3 4C ; OR accumulator with memory $4CA3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $B319.w,X		; 1E 19 B3 ; Arithmetic shift left $B319.w,X [Reads: X Index] [Flags: ZNC]
	jmp $4898.w		; 4C 98 48 ; Jump to $4898.w [Flow: jump]
	adc $7808.w,Y		; 79 08 78 ; Add $7808.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $AA4C.w		; 8C 4C AA ; Store Y register to $AA4C.w [Reads: Y Index]
	tsb $4C8D.w		; 0C 8D 4C ; Test and set bits $4C8D.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $08BA.w		; 0C BA 08 ; Test and set bits $08BA.w [Reads: Accumulator] [Flags: Z]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $BA8C.w		; 9C 8C BA ; Store zero to $BA8C.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $8C4C.w,X		; 9D 4C 8C ; Store accumulator to $8C4C.w,X [Reads: Accumulator, X Index]
	jmp $48BA.w		; 4C BA 48 ; Jump to $48BA.w [Flow: jump]
	sta $8C4C.w		; 8D 4C 8C ; Store accumulator to $8C4C.w [Reads: Accumulator]
	sty $8C9C.w		; 8C 9C 8C ; Store Y register to $8C9C.w [Reads: Y Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $8C8C.w		; 0C 8C 8C ; Test and set bits $8C8C.w [Reads: Accumulator] [Flags: Z]
	asl $A219.w		; 0E 19 A2 ; Arithmetic shift left $A219.w [Flags: ZNC]
	jmp $191E.w		; 4C 1E 19 ; Jump to $191E.w [Flow: jump]
	lda ($4C.b)		; B2 4C ; Load accumulator (indirect) ($4C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	stz $5C4C.w		; 9C 4C 5C ; Store zero to $5C4C.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $0CAA48.l		; 5C 48 AA 0C ; Jump long to $0CAA48.l [Flow: jump]
	sty $AA0C.w		; 8C 0C AA ; Store Y register to $AA0C.w [Reads: Y Index]
	tsb $0C8D.w		; 0C 8D 0C ; Test and set bits $0C8D.w [Reads: Accumulator] [Flags: Z]
	sty $9D0C.w		; 8C 0C 9D ; Store Y register to $9D0C.w [Reads: Y Index]
	tsb $0C8E.w		; 0C 8E 0C ; Test and set bits $0C8E.w [Reads: Accumulator] [Flags: Z]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $BA0C.w		; 8E 0C BA ; Store X register to $BA0C.w [Reads: X Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9D8C.w		; 8C 8C 9D ; Store Y register to $9D8C.w [Reads: Y Index]
	sty $0C8C.w		; 8C 8C 0C ; Store Y register to $0C8C.w [Reads: Y Index]
	sta $8D0C.w,X		; 9D 0C 8D ; Store accumulator to $8D0C.w,X [Reads: Accumulator, X Index]
	tsb $08BA.w		; 0C BA 08 ; Test and set bits $08BA.w [Reads: Accumulator] [Flags: Z]
	asl $0F19.w		; 0E 19 0F ; Arithmetic shift left $0F19.w [Flags: ZNC]
	ora $0CAF.w,Y		; 19 AF 0C ; OR accumulator with memory $0CAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $8C9F19.l,X		; 1F 19 9F 8C ; Logical OR long $8C9F19.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $8F8C.w		; 8C 8C 8F ; Store Y register to $8F8C.w [Reads: Y Index]
	sty $08BA.w		; 8C BA 08 ; Store Y register to $08BA.w [Reads: Y Index]
	sta $8C8FCC.l,X		; 9F CC 8F 8C ; Store accumulator (long,X) $8C8FCC.l,X [Reads: Accumulator, X Index]
	sty $0ECC.w		; 8C CC 0E ; Store Y register to $0ECC.w [Reads: Y Index]
	ora $4CAF.w,Y		; 19 AF 4C ; OR accumulator with memory $4CAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lda $4CBF4C.l		; AF 4C BF 4C ; Load long $4CBF4C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $7A08.w,Y		; BE 08 7A ; Load X register $7A08.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	lda $0CAA0C.l		; AF 0C AA 0C ; Load long $0CAA0C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $4CBE0C.l,X		; BF 0C BE 4C ; Load long $4CBE0C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $10.b		; 46 10 ; Logical shift right $10.b [Reads: Direct Page] [Flags: ZNC]
	ldx $5450.w,Y		; BE 50 54 ; Load X register $5450.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($10.b,X)		; 81 10 ; Store accumulator ($10.b,X) [Reads: Accumulator, X Index, Direct Page]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda [$10.b],Y		; B7 10 ; Load accumulator (long indexed) [$10.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda [$50.b],Y		; B7 50 ; Load accumulator (long indexed) [$50.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BACC.l,X		; 9F CC BA 08 ; Store accumulator (long,X) $08BACC.l,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA8C.l,X		; 9F 8C BA 08 ; Store accumulator (long,X) $08BA8C.l,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA4C.l,X		; 9F 4C BA 08 ; Store accumulator (long,X) $08BA4C.l,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $8C4C.w,X		; 9D 4C 8C ; Store accumulator to $8C4C.w,X [Reads: Accumulator, X Index]
	jmp $08BA.w		; 4C BA 08 ; Jump to $08BA.w [Flow: jump]
	stx $9F4C.w		; 8E 4C 9F ; Store X register to $9F4C.w [Reads: X Index]
	sty $08AB.w		; 8C AB 08 ; Store Y register to $08AB.w [Reads: Y Index]
	sty $9E8C.w		; 8C 8C 9E ; Store Y register to $9E8C.w [Reads: Y Index]
	sty $08BA.w		; 8C BA 08 ; Store Y register to $08BA.w [Reads: Y Index]
	stx $9D4C.w		; 8E 4C 9D ; Store X register to $9D4C.w [Reads: X Index]
	cpy $CC8C.w		; CC 8C CC ; Compare $CC8C.w with Y register [Reads: Y Index] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $8C8D.w		; 0C 8D 8C ; Test and set bits $8C8D.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $8C8C.w		; 0C 8C 8C ; Test and set bits $8C8C.w [Reads: Accumulator] [Flags: Z]
	sta $AACC.w		; 8D CC AA ; Store accumulator to $AACC.w [Reads: Accumulator]
	tsb $CC8C.w		; 0C 8C CC ; Test and set bits $CC8C.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4C9E.w		; 0C 9E 4C ; Test and set bits $4C9E.w [Reads: Accumulator] [Flags: Z]
	sty $BA4C.w		; 8C 4C BA ; Store Y register to $BA4C.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $08BA4C.l,X		; 9F 4C BA 08 ; Store accumulator (long,X) $08BA4C.l,X [Reads: Accumulator, X Index]
	sta $CC9ECC.l,X		; 9F CC 9E CC ; Store accumulator (long,X) $CC9ECC.l,X [Reads: Accumulator, X Index]
	sty $9ECC.w		; 8C CC 9E ; Store Y register to $9ECC.w [Reads: Y Index]
	cpy $CC8C.w		; CC 8C CC ; Compare $CC8C.w with Y register [Reads: Y Index] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stz $8DCC.w		; 9C CC 8D ; Store zero to $8DCC.w
	sty $08AB.w		; 8C AB 08 ; Store Y register to $08AB.w [Reads: Y Index]
	sty $9D8C.w		; 8C 8C 9D ; Store Y register to $9D8C.w [Reads: Y Index]
	sty $48BA.w		; 8C BA 48 ; Store Y register to $48BA.w [Reads: Y Index]
	sta $9DCC.w		; 8D CC 9D ; Store accumulator to $9DCC.w [Reads: Accumulator]
	cpy $CC8C.w		; CC 8C CC ; Compare $CC8C.w with Y register [Reads: Y Index] [Flags: ZNC]
	lda $190F0C.l		; AF 0C 0F 19 ; Load long $190F0C.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $0CAF0C.l,X		; BF 0C AF 0C ; Load long $0CAF0C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $80, $0C		; 80 0C ; Branch always to $80, $0C [Flow: branch]
	sta ($0C.b,X)		; 81 0C ; Store accumulator ($0C.b,X) [Reads: Accumulator, X Index, Direct Page]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,X		; 55 08 ; Exclusive OR accumulator with memory $08.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $8CCC.w		; 9C CC 8C ; Store zero to $8CCC.w
	cpy $CC8C.w		; CC 8C CC ; Compare $CC8C.w with Y register [Reads: Y Index] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $10AF.w		; 0C AF 10 ; Test and set bits $10AF.w [Reads: Accumulator] [Flags: Z]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $10AF10.l,X		; BF 10 AF 10 ; Load long $10AF10.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $10.b		; 46 10 ; Logical shift right $10.b [Reads: Direct Page] [Flags: ZNC]
	lda $085410.l,X		; BF 10 54 08 ; Load long $085410.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $10.b,X		; 56 10 ; Logical shift right $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $10.b		; 46 10 ; Logical shift right $10.b [Reads: Direct Page] [Flags: ZNC]
	lda $085410.l		; AF 10 54 08 ; Load long $085410.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $10.b,X		; 56 10 ; Logical shift right $10.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $4408.w		; 4D 08 44 ; Exclusive OR $4408.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $4DC8.w,Y		; 79 C8 4D ; Add $4DC8.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $504650.l		; AF 50 46 50 ; Load long $504650.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $50.b,X		; 56 50 ; Logical shift right $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $6D,$48		; 54 48 6D ; Move block negative $6D,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	bit $2C6D.w		; 2C 6D 2C ; Test bits $2C6D.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	jmp $685C28.l		; 5C 28 5C 68 ; Jump long to $685C28.l [Flow: jump]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor ($28.b,X)		; 41 28 ; Exclusive OR accumulator with memory ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $28		; 50 28 ; Branch if overflow clear to $50, $28 [Flow: branch]
	ror $3D.b		; 66 3D ; Rotate right $3D.b [Reads: Direct Page] [Flags: ZNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor ($28.b,X)		; 41 28 ; Exclusive OR accumulator with memory ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($28.b),Y		; 51 28 ; Exclusive OR accumulator with memory ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	.db $B0, $08		; B0 08 ; Branch if carry set to $B0, $08 [Flow: branch]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$1D.b],Y		; 77 1D ; Add with carry (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($08.b,X)		; 61 08 ; Add with carry ($08.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $B0, $08		; B0 08 ; Branch if carry set to $B0, $08 [Flow: branch]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	stx $4F0C.w		; 8E 0C 4F ; Store X register to $4F0C.w [Reads: X Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $0C.b		; A5 0C ; Load $0C.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0CA408.l		; 4F 08 A4 0C ; Exclusive OR accumulator with memory (long) $0CA408.l [Writes: Accumulator] [Flags: ZN]
	eor $0CB488.l		; 4F 88 B4 0C ; Exclusive OR accumulator with memory (long) $0CB488.l [Writes: Accumulator] [Flags: ZN]
	eor $4C9608.l		; 4F 08 96 4C ; Exclusive OR accumulator with memory (long) $4C9608.l [Writes: Accumulator] [Flags: ZN]
	stx $48.b		; 86 48 ; Store X register to $48.b [Reads: X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	tsb $4C96.w		; 0C 96 4C ; Test and set bits $4C96.w [Reads: Accumulator] [Flags: Z]
	sta $0C.b,S		; 83 0C ; Store accumulator (stack relative) $0C.b,S [Reads: Accumulator, Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0C93.w		; 0C 93 0C ; Test and set bits $0C93.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	tsb $0C8B.w		; 0C 8B 0C ; Test and set bits $0C8B.w [Reads: Accumulator] [Flags: Z]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	jmp $0C8B.w		; 4C 8B 0C ; Jump to $0C8B.w [Flow: jump]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	jmp $4C8B.w		; 4C 8B 4C ; Jump to $4C8B.w [Flow: jump]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	tsb $4C7B.w		; 0C 7B 4C ; Test and set bits $4C7B.w [Reads: Accumulator] [Flags: Z]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $7808.w,X		; 5D 08 78 ; Exclusive OR accumulator with memory $7808.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $0C.b,S		; A3 0C ; Load accumulator (stack relative) $0C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CB3.w		; 0C B3 0C ; Test and set bits $0CB3.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $484C.w		; 0C 4C 48 ; Test and set bits $484C.w [Reads: Accumulator] [Flags: Z]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sta $88.b,X		; 95 88 ; Store accumulator to $88.b,X [Reads: Accumulator, X Index]
	sta $C8.b,X		; 95 C8 ; Store accumulator to $C8.b,X [Reads: Accumulator, X Index]
	sty $4C.b,X		; 94 4C ; Store Y register $4C.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	adc $5C0C.w		; 6D 0C 5C ; Add $5C0C.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $0CA248.l		; 5C 48 A2 0C ; Jump long to $0CA248.l [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CB2.w		; 0C B2 0C ; Test and set bits $0CB2.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $7C31.w		; 0C 31 7C ; Test and set bits $7C31.w [Reads: Accumulator] [Flags: Z]
	.db $30, $7C		; 30 7C ; Branch if minus to $30, $7C [Flow: branch]
	tsb $7C.b		; 04 7C ; Test and set bits $7C.b [Reads: Accumulator] [Flags: Z]
	ora $7C.b,S		; 03 7C ; OR accumulator with stack relative $7C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	and ($3C.b),Y		; 31 3C ; AND accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,S		; 03 3C ; OR accumulator with stack relative $3C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tsb $3C.b		; 04 3C ; Test and set bits $3C.b [Reads: Accumulator] [Flags: Z]
	and ($3C.b)		; 32 3C ; AND accumulator with memory (indirect) ($3C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($7C.b)		; 32 7C ; AND accumulator with memory (indirect) ($7C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b		; 05 3C ; Logical OR $3C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7C.b		; 05 7C ; Logical OR $7C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc #$5D.b		; 69 5D ; Add #$5D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $375D.w,Y		; 79 5D 37 ; Add $375D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b		; 26 1D ; Rotate left $1D.b [Reads: Direct Page] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $1D37.w,X		; 3C 37 1D ; Test bits $1D37.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora #$3C.b		; 09 3C ; Logical OR #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	bit $1C19.w,X		; 3C 19 1C ; Test bits $1C19.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora [$1C.b]		; 07 1C ; OR accumulator with memory (long) [$1C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b,S),Y		; 13 3C ; OR accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $3C.b		; 14 3C ; Test and reset bits $3C.b [Reads: Accumulator] [Flags: Z]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($3C.b,X)		; 01 3C ; Logical OR ($3C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7C.b,X		; 15 7C ; OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $3C.b		; 02 3C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $7C.b		; 02 7C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	trb $7C.b		; 14 7C ; Test and reset bits $7C.b [Reads: Accumulator] [Flags: Z]
	ora ($7C.b,S),Y		; 13 7C ; OR accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7C.b,X)		; 01 7C ; Logical OR ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $7C.b		; 00 7C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	trb $3C.b		; 14 3C ; Test and reset bits $3C.b [Reads: Accumulator] [Flags: Z]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b,X)		; 01 3C ; Logical OR ($3C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	cop $3C.b		; 02 3C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $7C.b,X		; 15 7C ; OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $7C.b		; 14 7C ; Test and reset bits $7C.b [Reads: Accumulator] [Flags: Z]
	cop $7C.b		; 02 7C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($7C.b,X)		; 01 7C ; Logical OR ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($7C.b,S),Y		; 13 7C ; OR accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b,S),Y		; 13 3C ; OR accumulator (stack relative indirect indexed) ($3C.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $7C.b		; 00 7C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($7C.b,S),Y		; 13 7C ; OR accumulator (stack relative indirect indexed) ($7C.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	jmp ($7C00.w,X)		; 7C 00 7C ; Jump indirect indexed to ($7C00.w,X) [Reads: X Index] [Flow: jump]
	ora [$5C.b]		; 07 5C ; OR accumulator with memory (long) [$5C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora #$7C.b		; 09 7C ; Logical OR #$7C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($5C19.w,X)		; 7C 19 5C ; Jump indirect indexed to ($5C19.w,X) [Reads: X Index] [Flow: jump]
	.db $42, $5D		; 42 5D ; Reserved instruction
	rol $5D.b		; 26 5D ; Rotate left $5D.b [Reads: Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora [$3C.b],Y		; 17 3C ; OR accumulator with memory (long indexed) [$3C.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $3C103C.l,X		; 1F 3C 10 3C ; Logical OR long $3C103C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $213C.w		; 20 3C 21 ; Jump to subroutine at $213C.w [Writes: Stack Pointer] [Flow: call]
	bit $3C12.w,X		; 3C 12 3C ; Test bits $3C12.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora ($7C.b)		; 12 7C ; OR accumulator with memory (indirect) ($7C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $7C223C.l		; 22 3C 22 7C ; Jump to subroutine long $7C223C.l [Writes: Stack Pointer] [Flow: call]
	ora ($7C.b),Y		; 11 7C ; OR accumulator with memory ($7C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $7C		; 10 7C ; Branch if plus to $10, $7C [Flow: branch]
	and ($7C.b,X)		; 21 7C ; Logical AND ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $117C.w		; 20 7C 11 ; Jump to subroutine at $117C.w [Writes: Stack Pointer] [Flow: call]
	bit $3C12.w,X		; 3C 12 3C ; Test bits $3C12.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	and ($3C.b,X)		; 21 3C ; Logical AND ($3C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $7C123C.l		; 22 3C 12 7C ; Jump to subroutine long $7C123C.l [Writes: Stack Pointer] [Flow: call]
	ora ($7C.b),Y		; 11 7C ; OR accumulator with memory ($7C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsl $7C217C.l		; 22 7C 21 7C ; Jump to subroutine long $7C217C.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $7C		; 10 7C ; Branch if plus to $10, $7C [Flow: branch]
	.db $10, $3C		; 10 3C ; Branch if plus to $10, $3C [Flow: branch]
	jsr $207C.w		; 20 7C 20 ; Jump to subroutine at $207C.w [Writes: Stack Pointer] [Flow: call]
	bit $7C10.w,X		; 3C 10 7C ; Test bits $7C10.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora [$7C.b],Y		; 17 7C ; OR accumulator with memory (long indexed) [$7C.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $1F7C.w		; 20 7C 1F ; Jump to subroutine at $1F7C.w [Writes: Stack Pointer] [Flow: call]
	jmp ($5D43.w,X)		; 7C 43 5D ; Jump indirect indexed to ($5D43.w,X) [Reads: X Index] [Flow: jump]
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $1D.b		; 45 1D ; Exclusive OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc #$3D.b		; 69 3D ; Add #$3D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $313D.w,Y		; 79 3D 31 ; Add $313D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	bit $3C32.w,X		; 3C 32 3C ; Test bits $3C32.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	tsb $3C.b		; 04 3C ; Test and set bits $3C.b [Reads: Accumulator] [Flags: Z]
	ora $3C.b		; 05 3C ; Logical OR $3C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($7C.b)		; 32 7C ; AND accumulator with memory (indirect) ($7C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($7C.b),Y		; 31 7C ; AND accumulator with memory ($7C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $7C.b		; 05 7C ; Logical OR $7C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $7C.b		; 04 7C ; Test and set bits $7C.b [Reads: Accumulator] [Flags: Z]
	.db $30, $7C		; 30 7C ; Branch if minus to $30, $7C [Flow: branch]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	ora $7C.b,S		; 03 7C ; OR accumulator with stack relative $7C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,S		; 03 3C ; OR accumulator with stack relative $3C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $30, $7C		; 30 7C ; Branch if minus to $30, $7C [Flow: branch]
	adc #$7D.b		; 69 7D ; Add #$7D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora $7C.b,S		; 03 7C ; OR accumulator with stack relative $7C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc $377D.w,Y		; 79 7D 37 ; Add $377D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $1D12.w,X		; 1D 12 1D ; OR accumulator with memory $1D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $3C00.w,X		; 1D 00 3C ; OR accumulator with memory $3C00.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,S),Y		; 13 1D ; OR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $013C.w,X		; 3E 3C 01 ; Rotate left $013C.w,X [Reads: X Index] [Flags: ZNC]
	bit $3C02.w,X		; 3C 02 3C ; Test bits $3C02.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $3C09.w,X		; 3C 09 3C ; Test bits $3C09.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	.db $42, $1D		; 42 1D ; Reserved instruction
	ora $0A1C.w,Y		; 19 1C 0A ; OR accumulator with memory $0A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $7C0A.w,X		; 3C 0A 7C ; Test bits $7C0A.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	trb $5C1A.w		; 1C 1A 5C ; Test and reset bits $5C1A.w [Reads: Accumulator] [Flags: Z]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	jmp ($7C09.w,X)		; 7C 09 7C ; Jump indirect indexed to ($7C09.w,X) [Reads: X Index] [Flow: jump]
	ora [$5C.b]		; 07 5C ; OR accumulator with memory (long) [$5C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $085C.w,Y		; 19 5C 08 ; OR accumulator with memory $085C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($5D26.w,X)		; 7C 26 5D ; Jump indirect indexed to ($5D26.w,X) [Reads: X Index] [Flow: jump]
	.db $42, $5D		; 42 5D ; Reserved instruction
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $3C10.w,X		; 1D 10 3C ; OR accumulator with memory $3C10.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $3C203C.l,X		; 1F 3C 20 3C ; Logical OR long $3C203C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	mvp $44,$1D		; 44 1D 44 ; Move block positive $44,$1D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $1D06.w,X		; 5D 06 1D ; Exclusive OR accumulator with memory $1D06.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $5D.b		; 06 5D ; Arithmetic shift left $5D.b [Reads: Direct Page] [Flags: ZNC]
	eor $5D.b,S		; 43 5D ; Exclusive OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	mvp $37,$1D		; 44 1D 37 ; Move block positive $37,$1D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $1D06.w,X		; 1D 06 1D ; OR accumulator with memory $1D06.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	mvp $43,$5D		; 44 5D 43 ; Move block positive $43,$5D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $5D06.w,X		; 5D 06 5D ; Exclusive OR accumulator with memory $5D06.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$7C.b],Y		; 17 7C ; OR accumulator with memory (long indexed) [$7C.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,S		; 43 5D ; Exclusive OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $1D377C.l,X		; 1F 7C 37 1D ; Logical OR long $1D377C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc #$1D.b		; 69 1D ; Add #$1D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	adc $031D.w,Y		; 79 1D 03 ; Add $031D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	bit $5D37.w,X		; 3C 37 5D ; Test bits $5D37.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $295D.w,Y		; 19 5D 29 ; OR accumulator with memory $295D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D29.w,X		; 1D 29 5D ; OR accumulator with memory $5D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $391D.w,Y		; 39 1D 39 ; AND accumulator with memory $391D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D09.w,X		; 5D 09 1D ; Exclusive OR accumulator with memory $1D09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $091D.w,Y		; 19 1D 09 ; OR accumulator with memory $091D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D37.w,X		; 1D 37 5D ; OR accumulator with memory $5D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5D09.w,X		; 5D 09 5D ; Exclusive OR accumulator with memory $5D09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $1D3C.w,X		; 5D 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $088B.w,X		; 1D 8B 08 ; OR accumulator with memory $088B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $5D29.w,X		; 1D 29 5D ; OR accumulator with memory $5D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $391D.w,Y		; 39 1D 39 ; AND accumulator with memory $391D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D29.w,X		; 5D 29 1D ; Exclusive OR accumulator with memory $1D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1D39.w,X		; 5D 39 1D ; Exclusive OR accumulator with memory $1D39.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $3C5D.w,Y		; 39 5D 3C ; AND accumulator with memory $3C5D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $3C1D.w,X		; 5D 1D 3C ; Exclusive OR accumulator with memory $3C1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $7D69.w,X		; 1D 69 7D ; OR accumulator with memory $7D69.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $377D.w,Y		; 79 7D 37 ; Add $377D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $401D.w,X		; 3C 1D 40 ; Test bits $401D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	and $393F.w,Y		; 39 3F 39 ; AND accumulator with memory $393F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $790F39.l		; 0F 39 0F 79 ; OR accumulator with memory (long) $790F39.l [Writes: Accumulator] [Flags: ZN]
	ora $791F39.l,X		; 1F 39 1F 79 ; Logical OR long $791F39.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $793F.w,X		; 1D 3F 79 ; OR accumulator with memory $793F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $1D28.w,Y		; 79 28 1D ; Add $1D28.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $1D45.w,X		; 1D 45 1D ; OR accumulator with memory $1D45.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$5D.b]		; 07 5D ; OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$5D.b],Y		; 17 5D ; OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b		; 45 1D ; Exclusive OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$5D.b]		; 07 5D ; OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $5D45.w,X		; 5D 45 5D ; Exclusive OR accumulator with memory $5D45.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $1D37.w,X		; 5D 37 1D ; Exclusive OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b		; 26 1D ; Rotate left $1D.b [Reads: Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	bit $3C13.w,X		; 3C 13 3C ; Test bits $3C13.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora [$1C.b]		; 07 1C ; OR accumulator with memory (long) [$1C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $137C.w,X		; 3E 7C 13 ; Rotate left $137C.w,X [Reads: X Index] [Flags: ZNC]
	eor $7C02.w,X		; 5D 02 7C ; Exclusive OR accumulator with memory $7C02.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7C.b,X)		; 01 7C ; Logical OR ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $7C.b		; 00 7C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $1D37.w,X		; 5D 37 1D ; Exclusive OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $1D37.w,X		; 5D 37 1D ; Exclusive OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $190E.w,Y		; 39 0E 19 ; AND accumulator with memory $190E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $39		; 50 39 ; Branch if overflow clear to $50, $39 [Flow: branch]
	and $396B39.l,X		; 3F 39 6B 39 ; AND accumulator with memory (long,X) $396B39.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $391F.w,Y		; 79 1F 39 ; Add $391F.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $590E79.l,X		; 1F 79 0E 59 ; Logical OR long $590E79.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $793F.w,Y		; 79 3F 79 ; Add $793F.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $50, $79		; 50 79 ; Branch if overflow clear to $50, $79 [Flow: branch]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $5D37.w,X		; 1D 37 5D ; OR accumulator with memory $5D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b		; 45 5D ; Exclusive OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $3E3C.w,X		; 3E 3C 3E ; Rotate left $3E3C.w,X [Reads: X Index] [Flags: ZNC]
	jmp ($3C02.w,X)		; 7C 02 3C ; Jump indirect indexed to ($3C02.w,X) [Reads: X Index] [Flow: jump]
	cop $7C.b		; 02 7C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	trb $19.b		; 14 19 ; Test and reset bits $19.b [Reads: Accumulator] [Flags: Z]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $19.b		; 24 19 ; Test bits $19.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	and $39.b		; 25 39 ; Logical AND $39.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $192B.w,Y		; 19 2B 19 ; OR accumulator with memory $192B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $39.b,X		; 56 39 ; Logical shift right $39.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor [$39.b],Y		; 57 39 ; Exclusive OR accumulator with memory (long indexed) [$39.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	eor $592A.w,Y		; 59 2A 59 ; Exclusive OR accumulator with memory $592A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$79.b],Y		; 57 79 ; Exclusive OR accumulator with memory (long indexed) [$79.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $79.b,X		; 56 79 ; Logical shift right $79.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $59.b		; 14 59 ; Test and reset bits $59.b [Reads: Accumulator] [Flags: Z]
	and $79.b		; 25 79 ; Logical AND $79.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	ora [$3C.b],Y		; 17 3C ; OR accumulator with memory (long indexed) [$3C.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $3C		; 10 3C ; Branch if plus to $10, $3C [Flow: branch]
	ora $3C203C.l,X		; 1F 3C 20 3C ; Logical OR long $3C203C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $7C		; 10 7C ; Branch if plus to $10, $7C [Flow: branch]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor $7C20.w,X		; 5D 20 7C ; Exclusive OR accumulator with memory $7C20.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D377C.l,X		; 1F 7C 37 1D ; Logical OR long $1D377C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $1D12.w,X		; 1D 12 1D ; OR accumulator with memory $1D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,S),Y		; 13 1D ; OR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($3C.b,X)		; 01 3C ; Logical OR ($3C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $027C.w,X		; 3E 7C 02 ; Rotate left $027C.w,X [Reads: X Index] [Flags: ZNC]
	bit $7C02.w,X		; 3C 02 7C ; Test bits $7C02.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora ($5D.b,S),Y		; 13 5D ; OR accumulator (stack relative indirect indexed) ($5D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($7C.b,X)		; 01 7C ; Logical OR ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $7C.b		; 00 7C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $1D37.w,X		; 5D 37 1D ; Exclusive OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $196A.w,Y		; 19 6A 19 ; OR accumulator with memory $196A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1934.w,X		; 1D 34 19 ; OR accumulator with memory $1934.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $39.b,X		; 35 39 ; Logical AND $39.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $4F19.w		; 4E 19 4F ; Logical shift right $4F19.w [Flags: ZNC]
	and $3966.w,Y		; 39 66 39 ; AND accumulator with memory $3966.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$39.b]		; 67 39 ; Add with carry (long) [$39.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $39.b,X		; 76 39 ; Rotate right $39.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc [$39.b],Y		; 77 39 ; Add with carry (long indexed) [$39.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$79.b]		; 67 79 ; Add with carry (long) [$79.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $79.b		; 66 79 ; Rotate right $79.b [Reads: Direct Page] [Flags: ZNC]
	adc [$79.b],Y		; 77 79 ; Add with carry (long indexed) [$79.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ror $79.b,X		; 76 79 ; Rotate right $79.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $79.b,X		; 35 79 ; Logical AND $79.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	eor $594E79.l		; 4F 79 4E 59 ; Exclusive OR accumulator with memory (long) $594E79.l [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $595A.w,Y		; 59 5A 59 ; Exclusive OR accumulator with memory $595A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D4C.w,X		; 1D 4C 1D ; OR accumulator with memory $1D4C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $3C1D.w,Y		; 19 1D 3C ; OR accumulator with memory $3C1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D2C.w,X		; 1D 2C 1D ; OR accumulator with memory $1D2C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc #$3D.b		; 69 3D ; Add #$3D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	adc $033D.w,Y		; 79 3D 03 ; Add $033D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	bit $7C30.w,X		; 3C 30 7C ; Test bits $7C30.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	adc #$5D.b		; 69 5D ; Add #$5D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora $7C.b,S		; 03 7C ; OR accumulator with stack relative $7C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc $375D.w,Y		; 79 5D 37 ; Add $375D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $1D78.w,X		; 1D 78 1D ; OR accumulator with memory $1D78.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D783C.l,X		; 1F 3C 78 5D ; Logical OR long $5D783C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D377C.l,X		; 1F 7C 37 1D ; Logical OR long $1D377C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $2C5D.w,Y		; 19 5D 2C ; OR accumulator with memory $2C5D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D2C.w,X		; 5D 2C 5D ; Exclusive OR accumulator with memory $5D2C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $5E1D.w,X		; 3C 1D 5E ; Test bits $5E1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $395F.w,Y		; 19 5F 39 ; OR accumulator with memory $395F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	eor [$19.b]		; 47 19 ; Exclusive OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $39.b,X		; 16 39 ; Arithmetic shift left $39.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tsb $39.b		; 04 39 ; Test and set bits $39.b [Reads: Accumulator] [Flags: Z]
	tsb $39.b		; 04 39 ; Test and set bits $39.b [Reads: Accumulator] [Flags: Z]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $7904.w,Y		; 19 04 79 ; OR accumulator with memory $7904.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $79.b,X		; 16 79 ; Arithmetic shift left $79.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $7904.w,Y		; 59 04 79 ; Exclusive OR accumulator with memory $7904.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $595E79.l,X		; 5F 79 5E 59 ; Exclusive OR accumulator with memory (long,X) $595E79.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor [$59.b]		; 47 59 ; Exclusive OR accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $1D09.w,X		; 1D 09 1D ; OR accumulator with memory $1D09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$3C.b		; 09 3C ; Logical OR #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	bit $1C19.w,X		; 3C 19 1C ; Test bits $1C19.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	trb $7C0A.w		; 1C 0A 7C ; Test and reset bits $7C0A.w [Reads: Accumulator] [Flags: Z]
	ora #$7C.b		; 09 7C ; Logical OR #$7C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	jmp $375C19.l		; 5C 19 5C 37 ; Jump long to $375C19.l [Flow: jump]
	ora $1D69.w,X		; 1D 69 1D ; OR accumulator with memory $1D69.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $3C1D.w,Y		; 79 1D 3C ; Add $3C1D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $195A.w,X		; 1D 5A 19 ; OR accumulator with memory $195A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $196A.w,X		; 1D 6A 19 ; OR accumulator with memory $196A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $1D3C.w,Y		; 19 3C 1D ; OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $271D.w,X		; 3C 1D 27 ; Test bits $271D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1953.w,Y		; 19 53 19 ; OR accumulator with memory $1953.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($5319.w,X)		; 7C 19 53 ; Jump indirect indexed to ($5319.w,X) [Reads: X Index] [Flow: jump]
	ora $5953.w,Y		; 19 53 59 ; OR accumulator with memory $5953.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b,S),Y		; 53 59 ; XOR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($3B59.w,X)		; 7C 59 3B ; Jump indirect indexed to ($3B59.w,X) [Reads: X Index] [Flow: jump]
	eor $596A.w,Y		; 59 6A 59 ; Exclusive OR accumulator with memory $596A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $595A.w,X		; 1D 5A 59 ; OR accumulator with memory $595A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $1D.b		; 26 1D ; Rotate left $1D.b [Reads: Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $133C.w,X		; 3E 3C 13 ; Rotate left $133C.w,X [Reads: X Index] [Flags: ZNC]
	eor $7C02.w,X		; 5D 02 7C ; Exclusive OR accumulator with memory $7C02.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7C.b,X)		; 01 7C ; Logical OR ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	bit $5A1D.w,X		; 3C 1D 5A ; Test bits $5A1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,Y		; 19 3C 1D ; OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ror $6A19.w,X		; 7E 19 6A ; Rotate right $6A19.w,X [Reads: X Index] [Flags: ZNC]
	ora $1964.w,Y		; 19 64 19 ; OR accumulator with memory $1964.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $195319.l,X		; 7F 19 53 19 ; Add long $195319.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	stz $59.b		; 64 59 ; Store zero to $59.b
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $5953.w,Y		; 59 53 59 ; Exclusive OR accumulator with memory $5953.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $595A59.l,X		; 7F 59 5A 59 ; Add long $595A59.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	bit $7E1D.w,X		; 3C 1D 7E ; Test bits $7E1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	eor $1D3C.w,Y		; 59 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1964.w,Y		; 19 64 19 ; OR accumulator with memory $1964.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $195219.l,X		; 7F 19 52 19 ; Add long $195219.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	stz $59.b		; 64 59 ; Store zero to $59.b
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $5952.w,Y		; 59 52 59 ; Exclusive OR accumulator with memory $5952.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D3C59.l,X		; 7F 59 3C 1D ; Add long $1D3C59.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $19, $3C		; 62 19 3C ; Push effective relative address $62, $19, $3C [Writes: Stack Pointer]
	ora $1972.w,X		; 1D 72 19 ; OR accumulator with memory $1972.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $59, $3C		; 62 59 3C ; Push effective relative address $62, $59, $3C [Writes: Stack Pointer]
	ora $5972.w,X		; 1D 72 59 ; OR accumulator with memory $5972.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D28.w,X		; 1D 28 1D ; OR accumulator with memory $1D28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $1D38.w,X		; 1D 38 1D ; OR accumulator with memory $1D38.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $605D.w,Y		; 19 5D 60 ; OR accumulator with memory $605D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $190E.w,Y		; 19 0E 19 ; OR accumulator with memory $190E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl $0F19.w,X		; 1E 19 0F ; Arithmetic shift left $0F19.w,X [Reads: X Index] [Flags: ZNC]
	lda $F90F.w,Y		; B9 0F F9 ; Load $F90F.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $590E.w,X		; 1D 0E 59 ; OR accumulator with memory $590E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $591E.w,Y		; 59 1E 59 ; Exclusive OR accumulator with memory $591E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $1D3C.w,X		; 5D 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $5D28.w,X		; 5D 28 5D ; Exclusive OR accumulator with memory $5D28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	bit $0C1D.w,X		; 3C 1D 0C ; Test bits $0C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D0D.w,X		; 1D 0D 1D ; OR accumulator with memory $1D0D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $EE1D.w		; 1C 1D EE ; Test and reset bits $EE1D.w [Reads: Accumulator] [Flags: Z]
	ora $5D0D.w,X		; 1D 0D 5D ; OR accumulator with memory $5D0D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $EE5D.w		; 0C 5D EE ; Test and set bits $EE5D.w [Reads: Accumulator] [Flags: Z]
	ora $5D1C.w,X		; 1D 1C 5D ; OR accumulator with memory $5D1C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $EE1D.w		; 1C 1D EE ; Test and reset bits $EE1D.w [Reads: Accumulator] [Flags: Z]
	ora $9D0C.w,X		; 1D 0C 9D ; OR accumulator with memory $9D0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $EE1D.w,X		; 1D 1D EE ; OR accumulator with memory $EE1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D1C.w,X		; 1D 1C 5D ; OR accumulator with memory $5D1C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0C5D.w,X		; 1D 5D 0C ; OR accumulator with memory $0C5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $5D37.w,X		; DD 37 5D ; Compare accumulator $5D37.w,X [Reads: X Index] [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $1D19.w,X		; 5D 19 1D ; Exclusive OR accumulator with memory $1D19.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $7C		; 30 7C ; Branch if minus to $30, $7C [Flow: branch]
	and $7C037C.l		; 2F 7C 03 7C ; AND accumulator with memory (long) $7C037C.l [Writes: Accumulator] [Flags: ZN]
	and $3C3E7C.l,X		; 3F 7C 3E 3C ; AND accumulator with memory (long,X) $3C3E7C.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $7C.b,X		; 15 7C ; OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $3C.b		; 02 3C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $7C.b		; 02 7C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $3C7C.w,X		; 3D 7C 3C ; AND accumulator with memory $3C7C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($7C01.w,X)		; 7C 01 7C ; Jump indirect indexed to ($7C01.w,X) [Reads: X Index] [Flow: jump]
	brk $7C.b		; 00 7C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $7C0E.w,X		; 1D 0E 7C ; OR accumulator with memory $7C0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $381D.w,X		; 3C 1D 38 ; Test bits $381D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $5D09.w,X		; 1D 09 5D ; OR accumulator with memory $5D09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0F5D.w,Y		; 19 5D 0F ; OR accumulator with memory $0F5D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($1D3C.w,X)		; 7C 3C 1D ; Jump indirect indexed to ($1D3C.w,X) [Reads: X Index] [Flow: jump]
	ora $1D3C7C.l,X		; 1F 7C 3C 1D ; Logical OR long $1D3C7C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1D3C7C.l		; 2F 7C 3C 1D ; AND accumulator with memory (long) $1D3C7C.l [Writes: Accumulator] [Flags: ZN]
	and $1D3C7C.l,X		; 3F 7C 3C 1D ; AND accumulator with memory (long,X) $1D3C7C.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $5D.b		; 26 5D ; Rotate left $5D.b [Reads: Direct Page] [Flags: ZNC]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $2019.w		; 2D 19 20 ; Logical AND $2019.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1901.w,Y		; 19 01 19 ; OR accumulator with memory $1901.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($39.b,X)		; 41 39 ; Exclusive OR accumulator with memory ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsr $2D59.w		; 20 59 2D ; Jump to subroutine at $2D59.w [Writes: Stack Pointer] [Flow: call]
	eor $7941.w,Y		; 59 41 79 ; Exclusive OR accumulator with memory $7941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rol $3D7C.w,X		; 3E 7C 3D ; Rotate left $3D7C.w,X [Reads: X Index] [Flags: ZNC]
	jmp ($7C02.w,X)		; 7C 02 7C ; Jump indirect indexed to ($7C02.w,X) [Reads: X Index] [Flow: jump]
	ora ($7C.b,X)		; 01 7C ; Logical OR ($7C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	bit $3C7C.w,X		; 3C 7C 3C ; Test bits $3C7C.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $7C00.w,X		; 1D 00 7C ; OR accumulator with memory $7C00.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $097C.w		; 0E 7C 09 ; Arithmetic shift left $097C.w [Flags: ZNC]
	jmp ($7C08.w,X)		; 7C 08 7C ; Jump indirect indexed to ($7C08.w,X) [Reads: X Index] [Flow: jump]
	ora $185C.w,Y		; 19 5C 18 ; OR accumulator with memory $185C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $093C08.l		; 5C 08 3C 09 ; Jump long to $093C08.l [Flow: jump]
	bit $1C18.w,X		; 3C 18 1C ; Test bits $1C18.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $291C.w,Y		; 19 1C 29 ; OR accumulator with memory $291C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $0D5C28.l		; 5C 28 5C 0D ; Jump long to $0D5C28.l [Flow: jump]
	jmp $281D3C.l		; 5C 3C 1D 28 ; Jump long to $281D3C.l [Flow: jump]
	trb $1C29.w		; 1C 29 1C ; Test and reset bits $1C29.w [Reads: Accumulator] [Flags: Z]
	bit $0D1D.w,X		; 3C 1D 0D ; Test bits $0D1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	trb $1C2A.w		; 1C 2A 1C ; Test and reset bits $1C2A.w [Reads: Accumulator] [Flags: Z]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	jmp $2D1C2D.l		; 5C 2D 1C 2D ; Jump long to $2D1C2D.l [Flow: jump]
	jmp $303C2F.l		; 5C 2F 3C 30 ; Jump long to $303C2F.l [Flow: jump]
	bit $3C3F.w,X		; 3C 3F 3C ; Test bits $3C3F.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $3C.b,S		; 03 3C ; OR accumulator with stack relative $3C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($5C1D.w,X)		; 7C 1D 5C ; Jump indirect indexed to ($5C1D.w,X) [Reads: X Index] [Flow: jump]
	clc		; 18 ; Clear carry flag [Flags: C]
	jmp $2D5C1E.l		; 5C 1E 5C 2D ; Jump long to $2D5C1E.l [Flow: jump]
	ora $1920.w,Y		; 19 20 19 ; OR accumulator with memory $1920.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	eor ($19.b,X)		; 41 19 ; Exclusive OR accumulator with memory ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsr $2D59.w		; 20 59 2D ; Jump to subroutine at $2D59.w [Writes: Stack Pointer] [Flow: call]
	eor $5941.w,Y		; 59 41 59 ; Exclusive OR accumulator with memory $5941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $081C.w,X		; 1D 1C 08 ; OR accumulator with memory $081C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $1C1E.w,X		; 3C 1E 1C ; Test bits $1C1E.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	clc		; 18 ; Clear carry flag [Flags: C]
	trb $7C08.w		; 1C 08 7C ; Test and reset bits $7C08.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $5C18.w,X		; 3C 18 5C ; Test bits $5C18.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	clc		; 18 ; Clear carry flag [Flags: C]
	trb $7C17.w		; 1C 17 7C ; Test and reset bits $7C17.w [Reads: Accumulator] [Flags: Z]
	and #$5C.b		; 29 5C ; Logical AND #$5C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5C0D7C.l,X		; 1F 7C 0D 5C ; Logical OR long $5C0D7C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	jmp $3C1D3C.l		; 5C 3C 1D 3C ; Jump long to $3C1D3C.l [Flow: jump]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $3119.w		; 4D 19 31 ; Exclusive OR $3119.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5951.w,Y		; 19 51 59 ; OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $3C59.w		; 4D 59 3C ; Exclusive OR $3C59.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1C28.w,X		; 1D 28 1C ; OR accumulator with memory $1C28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1C29.w,X		; 1D 29 1C ; OR accumulator with memory $1C29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	trb $1C0D.w		; 1C 0D 1C ; Test and reset bits $1C0D.w [Reads: Accumulator] [Flags: Z]
	and $2A1C.w		; 2D 1C 2A ; Logical AND $2A1C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp $2D5C29.l		; 5C 29 5C 2D ; Jump long to $2D5C29.l [Flow: jump]
	jmp $285C0D.l		; 5C 0D 5C 28 ; Jump long to $285C0D.l [Flow: jump]
	jmp $3C1C28.l		; 5C 28 1C 3C ; Jump long to $3C1C28.l [Flow: jump]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $8C1D.w,X		; 3C 1D 8C ; Test bits $8C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $9C08.w		; 8C 08 9C ; Store Y register to $9C08.w [Reads: Y Index]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $489E.w,X		; 1D 9E 48 ; OR accumulator with memory $489E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sty $3848.w		; 8C 48 38 ; Store Y register to $3848.w [Reads: Y Index]
	ora $1D12.w,X		; 1D 12 1D ; OR accumulator with memory $1D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $3C00.w,X		; 1D 00 3C ; OR accumulator with memory $3C00.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $8CC8.w,X		; 9E C8 8C ; Store zero to $8CC8.w,X [Reads: X Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $7C10.w,X		; 1D 10 7C ; OR accumulator with memory $7C10.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $7C207C.l		; 0F 7C 20 7C ; OR accumulator with memory (long) $7C207C.l [Writes: Accumulator] [Flags: ZN]
	ora $C89C7C.l,X		; 1F 7C 9C C8 ; Logical OR long $C89C7C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sty $8CC8.w		; 8C C8 8C ; Store Y register to $8CC8.w [Reads: Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	bit $8C1D.w,X		; 3C 1D 8C ; Test bits $8C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	stz $3C88.w		; 9C 88 3C ; Store zero to $3C88.w
	ora $888C.w,X		; 1D 8C 88 ; OR accumulator with memory $888C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	bit $3C0E.w,X		; 3C 0E 3C ; Test bits $3C0E.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $3E3C.w,X		; 3D 3C 3E ; AND accumulator with memory $3E3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C01.w,X		; 3C 01 3C ; Test bits $3C01.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	cop $3C.b		; 02 3C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $3C0F.w,X		; 1D 0F 3C ; OR accumulator with memory $3C0F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $3C		; 10 3C ; Branch if plus to $10, $3C [Flow: branch]
	ora $3C203C.l,X		; 1F 3C 20 3C ; Logical OR long $3C203C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C7C.w,X		; 3C 7C 3C ; Test bits $3C7C.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	bit $7C00.w,X		; 3C 00 7C ; Test bits $7C00.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($5D.b)		; 12 5D ; OR accumulator with memory (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	brk $7C.b		; 00 7C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $3C.b		; 00 3C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $1D.b		; 45 1D ; Exclusive OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $5D.b		; 26 5D ; Rotate left $5D.b [Reads: Direct Page] [Flags: ZNC]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $435D.w,Y		; 19 5D 43 ; OR accumulator with memory $435D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D05.w,X		; 5D 05 5D ; Exclusive OR accumulator with memory $5D05.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $085D.w,Y		; 19 5D 08 ; OR accumulator with memory $085D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($3C08.w,X)		; 7C 08 3C ; Jump indirect indexed to ($3C08.w,X) [Reads: X Index] [Flow: jump]
	.db $42, $5D		; 42 5D ; Reserved instruction
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor $3C5D.w,X		; 5D 5D 3C ; Exclusive OR accumulator with memory $3C5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $051D.w,X		; 5D 1D 05 ; Exclusive OR accumulator with memory $051D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D05.w,X		; 5D 05 1D ; Exclusive OR accumulator with memory $1D05.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	bit $8B1D.w,X		; 3C 1D 8B ; Test bits $8B1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $50, $BA		; 62 50 BA ; Push effective relative address $62, $50, $BA [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy #$50.b		; A0 50 ; Load #$50.b into Y register [Writes: Y Index] [Flags: ZN]
	and $2D51.w		; 2D 51 2D ; Logical AND $2D51.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($CB.b),Y		; 51 CB ; Exclusive OR accumulator with memory ($CB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $4DCB.w		; 4D CB 4D ; Exclusive OR $4DCB.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	ora $4DCA.w		; 0D CA 4D ; Logical OR $4DCA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	wai		; CB ; Wait for interrupt
	ora $112D.w		; 0D 2D 11 ; Logical OR $112D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	wai		; CB ; Wait for interrupt
	ora $512B.w		; 0D 2B 51 ; Logical OR $512B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $513C11.l		; 2F 11 3C 51 ; AND accumulator with memory (long) $513C11.l [Writes: Accumulator] [Flags: ZN]
	and $112F11.l		; 2F 11 2F 11 ; AND accumulator with memory (long) $112F11.l [Writes: Accumulator] [Flags: ZN]
	and $112F11.l		; 2F 11 2F 11 ; AND accumulator with memory (long) $112F11.l [Writes: Accumulator] [Flags: ZN]
	and $112F11.l		; 2F 11 2F 11 ; AND accumulator with memory (long) $112F11.l [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($65.b),Y		; 51 65 ; Exclusive OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D65.w,X		; 1D 65 1D ; OR accumulator with memory $1D65.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	bit $3B51.w		; 2C 51 3B ; Test bits $3B51.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3B.b),Y		; 11 3B ; OR accumulator with memory ($3B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2C.b),Y		; 11 2C ; OR accumulator with memory ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($CB.b),Y		; 11 CB ; OR accumulator with memory ($CB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $113D.w,X		; 5D 3D 11 ; Exclusive OR accumulator with memory $113D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cpy $655D.w		; CC 5D 65 ; Compare $655D.w with Y register [Reads: Y Index] [Flags: ZNC]
	ora ($65.b),Y		; 11 65 ; OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($65.b),Y		; 11 65 ; OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($65.b),Y		; 11 65 ; OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($CB.b),Y		; 11 CB ; OR accumulator with memory ($CB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $112D.w,X		; 1D 2D 11 ; OR accumulator with memory $112D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $11.b		; 65 11 ; Add $11.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	wai		; CB ; Wait for interrupt
	ora $1D65.w,X		; 1D 65 1D ; OR accumulator with memory $1D65.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b		; 45 4D ; Exclusive OR $4D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b		; 45 4D ; Exclusive OR $4D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stx $08.b		; 86 08 ; Store X register to $08.b [Reads: X Index]
	eor $0D.b		; 45 0D ; Exclusive OR $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stx $48.b		; 86 48 ; Store X register to $48.b [Reads: X Index]
	eor $0D.b		; 45 0D ; Exclusive OR $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2B11.w		; 2D 11 2B ; Logical AND $2B11.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2B.b),Y		; 51 2B ; Exclusive OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($CD.b),Y		; 51 CD ; Exclusive OR accumulator with memory ($CD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $513D.w,X		; 5D 3D 51 ; Exclusive OR accumulator with memory $513D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$5D.b]		; C7 5D ; Compare accumulator (long) [$5D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp #$5D.b		; C9 5D ; Compare #$5D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $11.b		; 65 11 ; Add $11.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$5D.b		; C9 5D ; Compare #$5D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	wai		; CB ; Wait for interrupt
	ora $512D.w,X		; 1D 2D 51 ; OR accumulator with memory $512D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cpy $3D1D.w		; CC 1D 3D ; Compare $3D1D.w with Y register [Reads: Y Index] [Flags: ZNC]
	eor ($2B.b),Y		; 51 2B ; Exclusive OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2B.b),Y		; 51 2B ; Exclusive OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($CB.b),Y		; 11 CB ; OR accumulator with memory ($CB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $512D.w		; 0D 2D 51 ; Logical OR $512D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cpy $3D0D.w		; CC 0D 3D ; Compare $3D0D.w with Y register [Reads: Y Index] [Flags: ZNC]
	eor ($C7.b),Y		; 51 C7 ; Exclusive OR accumulator with memory ($C7.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1175.w,X		; 5D 75 11 ; Exclusive OR accumulator with memory $1175.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $C711.w,X		; 3D 11 C7 ; AND accumulator with memory $C711.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $1165.w,X		; 5D 65 11 ; Exclusive OR accumulator with memory $1165.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$1D.b		; C9 1D ; Compare #$1D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$1D.b		; C9 1D ; Compare #$1D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $2D1D.w		; CD 1D 2D ; Compare $2D1D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora ($C7.b),Y		; 11 C7 ; OR accumulator with memory ($C7.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $113D.w,X		; 1D 3D 11 ; OR accumulator with memory $113D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($CD.b)		; D2 CD ; Compare accumulator (indirect) ($CD.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($8D.b)		; D2 8D ; Compare accumulator (indirect) ($8D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $5DC8.w,X		; 1D C8 5D ; OR accumulator with memory $5DC8.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dec $1D.b		; C6 1D ; Decrement $1D.b [Reads: Direct Page] [Flags: ZN]
	dec $5D.b		; C6 5D ; Decrement $5D.b [Reads: Direct Page] [Flags: ZN]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	and $C951.w,X		; 3D 51 C9 ; AND accumulator with memory $C951.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D65.w		; 4D 65 1D ; Exclusive OR $1D65.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$4D.b		; C9 4D ; Compare #$4D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pei ($CD.b)		; D4 CD ; Push effective indirect address ($CD.b) [Reads: Direct Page] [Writes: Stack Pointer]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pei ($4D.b)		; D4 4D ; Push effective indirect address ($4D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $1D.b		; 26 1D ; Rotate left $1D.b [Reads: Direct Page] [Flags: ZNC]
	rol $5D.b		; 26 5D ; Rotate left $5D.b [Reads: Direct Page] [Flags: ZNC]
	pei ($8D.b)		; D4 8D ; Push effective indirect address ($8D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pei ($0D.b)		; D4 0D ; Push effective indirect address ($0D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$CD.b		; C9 CD ; Compare #$CD.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$CD.b		; C9 CD ; Compare #$CD.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $5D.b,X		; 36 5D ; Rotate left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tsb $0C1D.w		; 0C 1D 0C ; Test and set bits $0C1D.w [Reads: Accumulator] [Flags: Z]
	eor $4896.w,X		; 5D 96 48 ; Exclusive OR accumulator with memory $4896.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $AA1D.w		; 0D 1D AA ; Logical OR $AA1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta [$48.b]		; 87 48 ; Store accumulator (long) [$48.b] [Reads: Accumulator, Direct Page]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $08.b		; A4 08 ; Load $08.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $08B488.l		; 4F 88 B4 08 ; Exclusive OR accumulator with memory (long) $08B488.l [Writes: Accumulator] [Flags: ZN]
	lsr $1648.w		; 4E 48 16 ; Logical shift right $1648.w [Flags: ZNC]
	eor $5D16.w,X		; 5D 16 5D ; Exclusive OR accumulator with memory $5D16.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pei ($0D.b)		; D4 0D ; Push effective indirect address ($0D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	cmp #$8D.b		; C9 8D ; Compare #$8D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $3D51.w,X		; 3D 51 3D ; AND accumulator with memory $3D51.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($65.b),Y		; 11 65 ; OR accumulator with memory ($65.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $4DD2.w,X		; 1D D2 4D ; OR accumulator with memory $4DD2.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$8D.b		; C9 8D ; Compare #$8D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$8D.b		; C9 8D ; Compare #$8D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp [$0D.b]		; C7 0D ; Compare accumulator (long) [$0D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp [$0D.b]		; C7 0D ; Compare accumulator (long) [$0D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	and $2D51.w,X		; 3D 51 2D ; AND accumulator with memory $2D51.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2C.b),Y		; 11 2C ; OR accumulator with memory ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3B.b),Y		; 51 3B ; Exclusive OR accumulator with memory ($3B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3B.b),Y		; 51 3B ; Exclusive OR accumulator with memory ($3B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2C.b),Y		; 11 2C ; OR accumulator with memory ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($75.b),Y		; 51 75 ; Exclusive OR accumulator with memory ($75.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D75.w,X		; 1D 75 1D ; OR accumulator with memory $1D75.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $08.b,X		; 95 08 ; Store accumulator to $08.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	ldy $09.b		; A4 09 ; Load $09.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $49.b		; A4 49 ; Load $49.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp ($0D.b)		; D2 0D ; Compare accumulator (indirect) ($0D.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$0D.b		; C9 0D ; Compare #$0D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$0D.b		; C9 0D ; Compare #$0D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $2D0D.w		; CD 0D 2D ; Compare $2D0D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora ($C7.b),Y		; 11 C7 ; OR accumulator with memory ($C7.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $113D.w		; 0D 3D 11 ; Logical OR $113D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $4DC8.w		; 0D C8 4D ; Logical OR $4DC8.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $4DC8.w		; 0D C8 4D ; Logical OR $4DC8.w with accumulator [Writes: Accumulator] [Flags: ZN]
	dec $0D.b		; C6 0D ; Decrement $0D.b [Reads: Direct Page] [Flags: ZN]
	dec $4D.b		; C6 4D ; Decrement $4D.b [Reads: Direct Page] [Flags: ZN]
	cmp [$4D.b]		; C7 4D ; Compare accumulator (long) [$4D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $C711.w,X		; 3D 11 C7 ; AND accumulator with memory $C711.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $0DD0.w		; 4D D0 0D ; Exclusive OR $0DD0.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp ($0D.b),Y		; D1 0D ; Compare accumulator ($0D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $1D43.w,X		; 1D 43 1D ; OR accumulator with memory $1D43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $1D53.w,X		; 1D 53 1D ; OR accumulator with memory $1D53.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,S		; 43 5D ; Exclusive OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $5D53.w,X		; 5D 53 5D ; Exclusive OR accumulator with memory $5D53.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $1D75.w,X		; 5D 75 1D ; Exclusive OR accumulator with memory $1D75.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	dec $0D.b		; C6 0D ; Decrement $0D.b [Reads: Direct Page] [Flags: ZN]
	dec $4D.b		; C6 4D ; Decrement $4D.b [Reads: Direct Page] [Flags: ZN]
	and #$1D.b		; 29 1D ; Logical AND #$1D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,S		; 63 1D ; Add with carry (stack relative) $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	and $351D.w,Y		; 39 1D 35 ; AND accumulator with memory $351D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D63.w,X		; 1D 63 5D ; OR accumulator with memory $5D63.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and #$5D.b		; 29 5D ; Logical AND #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and $5D.b,X		; 35 5D ; Logical AND $5D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $945D.w,Y		; 39 5D 94 ; AND accumulator with memory $945D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc $A408.w		; 6D 08 A4 ; Add $A408.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora #$5C.b		; 09 5C ; Logical OR #$5C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	stz $BA08.w		; 9C 08 BA ; Store zero to $BA08.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $9408.w		; 6D 08 94 ; Add $9408.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $49A408.l		; 5C 08 A4 49 ; Jump long to $49A408.l [Flow: jump]
	and $CB11.w		; 2D 11 CB ; Logical AND $CB11.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $113D.w		; 4D 3D 11 ; Exclusive OR $113D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cpy $614D.w		; CC 4D 61 ; Compare $614D.w with Y register [Reads: Y Index] [Flags: ZNC]
	ora $1902.w,Y		; 19 02 19 ; OR accumulator with memory $1902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b,X)		; 61 19 ; Add with carry ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($39.b,X)		; 61 39 ; Add with carry ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($39.b,X)		; 61 39 ; Add with carry ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $3960.w,Y		; 39 60 39 ; AND accumulator with memory $3960.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $3940.w,Y		; 39 40 39 ; AND accumulator with memory $3940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $3964.w,Y		; 39 64 39 ; AND accumulator with memory $3964.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $39		; 70 39 ; Branch if overflow set to $70, $39 [Flow: branch]
	adc ($39.b),Y		; 71 39 ; Add with carry ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $7941.w,Y		; 79 41 79 ; Add $7941.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $3920.w,Y		; 79 20 39 ; Add $3920.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $70, $39		; 70 39 ; Branch if overflow set to $70, $39 [Flow: branch]
	adc ($39.b),Y		; 71 39 ; Add with carry ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	adc ($79.b),Y		; 71 79 ; Add with carry ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $79		; 70 79 ; Branch if overflow set to $70, $79 [Flow: branch]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $70, $39		; 70 39 ; Branch if overflow set to $70, $39 [Flow: branch]
	adc ($39.b),Y		; 71 39 ; Add with carry ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $7179.w		; 20 79 71 ; Jump to subroutine at $7179.w [Writes: Stack Pointer] [Flow: call]
	adc $7970.w,Y		; 79 70 79 ; Add $7970.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $3951.w,Y		; 39 51 39 ; AND accumulator with memory $3951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $3941.w,Y		; 39 41 39 ; AND accumulator with memory $3941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($79.b),Y		; 71 79 ; Add with carry ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $79		; 70 79 ; Branch if overflow set to $70, $79 [Flow: branch]
	eor ($79.b,X)		; 41 79 ; Exclusive OR accumulator with memory ($79.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $7960.w,Y		; 79 60 79 ; Add $7960.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $7940.w,Y		; 79 40 79 ; Add $7940.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $7961.w,Y		; 79 61 79 ; Add $7961.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($79.b,X)		; 61 79 ; Add with carry ($79.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($79.b,X)		; 61 79 ; Add with carry ($79.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($79.b,X)		; 61 79 ; Add with carry ($79.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $39		; 10 39 ; Branch if plus to $10, $39 [Flow: branch]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $39		; 10 39 ; Branch if plus to $10, $39 [Flow: branch]
	.db $50, $39		; 50 39 ; Branch if overflow clear to $50, $39 [Flow: branch]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $3900.w,Y		; 39 00 39 ; AND accumulator with memory $3900.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $3903.w,Y		; 39 03 39 ; AND accumulator with memory $3903.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b,X)		; 01 39 ; Logical OR ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $2139.w		; 20 39 21 ; Jump to subroutine at $2139.w [Writes: Stack Pointer] [Flow: call]
	and $7901.w,Y		; 39 01 79 ; AND accumulator with memory $7901.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $79.b,S		; 03 79 ; OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $6079.w		; 20 79 60 ; Jump to subroutine at $6079.w [Writes: Stack Pointer] [Flow: call]
	adc $7950.w,Y		; 79 50 79 ; Add $7950.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $7900.w,Y		; 79 00 79 ; Add $7900.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	jsr $2119.w		; 20 19 21 ; Jump to subroutine at $2119.w [Writes: Stack Pointer] [Flow: call]
	ora $1930.w,Y		; 19 30 19 ; OR accumulator with memory $1930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsl $192019.l		; 22 19 20 19 ; Jump to subroutine long $192019.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	jsl $395039.l		; 22 39 50 39 ; Jump to subroutine long $395039.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $39		; 10 39 ; Branch if plus to $10, $39 [Flow: branch]
	brk $39.b		; 00 39 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	stz $79.b		; 64 79 ; Store zero to $79.b
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $7941.w,Y		; 79 41 79 ; Add $7941.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $3960.w,Y		; 79 60 39 ; Add $3960.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $39.b,S		; 03 39 ; OR accumulator with stack relative $39.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b,X)		; 01 39 ; Logical OR ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $7901.w,Y		; 79 01 79 ; Add $7901.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $79.b		; 00 79 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $50, $39		; 50 39 ; Branch if overflow clear to $50, $39 [Flow: branch]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $39.b		; 00 39 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($39.b,X)		; 01 39 ; Logical OR ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $79		; 50 79 ; Branch if overflow clear to $50, $79 [Flow: branch]
	ora ($79.b,X)		; 01 79 ; Logical OR ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $79.b		; 00 79 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $3951.w,Y		; 39 51 39 ; AND accumulator with memory $3951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $39.b		; 00 39 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($39.b,X)		; 01 39 ; Logical OR ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	stz $79.b		; 64 79 ; Store zero to $79.b
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $7901.w,Y		; 79 01 79 ; Add $7901.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $79.b,S		; 03 79 ; OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $50, $79		; 50 79 ; Branch if overflow clear to $50, $79 [Flow: branch]
	jsl $790079.l		; 22 79 00 79 ; Jump to subroutine long $790079.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	jsr $2259.w		; 20 59 22 ; Jump to subroutine at $2259.w [Writes: Stack Pointer] [Flow: call]
	eor $5930.w,Y		; 59 30 59 ; Exclusive OR accumulator with memory $5930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $3159.w		; 20 59 31 ; Jump to subroutine at $3159.w [Writes: Stack Pointer] [Flow: call]
	eor $5930.w,Y		; 59 30 59 ; Exclusive OR accumulator with memory $5930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $2239.w		; 20 39 22 ; Jump to subroutine at $2239.w [Writes: Stack Pointer] [Flow: call]
	and $3930.w,Y		; 39 30 39 ; AND accumulator with memory $3930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $39		; 10 39 ; Branch if plus to $10, $39 [Flow: branch]
	jsr $2139.w		; 20 39 21 ; Jump to subroutine at $2139.w [Writes: Stack Pointer] [Flow: call]
	and $3930.w,Y		; 39 30 39 ; AND accumulator with memory $3930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($39.b),Y		; 31 39 ; AND accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($79.b),Y		; 31 79 ; AND accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($39.b),Y		; 31 39 ; AND accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $3179.w		; 20 79 31 ; Jump to subroutine at $3179.w [Writes: Stack Pointer] [Flow: call]
	adc $7930.w,Y		; 79 30 79 ; Add $7930.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	jsl $792079.l		; 22 79 20 79 ; Jump to subroutine long $792079.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	.db $30, $79		; 30 79 ; Branch if minus to $30, $79 [Flow: branch]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	jsr $2219.w		; 20 19 22 ; Jump to subroutine at $2219.w [Writes: Stack Pointer] [Flow: call]
	ora $1930.w,Y		; 19 30 19 ; OR accumulator with memory $1930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $3920.w,Y		; 19 20 39 ; OR accumulator with memory $3920.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	.db $30, $39		; 30 39 ; Branch if minus to $30, $39 [Flow: branch]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $393139.l		; 22 39 31 39 ; Jump to subroutine long $393139.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $39		; 10 39 ; Branch if plus to $10, $39 [Flow: branch]
	.db $42, $19		; 42 19 ; Reserved instruction
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $1952.w,Y		; 19 52 19 ; OR accumulator with memory $1952.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $5942.w,Y		; 59 42 59 ; Exclusive OR accumulator with memory $5942.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	eor ($59.b)		; 52 59 ; Exclusive OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	inc $3418.w,X		; FE 18 34 ; Increment memory $3418.w,X [Reads: X Index] [Flags: ZN]
	ora $18FE.w,Y		; 19 FE 18 ; OR accumulator with memory $18FE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $3258.w,X		; FE 58 32 ; Increment memory $3258.w,X [Reads: X Index] [Flags: ZN]
	eor $58FE.w,Y		; 59 FE 58 ; Exclusive OR accumulator with memory $58FE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	jsl $792179.l		; 22 79 21 79 ; Jump to subroutine long $792179.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	and ($79.b),Y		; 31 79 ; AND accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $4079.w		; 20 79 40 ; Jump to subroutine at $4079.w [Writes: Stack Pointer] [Flow: call]
	eor $7930.w,Y		; 59 30 79 ; Exclusive OR accumulator with memory $7930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	jsl $592059.l		; 22 59 20 59 ; Jump to subroutine long $592059.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	ora $0D1D.w		; 0D 1D 0D ; Logical OR $0D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $5D14.w,X		; 5D 14 5D ; Exclusive OR accumulator with memory $5D14.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stx $08.b,Y		; 96 08 ; Store X register $08.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	ora $A85D.w		; 0D 5D A8 ; Logical OR $A85D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1970.w,Y		; 19 70 19 ; OR accumulator with memory $1970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $4039.w		; 20 39 40 ; Jump to subroutine at $4039.w [Writes: Stack Pointer] [Flow: call]
	ora $3930.w,Y		; 19 30 39 ; OR accumulator with memory $3930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $39		; 50 39 ; Branch if overflow clear to $50, $39 [Flow: branch]
	stz $39.b		; 64 39 ; Store zero to $39.b
	brk $39.b		; 00 39 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($39.b,X)		; 01 39 ; Logical OR ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $62, $19, $47		; 62 19 47 ; Push effective relative address $62, $19, $47 [Writes: Stack Pointer]
	ora $1972.w,Y		; 19 72 19 ; OR accumulator with memory $1972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($19.b,S),Y		; 73 19 ; Add with carry (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor [$59.b]		; 47 59 ; Exclusive OR accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $59, $73		; 62 59 73 ; Push effective relative address $62, $59, $73 [Writes: Stack Pointer]
	eor $5972.w,Y		; 59 72 59 ; Exclusive OR accumulator with memory $5972.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1933.w,Y		; 19 33 19 ; OR accumulator with memory $1933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $590B.w,Y		; 19 0B 59 ; OR accumulator with memory $590B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5933.w,Y		; 59 33 59 ; Exclusive OR accumulator with memory $5933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $7059.w		; 20 59 70 ; Jump to subroutine at $7059.w [Writes: Stack Pointer] [Flow: call]
	eor $5930.w,Y		; 59 30 59 ; Exclusive OR accumulator with memory $5930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5970.w,Y		; 59 70 59 ; Exclusive OR accumulator with memory $5970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5911.w,Y		; 59 11 59 ; Exclusive OR accumulator with memory $5911.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $5D.b,X		; 15 5D ; OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta [$08.b]		; 87 08 ; Store accumulator (long) [$08.b] [Reads: Accumulator, Direct Page]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1911.w,Y		; 19 11 19 ; OR accumulator with memory $1911.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1951.w,Y		; 19 51 19 ; OR accumulator with memory $1951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1941.w,Y		; 19 41 19 ; OR accumulator with memory $1941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b)		; 12 39 ; OR accumulator with memory (indirect) ($39.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $3913.w,Y		; 19 13 39 ; OR accumulator with memory $3913.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $591B39.l,X		; 3F 39 1B 59 ; AND accumulator with memory (long,X) $591B39.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $791379.l,X		; 3F 79 13 79 ; AND accumulator with memory (long,X) $791379.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $39		; 10 39 ; Branch if plus to $10, $39 [Flow: branch]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b)		; 12 79 ; OR accumulator with memory (indirect) ($79.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($79.b),Y		; 11 79 ; OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $7079.w		; 20 79 70 ; Jump to subroutine at $7079.w [Writes: Stack Pointer] [Flow: call]
	eor $7930.w,Y		; 59 30 79 ; Exclusive OR accumulator with memory $7930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5951.w,Y		; 59 51 59 ; Exclusive OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5941.w,Y		; 59 41 59 ; Exclusive OR accumulator with memory $5941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5940.w,Y		; 59 40 59 ; Exclusive OR accumulator with memory $5940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	wai		; CB ; Wait for interrupt
	eor $4DD4.w		; 4D D4 4D ; Exclusive OR $4DD4.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sbc ($49.b)		; F2 49 ; Subtract with carry (indirect) ($49.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	eor $48A4C8.l		; 4F C8 A4 48 ; Exclusive OR accumulator with memory (long) $48A4C8.l [Writes: Accumulator] [Flags: ZN]
	eor $48B448.l		; 4F 48 B4 48 ; Exclusive OR accumulator with memory (long) $48B448.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $1119.w		; 20 19 11 ; Jump to subroutine at $1119.w [Writes: Stack Pointer] [Flow: call]
	ora $1900.w,Y		; 19 00 19 ; OR accumulator with memory $1900.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $197019.l		; 22 19 70 19 ; Jump to subroutine long $197019.l [Writes: Stack Pointer] [Flow: call]
	jsr $6039.w		; 20 39 60 ; Jump to subroutine at $6039.w [Writes: Stack Pointer] [Flow: call]
	ora $3930.w,Y		; 19 30 39 ; OR accumulator with memory $3930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($39.b),Y		; 31 39 ; AND accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($79.b),Y		; 31 79 ; AND accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($39.b,X)		; 21 39 ; Logical AND ($39.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rol $3179.w		; 2E 79 31 ; Rotate left $3179.w [Flags: ZNC]
	and $793E.w,Y		; 39 3E 79 ; AND accumulator with memory $793E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol VMDATALREAD.w		; 2E 39 21 ; Rotate left VMDATALREAD.w [Flags: ZNC]
	adc $393E.w,Y		; 79 3E 39 ; Add $393E.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($79.b),Y		; 31 79 ; AND accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $7079.w		; 20 79 70 ; Jump to subroutine at $7079.w [Writes: Stack Pointer] [Flow: call]
	eor $7930.w,Y		; 59 30 79 ; Exclusive OR accumulator with memory $7930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5900.w,Y		; 59 00 59 ; Exclusive OR accumulator with memory $5900.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsl $592159.l		; 22 59 21 59 ; Jump to subroutine long $592159.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $AA59.w		; 20 59 AA ; Jump to subroutine at $AA59.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1971.w,Y		; 19 71 19 ; OR accumulator with memory $1971.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1964.w,Y		; 19 64 19 ; OR accumulator with memory $1964.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b),Y		; 71 59 ; Add with carry ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $18FE.w,Y		; 59 FE 18 ; Exclusive OR accumulator with memory $18FE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $FE18.w,X		; FE 18 FE ; Increment memory $FE18.w,X [Reads: X Index] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	inc $7018.w,X		; FE 18 70 ; Increment memory $7018.w,X [Reads: X Index] [Flags: ZN]
	ora $1971.w,Y		; 19 71 19 ; OR accumulator with memory $1971.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1951.w,Y		; 19 51 19 ; OR accumulator with memory $1951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b),Y		; 71 59 ; Add with carry ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5951.w,Y		; 59 51 59 ; Exclusive OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5964.w,Y		; 59 64 59 ; Exclusive OR accumulator with memory $5964.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5941.w,Y		; 59 41 59 ; Exclusive OR accumulator with memory $5941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5951.w,Y		; 59 51 59 ; Exclusive OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $AA19.w		; 20 19 AA ; Jump to subroutine at $AA19.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $193119.l		; 22 19 31 19 ; Jump to subroutine long $193119.l [Writes: Stack Pointer] [Flow: call]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1951.w,Y		; 19 51 19 ; OR accumulator with memory $1951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1951.w,Y		; 19 51 19 ; OR accumulator with memory $1951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5951.w,Y		; 59 51 59 ; Exclusive OR accumulator with memory $5951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5922.w,Y		; 59 22 59 ; Exclusive OR accumulator with memory $5922.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $AA59.w		; 20 59 AA ; Jump to subroutine at $AA59.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $193119.l		; 22 19 31 19 ; Jump to subroutine long $193119.l [Writes: Stack Pointer] [Flow: call]
	jsr $0019.w		; 20 19 00 ; Jump to subroutine at $0019.w [Writes: Stack Pointer] [Flow: call]
	ora $1901.w,Y		; 19 01 19 ; OR accumulator with memory $1901.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $190019.l		; 22 19 00 19 ; Jump to subroutine long $190019.l [Writes: Stack Pointer] [Flow: call]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $592159.l		; 22 59 21 59 ; Jump to subroutine long $592159.l [Writes: Stack Pointer] [Flow: call]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $592159.l		; 22 59 21 59 ; Jump to subroutine long $592159.l [Writes: Stack Pointer] [Flow: call]
	jsr $3159.w		; 20 59 31 ; Jump to subroutine at $3159.w [Writes: Stack Pointer] [Flow: call]
	eor $1931.w,Y		; 59 31 19 ; Exclusive OR accumulator with memory $1931.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $AA19.w		; 20 19 AA ; Jump to subroutine at $AA19.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $3159.w		; 20 59 31 ; Jump to subroutine at $3159.w [Writes: Stack Pointer] [Flow: call]
	eor $5930.w,Y		; 59 30 59 ; Exclusive OR accumulator with memory $5930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $CB51.w		; 2D 51 CB ; Logical AND $CB51.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $5DCB.w,X		; 5D CB 5D ; Exclusive OR accumulator with memory $5DCB.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $11.b		; 65 11 ; Add $11.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	ora $5DCA.w,X		; 1D CA 5D ; OR accumulator with memory $5DCA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $11.b		; 65 11 ; Add $11.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $11.b		; 65 11 ; Add $11.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $2D11.w		; 2D 11 2D ; Logical AND $2D11.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($CD.b),Y		; 51 CD ; Exclusive OR accumulator with memory ($CD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $513D.w		; 4D 3D 51 ; Exclusive OR $513D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp [$4D.b]		; C7 4D ; Compare accumulator (long) [$4D.b] [Reads: Accumulator, Direct Page] [Flags: ZNC]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora ($2B.b),Y		; 11 2B ; OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3B.b),Y		; 51 3B ; Exclusive OR accumulator with memory ($3B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3B.b),Y		; 11 3B ; OR accumulator with memory ($3B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2B.b),Y		; 11 2B ; OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2B.b),Y		; 51 2B ; Exclusive OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2B.b),Y		; 11 2B ; OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2B.b),Y		; 51 2B ; Exclusive OR accumulator with memory ($2B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($96.b),Y		; 51 96 ; Exclusive OR accumulator with memory ($96.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sta [$08.b],Y		; 97 08 ; Store accumulator (long indexed) [$08.b],Y [Reads: Accumulator, Direct Page, Y Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $161D.w		; 0D 1D 16 ; Logical OR $161D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $5D16.w,X		; 1D 16 5D ; OR accumulator with memory $5D16.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	sbc ($09.b)		; F2 09 ; Subtract with carry (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	pei ($0D.b)		; D4 0D ; Push effective indirect address ($0D.b) [Reads: Direct Page] [Writes: Stack Pointer]
	wai		; CB ; Wait for interrupt
	ora $1D16.w		; 0D 16 1D ; Logical OR $1D16.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $3D5D.w		; 0E 5D 3D ; Arithmetic shift left $3D5D.w [Flags: ZNC]
	eor ($3D.b),Y		; 51 3D ; Exclusive OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($0E.b),Y		; 11 0E ; OR accumulator with memory ($0E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D16.w,X		; 1D 16 1D ; OR accumulator with memory $1D16.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $3D51.w,X		; 3D 51 3D ; AND accumulator with memory $3D51.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AD.b),Y		; 51 AD ; Exclusive OR accumulator with memory ($AD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$AE.b		; 09 AE ; Logical OR #$AE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$BD.b		; 09 BD ; Logical OR #$BD.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FE.b		; 09 FE ; Logical OR #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $AD49.w		; AE 49 AD ; Load $AD49.w into X register [Writes: X Index] [Flags: ZN]
	eor #$FE.b		; 49 FE ; Exclusive OR #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lda $BE49.w,X		; BD 49 BE ; Load $BE49.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$BC.b		; 09 BC ; Logical OR #$BC.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$8E.b		; 09 8E ; Logical OR #$8E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	bit #$BA.b		; 89 BA ; Test bits #$BA.b with accumulator [Reads: Accumulator] [Flags: Z]
	bit #$BC.b		; 89 BC ; Test bits #$BC.b with accumulator [Reads: Accumulator] [Flags: Z]
	eor #$BE.b		; 49 BE ; Exclusive OR #$BE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$BA.b		; 49 BA ; Exclusive OR #$BA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$8E.b		; C9 8E ; Compare #$8E.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$75.b		; C9 75 ; Compare #$75.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora $1D75.w,X		; 1D 75 1D ; OR accumulator with memory $1D75.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sta $CDC8.w		; 8D C8 CD ; Store accumulator to $CDC8.w [Reads: Accumulator]
	cmp #$4D.b		; C9 4D ; Compare #$4D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$CD.b		; C9 CD ; Compare #$CD.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $5DC8.w,X		; 1D C8 5D ; OR accumulator with memory $5DC8.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $2D11.w		; 2D 11 2D ; Logical AND $2D11.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($75.b),Y		; 51 75 ; Exclusive OR accumulator with memory ($75.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($C9.b),Y		; 11 C9 ; OR accumulator with memory ($C9.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp $DDC9.w,X		; DD C9 DD ; Compare accumulator $DDC9.w,X [Reads: X Index] [Flags: ZNC]
	adc $11.b		; 65 11 ; Add $11.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08AA09.l		; 0F 09 AA 08 ; OR accumulator with memory (long) $08AA09.l [Writes: Accumulator] [Flags: ZN]
	bit $09.b		; 24 09 ; Test bits $09.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	ora $08AA49.l		; 0F 49 AA 08 ; OR accumulator with memory (long) $08AA49.l [Writes: Accumulator] [Flags: ZN]
	bit $49.b		; 24 49 ; Test bits $49.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $2008.w,Y		; BE 08 20 ; Load X register $2008.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	ora #$BF.b		; 09 BF ; Logical OR #$BF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $30, $09		; 30 09 ; Branch if minus to $30, $09 [Flow: branch]
	jsr $BE49.w		; 20 49 BE ; Jump to subroutine at $BE49.w [Writes: Stack Pointer] [Flow: call]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $30, $49		; 30 49 ; Branch if minus to $30, $49 [Flow: branch]
	lda $088008.l,X		; BF 08 80 08 ; Load long $088008.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $09.b		; 25 09 ; Logical AND $09.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	and $09.b,X		; 35 09 ; Logical AND $09.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $49.b		; 25 49 ; Logical AND $49.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta ($08.b,X)		; 81 08 ; Store accumulator ($08.b,X) [Reads: Accumulator, X Index, Direct Page]
	and $49.b,X		; 35 49 ; Logical AND $49.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor [$09.b],Y		; 57 09 ; Exclusive OR accumulator with memory (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	bit #$AA.b		; 89 AA ; Test bits #$AA.b with accumulator [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	cmp #$57.b		; C9 57 ; Compare #$57.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	eor #$56.b		; 49 56 ; Exclusive OR #$56.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$1E.b		; 09 1E ; Logical OR #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$56.b		; 09 56 ; Logical OR #$56.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$1F.b		; 09 1F ; Logical OR #$1F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$1F.b		; C9 1F ; Compare #$1F.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora #$56.b		; 09 56 ; Logical OR #$56.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$1E.b		; 49 1E ; Exclusive OR #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$56.b		; C9 56 ; Compare #$56.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	eor #$18.b		; 49 18 ; Exclusive OR #$18.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$09.b		; 09 09 ; Logical OR #$09.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$66.b		; 09 66 ; Logical OR #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$67.b		; 09 67 ; Logical OR #$67.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$09.b		; 09 09 ; Logical OR #$09.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$18.b		; 49 18 ; Exclusive OR #$18.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$67.b		; 49 67 ; Exclusive OR #$67.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$66.b		; 49 66 ; Exclusive OR #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$53.b		; 49 53 ; Exclusive OR #$53.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $42, $48		; 42 48 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor #$07.b		; 49 07 ; Exclusive OR #$07.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$73.b		; 49 73 ; Exclusive OR #$73.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $62, $48, $06		; 62 48 06 ; Push effective relative address $62, $48, $06 [Writes: Stack Pointer]
	eor #$72.b		; 49 72 ; Exclusive OR #$72.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $62, $08, $73		; 62 08 73 ; Push effective relative address $62, $08, $73 [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($08.b)		; 72 08 ; Add with carry (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	asl $09.b		; 06 09 ; Arithmetic shift left $09.b [Reads: Direct Page] [Flags: ZNC]
	.db $42, $08		; 42 08 ; Reserved instruction
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$09.b]		; 07 09 ; OR accumulator with memory (long) [$09.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora #$AA.b		; 09 AA ; Logical OR #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $AA49.w,Y		; 19 49 AA ; OR accumulator with memory $AA49.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rol $09.b		; 26 09 ; Rotate left $09.b [Reads: Direct Page] [Flags: ZNC]
	ora [$09.b],Y		; 17 09 ; OR accumulator with memory (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$49.b],Y		; 17 49 ; OR accumulator with memory (long indexed) [$49.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$09.b]		; 27 09 ; AND accumulator with memory (long) [$09.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$49.b]		; 27 49 ; AND accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $49.b,X		; 16 49 ; Arithmetic shift left $49.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	.db $42, $48		; 42 48 ; Reserved instruction
	rol $49.b		; 26 49 ; Rotate left $49.b [Reads: Direct Page] [Flags: ZNC]
	eor ($48.b)		; 52 48 ; Exclusive OR accumulator with memory (indirect) ($48.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $3921.w,Y		; 39 21 39 ; AND accumulator with memory $3921.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and $3931.w,Y		; 39 31 39 ; AND accumulator with memory $3931.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	lsr $3139.w		; 4E 39 31 ; Logical shift right $3139.w [Flags: ZNC]
	adc $395E.w,Y		; 79 5E 39 ; Add $395E.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lsr $2179.w		; 4E 79 21 ; Logical shift right $2179.w [Flags: ZNC]
	and $795E.w,Y		; 39 5E 79 ; AND accumulator with memory $795E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($39.b),Y		; 31 39 ; AND accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc $7931.w,Y		; 79 31 79 ; Add $7931.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc $0842.w,Y		; 79 42 08 ; Add $0842.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	asl $09.b,X		; 16 09 ; Arithmetic shift left $09.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $09.b		; 26 09 ; Rotate left $09.b [Reads: Direct Page] [Flags: ZNC]
	ora $AA09.w,Y		; 19 09 AA ; OR accumulator with memory $AA09.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $49.b		; 26 49 ; Rotate left $49.b [Reads: Direct Page] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	and #$49.b		; 29 49 ; Logical AND #$49.b with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	trb $2809.w		; 1C 09 28 ; Test and reset bits $2809.w [Reads: Accumulator] [Flags: Z]
	eor #$28.b		; 49 28 ; Exclusive OR #$28.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$1D.b		; 09 1D ; Logical OR #$1D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$1D.b		; 09 1D ; Logical OR #$1D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$29.b		; 49 29 ; Exclusive OR #$29.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$62.b		; 09 62 ; Logical OR #$62.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	trb $A049.w		; 1C 49 A0 ; Test and reset bits $A049.w [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1900.w,Y		; 19 00 19 ; OR accumulator with memory $1900.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1910.w,Y		; 19 10 19 ; OR accumulator with memory $1910.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $5910.w,Y		; 59 10 59 ; Exclusive OR accumulator with memory $5910.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $0862.w,Y		; 59 62 08 ; Exclusive OR accumulator with memory $0862.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$49.b		; 29 49 ; Logical AND #$49.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ldy #$08.b		; A0 08 ; Load #$08.b into Y register [Writes: Y Index] [Flags: ZN]
	trb $2909.w		; 1C 09 29 ; Test and reset bits $2909.w [Reads: Accumulator] [Flags: Z]
	ora #$AA.b		; 09 AA ; Logical OR #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $AA49.w		; 1C 49 AA ; Test and reset bits $AA49.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1903.w,Y		; 19 03 19 ; OR accumulator with memory $1903.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $1913.w,Y		; 19 13 19 ; OR accumulator with memory $1913.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsb $19.b		; 04 19 ; Test and set bits $19.b [Reads: Accumulator] [Flags: Z]
	ora $19.b		; 05 19 ; Logical OR $19.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $19.b		; 14 19 ; Test and reset bits $19.b [Reads: Accumulator] [Flags: Z]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b		; 05 59 ; Logical OR $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $59.b		; 04 59 ; Test and set bits $59.b [Reads: Accumulator] [Flags: Z]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $59.b		; 14 59 ; Test and reset bits $59.b [Reads: Accumulator] [Flags: Z]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $5913.w,Y		; 59 13 59 ; Exclusive OR accumulator with memory $5913.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $08AA.w,Y		; 59 AA 08 ; Exclusive OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tsb $AA19.w		; 0C 19 AA ; Test and set bits $AA19.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $0E19.w		; 0D 19 0E ; Logical OR $0E19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $0D59.w		; 0E 59 0D ; Arithmetic shift left $0D59.w [Flags: ZNC]
	eor $08AA.w,Y		; 59 AA 08 ; Exclusive OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $AA59.w		; 0C 59 AA ; Test and set bits $AA59.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $3C1D.w,X		; 5D 1D 3C ; Exclusive OR accumulator with memory $3C1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $111D.w,X		; 5D 1D 11 ; Exclusive OR accumulator with memory $111D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $3951.w,Y		; 19 51 39 ; OR accumulator with memory $3951.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	adc ($39.b,X)		; 61 39 ; Add with carry ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($79.b,X)		; 61 79 ; Add with carry ($79.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	bit $5D1D.w,X		; 3C 1D 5D ; Test bits $5D1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $5D5D.w,X		; 1D 5D 5D ; OR accumulator with memory $5D5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $101D.w,X		; 3C 1D 10 ; Test bits $101D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $192E.w,Y		; 19 2E 19 ; OR accumulator with memory $192E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3E1D.w,X		; 3C 1D 3E ; Test bits $3E1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $592E.w,Y		; 19 2E 59 ; OR accumulator with memory $592E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	rol $3C59.w,X		; 3E 59 3C ; Rotate left $3C59.w,X [Reads: X Index] [Flags: ZNC]
	ora $3C2F.w,X		; 1D 2F 3C ; OR accumulator with memory $3C2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $3C		; 30 3C ; Branch if minus to $30, $3C [Flow: branch]
	and $3C0330.l,X		; 3F 30 03 3C ; AND accumulator with memory (long,X) $3C0330.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and #$1C.b		; 29 1C ; Logical AND #$1C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	mvn $01,$59		; 54 59 01 ; Move block negative $01,$59 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $1941.w,Y		; 19 41 19 ; OR accumulator with memory $1941.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	mvn $29,$19		; 54 19 29 ; Move block negative $29,$19 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	jmp $015941.l		; 5C 41 59 01 ; Jump long to $015941.l [Flow: jump]
	eor $1D3C.w,Y		; 59 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $3C0E.w,X		; 1D 0E 3C ; OR accumulator with memory $3C0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3D3C.w,X		; 3C 3C 3D ; Test bits $3D3C.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	bit $3C00.w,X		; 3C 00 3C ; Test bits $3C00.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora ($3C.b,X)		; 01 3C ; Logical OR ($3C.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora #$1D.b		; 09 1D ; Logical OR #$1D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$5D.b		; 09 5D ; Logical OR #$5D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $191D.w,Y		; 19 1D 19 ; OR accumulator with memory $191D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1D3C.w,X		; 5D 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D3C3C.l		; 0F 3C 3C 1D ; OR accumulator with memory (long) $1D3C3C.l [Writes: Accumulator] [Flags: ZN]
	ora $1D083C.l,X		; 1F 3C 08 1D ; Logical OR long $1D083C.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1D38.w,X		; 5D 38 1D ; Exclusive OR accumulator with memory $1D38.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $1D3C.w,X		; 5D 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1D3C3C.l		; 2F 3C 3C 1D ; AND accumulator with memory (long) $1D3C3C.l [Writes: Accumulator] [Flags: ZN]
	and $1D3C3C.l,X		; 3F 3C 3C 1D ; AND accumulator with memory (long,X) $1D3C3C.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $5D5D.w,X		; 1D 5D 5D ; OR accumulator with memory $5D5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5D37.w,X		; 5D 37 5D ; Exclusive OR accumulator with memory $5D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $5D05.w,X		; 5D 05 5D ; Exclusive OR accumulator with memory $5D05.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $5D09.w,X		; 5D 09 5D ; Exclusive OR accumulator with memory $5D09.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $488C.w,X		; 5D 8C 48 ; Exclusive OR accumulator with memory $488C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $9C1D.w,X		; 3C 1D 9C ; Test bits $9C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sty $8C48.w		; 8C 48 8C ; Store Y register to $8C48.w [Reads: Y Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	stz $3C88.w,X		; 9E 88 3C ; Store zero to $3C88.w,X [Reads: X Index]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,S		; 43 5D ; Exclusive OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$5D.b],Y		; 37 5D ; AND accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $1D.b,X		; 36 1D ; Rotate left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $1D37.w,X		; 1D 37 1D ; OR accumulator with memory $1D37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $1C29.w,X		; 1D 29 1C ; OR accumulator with memory $1C29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$3C.b],Y		; 17 3C ; OR accumulator with memory (long indexed) [$3C.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1F1C.w		; 0D 1C 1F ; Logical OR $1F1C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	bit $5C1D.w,X		; 3C 1D 5C ; Test bits $5C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	bit $1E1D.w,X		; 3C 1D 1E ; Test bits $1E1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	jmp $4E1D3C.l		; 5C 3C 1D 4E ; Jump long to $4E1D3C.l [Flow: jump]
	.db $90, $BA		; 90 BA ; Branch if carry clear to $90, $BA [Flow: branch]
	.db $10, $4E		; 10 4E ; Branch if plus to $10, $4E [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	.db $10, $66		; 10 66 ; Branch if plus to $10, $66 [Flow: branch]
	.db $50, $64		; 50 64 ; Branch if overflow clear to $50, $64 [Flow: branch]
	.db $50, $76		; 50 76 ; Branch if overflow clear to $50, $76 [Flow: branch]
	.db $50, $74		; 50 74 ; Branch if overflow clear to $50, $74 [Flow: branch]
	.db $50, $BA		; 50 BA ; Branch if overflow clear to $50, $BA [Flow: branch]
	.db $D0, $BA		; D0 BA ; Branch if not equal to $D0, $BA [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	.db $90, $BA		; 90 BA ; Branch if carry clear to $90, $BA [Flow: branch]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda [$08.b]		; A7 08 ; Load accumulator (long) [$08.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda [$48.b]		; A7 48 ; Load accumulator (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	.db $10, $43		; 10 43 ; Branch if plus to $10, $43 [Flow: branch]
	.db $50, $5B		; 50 5B ; Branch if overflow clear to $50, $5B [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	.db $10, $5C		; 10 5C ; Branch if plus to $10, $5C [Flow: branch]
	.db $10, $5C		; 10 5C ; Branch if plus to $10, $5C [Flow: branch]
	.db $50, $BA		; 50 BA ; Branch if overflow clear to $50, $BA [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	.db $10, $79		; 10 79 ; Branch if plus to $10, $79 [Flow: branch]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	.db $10, $66		; 10 66 ; Branch if plus to $10, $66 [Flow: branch]
	.db $50, $48		; 50 48 ; Branch if overflow clear to $50, $48 [Flow: branch]
	.db $50, $76		; 50 76 ; Branch if overflow clear to $50, $76 [Flow: branch]
	.db $50, $52		; 50 52 ; Branch if overflow clear to $50, $52 [Flow: branch]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	.db $50, $BA		; 50 BA ; Branch if overflow clear to $50, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $50, $BA		; 62 50 BA ; Push effective relative address $62, $50, $BA [Writes: Stack Pointer]
	.db $10, $A0		; 10 A0 ; Branch if plus to $10, $A0 [Flow: branch]
	.db $50, $4E		; 50 4E ; Branch if overflow clear to $50, $4E [Flow: branch]
	sty $50A4.w		; 8C A4 50 ; Store Y register to $50A4.w [Reads: Y Index]
	lsr $B40C.w		; 4E 0C B4 ; Logical shift right $B40C.w [Flags: ZNC]
	.db $50, $BA		; 50 BA ; Branch if overflow clear to $50, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clv		; B8 ; Clear overflow flag [Flags: V]
	.db $10, $BA		; 10 BA ; Branch if plus to $10, $BA [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta [$10.b]		; 87 10 ; Store accumulator (long) [$10.b] [Reads: Accumulator, Direct Page]
	clv		; B8 ; Clear overflow flag [Flags: V]
	.db $10, $97		; 10 97 ; Branch if plus to $10, $97 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta [$10.b]		; 87 10 ; Store accumulator (long) [$10.b] [Reads: Accumulator, Direct Page]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sty $10.b		; 84 10 ; Store Y register to $10.b [Reads: Y Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta $10.b		; 85 10 ; Store accumulator to $10.b [Reads: Accumulator]
	sta $50.b		; 85 50 ; Store accumulator to $50.b [Reads: Accumulator]
	sty $50.b,X		; 94 50 ; Store Y register $50.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sty $10.b,X		; 94 10 ; Store Y register $10.b,X [Reads: X Index, Direct Page] [Writes: Y Index]
	jmp $485C08.l		; 5C 08 5C 48 ; Jump long to $485C08.l [Flow: jump]
	jmp ($7C08.w)		; 6C 08 7C ; Jump indirect to ($7C08.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($AA08.w,X)		; 7C 08 AA ; Jump indirect indexed to ($AA08.w,X) [Reads: X Index] [Flow: jump]
	trb $FF.b		; 14 FF ; Test and reset bits $FF.b [Reads: Accumulator] [Flags: Z]
	eor $0D6F.w		; 4D 6F 0D ; Exclusive OR $0D6F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $CD7A0D.l		; 6F 0D 7A CD ; Add with carry (long) $CD7A0D.l [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	cmp $4DFF.w		; CD FF 4D ; Compare $4DFF.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror $7D4D.w,X		; 7E 4D 7D ; Rotate right $7D4D.w,X [Reads: X Index] [Flags: ZNC]
	eor $4D7D.w		; 4D 7D 4D ; Exclusive OR $4D7D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $4D6F4D.l		; 6F 4D 6F 4D ; Add with carry (long) $4D6F4D.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $4D7F0D.l,X		; FF 0D 7F 4D ; Subtract with carry (long,X) $4D7F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4D6F0D.l,X		; FF 0D 6F 4D ; Subtract with carry (long,X) $4D6F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $8D7A0D.l,X		; FF 0D 7A 8D ; Subtract with carry (long,X) $8D7A0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $8D7A4D.l		; 6F 4D 7A 8D ; Add with carry (long) $8D7A4D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $FF8D.w,X		; 7D 8D FF ; Add $FF8D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $0D7D.w		; 4D 7D 0D ; Exclusive OR $0D7D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror $FF0D.w,X		; 7E 0D FF ; Rotate right $FF0D.w,X [Reads: X Index] [Flags: ZNC]
	eor $0DFF.w		; 4D FF 0D ; Exclusive OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	sta $0DFF.w		; 8D FF 0D ; Store accumulator to $0DFF.w [Reads: Accumulator]
	sbc $8D7A0D.l,X		; FF 0D 7A 8D ; Subtract with carry (long,X) $8D7A0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $0DFF4D.l		; 6F 4D FF 0D ; Add with carry (long) $0DFF4D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $FF0D.w,X		; 7D 0D FF ; Add $FF0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $0DFF.w		; 0D FF 0D ; Logical OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror $FF0D.w,X		; 7E 0D FF ; Rotate right $FF0D.w,X [Reads: X Index] [Flags: ZNC]
	ora $0DFF.w		; 0D FF 0D ; Logical OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0D6E0D.l,X		; FF 0D 6E 0D ; Subtract with carry (long,X) $0D6E0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $FF0D.w,X		; 7D 0D FF ; Add $FF0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $0DFF.w		; 0D FF 0D ; Logical OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	sta $0D6E.w		; 8D 6E 0D ; Store accumulator to $0D6E.w [Reads: Accumulator]
	sbc $8D7A0D.l,X		; FF 0D 7A 8D ; Subtract with carry (long,X) $8D7A0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	eor $4DFF.w		; 4D FF 4D ; Exclusive OR $4DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $6F4D.w,X		; 7D 4D 6F ; Add $6F4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $0DFF.w		; 4D FF 0D ; Exclusive OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $0DFF8D.l		; 6F 8D FF 0D ; Add with carry (long) $0DFF8D.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D6F0D.l,X		; FF 0D 6F 0D ; Subtract with carry (long,X) $0D6F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	cmp $4D7D.w		; CD 7D 4D ; Compare $4D7D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	sbc $4DFF0D.l,X		; FF 0D FF 4D ; Subtract with carry (long,X) $4DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $FF0D.w,X		; 7D 0D FF ; Add $FF0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $8D6F.w		; 4D 6F 8D ; Exclusive OR $8D6F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ror $FF0D.w,X		; 7E 0D FF ; Rotate right $FF0D.w,X [Reads: X Index] [Flags: ZNC]
	eor $4D7F.w		; 4D 7F 4D ; Exclusive OR $4D7F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $CD7D0D.l,X		; FF 0D 7D CD ; Subtract with carry (long,X) $CD7D0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	cmp $4D7D.w		; CD 7D 4D ; Compare $4D7D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	sbc $CD6F0D.l,X		; FF 0D 6F CD ; Subtract with carry (long,X) $CD6F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D6F4D.l,X		; FF 4D 6F 0D ; Subtract with carry (long,X) $0D6F4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	cmp $4D7D.w		; CD 7D 4D ; Compare $4D7D.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	ror $FF8D.w		; 6E 8D FF ; Rotate right $FF8D.w [Flags: ZNC]
	ora $4D7E.w		; 0D 7E 4D ; Logical OR $4D7E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0D7F0D.l,X		; FF 0D 7F 0D ; Subtract with carry (long,X) $0D7F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $FF4D.w,X		; 7D 4D FF ; Add $FF4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $CD6F.w		; 0D 6F CD ; Logical OR $CD6F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $4DFF0D.l,X		; FF 0D FF 4D ; Subtract with carry (long,X) $4DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $4DFF4D.l,X		; 1F 4D FF 4D ; Logical OR long $4DFF4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $8D7A4D.l,X		; FF 4D 7A 8D ; Subtract with carry (long,X) $8D7A4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $4DFF4D.l		; 6F 4D FF 4D ; Add with carry (long) $4DFF4D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $7D0D.w,X		; 7D 0D 7D ; Add $7D0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $4D6F.w		; 4D 6F 4D ; Exclusive OR $4D6F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0D7D4D.l,X		; FF 4D 7D 0D ; Subtract with carry (long,X) $0D7D4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D6F4D.l,X		; FF 4D 6F 0D ; Subtract with carry (long,X) $0D6F4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D7F4D.l,X		; FF 4D 7F 0D ; Subtract with carry (long,X) $0D7F4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $7E0D.w,X		; 7D 0D 7E ; Add $7E0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $0D6F.w		; 0D 6F 0D ; Logical OR $0D6F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $7A0D.w,X		; 7D 0D 7A ; Add $7A0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $8D7F.w		; 0D 7F 8D ; Logical OR $8D7F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $4DFFCD.l		; 6F CD FF 4D ; Add with carry (long) $4DFFCD.l [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $CD1F0D.l,X		; FF 0D 1F CD ; Subtract with carry (long,X) $CD1F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D7A0D.l,X		; FF 0D 7A 0D ; Subtract with carry (long,X) $0D7A0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $0D7D0D.l		; 6F 0D 7D 0D ; Add with carry (long) $0D7D0D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $0D7D0D.l		; 6F 0D 7D 0D ; Add with carry (long) $0D7D0D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $FF4D.w,X		; 7D 4D FF ; Add $FF4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $4DFF.w		; 0D FF 4D ; Logical OR $4DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $4DFF8D.l		; 6F 8D FF 4D ; Add with carry (long) $4DFF8D.l [Writes: Accumulator] [Flags: ZVNC]
	ror $FF4D.w,X		; 7E 4D FF ; Rotate right $FF4D.w,X [Reads: X Index] [Flags: ZNC]
	eor $4DFF.w		; 4D FF 4D ; Exclusive OR $4DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $4D7E4D.l,X		; FF 4D 7E 4D ; Subtract with carry (long,X) $4D7E4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $CD7A0D.l		; 6F 0D 7A CD ; Add with carry (long) $CD7A0D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $FF4D.w,X		; 7D 4D FF ; Add $FF4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $0DFF.w		; 4D FF 0D ; Exclusive OR $0DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ror $6E4D.w,X		; 7E 4D 6E ; Rotate right $6E4D.w,X [Reads: X Index] [Flags: ZNC]
	eor $CD7A.w		; 4D 7A CD ; Exclusive OR $CD7A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	cmp $4DFF.w		; CD FF 4D ; Compare $4DFF.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $4D7ACD.l,X		; 7F CD 7A 4D ; Add long $4D7ACD.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $8D6F0D.l,X		; FF 0D 6F 8D ; Subtract with carry (long,X) $8D6F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $FF4D.w,X		; 7D 4D FF ; Add $FF4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $4DFF.w		; 4D FF 4D ; Exclusive OR $4DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $4DFF4D.l,X		; FF 4D FF 4D ; Subtract with carry (long,X) $4DFF4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $8D1F4D.l,X		; FF 4D 1F 8D ; Subtract with carry (long,X) $8D1F4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D1F4D.l,X		; FF 4D 1F 0D ; Subtract with carry (long,X) $0D1F4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0DFF0D.l,X		; FF 0D FF 0D ; Subtract with carry (long,X) $0DFF0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $CD6F0D.l,X		; FF 0D 6F CD ; Subtract with carry (long,X) $CD6F0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0D7E0D.l,X		; FF 0D 7E 0D ; Subtract with carry (long,X) $0D7E0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $8D7A0D.l,X		; FF 0D 7A 8D ; Subtract with carry (long,X) $8D7A0D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $CD6E4D.l		; 6F 4D 6E CD ; Add with carry (long) $CD6E4D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $FF0D.w,X		; 7D 0D FF ; Add $FF0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $4DFF.w		; 4D FF 4D ; Exclusive OR $4DFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $4D6E4D.l,X		; FF 4D 6E 4D ; Subtract with carry (long,X) $4D6E4D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $BB88.w,Y		; 79 88 BB ; Add $BB88.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sta $88.b,X		; 95 88 ; Store accumulator to $88.b,X [Reads: Accumulator, X Index]
	sta $C8.b,X		; 95 C8 ; Store accumulator to $C8.b,X [Reads: Accumulator, X Index]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	jmp ($B459.w)		; 6C 59 B4 ; Jump indirect to ($B459.w) [Flow: jump]
	ora $595D.w,X		; 1D 5D 59 ; OR accumulator with memory $595D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $4E		; 62 48 4E ; Push effective relative address $62, $48, $4E [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $3470.w,X		; 3E 70 34 ; Rotate left $3470.w,X [Reads: X Index] [Flags: ZNC]
	.db $50, $02		; 50 02 ; Branch if overflow clear to $50, $02 [Flow: branch]
	.db $70, $01		; 70 01 ; Branch if overflow set to $70, $01 [Flow: branch]
	.db $70, $4F		; 70 4F ; Branch if overflow set to $70, $4F [Flow: branch]
	and #$58.b		; 29 58 ; Logical AND #$58.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$5F.b		; 29 5F ; Logical AND #$5F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$58.b		; 29 58 ; Logical AND #$58.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$4F.b		; 69 4F ; Add #$4F.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$59.b		; 69 59 ; Add #$59.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$5F.b		; 69 5F ; Add #$5F.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$62.b		; 69 62 ; Add #$62.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($10.b,X)		; A1 10 ; Load accumulator ($10.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda ($10.b,X)		; A1 10 ; Load accumulator ($10.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2D0C08.l		; 4F 08 0C 2D ; Exclusive OR accumulator with memory (long) $2D0C08.l [Writes: Accumulator] [Flags: ZN]
	ora $1C2D.w		; 0D 2D 1C ; Logical OR $1C2D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $2D1D.w		; 2D 1D 2D ; Logical AND $2D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0C6D.w		; 0D 6D 0C ; Logical OR $0C6D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $6D1D.w		; 6D 1D 6D ; Add $6D1D.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	trb $096D.w		; 1C 6D 09 ; Test and reset bits $096D.w [Reads: Accumulator] [Flags: Z]
	ora ($29.b),Y		; 11 29 ; OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($28.b),Y		; 11 28 ; OR accumulator with memory ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($29.b),Y		; 11 29 ; OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($38.b),Y		; 11 38 ; OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($28.b),Y		; 11 28 ; OR accumulator with memory ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($09.b),Y		; 11 09 ; OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($38.b),Y		; 51 38 ; Exclusive OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2C.b),Y		; 51 2C ; Exclusive OR accumulator with memory ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $2D2D.w		; 2D 2D 2D ; Logical AND $2D2D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $6D2D.w		; 2D 2D 6D ; Logical AND $6D2D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	bit $606D.w		; 2C 6D 60 ; Test bits $606D.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	adc $08AA.w		; 6D AA 08 ; Add $08AA.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $10, $0D		; 10 0D ; Branch if plus to $10, $0D [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jsr $100D.w		; 20 0D 10 ; Jump to subroutine at $100D.w [Writes: Stack Pointer] [Flow: call]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jsr $AA4D.w		; 20 4D AA ; Jump to subroutine at $AA4D.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $4D2B.w		; 0D 2B 4D ; Logical OR $4D2B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $4D3B.w		; 0D 3B 4D ; Logical OR $4D3B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $1D.b,X		; F6 1D ; Increment memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	eor ($08.b)		; 52 08 ; Exclusive OR accumulator with memory (indirect) ($08.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc ($09.b)		; F2 09 ; Subtract with carry (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sta $88.b,X		; 95 88 ; Store accumulator to $88.b,X [Reads: Accumulator, X Index]
	sta $C8.b,X		; 95 C8 ; Store accumulator to $C8.b,X [Reads: Accumulator, X Index]
	lsr $B588.w		; 4E 88 B5 ; Logical shift right $B588.w [Flags: ZNC]
	jmp $084E.w		; 4C 4E 08 ; Jump to $084E.w [Flow: jump]
	stx $A84C.w		; 8E 4C A8 ; Store X register to $A84C.w [Reads: X Index]
	jmp $0CAA.w		; 4C AA 0C ; Jump to $0CAA.w [Flow: jump]
	clv		; B8 ; Clear overflow flag [Flags: V]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $4CB8.w		; 0C B8 4C ; Test and set bits $4CB8.w [Reads: Accumulator] [Flags: Z]
	adc $940C.w		; 6D 0C 94 ; Add $940C.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tsb $085C.w		; 0C 5C 08 ; Test and set bits $085C.w [Reads: Accumulator] [Flags: Z]
	jmp $4C9C48.l		; 5C 48 9C 4C ; Jump long to $4C9C48.l [Flow: jump]
	sta $08BA0C.l		; 8F 0C BA 08 ; Store accumulator (long) $08BA0C.l [Reads: Accumulator]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08A808.l		; AF 08 A8 08 ; Load long $08A808.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $08AF08.l,X		; BF 08 AF 08 ; Load long $08AF08.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $0C.b		; A4 0C ; Load $0C.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $0C.b,X		; B4 0C ; Load Y register $0C.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $BB48.w,Y		; 79 48 BB ; Add $BB48.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $4C.b		; A4 4C ; Load $4C.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $B408.w,Y		; 79 08 B4 ; Add $B408.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $48A8.w		; 4C A8 48 ; Jump to $48A8.w [Flow: jump]
	lda $48AF48.l		; AF 48 AF 48 ; Load long $48AF48.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $098E48.l,X		; BF 48 8E 09 ; Load long $098E48.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stx $8E49.w		; 8E 49 8E ; Store X register to $8E49.w [Reads: X Index]
	bit #$8E.b		; 89 8E ; Test bits #$8E.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp #$8F.b		; C9 8F ; Compare #$8F.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora $598F.w,Y		; 19 8F 59 ; OR accumulator with memory $598F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $599F19.l,X		; 9F 19 9F 59 ; Store accumulator (long,X) $599F19.l,X [Reads: Accumulator, X Index]
	rol $AA4D.w		; 2E 4D AA ; Rotate left $AA4D.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $1A0D.w		; 2E 0D 1A ; Rotate left $1A0D.w [Flags: ZNC]
	and #$1F.b		; 29 1F ; Logical AND #$1F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$2F.b		; 29 2F ; Logical AND #$2F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$1F.b		; 29 1F ; Logical AND #$1F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$1A.b		; 69 1A ; Add #$1A.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$2F.b		; 69 2F ; Add #$2F.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$29.b		; 69 29 ; Add #$29.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$08.b		; 69 08 ; Add #$08.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora $0D09.w		; 0D 09 0D ; Logical OR $0D09.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $1DD5.w		; 0D D5 1D ; Logical OR $1DD5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$0D.b		; 09 0D ; Logical OR #$0D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$4D.b		; 09 4D ; Logical OR #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora #$4D.b		; 09 4D ; Logical OR #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1DD5.w		; 4D D5 1D ; Exclusive OR $1DD5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $0D18.w		; 4D 18 0D ; Exclusive OR $0D18.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $1DD5.w		; 0D D5 1D ; Logical OR $1DD5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $1DD5.w		; 4D D5 1D ; Exclusive OR $1DD5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $4D2E.w		; 4D 2E 4D ; Exclusive OR $4D2E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $184D.w		; 2E 4D 18 ; Rotate left $184D.w [Flags: ZNC]
	ora $1DD5.w		; 0D D5 1D ; Logical OR $1DD5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $0D19.w		; 0D 19 0D ; Logical OR $0D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $1D.b,X		; D5 1D ; Compare accumulator $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $190D.w,Y		; 19 0D 19 ; OR accumulator with memory $190D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $1DD5.w		; 4D D5 1D ; Exclusive OR $1DD5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $4D19.w		; 4D 19 4D ; Exclusive OR $4D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and $08AA.w		; 2D AA 08 ; Logical AND $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2D0E.w		; 2D 0E 2D ; Logical AND $2D0E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $2D212D.l		; 0F 2D 21 2D ; OR accumulator with memory (long) $2D212D.l [Writes: Accumulator] [Flags: ZN]
	jsl $08AA2D.l		; 22 2D AA 08 ; Jump to subroutine long $08AA2D.l [Writes: Stack Pointer] [Flow: call]
	rol $2E4D.w		; 2E 4D 2E ; Rotate left $2E4D.w [Flags: ZNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $08AA2D.l		; 6F 2D AA 08 ; Add with carry (long) $08AA2D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $2D542D.l,X		; 7F 2D 54 2D ; Add long $2D542D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc #$2D.b		; 69 2D ; Add #$2D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	stz $2D.b		; 64 2D ; Store zero to $2D.b
	adc $2E2D.w,Y		; 79 2D 2E ; Add $2E2D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $08AA.w		; 0D AA 08 ; Logical OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $08AA.w		; 0C AA 08 ; Test and set bits $08AA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $08AA48.l		; AF 48 AA 08 ; Load long $08AA48.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $7448.w		; AE 48 74 ; Load $7448.w into X register [Writes: X Index] [Flags: ZN]
	ora $0D75.w		; 0D 75 0D ; Logical OR $0D75.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0D.b,X		; 55 0D ; Exclusive OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $AAC8.w,X		; BD C8 AA ; Load $AAC8.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $62, $0D, $65		; 62 0D 65 ; Push effective relative address $62, $0D, $65 [Writes: Stack Pointer]
	ora $0D30.w		; 0D 30 0D ; Logical OR $0D30.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($0D.b),Y		; 31 0D ; AND accumulator with memory ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1D61.w,X		; 1D 61 1D ; OR accumulator with memory $1D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora $9D.b		; 05 9D ; Logical OR $9D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $9D05.w,X		; 5D 05 9D ; Exclusive OR accumulator with memory $9D05.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $5D.b,X		; 76 5D ; Rotate right $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $DD.b		; 05 DD ; Logical OR $DD.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b		; 05 5D ; Logical OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $9D.b		; 05 9D ; Logical OR $9D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $DD.b		; 05 DD ; Logical OR $DD.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $5D.b,X		; 76 5D ; Rotate right $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $9D.b		; 05 9D ; Logical OR $9D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $5D.b,X		; 76 5D ; Rotate right $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $0D.b		; 00 0D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b,X)		; 01 0D ; Logical OR ($0D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($0D.b,X)		; 01 0D ; Logical OR ($0D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	brk $4D.b		; 00 4D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	lda $49AF09.l		; AF 09 AF 49 ; Load long $49AF09.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $49BF09.l,X		; BF 09 BF 49 ; Load long $49BF09.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $6D0E6D.l		; 0F 6D 0E 6D ; OR accumulator with memory (long) $6D0E6D.l [Writes: Accumulator] [Flags: ZN]
	jsl $6D216D.l		; 22 6D 21 6D ; Jump to subroutine long $6D216D.l [Writes: Stack Pointer] [Flow: call]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $08AA.w		; 6D AA 08 ; Add $08AA.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $08AA.w		; 6D AA 08 ; Add $08AA.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$6D.b		; 69 6D ; Add #$6D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	mvn $79,$6D		; 54 6D 79 ; Move block negative $79,$6D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	adc $6D64.w		; 6D 64 6D ; Add $6D64.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc $08AA6D.l		; 6F 6D AA 08 ; Add with carry (long) $08AA6D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $08AA6D.l,X		; 7F 6D AA 08 ; Add long $08AA6D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $4D.b,X		; 75 4D ; Add $4D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $4D.b,X		; 74 4D ; Store zero to $4D.b,X [Reads: X Index]
	eor $4D.b,X		; 55 4D ; Exclusive OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b)		; 52 6D ; Exclusive OR accumulator with memory (indirect) ($6D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $08AA08.l		; AF 08 AA 08 ; Load long $08AA08.l into accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $AA08.w		; AE 08 AA ; Load $AA08.w into X register [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $4D.b		; 65 4D ; Add $4D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $4D, $31		; 62 4D 31 ; Push effective relative address $62, $4D, $31 [Writes: Stack Pointer]
	eor $4D30.w		; 4D 30 4D ; Exclusive OR $4D30.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda $AA88.w,X		; BD 88 AA ; Load $AA88.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	jsl $1D231D.l		; 22 1D 23 1D ; Jump to subroutine long $1D231D.l [Writes: Stack Pointer] [Flow: call]
	jsl $1D231D.l		; 22 1D 23 1D ; Jump to subroutine long $1D231D.l [Writes: Stack Pointer] [Flow: call]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $1D.b		; [PATTERN: Memory clearing operation] 45 1D ; Exclusive OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvn $55,$1D		; 54 1D 55 ; Move block negative $55,$1D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $1D64.w,X		; 1D 64 1D ; OR accumulator with memory $1D64.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	stz $1D.b,X		; 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	stz $1D.b,X		; [PATTERN: Memory clearing operation] 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	jsr $211D.w		; 20 1D 21 ; Jump to subroutine at $211D.w [Writes: Stack Pointer] [Flow: call]
	ora $1D30.w,X		; 1D 30 1D ; OR accumulator with memory $1D30.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b),Y		; 31 1D ; AND accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1D61.w,X		; 1D 61 1D ; OR accumulator with memory $1D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $63		; 62 1D 63 ; Push effective relative address $62, $1D, $63 [Writes: Stack Pointer]
	ora $1D60.w,X		; 1D 60 1D ; OR accumulator with memory $1D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $1F9D.w,X		; 1E 9D 1F ; Arithmetic shift left $1F9D.w,X [Reads: X Index] [Flags: ZNC]
	sta $1D0E.w,X		; 9D 0E 1D ; Store accumulator to $1D0E.w,X [Reads: Accumulator, X Index]
	ora $9D1F1D.l		; 0F 1D 1F 9D ; OR accumulator with memory (long) $9D1F1D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D0F9D.l,X		; 1F 9D 0F 1D ; Logical OR long $1D0F9D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D701D.l		; 0F 1D 70 1D ; OR accumulator with memory (long) $1D701D.l [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $1D, $63		; 62 1D 63 ; Push effective relative address $62, $1D, $63 [Writes: Stack Pointer]
	ora $1D0E.w,X		; 1D 0E 1D ; OR accumulator with memory $1D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D0E1D.l		; 0F 1D 0E 1D ; OR accumulator with memory (long) $1D0E1D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	ora $9D1F1D.l		; 0F 1D 1F 9D ; OR accumulator with memory (long) $9D1F1D.l [Writes: Accumulator] [Flags: ZN]
	asl $1FDD.w,X		; 1E DD 1F ; Arithmetic shift left $1FDD.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D1E.w,X		; 1D 1E 5D ; OR accumulator with memory $5D1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D0E1D.l		; 0F 1D 0E 5D ; OR accumulator with memory (long) $5D0E1D.l [Writes: Accumulator] [Flags: ZN]
	ora $5D0E1D.l		; 0F 1D 0E 5D ; OR accumulator with memory (long) $5D0E1D.l [Writes: Accumulator] [Flags: ZN]
	asl $1F9D.w,X		; 1E 9D 1F ; Arithmetic shift left $1F9D.w,X [Reads: X Index] [Flags: ZNC]
	sta $1D1E.w,X		; 9D 1E 1D ; Store accumulator to $1D1E.w,X [Reads: Accumulator, X Index]
	ora $9D1F1D.l,X		; 1F 1D 1F 9D ; Logical OR long $9D1F1D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $0FDD.w,X		; 1E DD 0F ; Arithmetic shift left $0FDD.w,X [Reads: X Index] [Flags: ZNC]
	ora $5D0E.w,X		; 1D 0E 5D ; OR accumulator with memory $5D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; [PATTERN: Memory clearing operation] 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $1D.b,X		; 35 1D ; Logical AND $1D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$1D.b],Y		; 17 1D ; OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $1D.b,X		; 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $1D.b,X		; 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	ora [$5D.b],Y		; 17 5D ; OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D1F1D.l,X		; 1F 1D 1F 1D ; Logical OR long $1D1F1D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $1D		; 70 1D ; Branch if overflow set to $70, $1D [Flow: branch]
	adc ($1D.b)		; 72 1D ; Add with carry (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tsb $1D.b		; 04 1D ; Test and set bits $1D.b [Reads: Accumulator] [Flags: Z]
	ora $1D.b,S		; 03 1D ; OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1D41.w,X		; 1D 41 1D ; OR accumulator with memory $1D41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	brk $1D.b		; 00 1D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($1D.b,X)		; 01 1D ; Logical OR ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $42, $1D		; 42 1D ; Reserved instruction
	eor $1D.b,S		; 43 1D ; Exclusive OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $1D.b,S		; 03 1D ; OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	trb $1D.b		; 14 1D ; Test and reset bits $1D.b [Reads: Accumulator] [Flags: Z]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D46.w,X		; 1D 46 1D ; OR accumulator with memory $1D46.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D0B.w,X		; 1D 0B 1D ; OR accumulator with memory $1D0B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D0B.w,X		; 1D 0B 1D ; OR accumulator with memory $1D0B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D0E.w,X		; 1D 0E 1D ; OR accumulator with memory $1D0E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D1E1D.l		; 0F 1D 1E 1D ; OR accumulator with memory (long) $1D1E1D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D051D.l,X		; 1F 1D 05 1D ; Logical OR long $1D051D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D10.w,X		; 1D 10 1D ; OR accumulator with memory $1D10.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,S),Y		; 13 1D ; OR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $1D.b		; 46 1D ; Logical shift right $1D.b [Reads: Direct Page] [Flags: ZNC]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1D46.w,X		; 1D 46 1D ; OR accumulator with memory $1D46.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $2D6E.w,X		; 1D 6E 2D ; OR accumulator with memory $2D6E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $2D502D.l		; 6F 2D 50 2D ; Add with carry (long) $2D502D.l [Writes: Accumulator] [Flags: ZVNC]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $6D6E6D.l		; 6F 6D 6E 6D ; Add with carry (long) $6D6E6D.l [Writes: Accumulator] [Flags: ZVNC]
	eor ($6D.b),Y		; 51 6D ; Exclusive OR accumulator with memory ($6D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $6D		; 50 6D ; Branch if overflow clear to $50, $6D [Flow: branch]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	.db $10, $1D		; 10 1D ; Branch if plus to $10, $1D [Flow: branch]
	ora ($1D.b),Y		; 11 1D ; OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0D442D.l,X		; 5F 2D 44 0D ; Exclusive OR accumulator with memory (long,X) $0D442D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor [$0D.b]		; 47 0D ; Exclusive OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6D526D.l,X		; 5F 6D 52 6D ; Exclusive OR accumulator with memory (long,X) $6D526D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor [$4D.b]		; 47 4D ; Exclusive OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvp $56,$4D		; 44 4D 56 ; Move block positive $56,$4D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $0D73.w		; 0D 73 0D ; Logical OR $0D73.w with accumulator [Writes: Accumulator] [Flags: ZN]
	bit $0D.b		; 24 0D ; Test bits $0D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	and $0D.b		; 25 0D ; Logical AND $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($4D.b,S),Y		; 73 4D ; Add with carry (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lsr $4D.b,X		; 56 4D ; Logical shift right $4D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $4D.b		; 25 4D ; Logical AND $4D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $4D.b		; 24 4D ; Test bits $4D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	ora $1D.b,X		; 15 1D ; OR accumulator with memory $1D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	ora $5D0F1D.l		; 0F 1D 0F 5D ; OR accumulator with memory (long) $5D0F1D.l [Writes: Accumulator] [Flags: ZN]
	asl $1F5D.w		; 0E 5D 1F ; Arithmetic shift left $1F5D.w [Flags: ZNC]
	eor $5D1E.w,X		; 5D 1E 5D ; Exclusive OR accumulator with memory $5D1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b		; 65 1D ; Add $1D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$1D.b],Y		; 57 1D ; Exclusive OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$1D.b],Y		; 17 1D ; OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D12.w,X		; 1D 12 1D ; OR accumulator with memory $1D12.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,S),Y		; 13 1D ; OR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D14.w,X		; 1D 14 1D ; OR accumulator with memory $1D14.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D46.w,X		; 1D 46 1D ; OR accumulator with memory $1D46.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $1D43.w,X		; 1D 43 1D ; OR accumulator with memory $1D43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	brk $1D.b		; 00 1D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $1D.b,S		; 03 1D ; OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1D1A.w,X		; 1D 1A 1D ; OR accumulator with memory $1D1A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	brk $1D.b		; 00 1D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($1D.b,X)		; 01 1D ; Logical OR ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $5D0A.w,X		; 1D 0A 5D ; OR accumulator with memory $5D0A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $1D.b,S		; 03 1D ; OR accumulator with stack relative $1D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D46.w,X		; 1D 46 1D ; OR accumulator with memory $1D46.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1D46.w,X		; 1D 46 1D ; OR accumulator with memory $1D46.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D151D.l		; 0F 1D 15 1D ; OR accumulator with memory (long) $1D151D.l [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; [PATTERN: Memory clearing operation] 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	asl $1D.b,X		; 16 1D ; Arithmetic shift left $1D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $5D.b		; 64 5D ; Store zero to $5D.b
	ora [$1D.b],Y		; 17 1D ; OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $5D.b,X		; 74 5D ; Store zero to $5D.b,X [Reads: X Index]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $3D41.w,X		; 3D 41 3D ; AND accumulator with memory $3D41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	brk $3D.b		; 00 3D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($3D.b,X)		; 01 3D ; Logical OR ($3D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $42, $3D		; 42 3D ; Reserved instruction
	eor $3D.b,S		; 43 3D ; Exclusive OR accumulator with stack relative $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cop $3D.b		; 02 3D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $3D.b,S		; 03 3D ; OR accumulator with stack relative $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $1D.b		; 05 1D ; Logical OR $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	ror $1D.b		; 66 1D ; Rotate right $1D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	asl $3D.b		; 06 3D ; Arithmetic shift left $3D.b [Reads: Direct Page] [Flags: ZNC]
	asl $3D.b		; 06 3D ; Arithmetic shift left $3D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1D67.w,X		; 1D 67 1D ; OR accumulator with memory $1D67.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $5D.b		; 66 5D ; Rotate right $5D.b [Reads: Direct Page] [Flags: ZNC]
	ror $1D.b		; 66 1D ; Rotate right $1D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $1D.b		; 66 1D ; Rotate right $1D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $3D.b,X		; 76 3D ; Rotate right $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $7D.b,X		; 76 7D ; Rotate right $7D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$3D.b],Y		; 77 3D ; Add with carry (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$3D.b]		; 67 3D ; Add with carry (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $5D.b		; 66 5D ; Rotate right $5D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $5D.b		; 66 5D ; Rotate right $5D.b [Reads: Direct Page] [Flags: ZNC]
	lsr $FE1D.w		; 4E 1D FE ; Logical shift right $FE1D.w [Flags: ZNC]
	trb $1D5E.w		; 1C 5E 1D ; Test and reset bits $1D5E.w [Reads: Accumulator] [Flags: Z]
	ror $FE1D.w,X		; 7E 1D FE ; Rotate right $FE1D.w,X [Reads: X Index] [Flags: ZNC]
	jmp $7E5D4E.l		; 5C 4E 5D 7E ; Jump long to $7E5D4E.l [Flow: jump]
	eor $5D5E.w,X		; 5D 5E 5D ; Exclusive OR accumulator with memory $5D5E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $1D.b		; 66 1D ; Rotate right $1D.b [Reads: Direct Page] [Flags: ZNC]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $10, $1D		; 10 1D ; Branch if plus to $10, $1D [Flow: branch]
	ora ($1D.b),Y		; 11 1D ; OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($1D.b,S),Y		; 53 1D ; XOR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b,S),Y		; 33 1D ; AND accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $1D67.w,X		; 1D 67 1D ; OR accumulator with memory $1D67.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $1D.b,X		; 34 1D ; Test bits $1D.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	ora ($1D.b),Y		; 11 1D ; OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$1D.b]		; 67 1D ; Add with carry (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $5D.b		; 66 5D ; Rotate right $5D.b [Reads: Direct Page] [Flags: ZNC]
	ora ($1D.b)		; 12 1D ; OR accumulator with memory (indirect) ($1D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,S),Y		; 13 1D ; OR accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b		; 45 5D ; Exclusive OR $5D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $5D.b,X		; 16 5D ; Arithmetic shift left $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvn $23,$5D		; 54 5D 23 ; Move block negative $23,$5D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $5D22.w,X		; 5D 22 5D ; Exclusive OR accumulator with memory $5D22.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $01.b,S		; E3 01 ; Subtract stack-relative $01.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	and $5D.b,S		; 23 5D ; AND accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsl $5D575D.l		; 22 5D 57 5D ; Jump to subroutine long $5D575D.l [Writes: Stack Pointer] [Flow: call]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor [$5D.b],Y		; 57 5D ; Exclusive OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $5D.b,S		; 63 5D ; Add with carry (stack relative) $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $5D, $61		; 62 5D 61 ; Push effective relative address $62, $5D, $61 [Writes: Stack Pointer]
	eor $5D60.w,X		; 5D 60 5D ; Exclusive OR accumulator with memory $5D60.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b,X)		; 61 5D ; Add with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5D71.w,X		; 5D 71 5D ; Exclusive OR accumulator with memory $5D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	and ($5D.b),Y		; 31 5D ; AND accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $5D		; [PATTERN: Memory clearing operation] 30 5D ; Branch if minus to $30, $5D [Flow: branch]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	stz $1D.b		; 64 1D ; Store zero to $1D.b
	and ($5D.b,X)		; 21 5D ; Logical AND ($5D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $715D.w		; 20 5D 71 ; Jump to subroutine at $715D.w [Writes: Stack Pointer] [Flow: call]
	eor $5D70.w,X		; 5D 70 5D ; Exclusive OR accumulator with memory $5D70.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $5D.b,S		; 63 5D ; Add with carry (stack relative) $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $5D, $16		; 62 5D 16 ; Push effective relative address $62, $5D, $16 [Writes: Stack Pointer]
	ora $5D64.w,X		; 1D 64 5D ; OR accumulator with memory $5D64.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$1D.b],Y		; [PATTERN: Memory clearing operation] 17 1D ; OR accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $1D.b,X		; 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	and $5D.b,X		; 35 5D ; Logical AND $5D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $5D.b		; 65 5D ; Add $5D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $1D.b,X		; 74 1D ; Store zero to $1D.b,X [Reads: X Index]
	ora [$5D.b],Y		; 17 5D ; OR accumulator with memory (long indexed) [$5D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b)		; 72 5D ; Add with carry (indirect) ($5D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $5D		; 70 5D ; Branch if overflow set to $70, $5D [Flow: branch]
	ora $5D.b,S		; 03 5D ; OR accumulator with stack relative $5D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tsb $5D.b		; 04 5D ; Test and set bits $5D.b [Reads: Accumulator] [Flags: Z]
	and ($09.b,X)		; 21 09 ; Logical AND ($09.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($49.b,X)		; 21 49 ; Logical AND ($49.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsl $092209.l		; 22 09 22 09 ; Jump to subroutine long $092209.l [Writes: Stack Pointer] [Flow: call]
	jsl $092309.l		; 22 09 23 09 ; Jump to subroutine long $092309.l [Writes: Stack Pointer] [Flow: call]
	and $09.b,S		; 23 09 ; AND accumulator with stack relative $09.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sbc ($09.b)		; F2 09 ; Subtract with carry (indirect) ($09.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $49.b,S		; 23 49 ; AND accumulator with stack relative $49.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsl $49F249.l		; 22 49 F2 49 ; Jump to subroutine long $49F249.l [Writes: Stack Pointer] [Flow: call]
	and $49.b,S		; 23 49 ; AND accumulator with stack relative $49.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sbc ($C9.b)		; F2 C9 ; Subtract with carry (indirect) ($C9.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $C9.b,S		; 23 C9 ; AND accumulator with stack relative $C9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $C9.b,S		; 23 C9 ; AND accumulator with stack relative $C9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsl $0922C9.l		; 22 C9 22 09 ; Jump to subroutine long $0922C9.l [Writes: Stack Pointer] [Flow: call]
	jsl $092109.l		; 22 09 21 09 ; Jump to subroutine long $092109.l [Writes: Stack Pointer] [Flow: call]
	and ($49.b,X)		; 21 49 ; Logical AND ($49.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $B0.b,X		; 55 B0 ; Exclusive OR accumulator with memory $B0.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $3552.w		; 0C 52 35 ; Test and set bits $3552.w [Reads: Accumulator] [Flags: Z]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $17.b,X		; 15 17 ; OR accumulator with memory $17.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $18.b,X		; 35 18 ; Logical AND $18.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $61.b,X		; 15 61 ; OR accumulator with memory $61.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($75.b)		; 52 75 ; Exclusive OR accumulator with memory (indirect) ($75.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda ($0C.b),Y		; B1 0C ; Load accumulator ($0C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $35421D.l,X		; 3F 1D 42 35 ; AND accumulator with memory (long,X) $35421D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $75541D.l		; 2F 1D 54 75 ; AND accumulator with memory (long) $75541D.l [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $35		; 50 35 ; Branch if overflow clear to $50, $35 [Flow: branch]
	eor ($35.b),Y		; 51 35 ; Exclusive OR accumulator with memory ($35.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $75		; 42 75 ; Reserved instruction
	and $35545D.l,X		; 3F 5D 54 35 ; AND accumulator with memory (long,X) $35545D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $0D085D.l		; 2F 5D 08 0D ; AND accumulator with memory (long) $0D085D.l [Writes: Accumulator] [Flags: ZN]
	ora #$0D.b		; 09 0D ; Logical OR #$0D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor [$0D.b]		; 47 0D ; Exclusive OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor #$0D.b		; 49 0D ; Exclusive OR #$0D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$4D.b		; 09 4D ; Logical OR #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4D49.w		; 4D 49 4D ; Exclusive OR $4D49.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor [$4D.b]		; 47 4D ; Exclusive OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $35421D.l,X		; 3F 1D 42 35 ; AND accumulator with memory (long,X) $35421D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $35521D.l		; 2F 1D 52 35 ; AND accumulator with memory (long) $35521D.l [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $75		; 42 75 ; Reserved instruction
	and $75525D.l,X		; 3F 5D 52 75 ; AND accumulator with memory (long,X) $75525D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1D3F5D.l		; 2F 5D 3F 1D ; AND accumulator with memory (long) $1D3F5D.l [Writes: Accumulator] [Flags: ZN]
	ora ($5D.b),Y		; 11 5D ; OR accumulator with memory ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tsb $0E9D.w		; 0C 9D 0E ; Test and set bits $0E9D.w [Reads: Accumulator] [Flags: Z]
	eor $1D00.w,X		; 5D 00 1D ; Exclusive OR accumulator with memory $1D00.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,X)		; 01 1D ; Logical OR ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	asl $0F1D.w		; 0E 1D 0F ; Arithmetic shift left $0F1D.w [Flags: ZNC]
	ora $1D11.w,X		; 1D 11 1D ; OR accumulator with memory $1D11.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $1D0E5D.l,X		; 3F 5D 0E 1D ; AND accumulator with memory (long,X) $1D0E5D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $57DD.w		; 0C DD 57 ; Test and set bits $57DD.w [Reads: Accumulator] [Flags: Z]
	ora $0D59.w		; 0D 59 0D ; Logical OR $0D59.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $0D39.w		; 0D 39 0D ; Logical OR $0D39.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $574D.w,Y		; 59 4D 57 ; Exclusive OR accumulator with memory $574D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D39.w		; 4D 39 4D ; Exclusive OR $4D39.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $3572.w		; 4D 72 35 ; Exclusive OR $3572.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tsb $1F1D.w		; 0C 1D 1F ; Test and set bits $1F1D.w [Reads: Accumulator] [Flags: Z]
	ora $1D2F.w,X		; 1D 2F 1D ; OR accumulator with memory $1D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $35.b		; 45 35 ; Exclusive OR $35.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1F1D.w,X		; 1E 1D 1F ; Arithmetic shift left $1F1D.w,X [Reads: X Index] [Flags: ZNC]
	ora $3540.w,X		; 1D 40 35 ; OR accumulator with memory $3540.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,X)		; 41 35 ; Exclusive OR accumulator with memory ($35.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D0C5D.l,X		; 1F 5D 0C 5D ; Logical OR long $5D0C5D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $75.b		; 45 75 ; Exclusive OR $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $1D3F5D.l		; 2F 5D 3F 1D ; AND accumulator with memory (long) $1D3F5D.l [Writes: Accumulator] [Flags: ZN]
	.db $42, $35		; 42 35 ; Reserved instruction
	ror $3C9D.w		; 6E 9D 3C ; Rotate right $3C9D.w [Flags: ZNC]
	lda $53.b,X		; B5 53 ; Load $53.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $42.b,X		; 35 42 ; Logical AND $42.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $3F.b,X		; 75 3F ; Add $3F.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $F53C.w,X		; 5D 3C F5 ; Exclusive OR accumulator with memory $F53C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $3FDD.w		; 6E DD 3F ; Rotate right $3FDD.w [Flags: ZNC]
	ora $3542.w,X		; 1D 42 35 ; OR accumulator with memory $3542.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $44.b,X		; 35 44 ; Logical AND $44.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $42.b,X		; 35 42 ; Logical AND $42.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $3F.b,X		; 75 3F ; Add $3F.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $7544.w,X		; 5D 44 75 ; Exclusive OR accumulator with memory $7544.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	adc $1E.b,X		; 75 1E ; Add $1E.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora $1D4D.w,X		; 1D 4D 1D ; OR accumulator with memory $1D4D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	and $5D.b,X		; 35 5D ; Logical AND $5D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $4D.b,X		; 35 4D ; Logical AND $4D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D4D.w,X		; 1D 4D 1D ; OR accumulator with memory $1D4D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp $4C35.w		; 4C 35 4C ; Jump to $4C35.w [Flow: jump]
	and $4D.b,X		; 35 4D ; Logical AND $4D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1D1F.w,X		; 1D 1F 1D ; OR accumulator with memory $1D1F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4175.w,X		; 5D 75 41 ; Exclusive OR accumulator with memory $4175.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $6C.b,X		; 35 6C ; Logical AND $6C.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $357C.w,X		; 1D 7C 35 ; OR accumulator with memory $357C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($7C1D.w)		; 6C 1D 7C ; Jump indirect to ($7C1D.w) [Flow: jump]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2D.b,X		; 35 2D ; Logical AND $2D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $7C.b,X		; 35 7C ; Logical AND $7C.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $6C.b,X		; 75 6C ; Add $6C.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $757C.w,X		; 5D 7C 75 ; Exclusive OR accumulator with memory $757C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($535D.w)		; 6C 5D 53 ; Jump indirect to ($535D.w) [Flow: jump]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $43.b,X		; 35 43 ; Logical AND $43.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $51.b,X		; 35 51 ; Logical AND $51.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $50.b,X		; 35 50 ; Logical AND $50.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $6D.b,X		; 35 6D ; Logical AND $6D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $6D.b,X		; 35 6D ; Logical AND $6D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $6D.b,X		; 35 6D ; Logical AND $6D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $6D.b,X		; 35 6D ; Logical AND $6D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $51.b,X		; 35 51 ; Logical AND $51.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $53.b,X		; 75 53 ; Add $53.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $51.b,X		; 75 51 ; Add $51.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $43.b,X		; 75 43 ; Add $43.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $6E.b,X		; 75 6E ; Add $6E.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora $353C.w,X		; 1D 3C 35 ; OR accumulator with memory $353C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $35521D.l		; 2F 1D 52 35 ; AND accumulator with memory (long) $35521D.l [Writes: Accumulator] [Flags: ZN]
	rol $2E35.w		; 2E 35 2E ; Rotate left $2E35.w [Flags: ZNC]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $3C.b,X		; 35 3C ; Logical AND $3C.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $6E.b,X		; 75 6E ; Add $6E.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $7552.w,X		; 5D 52 75 ; Exclusive OR accumulator with memory $7552.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $75425D.l		; 2F 5D 42 75 ; AND accumulator with memory (long) $75425D.l [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b,X)		; 01 1D ; Logical OR ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	eor ($75.b)		; 52 75 ; Exclusive OR accumulator with memory (indirect) ($75.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $001D.w		; 0D 1D 00 ; Logical OR $001D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1D7D.w,X		; 1D 7D 1D ; OR accumulator with memory $1D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $5C1D.w		; 0E 1D 5C ; Arithmetic shift left $5C1D.w [Flags: ZNC]
	ora $1D7E.w,X		; 1D 7E 1D ; OR accumulator with memory $1D7E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $AA1D.w,X		; 7E 1D AA ; Rotate right $AA1D.w,X [Reads: X Index] [Flags: ZNC]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	adc $015D.w,X		; 7D 5D 01 ; Add $015D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $5D5C.w,X		; 1D 5C 5D ; OR accumulator with memory $5D5C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D011D.l		; 0F 1D 01 5D ; OR accumulator with memory (long) $5D011D.l [Writes: Accumulator] [Flags: ZN]
	.db $42, $35		; 42 35 ; Reserved instruction
	ora $525D.w		; 0D 5D 52 ; Logical OR $525D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $64.b,X		; 35 64 ; Logical AND $64.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $0C.b		; 66 0C ; Rotate right $0C.b [Reads: Direct Page] [Flags: ZNC]
	asl $15.b,X		; 16 15 ; Arithmetic shift left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $35.b		; 25 35 ; Logical AND $35.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ror $3C9D.w		; 6E 9D 3C ; Rotate right $3C9D.w [Flags: ZNC]
	lda $6E.b,X		; B5 6E ; Load $6E.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $353C.w,X		; 1D 3C 35 ; OR accumulator with memory $353C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $2E35.w		; 2E 35 2E ; Rotate left $2E35.w [Flags: ZNC]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $3C.b,X		; 35 3C ; Logical AND $3C.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $6E.b,X		; F5 6E ; Subtract $6E.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $753C.w,X		; DD 3C 75 ; Compare accumulator $753C.w,X [Reads: X Index] [Flags: ZNC]
	ror $265D.w		; 6E 5D 26 ; Rotate right $265D.w [Flags: ZNC]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $36.b,X		; 35 36 ; Logical AND $36.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $72.b,X		; 35 72 ; Logical AND $72.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $72.b,X		; 35 72 ; Logical AND $72.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $2D.b,X		; 75 2D ; Add $2D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2D.b,X		; 35 2D ; Logical AND $2D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $26.b,X		; 35 26 ; Logical AND $26.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $36.b,X		; 35 36 ; Logical AND $36.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $51.b,X		; 15 51 ; OR accumulator with memory $51.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $64.b,X		; 35 64 ; Logical AND $64.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $11.b,X		; 35 11 ; Logical AND $11.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	ror $0C.b,X		; 76 0C ; Rotate right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rol $2C35.w		; 2E 35 2C ; Rotate left $2C35.w [Flags: ZNC]
	and $2D.b,X		; 35 2D ; Logical AND $2D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2C.b,X		; 35 2C ; Logical AND $2C.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $72.b,X		; 35 72 ; Logical AND $72.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $72.b,X		; 75 72 ; Add $72.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $62.b,X		; 35 62 ; Logical AND $62.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $62.b,X		; 75 62 ; Add $62.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2C.b,X		; 35 2C ; Logical AND $2C.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $2C.b,X		; 75 2C ; Add $2C.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2D.b,X		; 35 2D ; Logical AND $2D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2D.b,X		; 35 2D ; Logical AND $2D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $2E.b,X		; 35 2E ; Logical AND $2E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $4E.b,X		; 35 4E ; Logical AND $4E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D4E.w,X		; 1D 4E 5D ; OR accumulator with memory $5D4E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $5E1D.w,X		; 5E 1D 5E ; Logical shift right $5E1D.w,X [Reads: X Index] [Flags: ZNC]
	eor $3D3D.w,X		; 5D 3D 3D ; Exclusive OR accumulator with memory $3D3D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $633D.w,X		; 3E 3D 63 ; Rotate left $633D.w,X [Reads: X Index] [Flags: ZNC]
	and $3D74.w,X		; 3D 74 3D ; AND accumulator with memory $3D74.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $3E3D.w,X		; 3E 3D 3E ; Rotate left $3E3D.w,X [Reads: X Index] [Flags: ZNC]
	and $3D74.w,X		; 3D 74 3D ; AND accumulator with memory $3D74.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	rol $3D3D.w,X		; 3E 3D 3D ; Rotate left $3D3D.w,X [Reads: X Index] [Flags: ZNC]
	adc $3D74.w,X		; 7D 74 3D ; Add $3D74.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $7D.b,S		; [PATTERN: Memory clearing operation] 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc $3D.b,S		; 63 3D ; Add with carry (stack relative) $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	adc $3D.b,S		; 63 3D ; Add with carry (stack relative) $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; [PATTERN: Memory clearing operation] 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	adc $7D.b,S		; 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	adc $7D.b,S		; 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($35.b,S),Y		; 53 35 ; XOR accumulator (stack relative indirect indexed) ($35.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $62, $75, $62		; 62 75 62 ; Push effective relative address $62, $75, $62 [Writes: Stack Pointer]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $53.b,X		; 35 53 ; Logical AND $53.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $72.b,X		; 35 72 ; Logical AND $72.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $63.b,X		; 75 63 ; Add $63.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $3D74.w,X		; [PATTERN: Memory clearing operation] 3D 74 3D ; AND accumulator with memory $3D74.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $3D.b,S		; 63 3D ; Add with carry (stack relative) $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	ora $3D.b,S		; 03 3D ; OR accumulator with stack relative $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	ora ($3D.b)		; [PATTERN: Memory clearing operation] 12 3D ; OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b)		; 12 3D ; OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	ora $7D.b,S		; 03 7D ; OR accumulator with stack relative $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; [PATTERN: Memory clearing operation] 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	ora $3D.b,S		; 03 3D ; OR accumulator with stack relative $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	adc $7D.b,S		; 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	ora $7D.b,S		; 03 7D ; OR accumulator with stack relative $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc $7D.b,S		; 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc $3D.b,S		; 63 3D ; Add with carry (stack relative) $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc $7D.b,S		; 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc ($3D.b,S),Y		; 73 3D ; Add with carry (stack relative indirect indexed) ($3D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($7D.b,S),Y		; 73 7D ; Add with carry (stack relative indirect indexed) ($7D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $0D69.w		; 0D 69 0D ; Logical OR $0D69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $0D79.w		; 0D 79 0D ; Logical OR $0D79.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$4D.b		; 69 4D ; Add #$4D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $4D79.w		; 4D 79 4D ; Exclusive OR $4D79.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor $1D19.w		; [PATTERN: Memory clearing operation] 4D 19 1D ; Exclusive OR $1D19.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $295D.w,Y		; 19 5D 29 ; OR accumulator with memory $295D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D29.w,X		; 1D 29 5D ; OR accumulator with memory $5D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	ora ($3D.b)		; [PATTERN: Memory clearing operation] 12 3D ; OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b)		; 12 7D ; OR accumulator with memory (indirect) ($7D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	ora ($7D.b)		; 12 7D ; OR accumulator with memory (indirect) ($7D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b)		; [PATTERN: Memory clearing operation] 12 7D ; OR accumulator with memory (indirect) ($7D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	ora ($7D.b)		; 12 7D ; OR accumulator with memory (indirect) ($7D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b)		; 12 3D ; OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $5D48.w,X		; [PATTERN: Memory clearing operation] 1D 48 5D ; OR accumulator with memory $5D48.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	ora $5D58.w,X		; 1D 58 5D ; OR accumulator with memory $5D58.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $0D.b		; 64 0D ; Store zero to $0D.b
	stz $4D.b		; 64 4D ; Store zero to $4D.b
	stz $0D.b		; [PATTERN: Memory clearing operation] 64 0D ; Store zero to $0D.b
	stz $4D.b		; 64 4D ; Store zero to $4D.b
	jsl $0D230D.l		; 22 0D 23 0D ; Jump to subroutine long $0D230D.l [Writes: Stack Pointer] [Flow: call]
	and ($0D.b)		; 32 0D ; AND accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($0D.b,S),Y		; 33 0D ; AND accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $4D.b,S		; [PATTERN: Memory clearing operation] 23 4D ; AND accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsl $4D334D.l		; 22 4D 33 4D ; Jump to subroutine long $4D334D.l [Writes: Stack Pointer] [Flow: call]
	and ($4D.b)		; 32 4D ; AND accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $0D.b		; 64 0D ; Store zero to $0D.b
	stz $4D.b		; 64 4D ; Store zero to $4D.b
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1D.b		; 06 1D ; Arithmetic shift left $1D.b [Reads: Direct Page] [Flags: ZNC]
	asl $5D.b		; 06 5D ; Arithmetic shift left $5D.b [Reads: Direct Page] [Flags: ZNC]
	ora [$1D.b]		; 07 1D ; OR accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora [$5D.b]		; 07 5D ; OR accumulator with memory (long) [$5D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $0D.b		; 02 0D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $4D.b		; 02 4D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc $0D.b		; 65 0D ; Add $0D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $0D.b		; 66 0D ; Rotate right $0D.b [Reads: Direct Page] [Flags: ZNC]
	adc $0D.b,X		; 75 0D ; Add $0D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $0D.b,X		; 76 0D ; Rotate right $0D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $4D.b		; 66 4D ; Rotate right $4D.b [Reads: Direct Page] [Flags: ZNC]
	adc $4D.b		; 65 4D ; Add $4D.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $4D.b,X		; 76 4D ; Rotate right $4D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $4D.b,X		; 75 4D ; Add $4D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cop $0D.b		; 02 0D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($4D.b,S),Y		; 13 4D ; OR accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $4A0D.w		; 1C 0D 4A ; Test and reset bits $4A0D.w [Reads: Accumulator] [Flags: Z]
	ora $5D61.w,X		; 1D 61 5D ; OR accumulator with memory $5D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($0D.b,S),Y		; 13 0D ; OR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	cop $4D.b		; 02 4D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $0D1C.w,X		; 5D 1C 0D ; Exclusive OR accumulator with memory $0D1C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $1D61.w,X		; 5D 61 1D ; Exclusive OR accumulator with memory $1D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jsr $215D.w		; 20 5D 21 ; Jump to subroutine at $215D.w [Writes: Stack Pointer] [Flow: call]
	ora $5D61.w,X		; 1D 61 5D ; OR accumulator with memory $5D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($5D.b,X)		; 21 5D ; Logical AND ($5D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($1D.b,X)		; 21 1D ; Logical AND ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	trb $5A0D.w		; 1C 0D 5A ; Test and reset bits $5A0D.w [Reads: Accumulator] [Flags: Z]
	ora $0D1C.w,X		; 1D 1C 0D ; OR accumulator with memory $0D1C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $1D6F.w,X		; 1D 6F 1D ; OR accumulator with memory $1D6F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $1D7F.w,X		; DD 7F 1D ; Compare accumulator $1D7F.w,X [Reads: X Index] [Flags: ZNC]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cmp $5D5A.w,X		; DD 5A 5D ; Compare accumulator $5D5A.w,X [Reads: X Index] [Flags: ZNC]
	trb $5A0D.w		; 1C 0D 5A ; Test and reset bits $5A0D.w [Reads: Accumulator] [Flags: Z]
	eor $0D1C.w,X		; 5D 1C 0D ; Exclusive OR accumulator with memory $0D1C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b,X)		; 61 5D ; Add with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5D21.w,X		; 1D 21 5D ; OR accumulator with memory $5D21.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jsr $7A1D.w		; 20 1D 7A ; Jump to subroutine at $7A1D.w [Writes: Stack Pointer] [Flow: call]
	eor $1D71.w,X		; 5D 71 1D ; Exclusive OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $DD6B.w,X		; 1D 6B DD ; OR accumulator with memory $DD6B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $DD6B.w,X		; 1D 6B DD ; OR accumulator with memory $DD6B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C0D.w		; 1C 0D 1C ; Test and reset bits $1C0D.w [Reads: Accumulator] [Flags: Z]
	ora $0D1C.w		; 0D 1C 0D ; Logical OR $0D1C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $710D.w		; 1C 0D 71 ; Test and reset bits $710D.w [Reads: Accumulator] [Flags: Z]
	eor $1D71.w,X		; 5D 71 1D ; Exclusive OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $DD6B9D.l		; 6F 9D 6B DD ; Add with carry (long) $DD6B9D.l [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora $1D7B.w,X		; 1D 7B 1D ; OR accumulator with memory $1D7B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cmp $1D6B.w,X		; DD 6B 1D ; Compare accumulator $1D6B.w,X [Reads: X Index] [Flags: ZNC]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $1D7B.w,X		; DD 7B 1D ; Compare accumulator $1D7B.w,X [Reads: X Index] [Flags: ZNC]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cmp $0D4B.w,X		; DD 4B 0D ; Compare accumulator $0D4B.w,X [Reads: X Index] [Flags: ZNC]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $0D4B.w		; 0D 4B 0D ; Logical OR $0D4B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $5D5A.w		; 0D 5A 5D ; Logical OR $5D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $6A0D.w		; 1C 0D 6A ; Test and reset bits $6A0D.w [Reads: Accumulator] [Flags: Z]
	eor $1D61.w,X		; 5D 61 1D ; Exclusive OR accumulator with memory $1D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C0D.w		; 1C 0D 1C ; Test and reset bits $1C0D.w [Reads: Accumulator] [Flags: Z]
	ora $5D61.w		; 0D 61 5D ; Logical OR $5D61.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	trb $5A0D.w		; 1C 0D 5A ; Test and reset bits $5A0D.w [Reads: Accumulator] [Flags: Z]
	ora $5D61.w,X		; 1D 61 5D ; OR accumulator with memory $5D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5D20.w,X		; 1D 20 5D ; OR accumulator with memory $5D20.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b,X)		; 21 1D ; Logical AND ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	eor $1D71.w,X		; 5D 71 1D ; Exclusive OR accumulator with memory $1D71.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($5D.b,X)		; 21 5D ; Logical AND ($5D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and ($1D.b,X)		; 21 1D ; Logical AND ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and ($5D.b,X)		; 21 5D ; Logical AND ($5D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	jsr $711D.w		; 20 1D 71 ; Jump to subroutine at $711D.w [Writes: Stack Pointer] [Flow: call]
	eor $1D7A.w,X		; 5D 7A 1D ; Exclusive OR accumulator with memory $1D7A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror $4C.b		; 66 4C ; Rotate right $4C.b [Reads: Direct Page] [Flags: ZNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	and $75.b		; 25 75 ; Logical AND $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $55.b,X		; 16 55 ; Arithmetic shift left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor ($75.b,S),Y		; 53 75 ; XOR accumulator (stack relative indirect indexed) ($75.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $55.b		; 26 55 ; Rotate left $55.b [Reads: Direct Page] [Flags: ZNC]
	eor ($75.b,S),Y		; 53 75 ; XOR accumulator (stack relative indirect indexed) ($75.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $55.b,X		; 36 55 ; Rotate left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $CD7B.w		; 0D 7B CD ; Logical OR $CD7B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $CD6B.w		; 0D 6B CD ; Logical OR $CD6B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($75.b,S),Y		; 53 75 ; XOR accumulator (stack relative indirect indexed) ($75.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $55.b		; 26 55 ; Rotate left $55.b [Reads: Direct Page] [Flags: ZNC]
	eor ($75.b),Y		; 51 75 ; Exclusive OR accumulator with memory ($75.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $55.b,X		; [PATTERN: Memory clearing operation] 36 55 ; Rotate left $55.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $51.b,X		; 35 51 ; Logical AND $51.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $48.b		; 64 48 ; Store zero to $48.b
	ror $4C.b,X		; 76 4C ; Rotate right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	adc $29.b,S		; 63 29 ; Add with carry (stack relative) $29.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	adc ($29.b,S),Y		; 73 29 ; Add with carry (stack relative indirect indexed) ($29.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cpy #$28.b		; C0 28 ; Compare #$28.b with Y register [Reads: Y Index] [Flags: ZNC]
	eor $A9.b,S		; 43 A9 ; Exclusive OR accumulator with stack relative $A9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ror $29.b		; 66 29 ; Rotate right $29.b [Reads: Direct Page] [Flags: ZNC]
	eor ($09.b,X)		; 41 09 ; Exclusive OR accumulator with memory ($09.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4669.w		; 0D 69 46 ; Logical OR $4669.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$41.b		; 09 41 ; Logical OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$42.b		; 49 42 ; Exclusive OR #$42.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$47.b		; 09 47 ; Logical OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$56.b		; 09 56 ; Logical OR #$56.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$42.b		; 09 42 ; Logical OR #$42.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$41.b		; 49 41 ; Exclusive OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$56.b		; 09 56 ; Logical OR #$56.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$41.b		; 09 41 ; Logical OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$40.b		; 49 40 ; Exclusive OR #$40.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$50.b		; 49 50 ; Exclusive OR #$50.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$C0.b		; 49 C0 ; Exclusive OR #$C0.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $A9.b,S		; 43 A9 ; Exclusive OR accumulator with stack relative $A9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cpy #$28.b		; C0 28 ; Compare #$28.b with Y register [Reads: Y Index] [Flags: ZNC]
	eor $A9.b,S		; 43 A9 ; Exclusive OR accumulator with stack relative $A9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $FE69.w		; 0D 69 FE ; Logical OR $FE69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $FE69.w		; 0D 69 FE ; Logical OR $FE69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $3C11.w,X		; 3C 11 3C ; Test bits $3C11.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($40.b),Y		; 11 40 ; OR accumulator with memory ($40.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$3C.b		; 09 3C ; Logical OR #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($51.b),Y		; 11 51 ; OR accumulator with memory ($51.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$42.b		; 49 42 ; Exclusive OR #$42.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$41.b		; 49 41 ; Exclusive OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$56.b		; 09 56 ; Logical OR #$56.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$41.b		; 49 41 ; Exclusive OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$40.b		; 49 40 ; Exclusive OR #$40.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$50.b		; 09 50 ; Logical OR #$50.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$6E.b		; C9 6E ; Compare #$6E.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	eor ($6E.b),Y		; 51 6E ; Exclusive OR accumulator with memory ($6E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($1D.b),Y		; 11 1D ; OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda #$3C.b		; A9 3C ; Load #$3C.b into accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b),Y		; 11 0D ; OR accumulator with memory ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$6E.b		; 29 6E ; Logical AND #$6E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $AA11.w,X		; 3C 11 AA ; Test bits $AA11.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $1E29.w,X		; 1E 29 1E ; Arithmetic shift left $1E29.w,X [Reads: X Index] [Flags: ZNC]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7C.b		; 29 7C ; Logical AND #$7C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$1E.b		; 69 1E ; Add #$1E.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$FE.b		; 29 FE ; Logical AND #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($E029.w,X)		; 7C 29 E0 ; Jump indirect indexed to ($E029.w,X) [Reads: X Index] [Flow: jump]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $F0, $28		; F0 28 ; Branch if equal to $F0, $28 [Flow: branch]
	sbc ($68.b),Y		; F1 68 ; Subtract with carry ($68.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($68.b),Y		; F1 68 ; Subtract with carry ($68.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	pei ($28.b)		; D4 28 ; Push effective indirect address ($28.b) [Reads: Direct Page] [Writes: Stack Pointer]
	and $C429.w,X		; 3D 29 C4 ; AND accumulator with memory $C429.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and #$3D.b		; 29 3D ; Logical AND #$3D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$6A.b		; 69 6A ; Add #$6A.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$3B.b		; 29 3B ; Logical AND #$3B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$C4.b		; 69 C4 ; Add #$C4.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$F1.b		; 69 F1 ; Add #$F1.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($49.b,X)		; 41 49 ; Exclusive OR accumulator with memory ($49.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($09.b,X)		; 41 09 ; Exclusive OR accumulator with memory ($09.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$09.b]		; 47 09 ; Exclusive OR accumulator with memory (long) [$09.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($49.b,X)		; 41 49 ; Exclusive OR accumulator with memory ($49.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$51.b		; 09 51 ; Logical OR #$51.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$E8.b		; 49 E8 ; Exclusive OR #$E8.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora ($F8.b),Y		; 11 F8 ; OR accumulator with memory ($F8.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $3A94.w,X		; BD 94 3A ; Load $3A94.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($E8.b),Y		; 51 E8 ; Exclusive OR accumulator with memory ($E8.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sed		; F8 ; Set decimal flag [Flags: D]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora #$41.b		; 09 41 ; Logical OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$50.b		; 09 50 ; Logical OR #$50.b with accumulator [Writes: Accumulator] [Flags: ZN]
	bit #$46.b		; 89 46 ; Test bits #$46.b with accumulator [Reads: Accumulator] [Flags: Z]
	ora #$04.b		; 09 04 ; Logical OR #$04.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$CA.b		; 49 CA ; Exclusive OR #$CA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	trb $49.b		; 14 49 ; Test and reset bits $49.b [Reads: Accumulator] [Flags: Z]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $09.b		; 04 09 ; Test and set bits $09.b [Reads: Accumulator] [Flags: Z]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $09.b		; 14 09 ; Test and reset bits $09.b [Reads: Accumulator] [Flags: Z]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora #$FE.b		; 09 FE ; Logical OR #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $50, $49		; 50 49 ; Branch if overflow clear to $50, $49 [Flow: branch]
	inc $3C08.w,X		; FE 08 3C ; Increment memory $3C08.w,X [Reads: X Index] [Flags: ZN]
	ora ($40.b),Y		; 11 40 ; OR accumulator with memory ($40.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$3C.b		; 49 3C ; Exclusive OR #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($50.b),Y		; 11 50 ; OR accumulator with memory ($50.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$40.b		; 49 40 ; Exclusive OR #$40.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FE.b		; 09 FE ; Logical OR #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $50, $09		; 50 09 ; Branch if overflow clear to $50, $09 [Flow: branch]
	inc $3C08.w,X		; FE 08 3C ; Increment memory $3C08.w,X [Reads: X Index] [Flags: ZN]
	ora ($40.b),Y		; 11 40 ; OR accumulator with memory ($40.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$3C.b		; 09 3C ; Logical OR #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($50.b),Y		; 11 50 ; OR accumulator with memory ($50.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$40.b		; 49 40 ; Exclusive OR #$40.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$41.b		; 09 41 ; Logical OR #$41.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$51.b		; 09 51 ; Logical OR #$51.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$47.b		; 09 47 ; Logical OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$40.b		; 49 40 ; Exclusive OR #$40.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FE.b		; 09 FE ; Logical OR #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($09.b),Y		; 51 09 ; Exclusive OR accumulator with memory ($09.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $AA08.w,X		; FE 08 AA ; Increment memory $AA08.w,X [Reads: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $AA11.w,X		; 3C 11 AA ; Test bits $AA11.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $3A11.w,X		; 3C 11 3A ; Test bits $3A11.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora ($3A.b),Y		; 11 3A ; OR accumulator with memory ($3A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $AA0C.w,X		; FD 0C AA ; Subtract with carry $AA0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $FD0C.w,X		; FD 0C FD ; Subtract with carry $FD0C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $08AA.w		; 4C AA 08 ; Jump to $08AA.w [Flow: jump]
	sbc $AA4C.w,X		; FD 4C AA ; Subtract with carry $AA4C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $FE69.w,X		; 1D 69 FE ; OR accumulator with memory $FE69.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $FE08.w,X		; FE 08 FE ; Increment memory $FE08.w,X [Reads: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $FEE9.w,X		; 1D E9 FE ; OR accumulator with memory $FEE9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $FE69.w		; 0D 69 FE ; Logical OR $FE69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $0D11.w,X		; 3C 11 0D ; Test bits $0D11.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	and #$3C.b		; 29 3C ; Logical AND #$3C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b),Y		; 11 0D ; OR accumulator with memory ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$D2.b		; 29 D2 ; Logical AND #$D2.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	eor $E9.b,S		; 43 E9 ; Exclusive OR accumulator with stack relative $E9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	ror $29.b		; 66 29 ; Rotate right $29.b [Reads: Direct Page] [Flags: ZNC]
	ror $29.b		; 66 29 ; Rotate right $29.b [Reads: Direct Page] [Flags: ZNC]
	ora $4469.w		; 0D 69 44 ; Logical OR $4469.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$66.b		; 09 66 ; Logical OR #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$66.b		; 29 66 ; Logical AND #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$44.b		; 29 44 ; Logical AND #$44.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$44.b		; 09 44 ; Logical OR #$44.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$66.b		; 09 66 ; Logical OR #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$66.b		; 29 66 ; Logical AND #$66.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$44.b		; 29 44 ; Logical AND #$44.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$0D.b		; 09 0D ; Logical OR #$0D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$73.b		; 29 73 ; Logical AND #$73.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$63.b		; 69 63 ; Add #$63.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$D2.b		; 69 D2 ; Add #$D2.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	inc $FE08.w,X		; FE 08 FE ; Increment memory $FE08.w,X [Reads: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $3C11.w,X		; 3C 11 3C ; Test bits $3C11.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora ($FE.b),Y		; 11 FE ; OR accumulator with memory ($FE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $3C29.w		; 0D 29 3C ; Logical OR $3C29.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($0D.b),Y		; 11 0D ; OR accumulator with memory ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc #$C0.b		; E9 C0 ; Subtract #$C0.b from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $E9.b,S		; 43 E9 ; Exclusive OR accumulator with stack relative $E9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cpy #$68.b		; C0 68 ; Compare #$68.b with Y register [Reads: Y Index] [Flags: ZNC]
	asl $1E29.w,X		; 1E 29 1E ; Arithmetic shift left $1E29.w,X [Reads: X Index] [Flags: ZNC]
	and #$7C.b		; 29 7C ; Logical AND #$7C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$FE.b		; 49 FE ; Exclusive OR #$FE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	asl $2D29.w,X		; 1E 29 2D ; Arithmetic shift left $2D29.w,X [Reads: X Index] [Flags: ZNC]
	and #$7C.b		; 29 7C ; Logical AND #$7C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$7A.b		; 29 7A ; Logical AND #$7A.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$F1.b		; 29 F1 ; Logical AND #$F1.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc ($28.b),Y		; F1 28 ; Subtract with carry ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc #$3D.b		; 69 3D ; Add #$3D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and #$C4.b		; 29 C4 ; Logical AND #$C4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and #$3D.b		; 29 3D ; Logical AND #$3D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$D4.b		; 69 D4 ; Add #$D4.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc #$C4.b		; 69 C4 ; Add #$C4.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $5D0E1D.l		; 0F 1D 0E 5D ; OR accumulator with memory (long) $5D0E1D.l [Writes: Accumulator] [Flags: ZN]
	ora $5D1E1D.l,X		; 1F 1D 1E 5D ; Logical OR long $5D1E1D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp $4C48.w		; 4C 48 4C ; Jump to $4C48.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sec		; 38 ; Set carry flag [Flags: C]
	.db $50, $7D		; 50 7D ; Branch if overflow clear to $50, $7D [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $14AA.w,Y		; 19 AA 14 ; OR accumulator with memory $14AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	trb $B8.b		; 14 B8 ; Test and reset bits $B8.b [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $BE10.w,Y		; BE 10 BE ; Load X register $BE10.w,Y [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	.db $50, $80		; 50 80 ; Branch if overflow clear to $50, $80 [Flow: branch]
	.db $10, $81		; 10 81 ; Branch if plus to $10, $81 [Flow: branch]
	.db $10, $4A		; 10 4A ; Branch if plus to $10, $4A [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	.db $50, $08		; 50 08 ; Branch if overflow clear to $50, $08 [Flow: branch]
	eor ($08.b),Y		; 51 08 ; Exclusive OR accumulator with memory ($08.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $3D.b,S		; [PATTERN: Memory clearing operation] 63 3D ; Add with carry (stack relative) $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	adc ($3D.b,S),Y		; 73 3D ; Add with carry (stack relative indirect indexed) ($3D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($3D.b)		; 12 3D ; OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $3D.b,X		; 74 3D ; Store zero to $3D.b,X [Reads: X Index]
	adc $7D.b,S		; 63 7D ; Add with carry (stack relative) $7D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	ora ($3D.b)		; 12 3D ; OR accumulator with memory (indirect) ($3D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($7D.b,S),Y		; 73 7D ; Add with carry (stack relative indirect indexed) ($7D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	inc $FE1C.w,X		; FE 1C FE ; Increment memory $FE1C.w,X [Reads: X Index] [Flags: ZN]
	trb $1CFE.w		; 1C FE 1C ; Test and reset bits $1CFE.w [Reads: Accumulator] [Flags: Z]
	inc $041C.w,X		; FE 1C 04 ; Increment memory $041C.w,X [Reads: X Index] [Flags: ZN]
	ora $4D04.w		; 0D 04 4D ; Logical OR $4D04.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $0D.b		; 14 0D ; Test and reset bits $0D.b [Reads: Accumulator] [Flags: Z]
	trb $4D.b		; 14 4D ; Test and reset bits $4D.b [Reads: Accumulator] [Flags: Z]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $5D3A.w,X		; 1D 3A 5D ; OR accumulator with memory $5D3A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	eor $1D5B.w,X		; 5D 5B 1D ; Exclusive OR accumulator with memory $1D5B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $0D.b		; 46 0D ; Logical shift right $0D.b [Reads: Direct Page] [Flags: ZNC]
	lsr $4D.b		; 46 4D ; Logical shift right $4D.b [Reads: Direct Page] [Flags: ZNC]
	lsr $0D.b		; 46 0D ; Logical shift right $0D.b [Reads: Direct Page] [Flags: ZNC]
	lsr $4D.b		; 46 4D ; Logical shift right $4D.b [Reads: Direct Page] [Flags: ZNC]
	bit $0D.b		; 24 0D ; Test bits $0D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $4D.b		; 24 4D ; Test bits $4D.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $0D.b,X		; 34 0D ; Test bits $0D.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	bit $4D.b,X		; 34 4D ; Test bits $4D.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	eor $1D5B.w,X		; 5D 5B 1D ; Exclusive OR accumulator with memory $1D5B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	eor $1D5B.w,X		; 5D 5B 1D ; Exclusive OR accumulator with memory $1D5B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $0D.b,X		; 55 0D ; Exclusive OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b,X		; 55 4D ; Exclusive OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $0D.b,X		; 56 0D ; Logical shift right $0D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $4D.b,X		; 56 4D ; Logical shift right $4D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc [$0D.b]		; 67 0D ; Add with carry (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$4D.b]		; 67 4D ; Add with carry (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc [$0D.b],Y		; [PATTERN: Memory clearing operation] 77 0D ; Add with carry (long indexed) [$0D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$4D.b],Y		; 77 4D ; Add with carry (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	stz $08.b		; 64 08 ; Store zero to $08.b
	and $1D.b,X		; 35 1D ; Logical AND $1D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $08.b,X		; 74 08 ; Store zero to $08.b,X [Reads: X Index]
	ror $0C.b,X		; [PATTERN: Memory clearing operation] 76 0C ; Rotate right $0C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	and $5D.b,X		; 35 5D ; Logical AND $5D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $48.b		; 64 48 ; Store zero to $48.b
	ror $4C.b,X		; 76 4C ; Rotate right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $48.b,X		; 74 48 ; Store zero to $48.b,X [Reads: X Index]
	eor $4D1D.w		; 4D 1D 4D ; Exclusive OR $4D1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $355D.w,X		; 1D 5D 35 ; OR accumulator with memory $355D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $8175.w,X		; 5D 75 81 ; Exclusive OR accumulator with memory $8175.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor #$91.b		; 49 91 ; Exclusive OR #$91.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$90.b		; 49 90 ; Exclusive OR #$90.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	adc $48.b		; 65 48 ; Add $48.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stz $48.b		; 64 48 ; Store zero to $48.b
	sta ($49.b,X)		; 81 49 ; Store accumulator ($49.b,X) [Reads: Accumulator, X Index, Direct Page]
	sta ($49.b),Y		; 91 49 ; Store accumulator ($49.b),Y [Reads: Accumulator, Direct Page, Y Index]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	and #$48.b		; 29 48 ; Logical AND #$48.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$49.b		; 29 49 ; Logical AND #$49.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and #$48.b		; 29 48 ; Logical AND #$48.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$1A.b		; 69 1A ; Add #$1A.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$49.b		; 69 49 ; Add #$49.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$29.b		; 69 29 ; Add #$29.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc #$D4.b		; 69 D4 ; Add #$D4.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	and #$C4.b		; 29 C4 ; Logical AND #$C4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	cmp $28.b		; C5 28 ; Compare $28.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc #$D4.b		; 69 D4 ; Add #$D4.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	cmp $68.b		; C5 68 ; Compare $68.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cpy $68.b		; C4 68 ; Compare $68.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	jmp ($7C08.w)		; 6C 08 7C ; Jump indirect to ($7C08.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($8808.w,X)		; 7C 08 88 ; Jump indirect indexed to ($8808.w,X) [Reads: X Index] [Flow: jump]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $4C19.w		; 4C 19 4C ; Jump to $4C19.w [Flow: jump]
	ora $195C.w,Y		; 19 5C 19 ; OR accumulator with memory $195C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $1DB419.l		; 5C 19 B4 1D ; Jump long to $1DB419.l [Flow: jump]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $B419.w,X		; 5D 19 B4 ; Exclusive OR accumulator with memory $B419.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $195D.w,X		; 1D 5D 19 ; OR accumulator with memory $195D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $6C.b,X		; 15 6C ; OR accumulator with memory $6C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($B419.w)		; 6C 19 B4 ; Jump indirect to ($B419.w) [Flow: jump]
	ora $1DC0.w,X		; 1D C0 1D ; OR accumulator with memory $1DC0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dec $D0DD.w		; CE DD D0 ; Decrement $D0DD.w [Flags: ZN]
	ora $DDC1.w,X		; 1D C1 DD ; OR accumulator with memory $DDC1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dec $C09D.w		; CE 9D C0 ; Decrement $C09D.w [Flags: ZN]
	eor $9DC1.w,X		; 5D C1 9D ; Exclusive OR accumulator with memory $9DC1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $5D		; D0 5D ; Branch if not equal to $D0, $5D [Flow: branch]
	lda ($50.b,X)		; A1 50 ; Load accumulator ($50.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $48, $5C		; 62 48 5C ; Push effective relative address $62, $48, $5C [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy #$50.b		; A0 50 ; Load #$50.b into Y register [Writes: Y Index] [Flags: ZN]
	sbc $FA09.w,Y		; F9 09 FA ; Subtract with carry $FA09.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and #$EB.b		; 29 EB ; Logical AND #$EB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EF.b		; 09 EF ; Logical OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$FA.b		; 09 FA ; Logical OR #$FA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$F9.b		; 69 F9 ; Add #$F9.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor #$EF.b		; 49 EF ; Exclusive OR #$EF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$EB.b		; 49 EB ; Exclusive OR #$EB.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$62.b		; 49 62 ; Exclusive OR #$62.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda ($10.b,X)		; A1 10 ; Load accumulator ($10.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy #$10.b		; A0 10 ; Load #$10.b into Y register [Writes: Y Index] [Flags: ZN]
	jmp $086248.l		; 5C 48 62 08 ; Jump long to $086248.l [Flow: jump]
	eor ($08.b,S),Y		; 53 08 ; XOR accumulator (stack relative indirect indexed) ($08.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda ($10.b,X)		; A1 10 ; Load accumulator ($10.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0CAA08.l		; 4F 08 AA 0C ; Exclusive OR accumulator with memory (long) $0CAA08.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	and $0CAA1D.l,X		; 3F 1D AA 0C ; AND accumulator with memory (long,X) $0CAA1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1D0F.w		; 0C 0F 1D ; Test and set bits $1D0F.w [Reads: Accumulator] [Flags: Z]
	ora $4CAA1D.l		; 0F 1D AA 4C ; OR accumulator with memory (long) $4CAA1D.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $5D3F.w		; 4C 3F 5D ; Jump to $5D3F.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $1D3F.w		; 4C 3F 1D ; Jump to $1D3F.w [Flow: jump]
	rol $2E1D.w		; 2E 1D 2E ; Rotate left $2E1D.w [Flags: ZNC]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $3F5D.w		; 2E 5D 3F ; Rotate left $3F5D.w [Flags: ZNC]
	eor $1DB4.w,X		; 5D B4 1D ; Exclusive OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $035D.w		; 2E 5D 03 ; Rotate left $035D.w [Flags: ZNC]
	eor $1DB4.w,Y		; 59 B4 1D ; Exclusive OR accumulator with memory $1DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1D1F.w		; 0C 1F 1D ; Test and set bits $1D1F.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1D1F.w		; 0C 1F 1D ; Test and set bits $1D1F.w [Reads: Accumulator] [Flags: Z]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora [$19.b]		; 07 19 ; OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora [$19.b]		; 07 19 ; OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $9923.w,Y		; 19 23 99 ; OR accumulator with memory $9923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora [$59.b]		; 07 59 ; OR accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and $D9.b,S		; 23 D9 ; AND accumulator with stack relative $D9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5DB4.w,Y		; 59 B4 5D ; Exclusive OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora [$59.b]		; 07 59 ; OR accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp $32DD.w,Y		; D9 DD 32 ; Compare accumulator $32DD.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $5DDA.w,Y		; 19 DA 5D ; OR accumulator with memory $5DDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jsl $197019.l		; 22 19 70 19 ; Jump to subroutine long $197019.l [Writes: Stack Pointer] [Flow: call]
	and $39.b,S		; 23 39 ; AND accumulator with stack relative $39.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $19.b,S		; 23 19 ; AND accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $79.b,S		; 23 79 ; AND accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $79.b,S		; 23 79 ; AND accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	and $39.b,S		; 23 39 ; AND accumulator with stack relative $39.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $229D.w,Y		; D9 9D 22 ; Compare accumulator $229D.w,Y [Reads: Y Index] [Flags: ZNC]
	eor $1DDA.w,Y		; 59 DA 1D ; Exclusive OR accumulator with memory $1DDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	cmp $1922.w,X		; DD 22 19 ; Compare accumulator $1922.w,X [Reads: X Index] [Flags: ZNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1932.w,X		; 5D 32 19 ; Exclusive OR accumulator with memory $1932.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $B9		; 70 B9 ; Branch if overflow set to $70, $B9 [Flow: branch]
	.db $70, $F9		; 70 F9 ; Branch if overflow set to $70, $F9 [Flow: branch]
	.db $70, $39		; 70 39 ; Branch if overflow set to $70, $39 [Flow: branch]
	.db $70, $79		; 70 79 ; Branch if overflow set to $70, $79 [Flow: branch]
	jsl $9DDA59.l		; 22 59 DA 9D ; Jump to subroutine long $9DDA59.l [Writes: Stack Pointer] [Flow: call]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ora $DDDA.w,X		; 1D DA DD ; OR accumulator with memory $DDDA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($99.b)		; 32 99 ; AND accumulator with memory (indirect) ($99.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $325D.w,Y		; D9 5D 32 ; Compare accumulator $325D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $3923.w,Y		; 19 23 39 ; OR accumulator with memory $3923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $79.b,S		; 23 79 ; AND accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $D9.b,S		; 23 D9 ; AND accumulator with stack relative $D9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	inc $2318.w,X		; FE 18 23 ; Increment memory $2318.w,X [Reads: X Index] [Flags: ZN]
	and $7923.w,Y		; 39 23 79 ; AND accumulator with memory $7923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $2358.w,X		; FE 58 23 ; Increment memory $2358.w,X [Reads: X Index] [Flags: ZN]
	sta $D932.w,Y		; 99 32 D9 ; Store accumulator to $D932.w,Y [Reads: Accumulator, Y Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	sta $5932.w,X		; 9D 32 59 ; Store accumulator to $5932.w,X [Reads: Accumulator, X Index]
	cmp $001D.w,Y		; D9 1D 00 ; Compare accumulator $001D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1901.w,Y		; 19 01 19 ; OR accumulator with memory $1901.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and $19.b,S		; 23 19 ; AND accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	asl $3319.w		; 0E 19 33 ; Arithmetic shift left $3319.w [Flags: ZNC]
	eor $1DB4.w,Y		; 59 B4 1D ; Exclusive OR accumulator with memory $1DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $2359.w		; 0E 59 23 ; Arithmetic shift left $2359.w [Flags: ZNC]
	ora $5DB4.w,Y		; 19 B4 5D ; OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $19.b		; 65 19 ; Add $19.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $19.b		; 66 19 ; Rotate right $19.b [Reads: Direct Page] [Flags: ZNC]
	adc [$19.b]		; 67 19 ; Add with carry (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$59.b]		; 67 59 ; Add with carry (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $59.b		; 66 59 ; Rotate right $59.b [Reads: Direct Page] [Flags: ZNC]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $59.b		; 65 59 ; Add $59.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	tsb $19.b		; 04 19 ; Test and set bits $19.b [Reads: Accumulator] [Flags: Z]
	ora $19.b		; 05 19 ; Logical OR $19.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	asl $19.b		; 06 19 ; Arithmetic shift left $19.b [Reads: Direct Page] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	asl $59.b		; 06 59 ; Arithmetic shift left $59.b [Reads: Direct Page] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $59.b		; 05 59 ; Logical OR $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $59.b		; 04 59 ; Test and set bits $59.b [Reads: Accumulator] [Flags: Z]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lsr $B40D.w		; 4E 0D B4 ; Logical shift right $B40D.w [Flags: ZNC]
	eor $0D27.w,X		; 5D 27 0D ; Exclusive OR accumulator with memory $0D27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $ED14.w		; ED 14 ED ; Subtract $ED14.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	jmp ($ED09.w,X)		; 7C 09 ED ; Jump indirect indexed to ($ED09.w,X) [Reads: X Index] [Flow: jump]
	tsb $14ED.w		; 0C ED 14 ; Test and set bits $14ED.w [Reads: Accumulator] [Flags: Z]
	jmp ($ED09.w)		; 6C 09 ED ; Jump indirect to ($ED09.w) [Flow: jump]
	tsb $4D4E.w		; 0C 4E 4D ; Test and set bits $4D4E.w [Reads: Accumulator] [Flags: Z]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	asl $59.b		; 06 59 ; Arithmetic shift left $59.b [Reads: Direct Page] [Flags: ZNC]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	trb $19.b		; 14 19 ; Test and reset bits $19.b [Reads: Accumulator] [Flags: Z]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $59.b		; 14 59 ; Test and reset bits $59.b [Reads: Accumulator] [Flags: Z]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	asl $19.b		; 06 19 ; Arithmetic shift left $19.b [Reads: Direct Page] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	dec $5D.b,X		; D6 5D ; Decrement memory $5D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	cmp [$5D.b],Y		; D7 5D ; Compare accumulator (long indexed) [$5D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $6C0C.w		; ED 0C 6C ; Subtract $6C0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	cmp #$ED.b		; C9 ED ; Compare #$ED.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	trb $ED.b		; 14 ED ; Test and reset bits $ED.b [Reads: Accumulator] [Flags: Z]
	tsb $C97C.w		; 0C 7C C9 ; Test and set bits $C97C.w [Reads: Accumulator] [Flags: Z]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $14ED.w		; 0C ED 14 ; Test and set bits $14ED.w [Reads: Accumulator] [Flags: Z]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$4D.b]		; 27 4D ; AND accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1D1E.w		; 0C 1E 1D ; Test and set bits $1D1E.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0CAA.w		; 0C AA 0C ; Test and set bits $0CAA.w [Reads: Accumulator] [Flags: Z]
	rol $B41D.w,X		; 3E 1D B4 ; Rotate left $B41D.w,X [Reads: X Index] [Flags: ZNC]
	ora $1D1E.w,X		; 1D 1E 1D ; OR accumulator with memory $1D1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $B41D.w,X		; 3E 1D B4 ; Rotate left $B41D.w,X [Reads: X Index] [Flags: ZNC]
	eor $5DB4.w,X		; 5D B4 5D ; Exclusive OR accumulator with memory $5DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ror $09.b,X		; 76 09 ; Rotate right $09.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc [$09.b],Y		; 77 09 ; Add with carry (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$09.b],Y		; 77 09 ; Add with carry (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$0D.b]		; 27 0D ; AND accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora #$78.b		; 09 78 ; Logical OR #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $117D.w		; 0D 7D 11 ; Logical OR $117D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $7D51.w,X		; 7D 51 7D ; Add $7D51.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($7D.b),Y		; 51 7D ; Exclusive OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($27.b),Y		; 51 27 ; Exclusive OR accumulator with memory ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5DB4.w		; 4D B4 5D ; Exclusive OR $5DB4.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor $497A.w		; 4D 7A 49 ; Exclusive OR $497A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc [$49.b],Y		; 77 49 ; Add with carry (long indexed) [$49.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$49.b],Y		; 77 49 ; Add with carry (long indexed) [$49.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ror $49.b,X		; 76 49 ; Rotate right $49.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora ($19.b,S),Y		; 13 19 ; OR accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$09.b]		; 27 09 ; AND accumulator with memory (long) [$09.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$09.b]		; 27 09 ; AND accumulator with memory (long) [$09.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $7D51.w,X		; 7D 51 7D ; Add $7D51.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($27.b),Y		; 11 27 ; OR accumulator with memory ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor #$B4.b		; 49 B4 ; Exclusive OR #$B4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $4927.w,X		; 5D 27 49 ; Exclusive OR accumulator with memory $4927.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $4B91.w,X		; 7D 91 4B ; Add $4B91.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $4D7D.w		; 0D 7D 4D ; Logical OR $4D7D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $4B8D.w,X		; 7D 8D 4B ; Add $4B8D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $0D7D.w,Y		; 19 7D 0D ; OR accumulator with memory $0D7D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $4B4D.w,X		; 7D 4D 4B ; Add $4B4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $194B.w,Y		; 19 4B 19 ; OR accumulator with memory $194B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $7D0D.w,X		; 7D 0D 7D ; Add $7D0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $194B.w		; 4D 4B 19 ; Exclusive OR $194B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $4BCD.w,X		; 7D CD 4B ; Add $4BCD.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($4B.b),Y		; D1 4B ; Compare accumulator ($4B.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($7D.b),Y		; 51 7D ; Exclusive OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $194B.w		; 0D 4B 19 ; Logical OR $194B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $4B8D.w,X		; 7D 8D 4B ; Add $4B8D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $194A.w,Y		; 19 4A 19 ; OR accumulator with memory $194A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $5911.w,Y		; 59 11 59 ; Exclusive OR accumulator with memory $5911.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $4D7D.w,Y		; 19 7D 4D ; OR accumulator with memory $4D7D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $CD7D.w,Y		; 19 7D CD ; OR accumulator with memory $CD7D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $2119.w		; 20 19 21 ; Jump to subroutine at $2119.w [Writes: Stack Pointer] [Flow: call]
	ora $196A.w,Y		; 19 6A 19 ; OR accumulator with memory $196A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $5921.w,Y		; 19 21 59 ; OR accumulator with memory $5921.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $5A59.w		; 20 59 5A ; Jump to subroutine at $5A59.w [Writes: Stack Pointer] [Flow: call]
	eor $596A.w,Y		; 59 6A 59 ; Exclusive OR accumulator with memory $596A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $4B0D.w,X		; 7D 0D 4B ; Add $4B0D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $8D7D.w,Y		; 19 7D 8D ; OR accumulator with memory $8D7D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $4BCD.w,X		; 7D CD 4B ; Add $4BCD.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $194B.w,Y		; 19 4B 19 ; OR accumulator with memory $194B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $7D8D.w,X		; 7D 8D 7D ; Add $7D8D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp $194B.w		; CD 4B 19 ; Compare $194B.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	adc $7D4D.w,X		; 7D 4D 7D ; Add $7D4D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $CD7D.w		; 8D 7D CD ; Store accumulator to $CD7D.w [Reads: Accumulator]
	adc $4B91.w,X		; 7D 91 4B ; Add $4B91.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sta ($7D.b),Y		; 91 7D ; Store accumulator ($7D.b),Y [Reads: Accumulator, Direct Page, Y Index]
	cmp ($4B.b),Y		; D1 4B ; Compare accumulator ($4B.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ora ($4B.b),Y		; 11 4B ; OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($7D.b),Y		; D1 7D ; Compare accumulator ($7D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	sta ($4B.b),Y		; 91 4B ; Store accumulator ($4B.b),Y [Reads: Accumulator, Direct Page, Y Index]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($7D.b),Y		; D1 7D ; Compare accumulator ($7D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($7D.b),Y		; D1 7D ; Compare accumulator ($7D.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp ($B4.b),Y		; D1 B4 ; Compare accumulator ($B4.b),Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ora $5D3E.w,X		; 1D 3E 5D ; OR accumulator with memory $5D3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $1E5D.w,X		; 3E 5D 1E ; Rotate left $1E5D.w,X [Reads: X Index] [Flags: ZNC]
	eor $1D2F.w,X		; 5D 2F 1D ; Exclusive OR accumulator with memory $1D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $0CAA1D.l		; 2F 1D AA 0C ; AND accumulator with memory (long) $0CAA1D.l [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $5DB4.w		; 0C B4 5D ; Test and set bits $5DB4.w [Reads: Accumulator] [Flags: Z]
	and [$09.b],Y		; 37 09 ; AND accumulator with memory (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc [$09.b],Y		; 77 09 ; Add with carry (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$09.b],Y		; 77 09 ; Add with carry (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc [$09.b],Y		; 77 09 ; Add with carry (long indexed) [$09.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	ora #$B4.b		; 09 B4 ; Logical OR #$B4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $5DB4.w,X		; 5D B4 5D ; Exclusive OR accumulator with memory $5DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $117D.w		; 0D 7D 11 ; Logical OR $117D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $5D0D.w,X		; 5E 0D 5D ; Logical shift right $5D0D.w,X [Reads: X Index] [Flags: ZNC]
	sta ($7D.b),Y		; 91 7D ; Store accumulator ($7D.b),Y [Reads: Accumulator, Direct Page, Y Index]
	eor ($38.b),Y		; 51 38 ; Exclusive OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $915D.w		; 4D 5D 91 ; Exclusive OR $915D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $7A4D.w,X		; 5E 4D 7A ; Logical shift right $7A4D.w,X [Reads: X Index] [Flags: ZNC]
	eor #$77.b		; 49 77 ; Exclusive OR #$77.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$B4.b		; 49 B4 ; Exclusive OR #$B4.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $5DB4.w,X		; 5D B4 5D ; Exclusive OR accumulator with memory $5DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc [$49.b],Y		; 77 49 ; Add with carry (long indexed) [$49.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc [$49.b],Y		; 77 49 ; Add with carry (long indexed) [$49.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and [$49.b],Y		; 37 49 ; AND accumulator with memory (long indexed) [$49.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	asl $AA5D.w,X		; 1E 5D AA ; Arithmetic shift left $AA5D.w,X [Reads: X Index] [Flags: ZNC]
	jmp $4CAA.w		; 4C AA 4C ; Jump to $4CAA.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jmp $0CED.w		; 4C ED 0C ; Jump to $0CED.w [Flow: jump]
	eor $ED91.w,X		; 5D 91 ED ; Exclusive OR accumulator with memory $ED91.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $915D.w		; 0C 5D 91 ; Test and set bits $915D.w [Reads: Accumulator] [Flags: Z]
	eor $ED91.w,X		; 5D 91 ED ; Exclusive OR accumulator with memory $ED91.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $915D.w		; 0C 5D 91 ; Test and set bits $915D.w [Reads: Accumulator] [Flags: Z]
	sbc $1F0C.w		; ED 0C 1F ; Subtract $1F0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	eor $4CAA.w,X		; 5D AA 4C ; Exclusive OR accumulator with memory $4CAA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $4CAA5D.l,X		; 1F 5D AA 4C ; Logical OR long $4CAA5D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $0D19.w		; 0C 19 0D ; Test and set bits $0D19.w [Reads: Accumulator] [Flags: Z]
	ora $991C.w,Y		; 19 1C 99 ; OR accumulator with memory $991C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D99.w,X		; 1D 99 0D ; OR accumulator with memory $0D99.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $590C.w,Y		; 59 0C 59 ; Exclusive OR accumulator with memory $590C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1CD9.w,X		; 1D D9 1C ; OR accumulator with memory $1CD9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $191C.w,Y		; D9 1C 19 ; Compare accumulator $191C.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $2C19.w,X		; 1D 19 2C ; OR accumulator with memory $2C19.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $192D.w,Y		; 19 2D 19 ; OR accumulator with memory $192D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1C59.w,X		; 1D 59 1C ; OR accumulator with memory $1C59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $592D.w,Y		; 59 2D 59 ; Exclusive OR accumulator with memory $592D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $BF59.w		; 2C 59 BF ; Test bits $BF59.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	tsb $4C46.w		; 0C 46 4C ; Test and set bits $4C46.w [Reads: Accumulator] [Flags: Z]
	lsr $4C.b,X		; 56 4C ; Logical shift right $4C.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $D7,$4C		; 54 4C D7 ; Move block negative $D7,$4C [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp [$5D.b],Y		; D7 5D ; Compare accumulator (long indexed) [$5D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora [$19.b]		; 07 19 ; OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1932.w,Y		; 19 32 19 ; OR accumulator with memory $1932.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5907.w,Y		; 59 07 59 ; Exclusive OR accumulator with memory $5907.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsl $997019.l		; 22 19 70 99 ; Jump to subroutine long $997019.l [Writes: Stack Pointer] [Flow: call]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	.db $70, $D9		; 70 D9 ; Branch if overflow set to $70, $D9 [Flow: branch]
	jsl $597059.l		; 22 59 70 59 ; Jump to subroutine long $597059.l [Writes: Stack Pointer] [Flow: call]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $19.b,S		; 23 19 ; AND accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $55.b		; A6 55 ; Load $55.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	ldx $55.b		; A6 55 ; Load $55.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	ldx $55.b,Y		; B6 55 ; Load X register $55.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: ZN]
	eor [$4D.b]		; 47 4D ; Exclusive OR accumulator with memory (long) [$4D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$0D.b]		; 47 0D ; Exclusive OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $D5.b,X		; B5 D5 ; Load $D5.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldx $15.b		; A6 15 ; Load $15.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldx $15.b,Y		; B6 15 ; Load X register $15.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: ZN]
	ldx $15.b		; A6 15 ; Load $15.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $15B5.w		; 4D B5 15 ; Exclusive OR $15B5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $4D.b,X		; 35 4D ; Logical AND $4D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$4D.b],Y		; 57 4D ; Exclusive OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda $95.b,X		; B5 95 ; Load $95.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $55.b,X		; B5 55 ; Load $55.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $95.b,X		; B5 95 ; Load $95.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $15B5.w		; 0D B5 15 ; Logical OR $15B5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $155C.w		; 0D 5C 15 ; Logical OR $155C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda [$55.b],Y		; B7 55 ; Load accumulator (long indexed) [$55.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda [$55.b]		; A7 55 ; Load accumulator (long) [$55.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda [$55.b],Y		; B7 55 ; Load accumulator (long indexed) [$55.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$4D.b],Y		; 57 4D ; Exclusive OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda [$55.b]		; A7 55 ; Load accumulator (long) [$55.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$4D.b],Y		; 57 4D ; Exclusive OR accumulator with memory (long indexed) [$4D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp ($4655.w)		; 6C 55 46 ; Jump indirect to ($4655.w) [Flow: jump]
	eor $0D35.w		; 4D 35 0D ; Exclusive OR $0D35.w with accumulator [Writes: Accumulator] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	eor $15B7.w		; 4D B7 15 ; Exclusive OR $15B7.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ldx $55.b,Y		; B6 55 ; Load X register $55.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $95.b,X		; B5 95 ; Load $95.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b		; A5 15 ; Load $15.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $15B5.w		; 4D B5 15 ; Exclusive OR $15B5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $95B5.w		; 4D B5 95 ; Exclusive OR $95B5.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda $95.b,X		; B5 95 ; Load $95.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $0D57.w		; 0D 57 0D ; Logical OR $0D57.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $0D.b,X		; 35 0D ; Logical AND $0D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $0D.b		; 46 0D ; Logical shift right $0D.b [Reads: Direct Page] [Flags: ZNC]
	lsr $4D.b		; 46 4D ; Logical shift right $4D.b [Reads: Direct Page] [Flags: ZNC]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $4D5A.w		; 0D 5A 4D ; Logical OR $4D5A.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda [$15.b]		; A7 15 ; Load accumulator (long) [$15.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda [$15.b],Y		; B7 15 ; Load accumulator (long indexed) [$15.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	lda [$15.b],Y		; B7 15 ; Load accumulator (long indexed) [$15.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $9B59.w		; 4C 59 9B ; Jump to $9B59.w [Flow: jump]
	ora $595C.w,Y		; 19 5C 59 ; OR accumulator with memory $595C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $6C59.w		; 4C 59 6C ; Jump to $6C59.w [Flow: jump]
	eor $596B.w,Y		; 59 6B 59 ; Exclusive OR accumulator with memory $596B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $198B.w,Y		; 59 8B 19 ; Exclusive OR accumulator with memory $198B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $6C.b,X		; 15 6C ; OR accumulator with memory $6C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $156B.w,Y		; 19 6B 15 ; OR accumulator with memory $156B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($8B19.w)		; 6C 19 8B ; Jump indirect to ($8B19.w) [Flow: jump]
	eor $156B.w,Y		; 59 6B 15 ; Exclusive OR accumulator with memory $156B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $08.b		; A4 08 ; Load $08.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $08.b,X		; B4 08 ; Load Y register $08.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $FE48.w,Y		; 79 48 FE ; Add $FE48.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $1DFE.w,X		; 1D FE 1D ; OR accumulator with memory $1DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $E11D.w,X		; FE 1D E1 ; Increment memory $E11D.w,X [Reads: X Index] [Flags: ZN]
	ora $0895.w,X		; 1D 95 08 ; OR accumulator with memory $0895.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $B448.w,Y		; 79 48 B4 ; Add $B448.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $552B.w,X		; 5D 2B 55 ; Exclusive OR accumulator with memory $552B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2B.b,X		; 15 2B ; OR accumulator with memory $2B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $152A.w,X		; 1D 2A 15 ; OR accumulator with memory $152A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4C.b,X		; 55 4C ; Exclusive OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $B4.b,X		; 55 B4 ; Exclusive OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $554D.w,X		; 5D 4D 55 ; Exclusive OR accumulator with memory $554D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4C.b,X		; 15 4C ; OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5C.b,X		; 15 5C ; OR accumulator with memory $5C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $156D.w,X		; 1D 6D 15 ; OR accumulator with memory $156D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4B15.w,X		; 5D 15 4B ; Exclusive OR accumulator with memory $4B15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2A.b,X		; 15 2A ; OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6B.b,X		; 15 6B ; OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2A.b,X		; 15 2A ; OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3B.b,X		; 15 3B ; OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3B.b,X		; 55 3B ; Exclusive OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3B.b,X		; 15 3B ; OR accumulator with memory $3B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6B.b,X		; 15 6B ; OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b,X		; 15 5D ; OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b,X		; 15 5D ; OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $16.b,X		; 55 16 ; Exclusive OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $25.b,X		; 15 25 ; OR accumulator with memory $25.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $44.b,X		; 15 44 ; OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $63.b,X		; 15 63 ; OR accumulator with memory $63.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $24.b,X		; 15 24 ; OR accumulator with memory $24.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $25.b,X		; 15 25 ; OR accumulator with memory $25.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $24.b,X		; 15 24 ; OR accumulator with memory $24.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $63.b,X		; 55 63 ; Exclusive OR accumulator with memory $63.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6F.b,X		; 55 6F ; Exclusive OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3D.b,X		; 55 3D ; Exclusive OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $B4.b,X		; 55 B4 ; Exclusive OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $554D.w,X		; 5D 4D 55 ; Exclusive OR accumulator with memory $554D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3D.b,X		; 55 3D ; Exclusive OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $44.b,X		; 55 44 ; Exclusive OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $54.b,X		; 15 54 ; OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $17.b,X		; 15 17 ; OR accumulator with memory $17.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $25.b,X		; 15 25 ; OR accumulator with memory $25.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $54.b,X		; 15 54 ; OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $49.b,X		; 95 49 ; Store accumulator to $49.b,X [Reads: Accumulator, X Index]
	ora $25.b,X		; 15 25 ; OR accumulator with memory $25.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $16.b,X		; 55 16 ; Exclusive OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $49.b,X		; 55 49 ; Exclusive OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $53.b,X		; D5 53 ; Compare accumulator $53.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $44.b,X		; 55 44 ; Exclusive OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $53.b,X		; 55 53 ; Exclusive OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3A.b,X		; 15 3A ; OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3A.b,X		; 55 3A ; Exclusive OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $29.b,X		; 55 29 ; Exclusive OR accumulator with memory $29.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b,X		; 55 54 ; Exclusive OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $29.b,X		; D5 29 ; Compare accumulator $29.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $09.b,X		; 55 09 ; Exclusive OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $39.b,X		; 55 39 ; Exclusive OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $39.b,X		; 15 39 ; OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3D.b,X		; 15 3D ; OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4C.b,X		; 15 4C ; OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1543.w,X		; 1D 43 15 ; OR accumulator with memory $1543.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $15.b,S		; 43 15 ; Exclusive OR accumulator with stack relative $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($55.b,S),Y		; 53 55 ; XOR accumulator (stack relative indirect indexed) ($55.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $15.b		; 26 15 ; Rotate left $15.b [Reads: Direct Page] [Flags: ZNC]
	eor $15.b,S		; 43 15 ; Exclusive OR accumulator with stack relative $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $15.b,S		; 43 15 ; Exclusive OR accumulator with stack relative $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc ($15.b)		; 72 15 ; Add with carry (indirect) ($15.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($15.b,S),Y		; 73 15 ; Add with carry (stack relative indirect indexed) ($15.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $15.b,S		; 43 15 ; Exclusive OR accumulator with stack relative $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $15.b,S		; 43 15 ; Exclusive OR accumulator with stack relative $15.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	rol $55.b		; 26 55 ; Rotate left $55.b [Reads: Direct Page] [Flags: ZNC]
	eor ($15.b,S),Y		; 53 15 ; XOR accumulator (stack relative indirect indexed) ($15.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($55.b,S),Y		; 53 55 ; XOR accumulator (stack relative indirect indexed) ($55.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $15.b,X		; 36 15 ; Rotate left $15.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor ($55.b,S),Y		; 53 55 ; XOR accumulator (stack relative indirect indexed) ($55.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	mvn $34,$55		; 54 55 34 ; Move block negative $34,$55 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $35.b,X		; 15 35 ; OR accumulator with memory $35.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $36.b,X		; 15 36 ; OR accumulator with memory $36.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $53.b,X		; 55 53 ; Exclusive OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $54.b,X		; 15 54 ; OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $44.b,X		; 55 44 ; Exclusive OR accumulator with memory $44.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $72.b,X		; 55 72 ; Exclusive OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $25.b,X		; 35 25 ; Logical AND $25.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $54.b,X		; 35 54 ; Logical AND $54.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $63.b,X		; B5 63 ; Load $63.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $25.b,X		; 35 25 ; Logical AND $25.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $63.b,X		; 75 63 ; Add $63.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $54.b,X		; 75 54 ; Add $54.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc $44.b,X		; F5 44 ; Subtract $44.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $73.b,X		; 55 73 ; Exclusive OR accumulator with memory $73.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $26.b,X		; 15 26 ; OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $43.b,X		; 55 43 ; Exclusive OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $34.b,X		; 15 34 ; OR accumulator with memory $34.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $54.b,X		; 15 54 ; OR accumulator with memory $54.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $63.b,X		; B5 63 ; Load $63.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda $09.b,X		; B5 09 ; Load $09.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0B.b,X		; 55 0B ; Exclusive OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $63.b,X		; 15 63 ; OR accumulator with memory $63.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $54.b,X		; F5 54 ; Subtract $54.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc $0B.b,X		; F5 0B ; Subtract $0B.b,X from accumulator with borrow [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $09.b,X		; 55 09 ; Exclusive OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $35.b,X		; 55 35 ; Exclusive OR accumulator with memory $35.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1B.b,X		; 55 1B ; Exclusive OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1B.b,X		; 15 1B ; OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4C.b,X		; 55 4C ; Exclusive OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $B4.b,X		; 55 B4 ; Exclusive OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $555C.w,X		; 5D 5C 55 ; Exclusive OR accumulator with memory $555C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6E.b,X		; 15 6E ; OR accumulator with memory $6E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7E.b,X		; 15 7E ; OR accumulator with memory $7E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B5.b,X		; 15 B5 ; OR accumulator with memory $B5.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $57.b,X		; D5 57 ; Compare accumulator $57.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $0D57.w		; 0D 57 0D ; Logical OR $0D57.w with accumulator [Writes: Accumulator] [Flags: ZN]
	lda [$15.b]		; A7 15 ; Load accumulator (long) [$15.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	clv		; B8 ; Clear overflow flag [Flags: V]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5D08.w,X		; 5D 08 5D ; Exclusive OR accumulator with memory $5D08.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $08.b,S		; 43 08 ; Exclusive OR accumulator with stack relative $08.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	lsr $9C88.w		; 4E 88 9C ; Logical shift right $9C88.w [Flags: ZNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	lsr $BA08.w		; 4E 08 BA ; Logical shift right $BA08.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $BA88.w		; 4E 88 BA ; Logical shift right $BA88.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr $9C08.w		; 4E 08 9C ; Logical shift right $9C08.w [Flags: ZNC]
	cpy $4C8B.w		; CC 8B 4C ; Compare $4C8B.w with Y register [Reads: Y Index] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $0C8B.w		; 0C 8B 0C ; Test and set bits $0C8B.w [Reads: Accumulator] [Flags: Z]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	jmp $0C8B.w		; 4C 8B 0C ; Jump to $0C8B.w [Flow: jump]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	jmp $0CAA.w		; 4C AA 0C ; Jump to $0CAA.w [Flow: jump]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	tsb $0C8B.w		; 0C 8B 0C ; Test and set bits $0C8B.w [Reads: Accumulator] [Flags: Z]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	jmp $4C8B.w		; 4C 8B 4C ; Jump to $4C8B.w [Flow: jump]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	tsb $1DD6.w		; 0C D6 1D ; Test and set bits $1DD6.w [Reads: Accumulator] [Flags: Z]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b,S),Y		; 13 19 ; OR accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ora ($19.b,S),Y		; 13 19 ; OR accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	ora ($59.b,S),Y		; 13 59 ; OR accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora ($19.b,S),Y		; 13 19 ; OR accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	rol $3E5D.w,X		; 3E 5D 3E ; Rotate left $3E5D.w,X [Reads: X Index] [Flags: ZNC]
	eor $5D1E.w,X		; 5D 1E 5D ; Exclusive OR accumulator with memory $5D1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $6708.w		; 4D 08 67 ; Exclusive OR $6708.w with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	sta ($10.b),Y		; 91 10 ; Store accumulator ($10.b),Y [Reads: Accumulator, Direct Page, Y Index]
	rol $3F5D.w		; 2E 5D 3F ; Rotate left $3F5D.w [Flags: ZNC]
	eor $5DB4.w,X		; 5D B4 5D ; Exclusive OR accumulator with memory $5DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $305D.w		; 2E 5D 30 ; Rotate left $305D.w [Flags: ZNC]
	ora $0D31.w		; 0D 31 0D ; Logical OR $0D31.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvp $32,$0D		; 44 0D 32 ; Move block positive $32,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $0D32.w		; 0D 32 0D ; Logical OR $0D32.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $0D79.w		; 0D 79 0D ; Logical OR $0D79.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($4D.b)		; 32 4D ; AND accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($4D.b)		; 32 4D ; AND accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $784D.w,Y		; 79 4D 78 ; Add $784D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $4D31.w		; 4D 31 4D ; Exclusive OR $4D31.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $30, $4D		; 30 4D ; Branch if minus to $30, $4D [Flow: branch]
	mvp $52,$4D		; 44 4D 52 ; Move block positive $52,$4D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $0D52.w		; 4D 52 0D ; Exclusive OR $0D52.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $0D.b,S		; 43 0D ; Exclusive OR accumulator with stack relative $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0D.b,S		; 43 0D ; Exclusive OR accumulator with stack relative $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $0D49.w		; 0D 49 0D ; Logical OR $0D49.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $0D49.w		; 0D 49 0D ; Logical OR $0D49.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$4D.b		; 49 4D ; Exclusive OR #$4D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D49.w		; 4D 49 4D ; Exclusive OR $4D49.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D43.w		; 4D 43 4D ; Exclusive OR $4D43.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b,S		; 43 4D ; Exclusive OR accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	and $2D49.w		; 2D 49 2D ; Logical AND $2D49.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$6D.b		; 49 6D ; Exclusive OR #$6D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	adc $6D59.w		; 6D 59 6D ; Add $6D59.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	adc $0D52.w		; 6D 52 0D ; Add $0D52.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor ($0D.b,S),Y		; 53 0D ; XOR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $0D.b,S		; 63 0D ; Add with carry (stack relative) $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	mvn $62,$2D		; 54 2D 62 ; Move block negative $62,$2D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	and $2D64.w		; 2D 64 2D ; Logical AND $2D64.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc ($2D.b)		; 72 2D ; Add with carry (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $6D, $54		; 62 6D 54 ; Push effective relative address $62, $6D, $54 [Writes: Stack Pointer]
	adc $6D72.w		; 6D 72 6D ; Add $6D72.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	stz $6D.b		; 64 6D ; Store zero to $6D.b
	eor ($4D.b,S),Y		; 53 4D ; XOR accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $4D.b,S		; 63 4D ; Add with carry (stack relative) $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc ($0D.b,S),Y		; 73 0D ; Add with carry (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	stz $0D.b,X		; 74 0D ; Store zero to $0D.b,X [Reads: X Index]
	inc $3308.w,X		; FE 08 33 ; Increment memory $3308.w,X [Reads: X Index] [Flags: ZN]
	ora $0D3F.w		; 0D 3F 0D ; Logical OR $0D3F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	inc $7448.w,X		; FE 48 74 ; Increment memory $7448.w,X [Reads: X Index] [Flags: ZN]
	eor $4D3F.w		; 4D 3F 4D ; Exclusive OR $4D3F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and ($4D.b,S),Y		; 33 4D ; AND accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($4D.b,S),Y		; 73 4D ; Add with carry (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($0D.b)		; 52 0D ; Exclusive OR accumulator with memory (indirect) ($0D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D3E0D.l,X		; 1F 0D 3E 0D ; Logical OR long $0D3E0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0D3C0D.l,X		; 1F 0D 3C 0D ; Logical OR long $0D3C0D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $1F4D.w,X		; 3E 4D 1F ; Rotate left $1F4D.w,X [Reads: X Index] [Flags: ZNC]
	eor $4D3C.w		; 4D 3C 4D ; Exclusive OR $4D3C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D1F4D.l,X		; 1F 4D 1F 0D ; Logical OR long $0D1F4D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $1F0D.w,X		; 3C 0D 1F ; Test bits $1F0D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $0D3C.w		; 0D 3C 0D ; Logical OR $0D3C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	bit $1F4D.w,X		; 3C 4D 1F ; Test bits $1F4D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	eor $4D3C.w		; 4D 3C 4D ; Exclusive OR $4D3C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $0D524D.l,X		; 1F 4D 52 0D ; Logical OR long $0D524D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b)		; 52 4D ; Exclusive OR accumulator with memory (indirect) ($4D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $4D68.w		; 0D 68 4D ; Logical OR $4D68.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $0D.b		; 45 0D ; Exclusive OR $0D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b		; 45 4D ; Exclusive OR $4D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $0D.b,X		; 34 0D ; Test bits $0D.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	bit $4D.b,X		; 34 4D ; Test bits $4D.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $0D1B.w		; 0D 1B 0D ; Logical OR $0D1B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $0D1B.w		; 0D 1B 0D ; Logical OR $0D1B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D0B.w		; 4D 0B 4D ; Exclusive OR $4D0B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $4D0B.w		; 4D 0B 4D ; Exclusive OR $4D0B.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $08.b,X		; 95 08 ; Store accumulator to $08.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor [$0D.b]		; 47 0D ; Exclusive OR accumulator with memory (long) [$0D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldx $15.b		; A6 15 ; Load $15.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	lda $15.b,X		; B5 15 ; Load $15.b,X into accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $08BB.w		; 0D BB 08 ; Logical OR $08BB.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $AB08.w,Y		; 79 08 AB ; Add $AB08.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $4D.b,X		; 35 4D ; Logical AND $4D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $0D.b		; 46 0D ; Logical shift right $0D.b [Reads: Direct Page] [Flags: ZNC]
	lda [$55.b],Y		; B7 55 ; Load accumulator (long indexed) [$55.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	ora $884E.w		; 0D 4E 88 ; Logical OR $884E.w with accumulator [Writes: Accumulator] [Flags: ZN]
	stz $4ECC.w		; 9C CC 4E ; Store zero to $4ECC.w
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tsb $154B.w		; 0C 4B 15 ; Test and set bits $154B.w [Reads: Accumulator] [Flags: Z]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $24.b,X		; 15 24 ; OR accumulator with memory $24.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $25.b,X		; 15 25 ; OR accumulator with memory $25.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $16.b,X		; 15 16 ; OR accumulator with memory $16.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3D.b,X		; 15 3D ; OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5553.w,X		; 1D 53 55 ; OR accumulator with memory $5553.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	stz $55.b		; 64 55 ; Store zero to $55.b
	eor $55.b,S		; 43 55 ; Exclusive OR accumulator with stack relative $55.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $62, $55, $24		; 62 55 24 ; Push effective relative address $62, $55, $24 [Writes: Stack Pointer]
	ora $64.b,X		; 15 64 ; OR accumulator with memory $64.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $64.b,X		; 15 64 ; OR accumulator with memory $64.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $25.b,X		; 55 25 ; Exclusive OR accumulator with memory $25.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $64.b,X		; 15 64 ; OR accumulator with memory $64.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $53.b,X		; 15 53 ; OR accumulator with memory $53.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $72.b,X		; 15 72 ; OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $26.b,X		; 15 26 ; OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $43.b,X		; 55 43 ; Exclusive OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $43.b,X		; 15 43 ; OR accumulator with memory $43.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $26.b,X		; 15 26 ; OR accumulator with memory $26.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $73.b,X		; 15 73 ; OR accumulator with memory $73.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $34.b,X		; 15 34 ; OR accumulator with memory $34.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $36.b,X		; 15 36 ; OR accumulator with memory $36.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $7F.b,X		; 55 7F ; Exclusive OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $39.b,X		; 55 39 ; Exclusive OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $72.b,X		; 15 72 ; OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $73.b,X		; 15 73 ; OR accumulator with memory $73.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $39.b,X		; 15 39 ; OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $72.b,X		; 15 72 ; OR accumulator with memory $72.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $73.b,X		; 15 73 ; OR accumulator with memory $73.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $36.b,X		; 15 36 ; OR accumulator with memory $36.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $35.b,X		; 15 35 ; OR accumulator with memory $35.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6F.b,X		; 55 6F ; Exclusive OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $7F.b,X		; 55 7F ; Exclusive OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ldy $4C.b		; A4 4C ; Load $4C.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	adc $B408.w,Y		; 79 08 B4 ; Add $B408.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $DDD0.w		; 4C D0 DD ; Jump to $DDD0.w [Flow: jump]
.INDEX 8
	sep #$1D		; E2 1D
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
.INDEX 8
	sep #$5D		; E2 5D
	.db $D0, $9D		; D0 9D ; Branch if not equal to $D0, $9D [Flow: branch]
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
	jmp $4C08.w		; 4C 08 4C ; Jump to $4C08.w [Flow: jump]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $084C50.l		; AF 50 4C 08 ; Load long $084C50.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr $50.b		; 46 50 ; Logical shift right $50.b [Reads: Direct Page] [Flags: ZNC]
	lsr $50.b,X		; 56 50 ; Logical shift right $50.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	mvn $75,$48		; 54 48 75 ; Move block negative $75,$48 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b,X		; 15 65 ; OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $65.b,X		; D5 65 ; Compare accumulator $65.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $75.b,X		; D5 75 ; Compare accumulator $75.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $75.b,X		; 55 75 ; Exclusive OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b,X		; 15 65 ; OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $65.b,X		; 55 65 ; Exclusive OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $75.b,X		; 55 75 ; Exclusive OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $59.b,X		; 55 59 ; Exclusive OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $74.b,X		; 55 74 ; Exclusive OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $4A.b,X		; 95 4A ; Store accumulator to $4A.b,X [Reads: Accumulator, X Index]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $59.b,X		; D5 59 ; Compare accumulator $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,X		; 55 58 ; Exclusive OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $59.b,X		; D5 59 ; Compare accumulator $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $59.b,X		; 55 59 ; Exclusive OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $4A.b,X		; 95 4A ; Store accumulator to $4A.b,X [Reads: Accumulator, X Index]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $74.b,X		; D5 74 ; Compare accumulator $74.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $74.b,X		; 95 74 ; Store accumulator to $74.b,X [Reads: Accumulator, X Index]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	cmp $59.b,X		; D5 59 ; Compare accumulator $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	cmp $75.b,X		; D5 75 ; Compare accumulator $75.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $59.b,X		; D5 59 ; Compare accumulator $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $74.b,X		; 55 74 ; Exclusive OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $74.b,X		; D5 74 ; Compare accumulator $74.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $4A.b,X		; 95 4A ; Store accumulator to $4A.b,X [Reads: Accumulator, X Index]
	cmp $74.b,X		; D5 74 ; Compare accumulator $74.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $74.b,X		; 95 74 ; Store accumulator to $74.b,X [Reads: Accumulator, X Index]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $58.b,X		; 95 58 ; Store accumulator to $58.b,X [Reads: Accumulator, X Index]
	cmp $59.b,X		; D5 59 ; Compare accumulator $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $65.b,X		; 95 65 ; Store accumulator to $65.b,X [Reads: Accumulator, X Index]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	sta $49.b,X		; 95 49 ; Store accumulator to $49.b,X [Reads: Accumulator, X Index]
	sta $6D.b,X		; 95 6D ; Store accumulator to $6D.b,X [Reads: Accumulator, X Index]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $48.b,X		; D5 48 ; Compare accumulator $48.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $6D.b,X		; 95 6D ; Store accumulator to $6D.b,X [Reads: Accumulator, X Index]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $65.b,X		; D5 65 ; Compare accumulator $65.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $6D.b,X		; D5 6D ; Compare accumulator $6D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $59.b,X		; D5 59 ; Compare accumulator $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $75.b,X		; D5 75 ; Compare accumulator $75.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $4A.b,X		; 95 4A ; Store accumulator to $4A.b,X [Reads: Accumulator, X Index]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b,X		; 15 65 ; OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $49.b,X		; 55 49 ; Exclusive OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $65.b,X		; D5 65 ; Compare accumulator $65.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $4A.b,X		; D5 4A ; Compare accumulator $4A.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $74.b,X		; D5 74 ; Compare accumulator $74.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b,X		; 15 65 ; OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b,X		; 15 65 ; OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $48.b,X		; 95 48 ; Store accumulator to $48.b,X [Reads: Accumulator, X Index]
	cmp $49.b,X		; D5 49 ; Compare accumulator $49.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $6D.b,X		; 95 6D ; Store accumulator to $6D.b,X [Reads: Accumulator, X Index]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $6D.b,X		; D5 6D ; Compare accumulator $6D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $74.b,X		; 15 74 ; OR accumulator with memory $74.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4A.b,X		; 15 4A ; OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $58.b,X		; D5 58 ; Compare accumulator $58.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $49.b,X		; 95 49 ; Store accumulator to $49.b,X [Reads: Accumulator, X Index]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b,X		; 15 65 ; OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $65.b,X		; 55 65 ; Exclusive OR accumulator with memory $65.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $48.b,X		; 55 48 ; Exclusive OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $75.b,X		; 55 75 ; Exclusive OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $75.b,X		; 15 75 ; OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $3E.b,X		; 95 3E ; Store accumulator to $3E.b,X [Reads: Accumulator, X Index]
	sta $3E.b,X		; 95 3E ; Store accumulator to $3E.b,X [Reads: Accumulator, X Index]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0C.b,X		; 55 0C ; Exclusive OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0C.b,X		; 55 0C ; Exclusive OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0C.b,X		; 15 0C ; OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $3E.b,X		; D5 3E ; Compare accumulator $3E.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0F.b,X		; 15 0F ; OR accumulator with memory $0F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $3E.b,X		; 95 3E ; Store accumulator to $3E.b,X [Reads: Accumulator, X Index]
	sta $0E.b,X		; 95 0E ; Store accumulator to $0E.b,X [Reads: Accumulator, X Index]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0D.b,X		; 95 0D ; Store accumulator to $0D.b,X [Reads: Accumulator, X Index]
	eor $0E.b,X		; 55 0E ; Exclusive OR accumulator with memory $0E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0E.b,X		; 15 0E ; OR accumulator with memory $0E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0F.b,X		; 95 0F ; Store accumulator to $0F.b,X [Reads: Accumulator, X Index]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0D.b,X		; 95 0D ; Store accumulator to $0D.b,X [Reads: Accumulator, X Index]
	sta $0E.b,X		; 95 0E ; Store accumulator to $0E.b,X [Reads: Accumulator, X Index]
	cmp $3E.b,X		; D5 3E ; Compare accumulator $3E.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0F.b,X		; 15 0F ; OR accumulator with memory $0F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0F.b,X		; 55 0F ; Exclusive OR accumulator with memory $0F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1F.b,X		; 15 1F ; OR accumulator with memory $1F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $3E.b,X		; 95 3E ; Store accumulator to $3E.b,X [Reads: Accumulator, X Index]
	eor $3E.b,X		; 55 3E ; Exclusive OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $1C.b,X		; 95 1C ; Store accumulator to $1C.b,X [Reads: Accumulator, X Index]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3F.b,X		; 55 3F ; Exclusive OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1C.b,X		; 15 1C ; OR accumulator with memory $1C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $3E.b,X		; D5 3E ; Compare accumulator $3E.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $0E.b,X		; 95 0E ; Store accumulator to $0E.b,X [Reads: Accumulator, X Index]
	sta $0C.b,X		; 95 0C ; Store accumulator to $0C.b,X [Reads: Accumulator, X Index]
	eor $0E.b,X		; 55 0E ; Exclusive OR accumulator with memory $0E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0E.b,X		; 15 0E ; OR accumulator with memory $0E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $3E.b,X		; D5 3E ; Compare accumulator $3E.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $0E.b,X		; D5 0E ; Compare accumulator $0E.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $0C.b,X		; 55 0C ; Exclusive OR accumulator with memory $0C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $ED.b,X		; 15 ED ; OR accumulator with memory $ED.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DFF.w,X		; 1D FF 1D ; OR accumulator with memory $1DFF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	trb $1DFF.w		; 1C FF 1D ; Test and reset bits $1DFF.w [Reads: Accumulator] [Flags: Z]
	sbc $1DED1D.l,X		; FF 1D ED 1D ; Subtract with carry (long,X) $1DED1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1C9B1D.l,X		; FF 1D 9B 1C ; Subtract with carry (long,X) $1C9B1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $ED1D.w		; ED 1D ED ; Subtract $ED1D.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $1C9B.w,X		; 1D 9B 1C ; OR accumulator with memory $1C9B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	trb $1DFF.w		; 1C FF 1D ; Test and reset bits $1DFF.w [Reads: Accumulator] [Flags: Z]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	lda ($1D.b),Y		; B1 1D ; Load accumulator ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $1DFF1D.l,X		; FF 1D FF 1D ; Subtract with carry (long,X) $1DFF1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DFD1D.l,X		; FF 1D FD 1D ; Subtract with carry (long,X) $1DFD1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DED1D.l,X		; FF 1D ED 1D ; Subtract with carry (long,X) $1DED1D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $1DA11D.l,X		; FF 1D A1 1D ; Subtract with carry (long,X) $1DA11D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FF1D.w		; ED 1D FF ; Subtract $FF1D.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	ora $1C9B.w,X		; 1D 9B 1C ; OR accumulator with memory $1C9B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda ($1D.b),Y		; B1 1D ; Load accumulator ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $3D.b,X		; 16 3D ; Arithmetic shift left $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $3D.b,X		; 16 3D ; Arithmetic shift left $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $3D.b,X		; 16 3D ; Arithmetic shift left $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $3D.b,X		; 16 3D ; Arithmetic shift left $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	asl $FD.b,X		; 16 FD ; Arithmetic shift left $FD.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $FD.b,X		; 15 FD ; OR accumulator with memory $FD.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $FD.b,X		; 15 FD ; OR accumulator with memory $FD.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc $FD28.w,X		; FD 28 FD ; Subtract with carry $FD28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and [$FD.b]		; 27 FD ; AND accumulator with memory (long) [$FD.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$FD.b]		; 27 FD ; AND accumulator with memory (long) [$FD.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	sbc $BD27.w,X		; FD 27 BD ; Subtract with carry $BD27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	lda $BD18.w,X		; BD 18 BD ; Load $BD18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$BD.b]		; 27 BD ; AND accumulator with memory (long) [$BD.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $BD.b,X		; 15 BD ; OR accumulator with memory $BD.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $BD.b,X		; 16 BD ; Arithmetic shift left $BD.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	lda $BD15.w,X		; BD 15 BD ; Load $BD15.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $0D		; 50 0D ; Branch if overflow clear to $50, $0D [Flow: branch]
	eor ($0D.b),Y		; 51 0D ; Exclusive OR accumulator with memory ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	ora $0D41.w		; 0D 41 0D ; Logical OR $0D41.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b),Y		; 51 4D ; Exclusive OR accumulator with memory ($4D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $4D		; 50 4D ; Branch if overflow clear to $50, $4D [Flow: branch]
	eor ($4D.b,X)		; 41 4D ; Exclusive OR accumulator with memory ($4D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $FD18.w		; 4D 18 FD ; Exclusive OR $FD18.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and [$FD.b],Y		; 37 FD ; AND accumulator with memory (long indexed) [$FD.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $2FFD.w,Y		; 19 FD 2F ; OR accumulator with memory $2FFD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $BD37.w,X		; FD 37 BD ; Subtract with carry $BD37.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $BD2F.w,X		; BD 2F BD ; Load $BD2F.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $09BD.w,Y		; 19 BD 09 ; OR accumulator with memory $09BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $FD1F.w,X		; FD 1F FD ; Subtract with carry $FD1F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $FD0EFD.l		; 0F FD 0E FD ; OR accumulator with memory (long) $FD0EFD.l [Writes: Accumulator] [Flags: ZN]
	ora $BD09BD.l,X		; 1F BD 09 BD ; Logical OR long $BD09BD.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $0FBD.w		; 0E BD 0F ; Arithmetic shift left $0FBD.w [Flags: ZNC]
	lda $0944.w,X		; BD 44 09 ; Load $0944.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $09.b		; 45 09 ; Exclusive OR $09.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvn $55,$09		; 54 09 55 ; Move block negative $55,$09 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	ora #$45.b		; 09 45 ; Logical OR #$45.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$44.b		; 49 44 ; Exclusive OR #$44.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$55.b		; 49 55 ; Exclusive OR #$55.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$54.b		; 49 54 ; Exclusive OR #$54.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$E3.b		; 49 E3 ; Exclusive OR #$E3.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $9D3B.w,X		; 9D 3B 9D ; Store accumulator to $9D3B.w,X [Reads: Accumulator, X Index]
	bit $AA1D.w,X		; 3C 1D AA ; Test bits $AA1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cmp $DDE3.w,X		; DD E3 DD ; Compare accumulator $DDE3.w,X [Reads: X Index] [Flags: ZNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	bit $505D.w,X		; 3C 5D 50 ; Test bits $505D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $0D51.w		; 0D 51 0D ; Logical OR $0D51.w with accumulator [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $0D69.w		; 0D 69 0D ; Logical OR $0D69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($4D.b),Y		; 51 4D ; Exclusive OR accumulator with memory ($4D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $4D		; 50 4D ; Branch if overflow clear to $50, $4D [Flow: branch]
	adc #$4D.b		; 69 4D ; Add #$4D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $0946.w		; 4D 46 09 ; Exclusive OR $0946.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor [$09.b]		; 47 09 ; Exclusive OR accumulator with memory (long) [$09.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $09, $5A		; 62 09 5A ; Push effective relative address $62, $09, $5A [Writes: Stack Pointer]
	ora #$47.b		; 09 47 ; Logical OR #$47.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$46.b		; 49 46 ; Exclusive OR #$46.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$5A.b		; 49 5A ; Exclusive OR #$5A.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$62.b		; 49 62 ; Exclusive OR #$62.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$78.b		; 49 78 ; Exclusive OR #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$78.b		; 09 78 ; Logical OR #$78.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$79.b		; 49 79 ; Exclusive OR #$79.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$79.b		; 09 79 ; Logical OR #$79.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$18.b		; 49 18 ; Exclusive OR #$18.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $FD36.w,X		; FD 36 FD ; Subtract with carry $FD36.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	sbc $FD26.w,X		; FD 26 FD ; Subtract with carry $FD26.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $FD.b,X		; 35 FD ; Logical AND $FD.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $25FD.w		; 2E FD 25 ; Rotate left $25FD.w [Flags: ZNC]
	sbc $FD1E.w,X		; FD 1E FD ; Subtract with carry $FD1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $7D26.w,X		; 7D 26 7D ; Add $7D26.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $7D36.w,X		; 7D 36 7D ; Add $7D36.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $7D.b		; 25 7D ; Logical AND $7D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $357D.w,X		; 1E 7D 35 ; Arithmetic shift left $357D.w,X [Reads: X Index] [Flags: ZNC]
	adc $7D2E.w,X		; 7D 2E 7D ; Add $7D2E.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,X		; 1D AA 08 ; OR accumulator with memory $08AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sta $88AA.w,X		; 9D AA 88 ; Store accumulator to $88AA.w,X [Reads: Accumulator, X Index]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b)		; 12 19 ; OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $592219.l		; 22 19 22 59 ; Jump to subroutine long $592219.l [Writes: Stack Pointer] [Flow: call]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b)		; 12 59 ; OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $592219.l		; 22 19 22 59 ; Jump to subroutine long $592219.l [Writes: Stack Pointer] [Flow: call]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cmp $5DCF1D.l		; CF 1D CF 5D ; Compare accumulator (long) $5DCF1D.l [Reads: Accumulator] [Flags: ZNC]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $7D04.w,X		; 7D 04 7D ; Add $7D04.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	rol $FD.b		; 26 FD ; Rotate left $FD.b [Reads: Direct Page] [Flags: ZNC]
	trb $7D.b		; 14 7D ; Test and reset bits $7D.b [Reads: Accumulator] [Flags: Z]
	ora $E37D.w,X		; 1D 7D E3 ; OR accumulator with memory $E37D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $7D2D.w,X		; BD 2D 7D ; Load $7D2D.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $BD.b,S		; E3 BD ; Subtract stack-relative $BD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	ora ($19.b,X)		; 01 19 ; Logical OR ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C19.w		; 1C 19 1C ; Test and reset bits $1C19.w [Reads: Accumulator] [Flags: Z]
	ora $191C.w,Y		; 19 1C 19 ; OR accumulator with memory $191C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C19.w		; 1C 19 1C ; Test and reset bits $1C19.w [Reads: Accumulator] [Flags: Z]
	ora $591C.w,Y		; 19 1C 59 ; OR accumulator with memory $591C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C59.w		; 1C 59 1C ; Test and reset bits $1C59.w [Reads: Accumulator] [Flags: Z]
	eor $591C.w,Y		; 59 1C 59 ; Exclusive OR accumulator with memory $591C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	trb $1159.w		; 1C 59 11 ; Test and reset bits $1159.w [Reads: Accumulator] [Flags: Z]
	eor $7D26.w,Y		; 59 26 7D ; Exclusive OR accumulator with memory $7D26.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $FD.b		; 14 FD ; Test and reset bits $FD.b [Reads: Accumulator] [Flags: Z]
	clc		; 18 ; Clear carry flag [Flags: C]
	sbc $FD04.w,X		; FD 04 FD ; Subtract with carry $FD04.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $E3FD.w		; 2D FD E3 ; Logical AND $E3FD.w with accumulator [Writes: Accumulator] [Flags: ZN]
	and $FD1D.w,X		; 3D 1D FD ; AND accumulator with memory $FD1D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $3D.b,S		; E3 3D ; Subtract stack-relative $3D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	and ($19.b,X)		; 21 19 ; Logical AND ($19.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $10, $19		; 10 19 ; Branch if plus to $10, $19 [Flow: branch]
	and ($99.b,X)		; 21 99 ; Logical AND ($99.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	ora $593A.w,Y		; 19 3A 59 ; OR accumulator with memory $593A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	sta $D93A.w,Y		; 99 3A D9 ; Store accumulator to $D93A.w,Y [Reads: Accumulator, Y Index]
	trb $1C19.w		; 1C 19 1C ; Test and reset bits $1C19.w [Reads: Accumulator] [Flags: Z]
	ora $191C.w,Y		; 19 1C 19 ; OR accumulator with memory $191C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $1C19.w		; 4E 19 1C ; Logical shift right $1C19.w [Flags: ZNC]
	eor $591C.w,Y		; 59 1C 59 ; Exclusive OR accumulator with memory $591C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ror $6E19.w		; 6E 19 6E ; Rotate right $6E19.w [Flags: ZNC]
	eor $591C.w,Y		; 59 1C 59 ; Exclusive OR accumulator with memory $591C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $4E59.w		; 1C 59 4E ; Test and reset bits $4E59.w [Reads: Accumulator] [Flags: Z]
	eor $591C.w,Y		; 59 1C 59 ; Exclusive OR accumulator with memory $591C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	and ($D9.b,X)		; 21 D9 ; Logical AND ($D9.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	.db $10, $59		; 10 59 ; Branch if plus to $10, $59 [Flow: branch]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	bit $3BDD.w,X		; 3C DD 3B ; Test bits $3BDD.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	eor $5DE3.w,X		; 5D E3 5D ; Exclusive OR accumulator with memory $5DE3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $0F3D.w		; 0E 3D 0F ; Arithmetic shift left $0F3D.w [Flags: ZNC]
	and $3D1F.w,X		; 3D 1F 3D ; AND accumulator with memory $3D1F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora #$3D.b		; 09 3D ; Logical OR #$3D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and $3D193D.l		; 2F 3D 19 3D ; AND accumulator with memory (long) $3D193D.l [Writes: Accumulator] [Flags: ZN]
	and [$3D.b],Y		; 37 3D ; AND accumulator with memory (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $591C.w,X		; 7D 1C 59 ; Add $591C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	lsr $1C19.w,X		; 5E 19 1C ; Logical shift right $1C19.w,X [Reads: X Index] [Flags: ZNC]
	eor $196A.w,Y		; 59 6A 19 ; Exclusive OR accumulator with memory $196A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $19.b		; 24 19 ; Test bits $19.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $19.b,X		; 34 19 ; Test bits $19.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	lsr $1C59.w,X		; 5E 59 1C ; Logical shift right $1C59.w,X [Reads: X Index] [Flags: ZNC]
	eor $596A.w,Y		; 59 6A 59 ; Exclusive OR accumulator with memory $596A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $AA59.w		; 1C 59 AA ; Test and reset bits $AA59.w [Reads: Accumulator] [Flags: Z]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $C8AA.w,X		; 5D AA C8 ; Exclusive OR accumulator with memory $C8AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cmp $7DE3.w,X		; DD E3 7D ; Compare accumulator $7DE3.w,X [Reads: X Index] [Flags: ZNC]
	and $E3BD.w		; 2D BD E3 ; Logical AND $E3BD.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $BD1D.w,X		; 7D 1D BD ; Add $BD1D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	trb $BD.b		; 14 BD ; Test and reset bits $BD.b [Reads: Accumulator] [Flags: Z]
	rol $3D.b		; 26 3D ; Rotate left $3D.b [Reads: Direct Page] [Flags: ZNC]
	tsb $BD.b		; 04 BD ; Test and set bits $BD.b [Reads: Accumulator] [Flags: Z]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $3D18.w,X		; BD 18 3D ; Load $3D18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$3D.b]		; 27 3D ; AND accumulator with memory (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and [$3D.b]		; 27 3D ; AND accumulator with memory (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	and $1D3B.w,X		; 3D 3B 1D ; AND accumulator with memory $1D3B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sta $88AA.w,X		; 9D AA 88 ; Store accumulator to $88AA.w,X [Reads: Accumulator, X Index]
	trb $7A19.w		; 1C 19 7A ; Test and reset bits $7A19.w [Reads: Accumulator] [Flags: Z]
	ora $191C.w,Y		; 19 1C 19 ; OR accumulator with memory $191C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1319.w		; 1C 19 13 ; Test and reset bits $1319.w [Reads: Accumulator] [Flags: Z]
	ora $5913.w,Y		; 19 13 59 ; OR accumulator with memory $5913.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C19.w		; 1C 19 1C ; Test and reset bits $1C19.w [Reads: Accumulator] [Flags: Z]
	ora $597A.w,Y		; 19 7A 59 ; OR accumulator with memory $597A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C19.w		; 1C 19 1C ; Test and reset bits $1C19.w [Reads: Accumulator] [Flags: Z]
	ora $191C.w,Y		; 19 1C 19 ; OR accumulator with memory $191C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $35BD.w		; 2E BD 35 ; Rotate left $35BD.w [Flags: ZNC]
	lda $BD1E.w,X		; BD 1E BD ; Load $BD1E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $BD.b		; 25 BD ; Logical AND $BD.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $BD.b,X		; 36 BD ; Rotate left $BD.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $BD26.w,X		; BD 26 BD ; Load $BD26.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $1920.w,X		; BD 20 19 ; Load $1920.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $30, $19		; 30 19 ; Branch if minus to $30, $19 [Flow: branch]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	cop $19.b		; 02 19 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	trb $3119.w		; 1C 19 31 ; Test and reset bits $3119.w [Reads: Accumulator] [Flags: Z]
	ora $1902.w,Y		; 19 02 19 ; OR accumulator with memory $1902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $0259.w		; 1C 59 02 ; Test and reset bits $0259.w [Reads: Accumulator] [Flags: Z]
	eor $5902.w,Y		; 59 02 59 ; Exclusive OR accumulator with memory $5902.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $0359.w		; 20 59 03 ; Jump to subroutine at $0359.w [Writes: Stack Pointer] [Flow: call]
	eor $5930.w,Y		; 59 30 59 ; Exclusive OR accumulator with memory $5930.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$BD.b],Y		; 37 BD ; AND accumulator with memory (long indexed) [$BD.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $BD2F.w,X		; 7D 2F BD ; Add $BD2F.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $AABD.w,Y		; 19 BD AA ; OR accumulator with memory $AABD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,S		; 03 19 ; OR accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	bit $1C19.w		; 2C 19 1C ; Test bits $1C19.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	ora $1923.w,Y		; 19 23 19 ; OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $191C.w,Y		; 19 1C 19 ; OR accumulator with memory $191C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $0B19.w		; 1C 19 0B ; Test and reset bits $0B19.w [Reads: Accumulator] [Flags: Z]
	ora $190B.w,Y		; 19 0B 19 ; OR accumulator with memory $190B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $1C59.w		; 1C 59 1C ; Test and reset bits $1C59.w [Reads: Accumulator] [Flags: Z]
	eor $590B.w,Y		; 59 0B 59 ; Exclusive OR accumulator with memory $590B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	eor $591C.w,Y		; 59 1C 59 ; Exclusive OR accumulator with memory $591C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $0B59.w		; 2C 59 0B ; Test bits $0B59.w with accumulator [Reads: Accumulator] [Flags: ZVN]
	eor $1923.w,Y		; 59 23 19 ; Exclusive OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,S		; 03 59 ; OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $FE9D.w,X		; FE 9D FE ; Increment memory $FE9D.w,X [Reads: X Index] [Flags: ZN]
	sta $9DFE.w,X		; 9D FE 9D ; Store accumulator to $9DFE.w,X [Reads: Accumulator, X Index]
	inc $3C9D.w,X		; FE 9D 3C ; Increment memory $3C9D.w,X [Reads: X Index] [Flags: ZN]
	sta $08AA.w,X		; 9D AA 08 ; Store accumulator to $08AA.w,X [Reads: Accumulator, X Index]
	sbc $1D.b,S		; E3 1D ; Subtract stack-relative $1D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $1923.w,X		; 1D 23 19 ; OR accumulator with memory $1923.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1933.w,Y		; 19 33 19 ; OR accumulator with memory $1933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $190B.w,Y		; 19 0B 19 ; OR accumulator with memory $190B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	eor $590B.w,Y		; 59 0B 59 ; Exclusive OR accumulator with memory $590B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
.INDEX 8
	sep #$5D		; E2 5D
	.db $D0, $DD		; D0 DD ; Branch if not equal to $D0, $DD [Flow: branch]
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $D0, $9D		; D0 9D ; Branch if not equal to $D0, $9D [Flow: branch]
	.db $D0, $9D		; D0 9D ; Branch if not equal to $D0, $9D [Flow: branch]
	cpy #$9D.b		; C0 9D ; Compare #$9D.b with Y register [Reads: Y Index] [Flags: ZNC]
	cpy #$DD.b		; C0 DD ; Compare #$DD.b with Y register [Reads: Y Index] [Flags: ZNC]
	and [$7D.b]		; 27 7D ; AND accumulator with memory (long) [$7D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $7D28.w,X		; 7D 28 7D ; Add $7D28.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and [$7D.b]		; 27 7D ; AND accumulator with memory (long) [$7D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2F7D.w,Y		; 19 7D 2F ; OR accumulator with memory $2F7D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $7D18.w,X		; 7D 18 7D ; Add $7D18.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and [$7D.b],Y		; 37 7D ; AND accumulator with memory (long indexed) [$7D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $7D0E7D.l		; 0F 7D 0E 7D ; OR accumulator with memory (long) $7D0E7D.l [Writes: Accumulator] [Flags: ZN]
	ora #$7D.b		; 09 7D ; Logical OR #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $7D287D.l,X		; 1F 7D 28 7D ; Logical OR long $7D287D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $7D28.w,X		; 7D 28 7D ; Add $7D28.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $7DE3.w,X		; 7D E3 7D ; Add $7DE3.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $E33D.w,X		; 1D 3D E3 ; OR accumulator with memory $E33D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $3D2D.w,X		; 7D 2D 3D ; Add $3D2D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	tsb $3D.b		; 04 3D ; Test and set bits $3D.b [Reads: Accumulator] [Flags: Z]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $3D14.w,X		; 3D 14 3D ; AND accumulator with memory $3D14.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $BD.b		; 26 BD ; Rotate left $BD.b [Reads: Direct Page] [Flags: ZNC]
	cpx #$11.b		; E0 11 ; Compare #$11.b with X register [Reads: X Index] [Flags: ZNC]
	cpx #$51.b		; E0 51 ; Compare #$51.b with X register [Reads: X Index] [Flags: ZNC]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	cpx #$11.b		; E0 11 ; Compare #$11.b with X register [Reads: X Index] [Flags: ZNC]
	cpx #$49.b		; E0 49 ; Compare #$49.b with X register [Reads: X Index] [Flags: ZNC]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	sta ($08.b),Y		; 91 08 ; Store accumulator ($08.b),Y [Reads: Accumulator, Direct Page, Y Index]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $FD37.w,X		; 7D 37 FD ; Add $FD37.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $2FFD.w,Y		; 19 FD 2F ; OR accumulator with memory $2FFD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $15E3.w,X		; FD E3 15 ; Subtract with carry $15E3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor ($CD.b,S),Y		; 53 CD ; XOR accumulator (stack relative indirect indexed) ($CD.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor $CD.b,S		; 43 CD ; Exclusive OR accumulator with stack relative $CD.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor $0D.b,S		; 43 0D ; Exclusive OR accumulator with stack relative $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor ($0D.b,S),Y		; 53 0D ; XOR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor ($CD.b,S),Y		; 53 CD ; XOR accumulator (stack relative indirect indexed) ($CD.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor $CD.b,S		; 43 CD ; Exclusive OR accumulator with stack relative $CD.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	asl $253D.w,X		; 1E 3D 25 ; Arithmetic shift left $253D.w,X [Reads: X Index] [Flags: ZNC]
	and $3D2E.w,X		; 3D 2E 3D ; AND accumulator with memory $3D2E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $3D.b,X		; 35 3D ; Logical AND $3D.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rol $3D.b		; 26 3D ; Rotate left $3D.b [Reads: Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $3D36.w,X		; 3D 36 3D ; AND accumulator with memory $3D36.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $3D26.w,X		; 3D 26 3D ; AND accumulator with memory $3D26.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $7D.b		; 26 7D ; Rotate left $7D.b [Reads: Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $FD26.w,X		; 3D 26 FD ; AND accumulator with memory $FD26.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $CD.b,S		; 43 CD ; Exclusive OR accumulator with stack relative $CD.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor $0D.b,S		; 43 0D ; Exclusive OR accumulator with stack relative $0D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor ($0D.b,S),Y		; 53 0D ; XOR accumulator (stack relative indirect indexed) ($0D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $BD18.w,X		; BD 18 BD ; Load $BD18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $BD18.w,X		; BD 18 BD ; Load $BD18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	.db $42, $0D		; 42 0D ; Reserved instruction
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	.db $42, $0D		; 42 0D ; Reserved instruction
	ora $E37D.w,X		; 1D 7D E3 ; OR accumulator with memory $E37D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $7D2D.w,X		; 7D 2D 7D ; Add $7D2D.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $7D.b,S		; E3 7D ; Subtract stack-relative $7D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	.db $42, $0D		; 42 0D ; Reserved instruction
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor ($CD.b,S),Y		; 53 CD ; XOR accumulator (stack relative indirect indexed) ($CD.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$3D.b],Y		; 37 3D ; AND accumulator with memory (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$7D.b],Y		; 37 7D ; AND accumulator with memory (long indexed) [$7D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $FD37.w,X		; 7D 37 FD ; Add $FD37.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor $CD.b,S		; 43 CD ; Exclusive OR accumulator with stack relative $CD.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor ($CD.b,S),Y		; 53 CD ; XOR accumulator (stack relative indirect indexed) ($CD.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	ora $7D.b,X		; 15 7D ; OR accumulator with memory $7D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	adc $7D16.w,X		; 7D 16 7D ; Add $7D16.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $7D.b,X		; 15 7D ; OR accumulator with memory $7D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sbc $5D.b,S		; E3 5D ; Subtract stack-relative $5D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $1D.b,S		; E3 1D ; Subtract stack-relative $1D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $9D.b,S		; E3 9D ; Subtract stack-relative $9D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	and $7D3E7D.l,X		; 3F 7D 3E 7D ; AND accumulator with memory (long,X) $7D3E7D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $7D07.w,X		; 7D 07 7D ; Add $7D07.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	ora $0C7D.w		; 0D 7D 0C ; Logical OR $0C7D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $9D3C.w,X		; 7D 3C 9D ; Add $9D3C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	bit $E3DD.w,X		; 3C DD E3 ; Test bits $E3DD.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	cmp $DDE3.w,X		; DD E3 DD ; Compare accumulator $DDE3.w,X [Reads: X Index] [Flags: ZNC]
	eor $4D.b,S		; 43 4D ; Exclusive OR accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor ($4D.b,S),Y		; 53 4D ; XOR accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	and [$3D.b],Y		; 37 3D ; AND accumulator with memory (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$7D.b],Y		; 37 7D ; AND accumulator with memory (long indexed) [$7D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$BD.b],Y		; 37 BD ; AND accumulator with memory (long indexed) [$BD.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	and $7D26.w,X		; 3D 26 7D ; AND accumulator with memory $7D26.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $7D18.w,X		; 7D 18 7D ; Add $7D18.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and $297D.w,Y		; 39 7D 29 ; AND accumulator with memory $297D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $7D18.w,X		; 7D 18 7D ; Add $7D18.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	rol $7D.b		; 26 7D ; Rotate left $7D.b [Reads: Direct Page] [Flags: ZNC]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	tsb $0D3D.w		; 0C 3D 0D ; Test and set bits $0D3D.w [Reads: Accumulator] [Flags: Z]
	and $15E3.w,X		; 3D E3 15 ; AND accumulator with memory $15E3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D.b,S		; 43 4D ; Exclusive OR accumulator with stack relative $4D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	eor ($4D.b,S),Y		; 53 4D ; XOR accumulator (stack relative indirect indexed) ($4D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor ($8D.b,S),Y		; 53 8D ; XOR accumulator (stack relative indirect indexed) ($8D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	ror $11.b		; 66 11 ; Rotate right $11.b [Reads: Direct Page] [Flags: ZNC]
	adc [$11.b]		; 67 11 ; Add with carry (long) [$11.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $31.b,X		; 76 31 ; Rotate right $31.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc [$31.b],Y		; 77 31 ; Add with carry (long indexed) [$31.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $7D11.w,X		; 7D 11 7D ; Add $7D11.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($6C.b),Y		; 51 6C ; Exclusive OR accumulator with memory ($6C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($6C.b),Y		; 31 6C ; AND accumulator with memory ($6C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($67.b),Y		; 71 67 ; Add with carry ($67.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($66.b),Y		; 51 66 ; Exclusive OR accumulator with memory ($66.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($77.b),Y		; 51 77 ; Exclusive OR accumulator with memory ($77.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($76.b),Y		; 71 76 ; Add with carry ($76.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($3E.b),Y		; 71 3E ; Add with carry ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and $3D3F.w,X		; 3D 3F 3D ; AND accumulator with memory $3D3F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$3D.b]		; 07 3D ; OR accumulator with memory (long) [$3D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $3D29.w,X		; 3D 29 3D ; AND accumulator with memory $3D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $263D.w,Y		; 39 3D 26 ; AND accumulator with memory $263D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $7D18.w,X		; 3D 18 7D ; AND accumulator with memory $7D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $0D		; 42 0D ; Reserved instruction
	eor $8D.b,S		; 43 8D ; Exclusive OR accumulator with stack relative $8D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($8D.b,S),Y		; 53 8D ; XOR accumulator (stack relative indirect indexed) ($8D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sec		; 38 ; Set carry flag [Flags: C]
	and $7D38.w,X		; 3D 38 7D ; AND accumulator with memory $7D38.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $3D.b,X		; 16 3D ; Arithmetic shift left $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $7D26.w,X		; FD 26 7D ; Subtract with carry $7D26.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $3D60.w,X		; 7D 60 3D ; Add $3D60.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $3D.b,S		; 63 3D ; Add with carry (stack relative) $3D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $31		; 70 31 ; Branch if overflow set to $70, $31 [Flow: branch]
	adc ($3D.b,S),Y		; 73 3D ; Add with carry (stack relative indirect indexed) ($3D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $B1		; 70 B1 ; Branch if overflow set to $70, $B1 [Flow: branch]
	jmp ($7C31.w,X)		; 7C 31 7C ; Jump indirect indexed to ($7C31.w,X) [Reads: X Index] [Flow: jump]
	adc ($7F.b),Y		; 71 7F ; Add with carry ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lda ($7F.b),Y		; B1 7F ; Load accumulator ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc ($61.b),Y		; F1 61 ; Subtract with carry ($61.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($63.b),Y		; 71 63 ; Add with carry ($63.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $7171.w,X		; 7D 71 71 ; Add $7171.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($7D.b,S),Y		; 73 7D ; Add with carry (stack relative indirect indexed) ($7D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	and #$3D.b		; 29 3D ; Logical AND #$3D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	rol $3D.b		; 26 3D ; Rotate left $3D.b [Reads: Direct Page] [Flags: ZNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	adc $3D18.w,X		; 7D 18 3D ; Add $3D18.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	eor $8D.b,S		; 43 8D ; Exclusive OR accumulator with stack relative $8D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $15.b,S		; E3 15 ; Subtract stack-relative $15.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	clc		; 18 ; Clear carry flag [Flags: C]
	sbc $FD18.w,X		; FD 18 FD ; Subtract with carry $FD18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and #$BD.b		; 29 BD ; Logical AND #$BD.b with accumulator [Writes: Accumulator] [Flags: ZN]
	rol $BD.b		; 26 BD ; Rotate left $BD.b [Reads: Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $BD18.w,X		; BD 18 BD ; Load $BD18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $FD.b		; 26 FD ; Rotate left $FD.b [Reads: Direct Page] [Flags: ZNC]
	and #$FD.b		; 29 FD ; Logical AND #$FD.b with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	lda $FD26.w,X		; BD 26 FD ; Load $FD26.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $FD.b		; 26 FD ; Rotate left $FD.b [Reads: Direct Page] [Flags: ZNC]
	and #$FD.b		; 29 FD ; Logical AND #$FD.b with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $0DBD.w		; 0C BD 0D ; Test and set bits $0DBD.w [Reads: Accumulator] [Flags: Z]
	lda $FDE3.w,X		; BD E3 FD ; Load $FDE3.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sbc $FD.b,S		; E3 FD ; Subtract stack-relative $FD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	ora [$BD.b]		; 07 BD ; OR accumulator with memory (long) [$BD.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lda $BD3E.w,X		; BD 3E BD ; Load $BD3E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $FD08BD.l,X		; 3F BD 08 FD ; AND accumulator with memory (long,X) $FD08BD.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora [$FD.b]		; 07 FD ; OR accumulator with memory (long) [$FD.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $FD3EFD.l,X		; 3F FD 3E FD ; AND accumulator with memory (long,X) $FD3EFD.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $0CFD.w		; 0D FD 0C ; Logical OR $0CFD.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $BDE3.w,X		; FD E3 BD ; Subtract with carry $BDE3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $BD.b,S		; E3 BD ; Subtract stack-relative $BD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $DD.b,S		; E3 DD ; Subtract stack-relative $DD.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	bit $3C5D.w,X		; 3C 5D 3C ; Test bits $3C5D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $08AA.w,X		; 1D AA 08 ; OR accumulator with memory $08AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $4D15.w		; 4D 15 4D ; Exclusive OR $4D15.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp $1DB415.l		; 5C 15 B4 1D ; Jump long to $1DB415.l [Flow: jump]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	jmp $1DB455.l		; 5C 55 B4 1D ; Jump long to $1DB455.l [Flow: jump]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6B.b,X		; 15 6B ; OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $B4.b,X		; 55 B4 ; Exclusive OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $4D95.w		; 4D 95 4D ; Exclusive OR $4D95.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $B4.b,X		; 95 B4 ; Store accumulator to $B4.b,X [Reads: Accumulator, X Index]
	ora $DDD9.w,X		; 1D D9 DD ; OR accumulator with memory $DDD9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $FEDD.w,Y		; D9 DD FE ; Compare accumulator $FEDD.w,Y [Reads: Y Index] [Flags: ZNC]
	sta $9DD8.w,X		; 9D D8 9D ; Store accumulator to $9DD8.w,X [Reads: Accumulator, X Index]
	cld		; D8 ; Clear decimal flag [Flags: D]
	cmp $9DFE.w,X		; DD FE 9D ; Compare accumulator $9DFE.w,X [Reads: X Index] [Flags: ZNC]
	inc $D99D.w,X		; FE 9D D9 ; Increment memory $D99D.w,X [Reads: X Index] [Flags: ZN]
	sta $1DB4.w,X		; 9D B4 1D ; Store accumulator to $1DB4.w,X [Reads: Accumulator, X Index]
	inc $D99D.w,X		; FE 9D D9 ; Increment memory $D99D.w,X [Reads: X Index] [Flags: ZN]
	sta $155D.w,X		; 9D 5D 15 ; Store accumulator to $155D.w,X [Reads: Accumulator, X Index]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $B415.w,X		; 5D 15 B4 ; Exclusive OR accumulator with memory $B415.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $B455.w,X		; 5D 55 B4 ; Exclusive OR accumulator with memory $B455.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $555D.w,X		; 1D 5D 55 ; OR accumulator with memory $555D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $9DFE.w,X		; 5D FE 9D ; Exclusive OR accumulator with memory $9DFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	cmp $9DFE.w,X		; DD FE 9D ; Compare accumulator $9DFE.w,X [Reads: X Index] [Flags: ZNC]
	cmp $B49D.w,Y		; D9 9D B4 ; Compare accumulator $B49D.w,Y [Reads: Y Index] [Flags: ZNC]
	cmp $9DFE.w,X		; DD FE 9D ; Compare accumulator $9DFE.w,X [Reads: X Index] [Flags: ZNC]
	cmp $FE9D.w,Y		; D9 9D FE ; Compare accumulator $FE9D.w,Y [Reads: Y Index] [Flags: ZNC]
	sta $9DFE.w,X		; 9D FE 9D ; Store accumulator to $9DFE.w,X [Reads: Accumulator, X Index]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ora $5DD8.w,X		; 1D D8 5D ; OR accumulator with memory $5DD8.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	inc $D99D.w,X		; FE 9D D9 ; Increment memory $D99D.w,X [Reads: X Index] [Flags: ZN]
	ora $1DD9.w,X		; 1D D9 1D ; OR accumulator with memory $1DD9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	eor $3DE3.w,X		; 5D E3 3D ; Exclusive OR accumulator with memory $3DE3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	cmp $3DE3.w,X		; DD E3 3D ; Compare accumulator $3DE3.w,X [Reads: X Index] [Flags: ZNC]
	sbc $3D.b,S		; E3 3D ; Subtract stack-relative $3D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $3D.b,S		; E3 3D ; Subtract stack-relative $3D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	ora $0C7D.w		; 0D 7D 0C ; Logical OR $0C7D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	adc $3D2F.w,X		; 7D 2F 3D ; Add $3D2F.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ora $373D.w,Y		; 19 3D 37 ; OR accumulator with memory $373D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $3D18.w,X		; 3D 18 3D ; AND accumulator with memory $3D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $7D.b		; 26 7D ; Rotate left $7D.b [Reads: Direct Page] [Flags: ZNC]
	and #$7D.b		; 29 7D ; Logical AND #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	and $3D18.w,X		; 3D 18 3D ; AND accumulator with memory $3D18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc $FD28.w,X		; FD 28 FD ; Subtract with carry $FD28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc $FD28.w,X		; FD 28 FD ; Subtract with carry $FD28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	and $3D15.w,X		; 3D 15 3D ; AND accumulator with memory $3D15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $3D.b,X		; 15 3D ; OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $3D.b,X		; 16 3D ; Arithmetic shift left $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	dec $1D.b,X		; D6 1D ; Decrement memory $1D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
.INDEX 8
	sep #$1D		; E2 1D
	cmp $9DFE5D.l		; CF 5D FE 9D ; Compare accumulator (long) $9DFE5D.l [Reads: Accumulator] [Flags: ZNC]
	sbc ($1D.b,X)		; E1 1D ; Subtract with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	inc $CF9D.w,X		; FE 9D CF ; Increment memory $CF9D.w,X [Reads: X Index] [Flags: ZN]
	ora $08AA.w,X		; 1D AA 08 ; OR accumulator with memory $08AA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $3CDD.w,X		; 3C DD 3C ; Test bits $3CDD.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	sta $7DE3.w,X		; 9D E3 7D ; Store accumulator to $7DE3.w,X [Reads: Accumulator, X Index]
	sbc $7D.b,S		; E3 7D ; Subtract stack-relative $7D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	tsb $0D3D.w		; 0C 3D 0D ; Test and set bits $0D3D.w [Reads: Accumulator] [Flags: Z]
	and $3D29.w,X		; 3D 29 3D ; AND accumulator with memory $3D29.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $3D.b		; 26 3D ; Rotate left $3D.b [Reads: Direct Page] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $7D18.w,X		; 7D 18 7D ; Add $7D18.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	and [$3D.b],Y		; 37 3D ; AND accumulator with memory (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	lda $BD37.w,X		; BD 37 BD ; Load $BD37.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$FD.b],Y		; 37 FD ; AND accumulator with memory (long indexed) [$FD.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $5D.b,S		; E3 5D ; Subtract stack-relative $5D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	sbc $5D.b,S		; E3 5D ; Subtract stack-relative $5D.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC] [SNES: Stack-relative addressing]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	eor $BD18.w,X		; 5D 18 BD ; Exclusive OR accumulator with memory $BD18.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $7D.b		; 26 7D ; Rotate left $7D.b [Reads: Direct Page] [Flags: ZNC]
	rol $BD.b		; 26 BD ; Rotate left $BD.b [Reads: Direct Page] [Flags: ZNC]
	rol $FD.b		; 26 FD ; Rotate left $FD.b [Reads: Direct Page] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc $7D28.w,X		; FD 28 7D ; Subtract with carry $7D28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	sbc $FD28.w,X		; FD 28 FD ; Subtract with carry $FD28.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ora $5DCF.w,X		; 1D CF 5D ; OR accumulator with memory $5DCF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	sta $1DD7.w,X		; 9D D7 1D ; Store accumulator to $1DD7.w,X [Reads: Accumulator, X Index]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	lda $D71C.w		; AD 1C D7 ; Load $D71C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	ora $1DD2.w,X		; 1D D2 1D ; OR accumulator with memory $1DD2.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp ($1D.b,S),Y		; D3 1D ; Compare accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp ($1D.b,S),Y		; D3 1D ; Compare accumulator (stack relative indirect indexed) ($1D.b,S),Y [Reads: Accumulator, Stack Pointer, Y Index] [Flags: ZNC]
	cmp $D91D.w,Y		; D9 1D D9 ; Compare accumulator $D91D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $1CAD.w,X		; 1D AD 1C ; OR accumulator with memory $1CAD.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lda $AD1C.w		; AD 1C AD ; Load $AD1C.w into accumulator [Writes: Accumulator] [Flags: ZN]
	trb $1CAD.w		; 1C AD 1C ; Test and reset bits $1CAD.w [Reads: Accumulator] [Flags: Z]
	eor $AD55.w,X		; 5D 55 AD ; Exclusive OR accumulator with memory $AD55.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	trb $555D.w		; 1C 5D 55 ; Test and reset bits $555D.w [Reads: Accumulator] [Flags: Z]
	tsb $0DBD.w		; 0C BD 0D ; Test and set bits $0DBD.w [Reads: Accumulator] [Flags: Z]
	lda $1988.w,X		; BD 88 19 ; Load $1988.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1998.w,Y		; 19 98 19 ; OR accumulator with memory $1998.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $08AA.w,Y		; 19 AA 08 ; OR accumulator with memory $08AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ora $1988.w,Y		; 19 88 19 ; OR accumulator with memory $1988.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $199A.w,Y		; 19 9A 19 ; OR accumulator with memory $199A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $154D55.l		; 5C 55 4D 15 ; Jump long to $154D55.l [Flow: jump]
	cmp $B49D.w,Y		; D9 9D B4 ; Compare accumulator $B49D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora $3DE3.w,X		; 1D E3 3D ; OR accumulator with memory $3DE3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $3DE3.w,X		; 1D E3 3D ; OR accumulator with memory $3DE3.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	sta $1DE1.w,X		; 9D E1 1D ; Store accumulator to $1DE1.w,X [Reads: Accumulator, X Index]
	sbc ($5D.b,X)		; E1 5D ; Subtract with carry ($5D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $5DE21D.l		; CF 1D E2 5D ; Compare accumulator (long) $5DE21D.l [Reads: Accumulator] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	ora $29.b,X		; 15 29 ; OR accumulator with memory $29.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $38.b,X		; 15 38 ; OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $39.b,X		; 15 39 ; OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2C.b,X		; 15 2C ; OR accumulator with memory $2C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2D.b,X		; 15 2D ; OR accumulator with memory $2D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3C.b,X		; 15 3C ; OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3D.b,X		; 15 3D ; OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2D.b,X		; 15 2D ; OR accumulator with memory $2D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2C.b,X		; 55 2C ; Exclusive OR accumulator with memory $2C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3D.b,X		; 55 3D ; Exclusive OR accumulator with memory $3D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3C.b,X		; 55 3C ; Exclusive OR accumulator with memory $3C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $29.b,X		; 55 29 ; Exclusive OR accumulator with memory $29.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $28.b,X		; 55 28 ; Exclusive OR accumulator with memory $28.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $39.b,X		; 55 39 ; Exclusive OR accumulator with memory $39.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $38.b,X		; 55 38 ; Exclusive OR accumulator with memory $38.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4B.b,X		; 15 4B ; OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5A.b,X		; 15 5A ; OR accumulator with memory $5A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4C.b,X		; 15 4C ; OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5C.b,X		; 15 5C ; OR accumulator with memory $5C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b,X		; 15 5D ; OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4C.b,X		; 55 4C ; Exclusive OR accumulator with memory $4C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5C.b,X		; 55 5C ; Exclusive OR accumulator with memory $5C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4B.b,X		; 55 4B ; Exclusive OR accumulator with memory $4B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4A.b,X		; 55 4A ; Exclusive OR accumulator with memory $4A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5B.b,X		; 55 5B ; Exclusive OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5A.b,X		; 55 5A ; Exclusive OR accumulator with memory $5A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6A.b,X		; 55 6A ; Exclusive OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7A.b,X		; 15 7A ; OR accumulator with memory $7A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7C.b,X		; 15 7C ; OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7D.b,X		; 15 7D ; OR accumulator with memory $7D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7D.b,X		; 15 7D ; OR accumulator with memory $7D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $7C.b,X		; 55 7C ; Exclusive OR accumulator with memory $7C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6A.b,X		; 55 6A ; Exclusive OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6A.b,X		; 15 6A ; OR accumulator with memory $6A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $7A.b,X		; 55 7A ; Exclusive OR accumulator with memory $7A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $69.b,X		; 55 69 ; Exclusive OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3E.b,X		; 15 3E ; OR accumulator with memory $3E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3F.b,X		; 15 3F ; OR accumulator with memory $3F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $68.b,X		; 15 68 ; OR accumulator with memory $68.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6D.b,X		; 15 6D ; OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $79.b,X		; 15 79 ; OR accumulator with memory $79.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $19.b,X		; 15 19 ; OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $79.b,X		; 15 79 ; OR accumulator with memory $79.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7F.b,X		; 15 7F ; OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $6D.b,X		; 55 6D ; Exclusive OR accumulator with memory $6D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $69.b,X		; 55 69 ; Exclusive OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $68.b,X		; 15 68 ; OR accumulator with memory $68.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $7F.b,X		; 55 7F ; Exclusive OR accumulator with memory $7F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $69.b,X		; 55 69 ; Exclusive OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $09.b,X		; 15 09 ; OR accumulator with memory $09.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $79.b,X		; 55 79 ; Exclusive OR accumulator with memory $79.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $69.b,X		; 15 69 ; OR accumulator with memory $69.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $68.b,X		; 15 68 ; OR accumulator with memory $68.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $79.b,X		; 55 79 ; Exclusive OR accumulator with memory $79.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $48.b,X		; 15 48 ; OR accumulator with memory $48.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $49.b,X		; 15 49 ; OR accumulator with memory $49.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $58.b,X		; 15 58 ; OR accumulator with memory $58.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $59.b,X		; 15 59 ; OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6B.b,X		; 15 6B ; OR accumulator with memory $6B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6C.b,X		; 15 6C ; OR accumulator with memory $6C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2E.b,X		; 15 2E ; OR accumulator with memory $2E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2F.b,X		; 15 2F ; OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0D.b,X		; 15 0D ; OR accumulator with memory $0D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $6F.b,X		; 15 6F ; OR accumulator with memory $6F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($6F.b),Y		; 11 6F ; OR accumulator with memory ($6F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6F.b),Y		; 11 6F ; OR accumulator with memory ($6F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6F.b),Y		; 11 6F ; OR accumulator with memory ($6F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($6F.b),Y		; 11 6F ; OR accumulator with memory ($6F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($D9.b),Y		; 11 D9 ; OR accumulator with memory ($D9.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1DD9.w,X		; 1D D9 1D ; OR accumulator with memory $1DD9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1DD811.l,X		; 7F 11 D8 1D ; Add long $1DD811.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $117F.w,X		; 5D 7F 11 ; Exclusive OR accumulator with memory $117F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $5DD911.l,X		; 7F 11 D9 5D ; Add long $5DD911.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $117F11.l		; 6F 11 7F 11 ; Add with carry (long) $117F11.l [Writes: Accumulator] [Flags: ZVNC]
	cmp $6F5D.w,Y		; D9 5D 6F ; Compare accumulator $6F5D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora ($D9.b),Y		; 11 D9 ; OR accumulator with memory ($D9.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $116F.w,X		; 1D 6F 11 ; OR accumulator with memory $116F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp $7F9D.w,Y		; D9 9D 7F ; Compare accumulator $7F9D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora ($D7.b),Y		; 11 D7 ; OR accumulator with memory ($D7.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1DD7.w,X		; 1D D7 1D ; OR accumulator with memory $1DD7.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $2D51.w,X		; 3D 51 2D ; AND accumulator with memory $2D51.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($DB.b),Y		; 11 DB ; OR accumulator with memory ($DB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5DDB.w,X		; 5D DB 5D ; Exclusive OR accumulator with memory $5DDB.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $117F11.l		; 6F 11 7F 11 ; Add with carry (long) $117F11.l [Writes: Accumulator] [Flags: ZVNC]
	adc $117F11.l,X		; 7F 11 7F 11 ; Add long $117F11.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $117F11.l,X		; 7F 11 7F 11 ; Add long $117F11.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	and $D711.w,X		; 3D 11 D7 ; AND accumulator with memory $D711.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $117F.w,X		; 5D 7F 11 ; Exclusive OR accumulator with memory $117F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and $D751.w,X		; 3D 51 D7 ; AND accumulator with memory $D751.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $1DD8.w,X		; 5D D8 1D ; Exclusive OR accumulator with memory $1DD8.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1DD6.w,X		; 5D D6 1D ; Exclusive OR accumulator with memory $1DD6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dec $5D.b,X		; D6 5D ; Decrement memory $5D.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	ora $112D.w,X		; 1D 2D 11 ; OR accumulator with memory $112D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1DDB11.l		; 6F 11 DB 1D ; Add with carry (long) $1DDB11.l [Writes: Accumulator] [Flags: ZVNC]
	and $DB51.w		; 2D 51 DB ; Logical AND $DB51.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $513D.w,X		; 5D 3D 51 ; Exclusive OR accumulator with memory $513D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp.w [$7F5D]		; DC 5D 7F ; Jump long indirect [$7F5D] [Flow: jump]
	ora ($7F.b),Y		; 11 7F ; OR accumulator with memory ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($D6.b),Y		; 11 D6 ; OR accumulator with memory ($D6.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5DD6.w,X		; 1D D6 5D ; OR accumulator with memory $5DD6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$5D.b],Y		; D7 5D ; Compare accumulator (long indexed) [$5D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	adc $113D11.l,X		; 7F 11 3D 11 ; Add long $113D11.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cmp [$5D.b],Y		; D7 5D ; Compare accumulator (long indexed) [$5D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	cmp $6F5D.w,Y		; D9 5D 6F ; Compare accumulator $6F5D.w,Y [Reads: Y Index] [Flags: ZNC]
	ora ($D9.b),Y		; 11 D9 ; OR accumulator with memory ($D9.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp $116F.w,X		; DD 6F 11 ; Compare accumulator $116F.w,X [Reads: X Index] [Flags: ZNC]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	ora $512D.w,X		; 1D 2D 51 ; OR accumulator with memory $512D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jmp.w [$3D1D]		; DC 1D 3D ; Jump long indirect [$3D1D] [Flow: jump]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($DD.b),Y		; 11 DD ; OR accumulator with memory ($DD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $113D.w,X		; 5D 3D 11 ; Exclusive OR accumulator with memory $113D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$5D.b],Y		; D7 5D ; Compare accumulator (long indexed) [$5D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	and $2D51.w		; 2D 51 2D ; Logical AND $2D51.w with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($3C.b),Y		; 11 3C ; OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($DD.b),Y		; 11 DD ; OR accumulator with memory ($DD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $112D.w,X		; 1D 2D 11 ; OR accumulator with memory $112D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp [$1D.b],Y		; D7 1D ; Compare accumulator (long indexed) [$1D.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	and $DA11.w,X		; 3D 11 DA ; AND accumulator with memory $DA11.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5DDB.w,X		; 1D DB 5D ; OR accumulator with memory $5DDB.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $116F11.l		; 6F 11 6F 11 ; Add with carry (long) $116F11.l [Writes: Accumulator] [Flags: ZVNC]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ora $5DDA.w,X		; 1D DA 5D ; OR accumulator with memory $5DDA.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $116F11.l		; 6F 11 6F 11 ; Add with carry (long) $116F11.l [Writes: Accumulator] [Flags: ZVNC]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	ora $512D.w,X		; 1D 2D 51 ; OR accumulator with memory $512D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1DDB11.l		; 6F 11 DB 1D ; Add with carry (long) $1DDB11.l [Writes: Accumulator] [Flags: ZVNC]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2F.b),Y		; 11 2F ; OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b),Y		; 11 2D ; OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($3C.b),Y		; 51 3C ; Exclusive OR accumulator with memory ($3C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($DB.b),Y		; 51 DB ; Exclusive OR accumulator with memory ($DB.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor $5DDB.w,X		; 5D DB 5D ; Exclusive OR accumulator with memory $5DDB.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $153711.l		; 6F 11 37 15 ; Add with carry (long) $153711.l [Writes: Accumulator] [Flags: ZVNC]
	and [$15.b],Y		; 37 15 ; AND accumulator with memory (long indexed) [$15.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$15.b],Y		; 37 15 ; AND accumulator with memory (long indexed) [$15.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$15.b],Y		; 37 15 ; AND accumulator with memory (long indexed) [$15.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $4D0C.w		; 4C 0C 4D ; Jump to $4D0C.w [Flow: jump]
	tsb $0C4C.w		; 0C 4C 0C ; Test and set bits $0C4C.w [Reads: Accumulator] [Flags: Z]
	eor $4D0C.w		; 4D 0C 4D ; Exclusive OR $4D0C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp $4C4C.w		; 4C 4C 4C ; Jump to $4C4C.w [Flow: jump]
	eor $4C4C.w		; 4D 4C 4C ; Exclusive OR $4C4C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp $0C4F.w		; 4C 4F 0C ; Jump to $0C4F.w [Flow: jump]
	eor $0C4F4C.l		; 4F 4C 4F 0C ; Exclusive OR accumulator with memory (long) $0C4F4C.l [Writes: Accumulator] [Flags: ZN]
	eor $0C4E4C.l		; 4F 4C 4E 0C ; Exclusive OR accumulator with memory (long) $0C4E4C.l [Writes: Accumulator] [Flags: ZN]
	lsr $4E4C.w		; 4E 4C 4E ; Logical shift right $4E4C.w [Flags: ZNC]
	tsb $4C4E.w		; 0C 4E 4C ; Test and set bits $4C4E.w [Reads: Accumulator] [Flags: Z]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $7B.b		; 14 7B ; Test and reset bits $7B.b [Reads: Accumulator] [Flags: Z]
	trb $7B.b		; 14 7B ; Test and reset bits $7B.b [Reads: Accumulator] [Flags: Z]
	trb $7B.b		; 14 7B ; Test and reset bits $7B.b [Reads: Accumulator] [Flags: Z]
	trb $4B.b		; 14 4B ; Test and reset bits $4B.b [Reads: Accumulator] [Flags: Z]
	mvn $54,$4A		; 54 4A 54 ; Move block negative $54,$4A [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	mvn $54,$5A		; 54 5A 54 ; Move block negative $54,$5A [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $4054.w,Y		; 59 54 40 ; Exclusive OR accumulator with memory $4054.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	eor $4054.w,Y		; 59 54 40 ; Exclusive OR accumulator with memory $4054.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	eor $4014.w,Y		; 59 14 40 ; Exclusive OR accumulator with memory $4014.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $4A14.w,Y		; 59 14 4A ; Exclusive OR accumulator with memory $4A14.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $4B.b		; 14 4B ; Test and reset bits $4B.b [Reads: Accumulator] [Flags: Z]
	trb $5A.b		; 14 5A ; Test and reset bits $5A.b [Reads: Accumulator] [Flags: Z]
	trb $5B.b		; 14 5B ; Test and reset bits $5B.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $5F.b		; 14 5F ; Test and reset bits $5F.b [Reads: Accumulator] [Flags: Z]
	tsb $4C5F.w		; 0C 5F 4C ; Test and set bits $4C5F.w [Reads: Accumulator] [Flags: Z]
	adc $4C6F0C.l		; 6F 0C 6F 4C ; Add with carry (long) $4C6F0C.l [Writes: Accumulator] [Flags: ZVNC]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $54.b		; 45 54 ; Exclusive OR $54.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jmp ($6B54.w,X)		; 7C 54 6B ; Jump indirect indexed to ($6B54.w,X) [Reads: X Index] [Flow: jump]
	mvn $54,$6A		; 54 6A 54 ; Move block negative $54,$6A [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	adc $547A54.l,X		; 7F 54 7A 54 ; Add long $547A54.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc #$54.b		; 69 54 ; Add #$54.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	adc $4054.w,Y		; 79 54 40 ; Add $4054.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$14.b		; 69 14 ; Add #$14.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	adc $6A14.w,Y		; 79 14 6A ; Add $6A14.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	trb $6B.b		; 14 6B ; Test and reset bits $6B.b [Reads: Accumulator] [Flags: Z]
	trb $7A.b		; 14 7A ; Test and reset bits $7A.b [Reads: Accumulator] [Flags: Z]
	trb $7F.b		; 14 7F ; Test and reset bits $7F.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $7C.b		; 14 7C ; Test and reset bits $7C.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $5E.b		; 14 5E ; Test and reset bits $5E.b [Reads: Accumulator] [Flags: Z]
	tsb $4C5E.w		; 0C 5E 4C ; Test and set bits $4C5E.w [Reads: Accumulator] [Flags: Z]
	ror $6E0C.w		; 6E 0C 6E ; Rotate right $6E0C.w [Flags: ZNC]
	jmp $5445.w		; 4C 45 54 ; Jump to $5445.w [Flow: jump]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	mvn $54,$45		; 54 45 54 ; Move block negative $54,$45 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	mvn $54,$4A		; 54 4A 54 ; Move block negative $54,$4A [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $5A54.w,Y		; 59 54 5A ; Exclusive OR accumulator with memory $5A54.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	mvn $54,$59		; 54 59 54 ; Move block negative $54,$59 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	eor $4A14.w,Y		; 59 14 4A ; Exclusive OR accumulator with memory $4A14.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	trb $59.b		; 14 59 ; Test and reset bits $59.b [Reads: Accumulator] [Flags: Z]
	trb $5A.b		; 14 5A ; Test and reset bits $5A.b [Reads: Accumulator] [Flags: Z]
	trb $4B.b		; 14 4B ; Test and reset bits $4B.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $5B.b		; 14 5B ; Test and reset bits $5B.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	mvn $54,$6B		; 54 6B 54 ; Move block negative $54,$6B [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	jmp ($7F54.w,X)		; 7C 54 7F ; Jump indirect indexed to ($7F54.w,X) [Reads: X Index] [Flow: jump]
	mvn $54,$6A		; 54 6A 54 ; Move block negative $54,$6A [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	adc #$54.b		; 69 54 ; Add #$54.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	mvn $54,$79		; 54 79 54 ; Move block negative $54,$79 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	adc #$14.b		; 69 14 ; Add #$14.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	trb $79.b		; 14 79 ; Test and reset bits $79.b [Reads: Accumulator] [Flags: Z]
	trb $7A.b		; 14 7A ; Test and reset bits $7A.b [Reads: Accumulator] [Flags: Z]
	trb $6B.b		; 14 6B ; Test and reset bits $6B.b [Reads: Accumulator] [Flags: Z]
	trb $45.b		; 14 45 ; Test and reset bits $45.b [Reads: Accumulator] [Flags: Z]
	trb $7F.b		; 14 7F ; Test and reset bits $7F.b [Reads: Accumulator] [Flags: Z]
	trb $7C.b		; 14 7C ; Test and reset bits $7C.b [Reads: Accumulator] [Flags: Z]
	trb $4C.b		; 14 4C ; Test and reset bits $4C.b [Reads: Accumulator] [Flags: Z]
	tsb $0C4D.w		; 0C 4D 0C ; Test and set bits $0C4D.w [Reads: Accumulator] [Flags: Z]
	jmp $0C5D0C.l		; 5C 0C 5D 0C ; Jump long to $0C5D0C.l [Flow: jump]
	eor $4C4C.w		; 4D 4C 4C ; Exclusive OR $4C4C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	jmp $4C5D.w		; 4C 5D 4C ; Jump to $4C5D.w [Flow: jump]
	jmp $547B4C.l		; 5C 4C 7B 54 ; Jump long to $547B4C.l [Flow: jump]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvn $54,$49		; 54 49 54 ; Move block negative $54,$49 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	mvn $14,$7B		; 54 7B 14 ; Move block negative $14,$7B [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	trb $48.b		; 14 48 ; Test and reset bits $48.b [Reads: Accumulator] [Flags: Z]
	trb $49.b		; 14 49 ; Test and reset bits $49.b [Reads: Accumulator] [Flags: Z]
	trb $6C.b		; 14 6C ; Test and reset bits $6C.b [Reads: Accumulator] [Flags: Z]
	tsb $0C6D.w		; 0C 6D 0C ; Test and set bits $0C6D.w [Reads: Accumulator] [Flags: Z]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	adc $6D0C.w,X		; 7D 0C 6D ; Add $6D0C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	jmp $4C6C.w		; 4C 6C 4C ; Jump to $4C6C.w [Flow: jump]
	adc $404C.w,X		; 7D 4C 40 ; Add $404C.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	sec		; 38 ; Set carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	sec		; 38 ; Set carry flag [Flags: C]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	eor ($18.b,X)		; 41 18 ; Exclusive OR accumulator with memory ($18.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $50, $38		; 50 38 ; Branch if overflow clear to $50, $38 [Flow: branch]
	eor ($38.b),Y		; 51 38 ; Exclusive OR accumulator with memory ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $42, $18		; 42 18 ; Reserved instruction
	eor $18.b,S		; 43 18 ; Exclusive OR accumulator with stack relative $18.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor ($38.b)		; 52 38 ; Exclusive OR accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($38.b,S),Y		; 53 38 ; XOR accumulator (stack relative indirect indexed) ($38.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	mvp $44,$18		; 44 18 44 ; Move block positive $44,$18 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor ($38.b)		; 52 38 ; Exclusive OR accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($38.b)		; 52 38 ; Exclusive OR accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvp $44,$18		; 44 18 44 ; Move block positive $44,$18 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor ($38.b,S),Y		; 53 38 ; XOR accumulator (stack relative indirect indexed) ($38.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($38.b)		; 52 38 ; Exclusive OR accumulator with memory (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvp $44,$18		; 44 18 44 ; Move block positive $44,$18 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	clc		; 18 ; Clear carry flag [Flags: C]
	mvn $55,$38		; 54 38 55 ; Move block negative $55,$38 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	sec		; 38 ; Set carry flag [Flags: C]
	mvp $44,$18		; 44 18 44 ; Move block positive $44,$18 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc ($38.b)		; 72 38 ; Add with carry (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($38.b)		; 72 38 ; Add with carry (indirect) ($38.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	mvp $44,$58		; 44 58 44 ; Move block positive $44,$58 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	eor $78.b,X		; 55 78 ; Exclusive OR accumulator with memory $78.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	mvn $44,$78		; 54 78 44 ; Move block negative $44,$78 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	mvp $52,$58		; 44 58 52 ; Move block positive $52,$58 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	eor ($78.b,S),Y		; 53 78 ; XOR accumulator (stack relative indirect indexed) ($78.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	mvp $44,$58		; 44 58 44 ; Move block positive $44,$58 [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	eor ($78.b)		; 52 78 ; Exclusive OR accumulator with memory (indirect) ($78.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($78.b)		; 52 78 ; Exclusive OR accumulator with memory (indirect) ($78.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $58.b,S		; 43 58 ; Exclusive OR accumulator with stack relative $58.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $42, $58		; 42 58 ; Reserved instruction
	eor ($78.b,S),Y		; 53 78 ; XOR accumulator (stack relative indirect indexed) ($78.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($78.b)		; 52 78 ; Exclusive OR accumulator with memory (indirect) ($78.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor ($58.b,X)		; 41 58 ; Exclusive OR accumulator with memory ($58.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	clc		; 18 ; Clear carry flag [Flags: C]
	eor ($78.b),Y		; 51 78 ; Exclusive OR accumulator with memory ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $78		; 50 78 ; Branch if overflow clear to $50, $78 [Flow: branch]
	lsr $30.b		; 46 30 ; Logical shift right $30.b [Reads: Direct Page] [Flags: ZNC]
	lsr $30.b		; 46 30 ; Logical shift right $30.b [Reads: Direct Page] [Flags: ZNC]
	lsr $30.b,X		; 56 30 ; Logical shift right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $30.b,X		; 56 30 ; Logical shift right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sec		; 38 ; Set carry flag [Flags: C]
	adc ($38.b,X)		; 61 38 ; Add with carry ($38.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $38		; 70 38 ; Branch if overflow set to $70, $38 [Flow: branch]
	adc ($38.b),Y		; 71 38 ; Add with carry ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $38, $60		; 62 38 60 ; Push effective relative address $62, $38, $60 [Writes: Stack Pointer]
	sec		; 38 ; Set carry flag [Flags: C]
	adc ($78.b),Y		; 71 78 ; Add with carry ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $38		; 70 38 ; Branch if overflow set to $70, $38 [Flow: branch]
	adc ($38.b,X)		; 61 38 ; Add with carry ($38.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $38, $71		; 62 38 71 ; Push effective relative address $62, $38, $71 [Writes: Stack Pointer]
	sec		; 38 ; Set carry flag [Flags: C]
	adc ($78.b),Y		; 71 78 ; Add with carry ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $38, $63		; 62 38 63 ; Push effective relative address $62, $38, $63 [Writes: Stack Pointer]
	sec		; [PATTERN: Memory clearing operation] 38 ; Set carry flag [Flags: C]
	adc ($78.b),Y		; 71 78 ; Add with carry ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($38.b,S),Y		; 73 38 ; Add with carry (stack relative indirect indexed) ($38.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	stz $38.b		; 64 38 ; Store zero to $38.b
	stz $38.b		; 64 38 ; Store zero to $38.b
	stz $38.b,X		; [PATTERN: Memory clearing operation] 74 38 ; Store zero to $38.b,X [Reads: X Index]
	stz $38.b,X		; 74 38 ; Store zero to $38.b,X [Reads: X Index]
	adc $78.b,S		; 63 78 ; Add with carry (stack relative) $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZVNC]
	.db $62, $78, $73		; 62 78 73 ; Push effective relative address $62, $78, $73 [Writes: Stack Pointer]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($38.b),Y		; 71 38 ; Add with carry ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($78.b,X)		; 61 78 ; Add with carry ($78.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($78.b),Y		; 71 78 ; Add with carry ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $62, $78, $61		; 62 78 61 ; Push effective relative address $62, $78, $61 [Writes: Stack Pointer]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($38.b),Y		; 71 38 ; Add with carry ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($78.b),Y		; 71 78 ; Add with carry ($78.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sei		; 78 ; Set interrupt disable flag [Flags: I]
	.db $62, $78, $70		; 62 78 70 ; Push effective relative address $62, $78, $70 [Writes: Stack Pointer]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($38.b),Y		; 71 38 ; Add with carry ($38.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	lsr $30.b,X		; 56 30 ; Logical shift right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $30.b,X		; 56 30 ; Logical shift right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $30.b,X		; 56 30 ; Logical shift right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $30.b,X		; 56 30 ; Logical shift right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $30.b		; 65 30 ; Add $30.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $30.b		; 66 30 ; Rotate right $30.b [Reads: Direct Page] [Flags: ZNC]
	adc $30.b,X		; 75 30 ; Add $30.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $30.b,X		; 76 30 ; Rotate right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $70.b		; 66 70 ; Rotate right $70.b [Reads: Direct Page] [Flags: ZNC]
	adc $70.b		; 65 70 ; Add $70.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $70.b,X		; 76 70 ; Rotate right $70.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $70.b,X		; 75 70 ; Add $70.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $30.b		; 66 30 ; Rotate right $30.b [Reads: Direct Page] [Flags: ZNC]
	ror $70.b		; 66 70 ; Rotate right $70.b [Reads: Direct Page] [Flags: ZNC]
	ror $30.b,X		; 76 30 ; Rotate right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ror $70.b,X		; 76 70 ; Rotate right $70.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $70.b		; 65 70 ; Add $70.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $30.b		; 66 30 ; Rotate right $30.b [Reads: Direct Page] [Flags: ZNC]
	adc $70.b,X		; 75 70 ; Add $70.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ror $30.b,X		; 76 30 ; Rotate right $30.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor [$30.b]		; 47 30 ; Exclusive OR accumulator with memory (long) [$30.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	.db $30, $57		; 30 57 ; Branch if minus to $30, $57 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $70, $68		; 70 68 ; Branch if overflow set to $70, $68 [Flow: branch]
	.db $70, $47		; 70 47 ; Branch if overflow set to $70, $47 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $57		; 70 57 ; Branch if overflow set to $70, $57 [Flow: branch]
	.db $70, $66		; 70 66 ; Branch if overflow set to $70, $66 [Flow: branch]
	.db $70, $65		; 70 65 ; Branch if overflow set to $70, $65 [Flow: branch]
	.db $30, $76		; 30 76 ; Branch if minus to $30, $76 [Flow: branch]
	.db $70, $75		; 70 75 ; Branch if overflow set to $70, $75 [Flow: branch]
	.db $30, $56		; 30 56 ; Branch if minus to $30, $56 [Flow: branch]
	.db $30, $67		; 30 67 ; Branch if minus to $30, $67 [Flow: branch]
	.db $30, $56		; 30 56 ; Branch if minus to $30, $56 [Flow: branch]
	.db $30, $77		; 30 77 ; Branch if minus to $30, $77 [Flow: branch]
	.db $30, $68		; 30 68 ; Branch if minus to $30, $68 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $70, $68		; 70 68 ; Branch if overflow set to $70, $68 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $67		; 70 67 ; Branch if overflow set to $70, $67 [Flow: branch]
	.db $70, $56		; 70 56 ; Branch if overflow set to $70, $56 [Flow: branch]
	.db $30, $77		; 30 77 ; Branch if minus to $30, $77 [Flow: branch]
	.db $70, $56		; 70 56 ; Branch if overflow set to $70, $56 [Flow: branch]
	.db $30, $67		; 30 67 ; Branch if minus to $30, $67 [Flow: branch]
	.db $30, $68		; 30 68 ; Branch if minus to $30, $68 [Flow: branch]
	.db $30, $77		; 30 77 ; Branch if minus to $30, $77 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $30, $78		; 30 78 ; Branch if minus to $30, $78 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $68		; 70 68 ; Branch if overflow set to $70, $68 [Flow: branch]
	.db $70, $67		; 70 67 ; Branch if overflow set to $70, $67 [Flow: branch]
	.db $70, $78		; 70 78 ; Branch if overflow set to $70, $78 [Flow: branch]
	.db $70, $77		; 70 77 ; Branch if overflow set to $70, $77 [Flow: branch]
	.db $70, $E8		; 70 E8 ; Branch if overflow set to $70, $E8 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inc $F808.w,X		; FE 08 F8 ; Increment memory $F808.w,X [Reads: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $08E808.l,X		; FF 08 E8 08 ; Subtract with carry (long,X) $08E808.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	nop		; EA ; No operation
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sed		; F8 ; Set decimal flag [Flags: D]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $FE08.w,Y		; F9 08 FE ; Subtract with carry $FE08.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	sbc $48F808.l,X		; FF 08 F8 48 ; Subtract with carry (long,X) $48F808.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	nop		; EA ; No operation
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sed		; F8 ; Set decimal flag [Flags: D]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor $35.b		; 45 35 ; Exclusive OR $35.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $35.b		; 46 35 ; Logical shift right $35.b [Reads: Direct Page] [Flags: ZNC]
	eor $35.b,X		; 55 35 ; Exclusive OR accumulator with memory $35.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $35.b,X		; 56 35 ; Logical shift right $35.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $75.b		; 46 75 ; Logical shift right $75.b [Reads: Direct Page] [Flags: ZNC]
	eor $75.b		; 45 75 ; Exclusive OR $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $75.b,X		; 56 75 ; Logical shift right $75.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $75.b,X		; 55 75 ; Exclusive OR accumulator with memory $75.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora ($4C.b),Y		; 11 4C ; OR accumulator with memory ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5B.b),Y		; 11 5B ; OR accumulator with memory ($5B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($5C.b),Y		; 11 5C ; OR accumulator with memory ($5C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($4C.b),Y		; 11 4C ; OR accumulator with memory ($4C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($4B.b),Y		; 51 4B ; Exclusive OR accumulator with memory ($4B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($5C.b),Y		; 51 5C ; Exclusive OR accumulator with memory ($5C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($5B.b),Y		; 51 5B ; Exclusive OR accumulator with memory ($5B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($45.b),Y		; 51 45 ; Exclusive OR accumulator with memory ($45.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $46.b,X		; 35 46 ; Logical AND $46.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $55.b,X		; 35 55 ; Logical AND $55.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $56.b,X		; 35 56 ; Logical AND $56.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $46.b,X		; 35 46 ; Logical AND $46.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $45.b,X		; 75 45 ; Add $45.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $56.b,X		; 75 56 ; Add $56.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $55.b,X		; 75 55 ; Add $55.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $4D.b,X		; 75 4D ; Add $4D.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($FE.b),Y		; 11 FE ; OR accumulator with memory ($FE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $5D		; 10 5D ; Branch if plus to $10, $5D [Flow: branch]
	ora ($FF.b),Y		; 11 FF ; OR accumulator with memory ($FF.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $FE		; 10 FE ; Branch if plus to $10, $FE [Flow: branch]
	.db $10, $4D		; 10 4D ; Branch if plus to $10, $4D [Flow: branch]
	eor ($FF.b),Y		; 51 FF ; Exclusive OR accumulator with memory ($FF.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $5D		; 10 5D ; Branch if plus to $10, $5D [Flow: branch]
	eor ($45.b),Y		; 51 45 ; Exclusive OR accumulator with memory ($45.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $46.b,X		; 35 46 ; Logical AND $46.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $55.b,X		; 35 55 ; Logical AND $55.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $56.b,X		; 35 56 ; Logical AND $56.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $46.b,X		; 35 46 ; Logical AND $46.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $45.b,X		; 75 45 ; Add $45.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $56.b,X		; 75 56 ; Add $56.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $55.b,X		; 75 55 ; Add $55.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc $4A.b,X		; 75 4A ; Add $4A.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ora ($FE.b),Y		; 11 FE ; OR accumulator with memory ($FE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $5A		; 10 5A ; Branch if plus to $10, $5A [Flow: branch]
	ora ($FF.b),Y		; 11 FF ; OR accumulator with memory ($FF.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $FE		; 10 FE ; Branch if plus to $10, $FE [Flow: branch]
	.db $10, $4A		; 10 4A ; Branch if plus to $10, $4A [Flow: branch]
	eor ($FF.b),Y		; 51 FF ; Exclusive OR accumulator with memory ($FF.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $5A		; 10 5A ; Branch if plus to $10, $5A [Flow: branch]
	eor ($4E.b),Y		; 51 4E ; Exclusive OR accumulator with memory ($4E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $1CFE.w,X		; 1D FE 1C ; OR accumulator with memory $1CFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $7E1D.w,X		; 5E 1D 7E ; Logical shift right $7E1D.w,X [Reads: X Index] [Flags: ZNC]
	ora $5CFE.w,X		; 1D FE 5C ; OR accumulator with memory $5CFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $7E5D.w		; 4E 5D 7E ; Logical shift right $7E5D.w [Flags: ZNC]
	eor $5D5E.w,X		; 5D 5E 5D ; Exclusive OR accumulator with memory $5D5E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $3D.b,X		; 56 3D ; Logical shift right $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $3D.b,X		; 56 3D ; Logical shift right $3D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $FE1D.w		; 4D 1D FE ; Exclusive OR $FE1D.w with accumulator [Writes: Accumulator] [Flags: ZN]
	trb $7D56.w		; 1C 56 7D ; Test and reset bits $7D56.w [Reads: Accumulator] [Flags: Z]
	lsr $7D.b,X		; 56 7D ; Logical shift right $7D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	inc $4D5C.w,X		; FE 5C 4D ; Increment memory $4D5C.w,X [Reads: X Index] [Flags: ZN]
	eor $1D5D.w,X		; 5D 5D 1D ; Exclusive OR accumulator with memory $1D5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $6D1C.w,X		; FE 1C 6D ; Increment memory $6D1C.w,X [Reads: X Index] [Flags: ZN]
	ora $1CFF.w,X		; 1D FF 1C ; OR accumulator with memory $1CFF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $5D5C.w,X		; FE 5C 5D ; Increment memory $5D5C.w,X [Reads: X Index] [Flags: ZN]
	eor $5CFF.w,X		; 5D FF 5C ; Exclusive OR accumulator with memory $5CFF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $565D.w		; 6D 5D 56 ; Add $565D.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	and $3D56.w,X		; 3D 56 3D ; AND accumulator with memory $3D56.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $1CFE.w,X		; 1D FE 1C ; OR accumulator with memory $1CFE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	lsr $7D.b,X		; 56 7D ; Logical shift right $7D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	lsr $7D.b,X		; 56 7D ; Logical shift right $7D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	inc $4A5C.w,X		; FE 5C 4A ; Increment memory $4A5C.w,X [Reads: X Index] [Flags: ZN]
	eor $1D5A.w,X		; 5D 5A 1D ; Exclusive OR accumulator with memory $1D5A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $6A1C.w,X		; FE 1C 6A ; Increment memory $6A1C.w,X [Reads: X Index] [Flags: ZN]
	ora $1CFF.w,X		; 1D FF 1C ; OR accumulator with memory $1CFF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $5A5C.w,X		; FE 5C 5A ; Increment memory $5A5C.w,X [Reads: X Index] [Flags: ZN]
	eor $5CFF.w,X		; 5D FF 5C ; Exclusive OR accumulator with memory $5CFF.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $0D1E.w,X		; 5D 1E 0D ; Exclusive OR accumulator with memory $0D1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $1E09.w		; 0C 09 1E ; Test and set bits $1E09.w [Reads: Accumulator] [Flags: Z]
	eor $090C.w		; 4D 0C 09 ; Exclusive OR $090C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $0C09.w		; 0C 09 0C ; Test and set bits $0C09.w [Reads: Accumulator] [Flags: Z]
	ora #$0C.b		; 09 0C ; Logical OR #$0C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$0C.b		; 09 0C ; Logical OR #$0C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$0C.b		; 09 0C ; Logical OR #$0C.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$1E.b		; 09 1E ; Logical OR #$1E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $090C.w		; 4D 0C 09 ; Exclusive OR $090C.w with accumulator [Writes: Accumulator] [Flags: ZN]
	asl $7D0D.w,X		; 1E 0D 7D ; Arithmetic shift left $7D0D.w,X [Reads: X Index] [Flags: ZNC]
	and $7D7D.w,X		; 3D 7D 7D ; AND accumulator with memory $7D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl $0C4D.w,X		; 1E 4D 0C ; Arithmetic shift left $0C4D.w,X [Reads: X Index] [Flags: ZNC]
	ora #$7D.b		; 09 7D ; Logical OR #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and $7D7D.w,X		; 3D 7D 7D ; AND accumulator with memory $7D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $0C09.w		; 0C 09 0C ; Test and set bits $0C09.w [Reads: Accumulator] [Flags: Z]
	ora #$7D.b		; 09 7D ; Logical OR #$7D.b with accumulator [Writes: Accumulator] [Flags: ZN]
	and $7D7D.w,X		; 3D 7D 7D ; AND accumulator with memory $7D7D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsb $1E09.w		; 0C 09 1E ; Test and set bits $1E09.w [Reads: Accumulator] [Flags: Z]
	ora $09FF.w		; 0D FF 09 ; Logical OR $09FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $09FF09.l,X		; FF 09 FF 09 ; Subtract with carry (long,X) $09FF09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $19AC09.l,X		; FF 09 AC 19 ; Subtract with carry (long,X) $19AC09.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	ldy $AC59.w		; AC 59 AC ; Load $AC59.w into Y register [Writes: Y Index] [Flags: ZN]
	sta $D9AC.w,Y		; 99 AC D9 ; Store accumulator to $D9AC.w,Y [Reads: Accumulator, Y Index]
	lda $49AF09.l		; AF 09 AF 49 ; Load long $49AF09.l into accumulator [Writes: Accumulator] [Flags: ZN]
	lda $49BF09.l,X		; BF 09 BF 49 ; Load long $49BF09.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $598F19.l		; 8F 19 8F 59 ; Store accumulator (long) $598F19.l [Reads: Accumulator]
	sta $599F19.l,X		; 9F 19 9F 59 ; Store accumulator (long,X) $599F19.l,X [Reads: Accumulator, X Index]
	sta $4D8F0D.l		; 8F 0D 8F 4D ; Store accumulator (long) $4D8F0D.l [Reads: Accumulator]
	sta $4D9F0D.l,X		; 9F 0D 9F 4D ; Store accumulator (long,X) $4D9F0D.l,X [Reads: Accumulator, X Index]
	stx $8E09.w		; 8E 09 8E ; Store X register to $8E09.w [Reads: X Index]
	eor #$8E.b		; 49 8E ; Exclusive OR #$8E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	bit #$8E.b		; 89 8E ; Test bits #$8E.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp #$8E.b		; C9 8E ; Compare #$8E.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora #$8E.b		; 09 8E ; Logical OR #$8E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$8E.b		; 49 8E ; Exclusive OR #$8E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	bit #$8E.b		; 89 8E ; Test bits #$8E.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp #$AB.b		; C9 AB ; Compare #$AB.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	ora $59AB.w,Y		; 19 AB 59 ; OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: ZN]
	ora $59BB.w,Y		; 19 BB 59 ; OR accumulator with memory $59BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $10.b		; 24 10 ; Test bits $10.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	bit $50.b		; 24 50 ; Test bits $50.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZVN]
	and $10.b,X		; 35 10 ; Logical AND $10.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $50.b,X		; 35 50 ; Logical AND $50.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	stx $BA09.w		; 8E 09 BA ; Store X register to $BA09.w [Reads: X Index]
	ora #$AA.b		; 09 AA ; Logical OR #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$BA.b		; 09 BA ; Logical OR #$BA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	eor #$8E.b		; 49 8E ; Exclusive OR #$8E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor #$BA.b		; 49 BA ; Exclusive OR #$BA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	eor #$AA.b		; 49 AA ; Exclusive OR #$AA.b with accumulator [Writes: Accumulator] [Flags: ZN]
	bit #$BA.b		; 89 BA ; Test bits #$BA.b with accumulator [Reads: Accumulator] [Flags: Z]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	stx $BA89.w		; 8E 89 BA ; Store X register to $BA89.w [Reads: X Index]
	bit #$BA.b		; 89 BA ; Test bits #$BA.b with accumulator [Reads: Accumulator] [Flags: Z]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	cmp #$BA.b		; C9 BA ; Compare #$BA.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$8E.b		; C9 8E ; Compare #$8E.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	cmp #$01.b		; C9 01 ; Compare #$01.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	and $3D47.w,X		; 3D 47 3D ; AND accumulator with memory $3D47.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora ($3D.b),Y		; 11 3D ; OR accumulator with memory ($3D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$3D.b],Y		; 57 3D ; Exclusive OR accumulator with memory (long indexed) [$3D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$7D.b]		; 47 7D ; Exclusive OR accumulator with memory (long) [$7D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b,X)		; 01 7D ; Logical OR ($7D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	eor [$7D.b],Y		; 57 7D ; Exclusive OR accumulator with memory (long indexed) [$7D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($7D.b),Y		; 11 7D ; OR accumulator with memory ($7D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($1D.b,X)		; 21 1D ; Logical AND ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	cop $1D.b		; 02 1D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D020D.l		; 0F 0D 02 5D ; OR accumulator with memory (long) $5D020D.l [Writes: Accumulator] [Flags: ZN]
	and ($5D.b,X)		; 21 5D ; Logical AND ($5D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $5D374D.l		; 0F 4D 37 5D ; OR accumulator with memory (long) $5D374D.l [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $0D1F.w,X		; 1D 1F 0D ; OR accumulator with memory $0D1F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $2F1D.w		; 2E 1D 2F ; Rotate left $2F1D.w [Flags: ZNC]
	ora $4D1F.w,X		; 1D 1F 4D ; OR accumulator with memory $4D1F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $5D2F.w,X		; 5D 2F 5D ; Exclusive OR accumulator with memory $5D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $215D.w		; 2E 5D 21 ; Rotate left $215D.w [Flags: ZNC]
	and $3D02.w,X		; 3D 02 3D ; AND accumulator with memory $3D02.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and $7D020D.l,X		; 3F 0D 02 7D ; AND accumulator with memory (long,X) $7D020D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and ($7D.b,X)		; 21 7D ; Logical AND ($7D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	and $5D374D.l,X		; 3F 4D 37 5D ; AND accumulator with memory (long,X) $5D374D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	ora $0D3E.w,X		; 1D 3E 0D ; OR accumulator with memory $0D3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $2F1D.w		; 2E 1D 2F ; Rotate left $2F1D.w [Flags: ZNC]
	ora $4D3E.w,X		; 1D 3E 4D ; OR accumulator with memory $4D3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	eor $5D2F.w,X		; 5D 2F 5D ; Exclusive OR accumulator with memory $5D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $215D.w		; 2E 5D 21 ; Rotate left $215D.w [Flags: ZNC]
	ora $1D02.w,X		; 1D 02 1D ; OR accumulator with memory $1D02.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and [$1D.b],Y		; 37 1D ; AND accumulator with memory (long indexed) [$1D.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $021D.w		; EE 1D 02 ; Increment $021D.w [Flags: ZN]
	eor $5D21.w,X		; 5D 21 5D ; Exclusive OR accumulator with memory $5D21.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $371D.w		; EE 1D 37 ; Increment $371D.w [Flags: ZN]
	eor $1D38.w,X		; 5D 38 1D ; Exclusive OR accumulator with memory $1D38.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $2E1D.w		; EE 1D 2E ; Increment $2E1D.w [Flags: ZN]
	ora $1D2F.w,X		; 1D 2F 1D ; OR accumulator with memory $1D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $381D.w		; EE 1D 38 ; Increment $381D.w [Flags: ZN]
	eor $5D2F.w,X		; 5D 2F 5D ; Exclusive OR accumulator with memory $5D2F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $AA5D.w		; 2E 5D AA ; Rotate left $AA5D.w [Flags: ZNC]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $4C15.w		; 4C 15 4C ; Jump to $4C15.w [Flow: jump]
	ora $5C.b,X		; 15 5C ; OR accumulator with memory $5C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4D.b,X		; 15 4D ; OR accumulator with memory $4D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp $AA55.w		; 4C 55 AA ; Jump to $AA55.w [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp $554C55.l		; 5C 55 4C 55 ; Jump long to $554C55.l [Flow: jump]
	eor $4D15.w		; 4D 15 4D ; Exclusive OR $4D15.w with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp $88BA15.l		; 5C 15 BA 88 ; Jump long to $88BA15.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	jmp $48BA55.l		; 5C 55 BA 48 ; Jump long to $48BA55.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp ($BA55.w)		; 6C 55 BA ; Jump indirect to ($BA55.w) [Flow: jump]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	adc $6D15.w		; 6D 15 6D ; Add $6D15.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	jmp ($BA15.w)		; 6C 15 BA ; Jump indirect to ($BA15.w) [Flow: jump]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $6C.b,X		; 15 6C ; OR accumulator with memory $6C.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $BA55.w,X		; 5D 55 BA ; Exclusive OR accumulator with memory $BA55.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $5D55.w,X		; 5D 55 5D ; Exclusive OR accumulator with memory $5D55.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $BA15.w,X		; 5D 15 BA ; Exclusive OR accumulator with memory $BA15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2F.b,X		; 55 2F ; Exclusive OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2F.b,X		; 15 2F ; OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $2E.b,X		; 15 2E ; OR accumulator with memory $2E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2E.b,X		; 15 2E ; OR accumulator with memory $2E.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $B4.b,X		; 15 B4 ; OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1DB4.w,X		; 1D B4 1D ; OR accumulator with memory $1DB4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	rol $5B55.w		; 2E 55 5B ; Rotate left $5B55.w [Flags: ZNC]
	eor $B4.b,X		; 55 B4 ; Exclusive OR accumulator with memory $B4.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $552E.w,X		; 1D 2E 55 ; OR accumulator with memory $552E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $7B.b,X		; 15 7B ; OR accumulator with memory $7B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2F.b,X		; 55 2F ; Exclusive OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2F.b,X		; 15 2F ; OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	sta $BA.b,X		; 95 BA ; Store accumulator to $BA.b,X [Reads: Accumulator, X Index]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	rol $B495.w		; 2E 95 B4 ; Rotate left $B495.w [Flags: ZNC]
	ora $955B.w,X		; 1D 5B 95 ; OR accumulator with memory $955B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $2F95.w		; 2E 95 2F ; Rotate left $2F95.w [Flags: ZNC]
	sta $2F.b,X		; 95 2F ; Store accumulator to $2F.b,X [Reads: Accumulator, X Index]
	cmp $7B.b,X		; D5 7B ; Compare accumulator $7B.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $7B.b,X		; 95 7B ; Store accumulator to $7B.b,X [Reads: Accumulator, X Index]
	cmp $2E.b,X		; D5 2E ; Compare accumulator $2E.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $B4.b,X		; 95 B4 ; Store accumulator to $B4.b,X [Reads: Accumulator, X Index]
	ora $955B.w,X		; 1D 5B 95 ; OR accumulator with memory $955B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol $5D95.w		; 2E 95 5D ; Rotate left $5D95.w [Flags: ZNC]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $5B15.w,X		; 5D 15 5B ; Exclusive OR accumulator with memory $5B15.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $5B55.w,X		; 5D 55 5B ; Exclusive OR accumulator with memory $5B55.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2F.b,X		; 55 2F ; Exclusive OR accumulator with memory $2F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $2F.b,X		; 95 2F ; Store accumulator to $2F.b,X [Reads: Accumulator, X Index]
	cmp $7B.b,X		; D5 7B ; Compare accumulator $7B.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	sta $7B.b,X		; 95 7B ; Store accumulator to $7B.b,X [Reads: Accumulator, X Index]
	cmp $5D.b,X		; D5 5D ; Compare accumulator $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ora $3A.b,X		; 15 3A ; OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5D.b,X		; 15 5D ; OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3A.b,X		; 15 3A ; OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $3A.b,X		; 95 3A ; Store accumulator to $3A.b,X [Reads: Accumulator, X Index]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3A.b,X		; 55 3A ; Exclusive OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp $5D.b,X		; D5 5D ; Compare accumulator $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $5D.b,X		; 55 5D ; Exclusive OR accumulator with memory $5D.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5B.b,X		; 15 5B ; OR accumulator with memory $5B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $5D.b,X		; 95 5D ; Store accumulator to $5D.b,X [Reads: Accumulator, X Index]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	rol $2ED5.w		; 2E D5 2E ; Rotate left $2ED5.w [Flags: ZNC]
	cmp $5B.b,X		; D5 5B ; Compare accumulator $5B.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $5B.b,X		; D5 5B ; Compare accumulator $5B.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	cmp $5D.b,X		; D5 5D ; Compare accumulator $5D.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	eor $BA.b,X		; 55 BA ; Exclusive OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	eor $BA55.w,X		; 5D 55 BA ; Exclusive OR accumulator with memory $BA55.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	sta $6C.b,X		; 95 6C ; Store accumulator to $6C.b,X [Reads: Accumulator, X Index]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	cmp $BA.b,X		; D5 BA ; Compare accumulator $BA.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($6B55.w)		; 6C 55 6B ; Jump indirect to ($6B55.w) [Flow: jump]
	eor $596B.w,Y		; 59 6B 59 ; Exclusive OR accumulator with memory $596B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	jmp ($6B55.w)		; 6C 55 6B ; Jump indirect to ($6B55.w) [Flow: jump]
	eor $556B.w,Y		; 59 6B 55 ; Exclusive OR accumulator with memory $556B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	ora $156B.w,Y		; 19 6B 15 ; OR accumulator with memory $156B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($8B15.w)		; 6C 15 8B ; Jump indirect to ($8B15.w) [Flow: jump]
	eor $156B.w,Y		; 59 6B 15 ; Exclusive OR accumulator with memory $156B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $08BA15.l		; 5C 15 BA 08 ; Jump long to $08BA15.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: ZN] [SNES: Sets DP register from accumulator]
	ora $BA.b,X		; 15 BA ; OR accumulator with memory $BA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	jmp $555B55.l		; 5C 55 5B 55 ; Jump long to $555B55.l [Flow: jump]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	bit $6E1D.w,X		; 3C 1D 6E ; Test bits $6E1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,Y		; 19 3C 1D ; OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $6F1D.w,X		; 3C 1D 6F ; Test bits $6F1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,Y		; 19 3C 1D ; OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $3C1D.w,X		; 3C 1D 3C ; Test bits $3C1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	ora $1D3C.w,X		; 1D 3C 1D ; OR accumulator with memory $1D3C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D3C59.l		; 6F 59 3C 1D ; Add with carry (long) $1D3C59.l [Writes: Accumulator] [Flags: ZVNC]
	bit $6E1D.w,X		; 3C 1D 6E ; Test bits $6E1D.w,X [Reads: X Index] [Flags: ZVN] [Flow: branch]
	eor $1D3C.w,Y		; 59 3C 1D ; Exclusive OR accumulator with memory $1D3C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and [$19.b]		; 27 19 ; AND accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jmp ($7C19.w)		; 6C 19 7C ; Jump indirect to ($7C19.w) [Flow: jump]
	ora $197D.w,Y		; 19 7D 19 ; OR accumulator with memory $197D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($2759.w)		; 6C 59 27 ; Jump indirect to ($2759.w) [Flow: jump]
	eor $597D.w,Y		; 59 7D 59 ; Exclusive OR accumulator with memory $597D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($1A59.w,X)		; 7C 59 1A ; Jump indirect indexed to ($1A59.w,X) [Reads: X Index] [Flow: jump]
	ora $191B.w,Y		; 19 1B 19 ; OR accumulator with memory $191B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	eor [$19.b]		; 47 19 ; Exclusive OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $19.b,X		; 16 19 ; Arithmetic shift left $19.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	tsb $19.b		; 04 19 ; Test and set bits $19.b [Reads: Accumulator] [Flags: Z]
	tsb $19.b		; 04 19 ; Test and set bits $19.b [Reads: Accumulator] [Flags: Z]
	adc $0419.w		; 6D 19 04 ; Add $0419.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $5916.w,Y		; 59 16 59 ; Exclusive OR accumulator with memory $5916.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $0459.w		; 6D 59 04 ; Add $0459.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $591B.w,Y		; 59 1B 59 ; Exclusive OR accumulator with memory $591B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $5947.w,Y		; 59 47 59 ; Exclusive OR accumulator with memory $5947.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	bit $19.b,X		; 34 19 ; Test bits $19.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and $19.b,X		; 35 19 ; Logical AND $19.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $190B.w,Y		; 19 0B 19 ; OR accumulator with memory $190B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $59.b,X		; 35 59 ; Logical AND $59.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	eor $590A.w,Y		; 59 0A 59 ; Exclusive OR accumulator with memory $590A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $19.b,X		; 34 19 ; Test bits $19.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and $19.b,X		; 35 19 ; Logical AND $19.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $192319.l		; 22 19 23 19 ; Jump to subroutine long $192319.l [Writes: Stack Pointer] [Flow: call]
	and $59.b,X		; 35 59 ; Logical AND $59.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsl $193259.l		; 22 59 32 19 ; Jump to subroutine long $193259.l [Writes: Stack Pointer] [Flow: call]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	lsr $19.b		; 46 19 ; Logical shift right $19.b [Reads: Direct Page] [Flags: ZNC]
	eor [$19.b]		; 47 19 ; Exclusive OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $39.b,X		; 16 39 ; Arithmetic shift left $39.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	and $197A.w,Y		; 39 7A 19 ; AND accumulator with memory $197A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $7A19.w		; 6D 19 7A ; Add $7A19.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	adc $7916.w,Y		; 79 16 79 ; Add $7916.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $7A59.w		; 6D 59 7A ; Add $7A59.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	eor $5933.w,Y		; 59 33 59 ; Exclusive OR accumulator with memory $5933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor [$59.b]		; 47 59 ; Exclusive OR accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr $59.b		; 46 59 ; Logical shift right $59.b [Reads: Direct Page] [Flags: ZNC]
	and [$19.b]		; 27 19 ; AND accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jmp ($7C19.w)		; 6C 19 7C ; Jump indirect to ($7C19.w) [Flow: jump]
	ora $197D.w,Y		; 19 7D 19 ; OR accumulator with memory $197D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($2759.w)		; 6C 59 27 ; Jump indirect to ($2759.w) [Flow: jump]
	eor $597D.w,Y		; 59 7D 59 ; Exclusive OR accumulator with memory $597D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($5459.w,X)		; 7C 59 54 ; Jump indirect indexed to ($5459.w,X) [Reads: X Index] [Flow: jump]
	and $2D69.w		; 2D 69 2D ; Logical AND $2D69.w with accumulator [Writes: Accumulator] [Flags: ZN]
	stz $2D.b		; 64 2D ; Store zero to $2D.b
	ora $2D.b,S		; 03 2D ; OR accumulator with stack relative $2D.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	adc #$6D.b		; 69 6D ; Add #$6D.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	mvn $03,$6D		; 54 6D 03 ; Move block negative $03,$6D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	adc $6D64.w		; 6D 64 6D ; Add $6D64.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	stz $2D.b,X		; 74 2D ; Store zero to $2D.b,X [Reads: X Index]
	eor ($2D.b,S),Y		; 53 2D ; XOR accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($2D.b)		; 52 2D ; Exclusive OR accumulator with memory (indirect) ($2D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora ($2D.b,S),Y		; 13 2D ; OR accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b,S),Y		; 53 6D ; XOR accumulator (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $6D.b,X		; 74 6D ; Store zero to $6D.b,X [Reads: X Index]
	ora ($6D.b,S),Y		; 13 6D ; OR accumulator (stack relative indirect indexed) ($6D.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($6D.b)		; 52 6D ; Exclusive OR accumulator with memory (indirect) ($6D.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $62, $0D, $3F		; 62 0D 3F ; Push effective relative address $62, $0D, $3F [Writes: Stack Pointer]
	ora $0D30.w		; 0D 30 0D ; Logical OR $0D30.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $4D3F.w		; 0D 3F 4D ; Logical OR $4D3F.w with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $62, $4D, $1B		; 62 4D 1B ; Push effective relative address $62, $4D, $1B [Writes: Stack Pointer]
	eor $4D30.w		; 4D 30 4D ; Exclusive OR $4D30.w with accumulator [Writes: Accumulator] [Flags: ZN]
	sbc $ED0C.w		; ED 0C ED ; Subtract $ED0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	tsb $0CED.w		; 0C ED 0C ; Test and set bits $0CED.w [Reads: Accumulator] [Flags: Z]
	sbc $3B0C.w		; ED 0C 3B ; Subtract $3B0C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	bit #$3A.b		; 89 3A ; Test bits #$3A.b with accumulator [Reads: Accumulator] [Flags: Z]
	eor #$3A.b		; 49 3A ; Exclusive OR #$3A.b with accumulator [Writes: Accumulator] [Flags: ZN]
	bit #$3B.b		; 89 3B ; Test bits #$3B.b with accumulator [Reads: Accumulator] [Flags: Z]
	eor #$ED.b		; 49 ED ; Exclusive OR #$ED.b with accumulator [Writes: Accumulator] [Flags: ZN]
	tsb $08AA.w		; 0C AA 08 ; Test and set bits $08AA.w [Reads: Accumulator] [Flags: Z]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	mvp $6E,$0D		; 44 0D 6E ; Move block positive $6E,$0D [Reads: Accumulator, X Index, Y Index] [Writes: Accumulator, X Index, Y Index]
	and #$6E.b		; 29 6E ; Logical AND #$6E.b with accumulator [Writes: Accumulator] [Flags: ZN]
	adc #$48.b		; 69 48 ; Add #$48.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	ora $4D48.w		; 0D 48 4D ; Logical OR $4D48.w with accumulator [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sbc $440C.w		; ED 0C 44 ; Subtract $440C.w from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	eor $08AA.w		; 4D AA 08 ; Exclusive OR $08AA.w with accumulator [Writes: Accumulator] [Flags: ZN]
	inc $FE0C.w,X		; FE 0C FE ; Increment memory $FE0C.w,X [Reads: X Index] [Flags: ZN]
	tsb $1D0B.w		; 0C 0B 1D ; Test and set bits $1D0B.w [Reads: Accumulator] [Flags: Z]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	eor $5D61.w,X		; 5D 61 5D ; Exclusive OR accumulator with memory $5D61.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b,X)		; 61 1D ; Add with carry ($1D.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	adc ($5D.b),Y		; 71 5D ; Add with carry ($5D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	inc $FE0C.w,X		; FE 0C FE ; Increment memory $FE0C.w,X [Reads: X Index] [Flags: ZN]
	tsb $1D4F.w		; 0C 4F 1D ; Test and set bits $1D4F.w [Reads: Accumulator] [Flags: Z]
	eor $1D5F5D.l		; 4F 5D 5F 1D ; Exclusive OR accumulator with memory (long) $1D5F5D.l [Writes: Accumulator] [Flags: ZN]
	eor $5D715D.l,X		; 5F 5D 71 5D ; Exclusive OR accumulator with memory (long,X) $5D715D.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc ($1D.b),Y		; 71 1D ; Add with carry ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	inc $FE0C.w,X		; FE 0C FE ; Increment memory $FE0C.w,X [Reads: X Index] [Flags: ZN]
	tsb $1D0A.w		; 0C 0A 1D ; Test and set bits $1D0A.w [Reads: Accumulator] [Flags: Z]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	eor $1D1A.w,X		; 5D 1A 1D ; Exclusive OR accumulator with memory $1D1A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $1D1B.w,X		; 5D 1B 1D ; Exclusive OR accumulator with memory $1D1B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $1D6F.w,X		; 5D 6F 1D ; Exclusive OR accumulator with memory $1D6F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $1D7F5D.l		; 6F 5D 7F 1D ; Add with carry (long) $1D7F5D.l [Writes: Accumulator] [Flags: ZVNC]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cmp $1D1D.w,X		; DD 1D 1D ; Compare accumulator $1D1D.w,X [Reads: X Index] [Flags: ZNC]
	ora $4B5D.w,X		; 1D 5D 4B ; OR accumulator with memory $4B5D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $5D4B.w,X		; 1D 4B 5D ; OR accumulator with memory $5D4B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $5D4B.w,X		; 1D 4B 5D ; OR accumulator with memory $5D4B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $1D5B.w,X		; 1D 5B 1D ; OR accumulator with memory $1D5B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	ora $1D5B.w,X		; 1D 5B 1D ; OR accumulator with memory $1D5B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $DD6B1D.l,X		; 7F 1D 6B DD ; Add long $DD6B1D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	adc $DD7B1D.l		; 6F 1D 7B DD ; Add with carry (long) $DD7B1D.l [Writes: Accumulator] [Flags: ZVNC]
	adc $DD6B1D.l,X		; 7F 1D 6B DD ; Add long $DD6B1D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora $5D48.w,X		; 1D 48 5D ; OR accumulator with memory $5D48.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	ora $5D58.w,X		; 1D 58 5D ; OR accumulator with memory $5D58.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	sec		; 38 ; Set carry flag [Flags: C]
	ora ($39.b),Y		; 11 39 ; OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($AA.b),Y		; 11 AA ; OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $3851.w,Y		; 39 51 38 ; AND accumulator with memory $3851.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora [$11.b]		; 07 11 ; OR accumulator with memory (long) [$11.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $1790.w,X		; 1E 90 17 ; Arithmetic shift left $1790.w,X [Reads: X Index] [Flags: ZNC]
	ora ($50.b),Y		; 11 50 ; OR accumulator with memory ($50.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($51.b),Y		; 11 51 ; OR accumulator with memory ($51.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($60.b),Y		; 11 60 ; OR accumulator with memory ($60.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($EE.b),Y		; 11 EE ; OR accumulator with memory ($EE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$51.b		; 09 51 ; Logical OR #$51.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($50.b),Y		; 51 50 ; Exclusive OR accumulator with memory ($50.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($EE.b),Y		; 51 EE ; Exclusive OR accumulator with memory ($EE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$60.b		; 09 60 ; Logical OR #$60.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($07.b),Y		; 51 07 ; Exclusive OR accumulator with memory ($07.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($AA.b),Y		; 51 AA ; Exclusive OR accumulator with memory ($AA.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	ora [$51.b],Y		; 17 51 ; OR accumulator with memory (long indexed) [$51.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $1DD0.w,X		; 1E D0 1D ; Arithmetic shift left $1DD0.w,X [Reads: X Index] [Flags: ZNC]
	.db $10, $27		; 10 27 ; Branch if plus to $10, $27 [Flow: branch]
	ora ($1E.b),Y		; 11 1E ; OR accumulator with memory ($1E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $18		; 10 18 ; Branch if plus to $10, $18 [Flow: branch]
	.db $10, $70		; 10 70 ; Branch if plus to $10, $70 [Flow: branch]
	ora ($EE.b),Y		; 11 EE ; OR accumulator with memory ($EE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$61.b		; 09 61 ; Logical OR #$61.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora ($0B.b),Y		; 11 0B ; OR accumulator with memory ($0B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($EE.b),Y		; 11 EE ; OR accumulator with memory ($EE.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$70.b		; 09 70 ; Logical OR #$70.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor ($0B.b),Y		; 51 0B ; Exclusive OR accumulator with memory ($0B.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($61.b),Y		; 51 61 ; Exclusive OR accumulator with memory ($61.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($27.b),Y		; 51 27 ; Exclusive OR accumulator with memory ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($1D.b),Y		; 51 1D ; Exclusive OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $18		; 50 18 ; Branch if overflow clear to $50, $18 [Flow: branch]
	.db $50, $1E		; 50 1E ; Branch if overflow clear to $50, $1E [Flow: branch]
	.db $50, $29		; 50 29 ; Branch if overflow clear to $50, $29 [Flow: branch]
	.db $10, $1B		; 10 1B ; Branch if plus to $10, $1B [Flow: branch]
	ora ($0D.b),Y		; 11 0D ; OR accumulator with memory ($0D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $10, $2D		; 10 2D ; Branch if plus to $10, $2D [Flow: branch]
	.db $10, $1B		; 10 1B ; Branch if plus to $10, $1B [Flow: branch]
	eor ($29.b),Y		; 51 29 ; Exclusive OR accumulator with memory ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $2D		; 50 2D ; Branch if overflow clear to $50, $2D [Flow: branch]
	.db $50, $0D		; 50 0D ; Branch if overflow clear to $50, $0D [Flow: branch]
	.db $50, $0F		; 50 0F ; Branch if overflow clear to $50, $0F [Flow: branch]
	ora $1D0F.w,X		; 1D 0F 1D ; OR accumulator with memory $1D0F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $5D2A.w,X		; 1D 2A 5D ; OR accumulator with memory $5D2A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $1D2A.w,X		; 1D 2A 1D ; OR accumulator with memory $1D2A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: ZN] [SNES: Stack operation: pulls DP register]
	ora $1D0F.w,X		; 1D 0F 1D ; OR accumulator with memory $1D0F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $2A09.w		; EE 09 2A ; Increment $2A09.w [Flags: ZN]
	eor $1D3B.w,X		; 5D 3B 1D ; Exclusive OR accumulator with memory $1D3B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $3A09.w		; EE 09 3A ; Increment $3A09.w [Flags: ZN]
	ora $09EE.w,X		; 1D EE 09 ; OR accumulator with memory $09EE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc $EE09.w		; EE 09 EE ; Increment $EE09.w [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$EE.b		; 09 EE ; Logical OR #$EE.b with accumulator [Writes: Accumulator] [Flags: ZN]
	ora #$3B.b		; 09 3B ; Logical OR #$3B.b with accumulator [Writes: Accumulator] [Flags: ZN]
	eor $09EE.w,X		; 5D EE 09 ; Exclusive OR accumulator with memory $09EE.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	dec A		; 3A ; Decrement accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	eor $1D0F.w,X		; 5D 0F 1D ; Exclusive OR accumulator with memory $1D0F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	ora $1D0F.w,X		; 1D 0F 1D ; OR accumulator with memory $1D0F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $09EE1D.l		; 0F 1D EE 09 ; OR accumulator with memory (long) $09EE1D.l [Writes: Accumulator] [Flags: ZN]
	inc $1C09.w		; EE 09 1C ; Increment $1C09.w [Flags: ZN]
	ora $1D1C.w,X		; 1D 1C 1D ; OR accumulator with memory $1D1C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	tsa		; 3B ; Transfer stack pointer to C  [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	eor $1D0F.w,X		; 5D 0F 1D ; Exclusive OR accumulator with memory $1D0F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	ora $1D0F1D.l		; 0F 1D 0F 1D ; OR accumulator with memory (long) $1D0F1D.l [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1908.w,Y		; 19 08 19 ; OR accumulator with memory $1908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1940.w,Y		; 19 40 19 ; OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b,X)		; 41 19 ; Exclusive OR accumulator with memory ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5DB4.w,Y		; 59 B4 5D ; Exclusive OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5DB4.w,Y		; 59 B4 5D ; Exclusive OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$19.b]		; 47 19 ; Exclusive OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cli		; 58 ; Clear interrupt disable flag [Flags: I]
	ora $9947.w,Y		; 19 47 99 ; OR accumulator with memory $9947.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	ora $1950.w,Y		; 19 50 19 ; OR accumulator with memory $1950.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1921.w,Y		; 19 21 19 ; OR accumulator with memory $1921.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5958.w,Y		; 59 58 59 ; Exclusive OR accumulator with memory $5958.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor [$59.b]		; 47 59 ; Exclusive OR accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Accumulator, Stack Pointer] [Flags: ZN]
	eor $D947.w,Y		; 59 47 D9 ; Exclusive OR accumulator with memory $D947.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; [PATTERN: Memory clearing operation] B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $19.b,X		; 74 19 ; Store zero to $19.b,X [Reads: X Index]
	stz $19.b,X		; 74 19 ; Store zero to $19.b,X [Reads: X Index]
	eor ($59.b),Y		; [PATTERN: Memory clearing operation] 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b),Y		; 71 59 ; Add with carry ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	stz $59.b,X		; 74 59 ; Store zero to $59.b,X [Reads: X Index]
	stz $59.b,X		; 74 59 ; Store zero to $59.b,X [Reads: X Index]
	eor $59.b,X		; 55 59 ; Exclusive OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora [$19.b]		; 07 19 ; OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1908.w,Y		; 19 08 19 ; OR accumulator with memory $1908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1940.w,Y		; 19 40 19 ; OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b,X)		; 41 19 ; Exclusive OR accumulator with memory ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5DB4.w,Y		; 59 B4 5D ; Exclusive OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5907.w,Y		; 59 07 59 ; Exclusive OR accumulator with memory $5907.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	jsl $194219.l		; 22 19 42 19 ; Jump to subroutine long $194219.l [Writes: Stack Pointer] [Flow: call]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1921.w,Y		; 19 21 19 ; OR accumulator with memory $1921.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5970.w,Y		; 59 70 59 ; Exclusive OR accumulator with memory $5970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $59		; 42 59 ; Reserved instruction
	jsl $193259.l		; 22 59 32 19 ; Jump to subroutine long $193259.l [Writes: Stack Pointer] [Flow: call]
	eor ($19.b)		; 52 19 ; Exclusive OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $997019.l		; 22 19 70 99 ; Jump to subroutine long $997019.l [Writes: Stack Pointer] [Flow: call]
	adc ($19.b),Y		; 71 19 ; Add with carry ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($19.b),Y		; 51 19 ; Exclusive OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $D9		; 70 D9 ; Branch if overflow set to $70, $D9 [Flow: branch]
	adc ($19.b,X)		; 61 19 ; Add with carry ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($59.b),Y		; 51 59 ; Exclusive OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($59.b),Y		; 71 59 ; Add with carry ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($59.b,X)		; 61 59 ; Add with carry ($59.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $99		; 70 99 ; Branch if overflow set to $70, $99 [Flow: branch]
	eor ($59.b)		; 52 59 ; Exclusive OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $D9		; 70 D9 ; Branch if overflow set to $70, $D9 [Flow: branch]
	jsl $194559.l		; 22 59 45 19 ; Jump to subroutine long $194559.l [Writes: Stack Pointer] [Flow: call]
	adc $19.b,X		; 75 19 ; Add $19.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	eor $19.b,X		; 55 19 ; Exclusive OR accumulator with memory $19.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	lsr $19.b,X		; [PATTERN: Memory clearing operation] 56 19 ; Logical shift right $19.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	stz $19.b,X		; 74 19 ; Store zero to $19.b,X [Reads: X Index]
	and $19.b,S		; 23 19 ; AND accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	stz $59.b,X		; 74 59 ; Store zero to $59.b,X [Reads: X Index]
	lsr $59.b,X		; 56 59 ; Logical shift right $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	adc $59.b,X		; 75 59 ; Add $59.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor $59.b		; 45 59 ; Exclusive OR $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $59.b,X		; 55 59 ; Exclusive OR accumulator with memory $59.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	ora [$19.b]		; 07 19 ; OR accumulator with memory (long) [$19.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1908.w,Y		; 19 08 19 ; OR accumulator with memory $1908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1940.w,Y		; 19 40 19 ; OR accumulator with memory $1940.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($19.b,X)		; 41 19 ; Exclusive OR accumulator with memory ($19.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: XVNMZIDC] [Flow: return]

	eor $5DB4.w,Y		; 59 B4 5D ; Exclusive OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $5907.w,Y		; 59 07 59 ; Exclusive OR accumulator with memory $5907.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	jsl $194219.l		; 22 19 42 19 ; Jump to subroutine long $194219.l [Writes: Stack Pointer] [Flow: call]
	.db $50, $19		; 50 19 ; Branch if overflow clear to $50, $19 [Flow: branch]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $3921.w,Y		; 19 21 39 ; OR accumulator with memory $3921.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($59.b),Y		; 11 59 ; OR accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	and ($79.b,X)		; 21 79 ; Logical AND ($79.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5970.w,Y		; 59 70 59 ; Exclusive OR accumulator with memory $5970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $42, $59		; 42 59 ; Reserved instruction
	jsl $193259.l		; 22 59 32 19 ; Jump to subroutine long $193259.l [Writes: Stack Pointer] [Flow: call]
	eor ($19.b)		; 52 19 ; Exclusive OR accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	jsl $997019.l		; 22 19 70 99 ; Jump to subroutine long $997019.l [Writes: Stack Pointer] [Flow: call]
	adc ($39.b),Y		; 71 39 ; Add with carry ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor ($39.b),Y		; 51 39 ; Exclusive OR accumulator with memory ($39.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $F9		; 70 F9 ; Branch if overflow set to $70, $F9 [Flow: branch]
	adc ($39.b,X)		; 61 39 ; Add with carry ($39.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	eor ($79.b),Y		; 51 79 ; Exclusive OR accumulator with memory ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($79.b),Y		; 71 79 ; Add with carry ($79.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	adc ($79.b,X)		; 61 79 ; Add with carry ($79.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	.db $70, $B9		; 70 B9 ; Branch if overflow set to $70, $B9 [Flow: branch]
	eor ($59.b)		; 52 59 ; Exclusive OR accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $D9		; 70 D9 ; Branch if overflow set to $70, $D9 [Flow: branch]
	jsl $193259.l		; 22 59 32 19 ; Jump to subroutine long $193259.l [Writes: Stack Pointer] [Flow: call]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	clc		; 18 ; Clear carry flag [Flags: C]
	ora $1923.w,Y		; 19 23 19 ; OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $70, $79		; 70 79 ; Branch if overflow set to $70, $79 [Flow: branch]
	and $79.b,S		; 23 79 ; AND accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	inc $2318.w,X		; FE 18 23 ; Increment memory $2318.w,X [Reads: X Index] [Flags: ZN]
	and $3970.w,Y		; 39 70 39 ; AND accumulator with memory $3970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $2358.w,X		; FE 58 23 ; Increment memory $2358.w,X [Reads: X Index] [Flags: ZN]
	ora $5970.w,Y		; 19 70 59 ; OR accumulator with memory $5970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $59.b,S		; 23 59 ; AND accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	eor $1928.w,Y		; 59 28 19 ; Exclusive OR accumulator with memory $1928.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b)		; 32 19 ; AND accumulator with memory (indirect) ($19.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl $3319.w		; 0E 19 33 ; Arithmetic shift left $3319.w [Flags: ZNC]
	eor $1DB4.w,Y		; 59 B4 1D ; Exclusive OR accumulator with memory $1DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	asl $3259.w		; 0E 59 32 ; Arithmetic shift left $3259.w [Flags: ZNC]
	ora $5DB4.w,Y		; 19 B4 5D ; OR accumulator with memory $5DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	eor $5933.w,Y		; 59 33 59 ; Exclusive OR accumulator with memory $5933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ldy $5D.b,X		; B4 5D ; Load Y register $5D.b,X [Reads: X Index, Direct Page] [Writes: Y Index] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	ora $21.b,X		; 15 21 ; OR accumulator with memory $21.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2A.b,X		; 15 2A ; OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $31.b,X		; 15 31 ; OR accumulator with memory $31.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $21.b,X		; 15 21 ; OR accumulator with memory $21.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $4E.b,X		; 75 4E ; Add $4E.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $31.b,X		; 35 31 ; Logical AND $31.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $5E.b,X		; 75 5E ; Add $5E.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $4E.b,X		; 35 4E ; Logical AND $4E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $21.b,X		; 75 21 ; Add $21.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $5E.b,X		; 35 5E ; Logical AND $5E.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $31.b,X		; 75 31 ; Add $31.b,X to accumulator with carry [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and $21.b,X		; 35 21 ; Logical AND $21.b,X with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0A.b,X		; 55 0A ; Exclusive OR accumulator with memory $0A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $31.b,X		; 55 31 ; Exclusive OR accumulator with memory $31.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4F.b,X		; 15 4F ; OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $2A.b,X		; 15 2A ; OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $4F.b,X		; 15 4F ; OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $32.b,X		; 15 32 ; OR accumulator with memory $32.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $FE.b,X		; 55 FE ; Exclusive OR accumulator with memory $FE.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $5534.w		; 0C 34 55 ; Test and set bits $5534.w [Reads: Accumulator] [Flags: Z]
	inc $FE0C.w,X		; FE 0C FE ; Increment memory $FE0C.w,X [Reads: X Index] [Flags: ZN]
	tsb $1532.w		; 0C 32 15 ; Test and set bits $1532.w [Reads: Accumulator] [Flags: Z]
	inc $340C.w,X		; FE 0C 34 ; Increment memory $340C.w,X [Reads: X Index] [Flags: ZN]
	ora $4F.b,X		; 15 4F ; OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $4F.b,X		; 55 4F ; Exclusive OR accumulator with memory $4F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5F.b,X		; 15 5F ; OR accumulator with memory $5F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $3A.b,X		; 15 3A ; OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,X		; 15 62 ; OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $33.b,X		; 15 33 ; OR accumulator with memory $33.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $0B.b,X		; 55 0B ; Exclusive OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $33.b,X		; 15 33 ; OR accumulator with memory $33.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $1B.b,X		; 55 1B ; Exclusive OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $0B.b,X		; 15 0B ; OR accumulator with memory $0B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $33.b,X		; 55 33 ; Exclusive OR accumulator with memory $33.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1B.b,X		; 15 1B ; OR accumulator with memory $1B.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $33.b,X		; 55 33 ; Exclusive OR accumulator with memory $33.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $5F.b,X		; 15 5F ; OR accumulator with memory $5F.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $2A.b,X		; 55 2A ; Exclusive OR accumulator with memory $2A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $62.b,X		; 55 62 ; Exclusive OR accumulator with memory $62.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $3A.b,X		; 55 3A ; Exclusive OR accumulator with memory $3A.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $AA.b,X		; 55 AA ; Exclusive OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($15.b)		; 72 15 ; Add with carry (indirect) ($15.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $55.b,S		; 23 55 ; AND accumulator with stack relative $55.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $23.b,X		; 55 23 ; Exclusive OR accumulator with memory $23.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $AA.b,X		; 15 AA ; OR accumulator with memory $AA.b,X [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($55.b)		; 72 55 ; Add with carry (indirect) ($55.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	ror $19.b,X		; 76 19 ; Rotate right $19.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1974.w,Y		; 19 74 19 ; OR accumulator with memory $1974.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ror $59.b,X		; 76 59 ; Rotate right $59.b,X [Reads: X Index, Direct Page] [Flags: ZNC]
	.db $70, $59		; 70 59 ; Branch if overflow set to $70, $59 [Flow: branch]
	stz $59.b,X		; 74 59 ; Store zero to $59.b,X [Reads: X Index]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $1950.w,Y		; 59 50 19 ; Exclusive OR accumulator with memory $1950.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $1900.w,Y		; 19 00 19 ; OR accumulator with memory $1900.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$19.b],Y		; 77 19 ; Add with carry (long indexed) [$19.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	tda		; 7B ; Transfer direct page to C  [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor $5950.w,Y		; 59 50 59 ; Exclusive OR accumulator with memory $5950.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc [$59.b],Y		; 77 59 ; Add with carry (long indexed) [$59.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $70, $19		; 70 19 ; Branch if overflow set to $70, $19 [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1960.w,Y		; 19 60 19 ; OR accumulator with memory $1960.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $0B18.w,X		; FE 18 0B ; Increment memory $0B18.w,X [Reads: X Index] [Flags: ZN]
	eor $5970.w,Y		; 59 70 59 ; Exclusive OR accumulator with memory $5970.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $6018.w,X		; FE 18 60 ; Increment memory $6018.w,X [Reads: X Index] [Flags: ZN]
	eor $1960.w,Y		; 59 60 19 ; Exclusive OR accumulator with memory $1960.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $6018.w,X		; FE 18 60 ; Increment memory $6018.w,X [Reads: X Index] [Flags: ZN]
	ora $18FE.w,Y		; 19 FE 18 ; OR accumulator with memory $18FE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $6018.w,X		; FE 18 60 ; Increment memory $6018.w,X [Reads: X Index] [Flags: ZN]
	eor $18FE.w,Y		; 59 FE 18 ; Exclusive OR accumulator with memory $18FE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $1950.w,Y		; 59 50 19 ; Exclusive OR accumulator with memory $1950.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($0019.w,X)		; 7C 19 00 ; Jump indirect indexed to ($0019.w,X) [Reads: X Index] [Flow: jump]
	ora $1911.w,Y		; 19 11 19 ; OR accumulator with memory $1911.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($5019.w,X)		; 7C 19 50 ; Jump indirect indexed to ($5019.w,X) [Reads: X Index] [Flow: jump]
	eor $1911.w,Y		; 59 11 19 ; Exclusive OR accumulator with memory $1911.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	bit $19.b,X		; 34 19 ; Test bits $19.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1923.w,Y		; 19 23 19 ; OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $590B.w,Y		; 19 0B 59 ; OR accumulator with memory $590B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $FE18.w,X		; FE 18 FE ; Increment memory $FE18.w,X [Reads: X Index] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	inc $FE18.w,X		; FE 18 FE ; Increment memory $FE18.w,X [Reads: X Index] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	jmp ($7C19.w,X)		; 7C 19 7C ; Jump indirect indexed to ($7C19.w,X) [Reads: X Index] [Flow: jump]
	ora $1911.w,Y		; 19 11 19 ; OR accumulator with memory $1911.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora ($19.b),Y		; 11 19 ; OR accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $19.b,X		; 34 19 ; Test bits $19.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	ora $1933.w,Y		; 19 33 19 ; OR accumulator with memory $1933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $590B.w,Y		; 19 0B 59 ; OR accumulator with memory $590B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5933.w,Y		; 59 33 59 ; Exclusive OR accumulator with memory $5933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $19.b,S		; 23 19 ; AND accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $18FE.w,Y		; 19 FE 18 ; OR accumulator with memory $18FE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $1B18.w,X		; FE 18 1B ; Increment memory $1B18.w,X [Reads: X Index] [Flags: ZN]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	inc $FE18.w,X		; FE 18 FE ; Increment memory $FE18.w,X [Reads: X Index] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1923.w,Y		; 19 23 19 ; OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $591B.w,Y		; 19 1B 59 ; OR accumulator with memory $591B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b,S),Y		; 33 19 ; AND accumulator (stack relative indirect indexed) ($19.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1933.w,Y		; 19 33 19 ; OR accumulator with memory $1933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $591B.w,Y		; 19 1B 59 ; OR accumulator with memory $591B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b,S),Y		; 33 59 ; AND accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5933.w,Y		; 59 33 59 ; Exclusive OR accumulator with memory $5933.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and $19.b,S		; 23 19 ; AND accumulator with stack relative $19.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $197C.w,Y		; 19 7C 19 ; OR accumulator with memory $197C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($1B19.w,X)		; 7C 19 1B ; Jump indirect indexed to ($1B19.w,X) [Reads: X Index] [Flow: jump]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp ($7C19.w,X)		; 7C 19 7C ; Jump indirect indexed to ($7C19.w,X) [Reads: X Index] [Flow: jump]
	ora $1923.w,Y		; 19 23 19 ; OR accumulator with memory $1923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1931.w,Y		; 19 31 19 ; OR accumulator with memory $1931.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $5923.w,Y		; 59 23 59 ; Exclusive OR accumulator with memory $5923.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1974.w,Y		; 19 74 19 ; OR accumulator with memory $1974.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $1974.w,Y		; 19 74 19 ; OR accumulator with memory $1974.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	stz $59.b,X		; 74 59 ; Store zero to $59.b,X [Reads: X Index]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $5974.w,Y		; 59 74 59 ; Exclusive OR accumulator with memory $5974.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	eor $FFFF.w,Y		; 59 FF FF ; Exclusive OR accumulator with memory $FFFF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $4B8BFF.l,X		; FF FF 8B 4B ; Subtract with carry (long,X) $4B8BFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ldx #$04.b		; A2 04 ; Load #$04.b into X register [Writes: X Index] [Flags: ZN]
	lda $0C4A.w,X		; BD 4A 0C ; Load $0C4A.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$1F.b		; C9 1F ; Compare #$1F.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $0A		; D0 0A ; Branch if not equal to $D0, $0A [Flow: branch]
	lda $037E.w		; AD 7E 03 ; Load $037E.w into accumulator [Writes: Accumulator] [Flags: ZN]
	.db $F0, $05		; F0 05 ; Branch if equal to $F0, $05 [Flow: branch]
	stz $037E.w		; 9C 7E 03 ; Store zero to $037E.w
	.db $80, $03		; 80 03 ; Branch always to $80, $03 [Flow: branch]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $EC		; 10 EC ; Branch if plus to $10, $EC [Flow: branch]
	lda $23.b		; A5 23 ; Load $23.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $41.b		; 85 41 ; Store accumulator to $41.b [Reads: Accumulator]
	lda $21.b		; A5 21 ; Load $21.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $40.b		; 85 40 ; Store accumulator to $40.b [Reads: Accumulator]
.ACCU 16
	rep #$20		; C2 20
	lda $0FC2.w		; AD C2 0F ; Load $0FC2.w into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $22.b		; 85 22 ; Store accumulator to $22.b [Reads: Accumulator]
	lda $0FC4.w		; AD C4 0F ; Load $0FC4.w into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $20.b		; 85 20 ; Store accumulator to $20.b [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	jsl $07F42F.l		; 22 2F F4 07 ; Jump to subroutine long $07F42F.l [Writes: Stack Pointer] [Flow: call]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sty $0F.b		; 84 0F ; Store Y register to $0F.b [Reads: Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	sty $0E.b		; 84 0E ; Store Y register to $0E.b [Reads: Y Index]
	ldy #$00.b		; A0 00 ; Load #$00.b into Y register [Writes: Y Index] [Flags: ZN]
	ldx #$04.b		; A2 04 ; Load #$04.b into X register [Writes: X Index] [Flags: ZN]
	cmp $0C4A.w,X		; DD 4A 0C ; Compare accumulator $0C4A.w,X [Reads: X Index] [Flags: ZNC]
	.db $D0, $01		; D0 01 ; Branch if not equal to $D0, $01 [Flow: branch]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $F7		; 10 F7 ; Branch if plus to $10, $F7 [Flow: branch]
	cpy $0E.b		; C4 0E ; Compare $0E.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	.db $F0, $34		; F0 34 ; Branch if equal to $F0, $34 [Flow: branch]
	ldy #$01.b		; A0 01 ; Load #$01.b into Y register [Writes: Y Index] [Flags: ZN]
	cmp #$07.b		; C9 07 ; Compare #$07.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $06		; F0 06 ; Branch if equal to $F0, $06 [Flow: branch]
	cmp #$08.b		; C9 08 ; Compare #$08.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $02		; F0 02 ; Branch if equal to $F0, $02 [Flow: branch]
	ldy #$04.b		; A0 04 ; Load #$04.b into Y register [Writes: Y Index] [Flags: ZN]
	lda $0C4A.w,Y		; B9 4A 0C ; Load $0C4A.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $F0, $22		; F0 22 ; Branch if equal to $F0, $22 [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	.db $10, $F8		; 10 F8 ; Branch if plus to $10, $F8 [Flow: branch]
	dec $03C4.w		; CE C4 03 ; Decrement $03C4.w [Flags: ZN]
	.db $10, $05		; 10 05 ; Branch if plus to $10, $05 [Flow: branch]
	lda $0F.b		; A5 0F ; Load $0F.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $03C4.w		; 8D C4 03 ; Store accumulator to $03C4.w [Reads: Accumulator]
	ldy $03C4.w		; AC C4 03 ; Load $03C4.w into Y register [Writes: Y Index] [Flags: ZN]
	lda $0C4A.w,Y		; B9 4A 0C ; Load $0C4A.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$3C.b		; C9 3C ; Compare #$3C.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $0B		; F0 0B ; Branch if equal to $F0, $0B [Flow: branch]
	cmp #$13.b		; C9 13 ; Compare #$13.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $07		; F0 07 ; Branch if equal to $F0, $07 [Flow: branch]
	cmp #$0A.b		; C9 0A ; Compare #$0A.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $03		; F0 03 ; Branch if equal to $F0, $03 [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	.db $10, $E1		; 10 E1 ; Branch if plus to $10, $E1 [Flow: branch]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	brk $01.b		; 00 01 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $03.b		; 02 03 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $01.b		; 00 01 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $03.b		; 02 03 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $01.b		; 00 01 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $03.b		; 02 03 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tsb $05.b		; 04 05 ; Test and set bits $05.b [Reads: Accumulator] [Flags: Z]
	ora $05.b		; 05 05 ; Logical OR $05.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $05.b		; 05 05 ; Logical OR $05.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $05.b		; 05 05 ; Logical OR $05.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $05.b		; 05 05 ; Logical OR $05.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $05.b		; 05 05 ; Logical OR $05.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $05.b		; 05 05 ; Logical OR $05.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $03.b		; 05 03 ; Logical OR $03.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $62.b,S		; 03 62 ; OR accumulator with stack relative $62.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	jsr $8B10.w		; 20 10 8B ; Jump to subroutine at $8B10.w [Writes: Stack Pointer] [Flow: call]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	dec $030B.w		; CE 0B 03 ; Decrement $030B.w [Flags: ZN]
	.db $10, $1D		; 10 1D ; Branch if plus to $10, $1D [Flow: branch]
	ldx $030D.w		; AE 0D 03 ; Load $030D.w into X register [Writes: X Index] [Flags: ZN]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	cpx #$0F.b		; E0 0F ; Compare #$0F.b with X register [Reads: X Index] [Flags: ZNC]
	.db $F0, $5A		; F0 5A ; Branch if equal to $F0, $5A [Flow: branch]
	cpx #$0E.b		; E0 0E ; Compare #$0E.b with X register [Reads: X Index] [Flags: ZNC]
	.db $D0, $02		; D0 02 ; Branch if not equal to $D0, $02 [Flow: branch]
	inc $11.b		; E6 11 ; Increment $11.b [Reads: Direct Page] [Flags: ZN]
	stx $030D.w		; 8E 0D 03 ; Store X register to $030D.w [Reads: X Index]
	lda $F5C3.w,X		; BD C3 F5 ; Load $F5C3.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $030A.w		; 8D 0A 03 ; Store accumulator to $030A.w [Reads: Accumulator]
	lda $F5D2.w,X		; BD D2 F5 ; Load $F5D2.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $030B.w		; 8D 0B 03 ; Store accumulator to $030B.w [Reads: Accumulator]
	lda $030D.w		; AD 0D 03 ; Load $030D.w into accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$0D.b		; C9 0D ; Compare #$0D.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $3E		; D0 3E ; Branch if not equal to $D0, $3E [Flow: branch]
	lda $4B.b		; A5 4B ; Load $4B.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp #$0C.b		; C9 0C ; Compare #$0C.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $38		; F0 38 ; Branch if equal to $F0, $38 [Flow: branch]
.ACCU 16
	rep #$20		; C2 20
	lda $20.b		; A5 20 ; Load $20.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0010.w		; 69 10 00 ; Add #$0010.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $E8.b		; E5 E8 ; Subtract $E8.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
	lda $22.b		; A5 22 ; Load $22.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0007.w		; 69 07 00 ; Add #$0007.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $E2.b		; E5 E2 ; Subtract $E2.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	ldy $EE.b		; A4 EE ; Load $EE.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
	lda $02.b		; A5 02 ; Load $02.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $09D0.w		; 8D D0 09 ; Store accumulator to $09D0.w [Reads: Accumulator]
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $09D1.w		; 8D D1 09 ; Store accumulator to $09D1.w [Reads: Accumulator]
	lda #$AA.b		; A9 AA ; Load #$AA.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $09D2.w		; 8D D2 09 ; Store accumulator to $09D2.w [Reads: Accumulator]
	lda $F5E1.w,Y		; B9 E1 F5 ; Load $F5E1.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	ora #$02.b		; 09 02 ; Logical OR #$02.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $09D3.w		; 8D D3 09 ; Store accumulator to $09D3.w [Reads: Accumulator]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0A94.w		; 8D 94 0A ; Store accumulator to $0A94.w [Reads: Accumulator]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	and ($1D.b,X)		; 21 1D ; Logical AND ($1D.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora $0315.w,Y		; 19 15 03 ; OR accumulator with memory $0315.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	rol $363A.w,X		; 3E 3A 36 ; Rotate left $363A.w,X [Reads: X Index] [Flags: ZNC]
	ora ($0E.b)		; 12 0E ; OR accumulator with memory (indirect) ($0E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	asl $31.b		; 06 31 ; Arithmetic shift left $31.b [Reads: Direct Page] [Flags: ZNC]
	and $2529.w		; 2D 29 25 ; Logical AND $2529.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cpy #$40.b		; C0 40 ; Compare #$40.b with Y register [Reads: Y Index] [Flags: ZNC]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cpy #$40.b		; C0 40 ; Compare #$40.b with Y register [Reads: Y Index] [Flags: ZNC]
	sed		; F8 ; Set decimal flag [Flags: D]
	sed		; F8 ; Set decimal flag [Flags: D]
	sed		; F8 ; Set decimal flag [Flags: D]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	sbc $FFFF00.l,X		; FF 00 FF FF ; Subtract with carry (long,X) $FFFF00.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sed		; F8 ; Set decimal flag [Flags: D]
	inc $EA.b,X		; F6 EA ; Increment memory $EA.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	tsb $FF.b		; 04 FF ; Test and set bits $FF.b [Reads: Accumulator] [Flags: Z]
	sbc $8B00FF.l,X		; FF FF 00 8B ; Subtract with carry (long,X) $8B00FF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	lda #$0C.b		; A9 0C ; Load #$0C.b into accumulator [Writes: Accumulator] [Flags: ZN]
	jsl $099D18.l		; 22 18 9D 09 ; Jump to subroutine long $099D18.l [Writes: Stack Pointer] [Flow: call]
	.db $B0, $C7		; B0 C7 ; Branch if carry set to $B0, $C7 [Flow: branch]
	lda $2F.b		; A5 2F ; Load $2F.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	lda $F64F.w,Y		; B9 4F F6 ; Load $F64F.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F5800.l		; 8F 00 58 7F ; Store accumulator (long) $7F5800.l [Reads: Accumulator]
	lda $F650.w,Y		; B9 50 F6 ; Load $F650.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F5801.l		; 8F 01 58 7F ; Store accumulator (long) $7F5801.l [Reads: Accumulator]
	lda $F651.w,Y		; B9 51 F6 ; Load $F651.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F5802.l		; 8F 02 58 7F ; Store accumulator (long) $7F5802.l [Reads: Accumulator]
	lda $F652.w,Y		; B9 52 F6 ; Load $F652.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F5803.l		; 8F 03 58 7F ; Store accumulator (long) $7F5803.l [Reads: Accumulator]
	sta $7F5804.l		; 8F 04 58 7F ; Store accumulator (long) $7F5804.l [Reads: Accumulator]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03B1.w,X		; 9D B1 03 ; Store accumulator to $03B1.w,X [Reads: Accumulator, X Index]
	lda #$4C.b		; A9 4C ; Load #$4C.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C5E.w,X		; [PATTERN: Memory clearing operation] 9D 5E 0C ; Store accumulator to $0C5E.w,X [Reads: Accumulator, X Index]
	lda #$08.b		; A9 08 ; Load #$08.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $039F.w,X		; 9D 9F 03 ; Store accumulator to $039F.w,X [Reads: Accumulator, X Index]
	stz $0C54.w,X		; 9E 54 0C ; Store zero to $0C54.w,X [Reads: X Index]
	stz $0385.w,X		; 9E 85 03 ; Store zero to $0385.w,X [Reads: X Index]
	stz $0394.w,X		; 9E 94 03 ; Store zero to $0394.w,X [Reads: X Index]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03A4.w,X		; 9D A4 03 ; Store accumulator to $03A4.w,X [Reads: Accumulator, X Index]
	lda #$0E.b		; A9 0E ; Load #$0E.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $7F5808.l		; 8F 08 58 7F ; Store accumulator (long) $7F5808.l [Reads: Accumulator]
	lda $2F.b		; A5 2F ; Load $2F.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sta $0C72.w,X		; 9D 72 0C ; Store accumulator to $0C72.w,X [Reads: Accumulator, X Index]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	lda $F65F.w,Y		; B9 5F F6 ; Load $F65F.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $0C22.w,X		; 9D 22 0C ; Store accumulator to $0C22.w,X [Reads: Accumulator, X Index]
	lda $F663.w,Y		; B9 63 F6 ; Load $F663.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $0C2C.w,X		; 9D 2C 0C ; Store accumulator to $0C2C.w,X [Reads: Accumulator, X Index]
	lda $F667.w,Y		; B9 67 F6 ; Load $F667.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $03A9.w,X		; 9D A9 03 ; Store accumulator to $03A9.w,X [Reads: Accumulator, X Index]
.ACCU 16
	rep #$20		; C2 20
	lda $20.b		; A5 20 ; Load $20.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$000C.w		; 69 0C 00 ; Add #$000C.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $7F5810.l		; 8F 10 58 7F ; Store accumulator (long) $7F5810.l [Reads: Accumulator]
	lda $22.b		; A5 22 ; Load $22.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0008.w		; 69 08 00 ; Add #$0008.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $7F580E.l		; 8F 0E 58 7F ; Store accumulator (long) $7F580E.l [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	jsl $099DD3.l		; 22 D3 9D 09 ; Jump to subroutine long $099DD3.l [Writes: Stack Pointer] [Flow: call]
	.db $B0, $02		; B0 02 ; Branch if carry set to $B0, $02 [Flow: branch]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ldy $0C72.w,X		; BC 72 0C ; Load Y register $0C72.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	lda $7F5810.l		; AF 10 58 7F ; Load long $7F5810.l into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F66B.w,Y		; 79 6B F6 ; Add $F66B.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0BFA.w,X		; 9D FA 0B ; Store accumulator to $0BFA.w,X [Reads: Accumulator, X Index]
	lda $7F5811.l		; AF 11 58 7F ; Load long $7F5811.l into accumulator [Writes: Accumulator] [Flags: ZN]
	adc $F66F.w,Y		; 79 6F F6 ; Add $F66F.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C0E.w,X		; 9D 0E 0C ; Store accumulator to $0C0E.w,X [Reads: Accumulator, X Index]
	lda $7F580E.l		; AF 0E 58 7F ; Load long $7F580E.l into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F673.w,Y		; 79 73 F6 ; Add $F673.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C04.w,X		; 9D 04 0C ; Store accumulator to $0C04.w,X [Reads: Accumulator, X Index]
	lda $7F580F.l		; AF 0F 58 7F ; Load long $7F580F.l into accumulator [Writes: Accumulator] [Flags: ZN]
	adc $F677.w,Y		; 79 77 F6 ; Add $F677.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C18.w,X		; 9D 18 0C ; Store accumulator to $0C18.w,X [Reads: Accumulator, X Index]
	jsl $0DBB5E.l		; 22 5E BB 0D ; Jump to subroutine long $0DBB5E.l [Writes: Stack Pointer] [Flow: call]
	ora #$01.b		; 09 01 ; Logical OR #$01.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $012F.w		; 8D 2F 01 ; Store accumulator to $012F.w [Reads: Accumulator]
	lda #$04.b		; A9 04 ; Load #$04.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C4A.w,X		; 9D 4A 0C ; Store accumulator to $0C4A.w,X [Reads: Accumulator, X Index]
	lda #$07.b		; A9 07 ; Load #$07.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C68.w,X		; 9D 68 0C ; Store accumulator to $0C68.w,X [Reads: Accumulator, X Index]
	lda #$10.b		; A9 10 ; Load #$10.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C90.w,X		; 9D 90 0C ; Store accumulator to $0C90.w,X [Reads: Accumulator, X Index]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cmp [$B7.b],Y		; D7 B7 ; Compare accumulator (long indexed) [$B7.b],Y [Reads: Accumulator, Direct Page, Y Index] [Flags: ZNC]
	.db $80, $83		; 80 83 ; Branch always to $80, $83 [Flow: branch]
	lda [$80.b],Y		; B7 80 ; Load accumulator (long indexed) [$80.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $00.b,S		; 83 00 ; Store accumulator (stack relative) $00.b,S [Reads: Accumulator, Stack Pointer]
	brk $FA.b		; 00 FA ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sbc $F6F8FF.l,X		; FF FF F8 F6 ; Subtract with carry (long,X) $F6F8FF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sbc $0000FF.l,X		; FF FF 00 00 ; Subtract with carry (long,X) $0000FF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	phb		; [PATTERN: Function entry: Data bank preservation prologue] 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $73.b		; 85 73 ; Store accumulator to $73.b [Reads: Accumulator]
	lda $11.b		; A5 11 ; Load $11.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $F0, $03		; F0 03 ; Branch if equal to $F0, $03 [Flow: branch]
	.db $82, $A6, $00		; 82 A6 00 ; Branch always long to $82, $A6, $00 [Flow: branch]
	lda $7F5810.l		; AF 10 58 7F ; Load long $7F5810.l into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0BFA.w,X		; 9D FA 0B ; Store accumulator to $0BFA.w,X [Reads: Accumulator, X Index]
	lda $7F5811.l		; AF 11 58 7F ; Load long $7F5811.l into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C0E.w,X		; 9D 0E 0C ; Store accumulator to $0C0E.w,X [Reads: Accumulator, X Index]
	lda $7F580E.l		; AF 0E 58 7F ; Load long $7F580E.l into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C04.w,X		; 9D 04 0C ; Store accumulator to $0C04.w,X [Reads: Accumulator, X Index]
	lda $7F580F.l		; AF 0F 58 7F ; Load long $7F580F.l into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C18.w,X		; 9D 18 0C ; Store accumulator to $0C18.w,X [Reads: Accumulator, X Index]
	jsr $FA43.w		; 20 43 FA ; Jump to subroutine at $FA43.w [Writes: Stack Pointer] [Flow: call]
	jsr $FA37.w		; 20 37 FA ; Jump to subroutine at $FA37.w [Writes: Stack Pointer] [Flow: call]
	lda $0BFA.w,X		; BD FA 0B ; Load $0BFA.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F5810.l		; 8F 10 58 7F ; Store accumulator (long) $7F5810.l [Reads: Accumulator]
	lda $0C0E.w,X		; BD 0E 0C ; Load $0C0E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F5811.l		; 8F 11 58 7F ; Store accumulator (long) $7F5811.l [Reads: Accumulator]
	lda $0C04.w,X		; BD 04 0C ; Load $0C04.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F580E.l		; 8F 0E 58 7F ; Store accumulator (long) $7F580E.l [Reads: Accumulator]
	lda $0C18.w,X		; BD 18 0C ; Load $0C18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $7F580F.l		; 8F 0F 58 7F ; Store accumulator (long) $7F580F.l [Reads: Accumulator]
	lda $0394.w,X		; BD 94 03 ; Load $0394.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and #$0F.b		; 29 0F ; Logical AND #$0F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $D0, $09		; D0 09 ; Branch if not equal to $D0, $09 [Flow: branch]
	jsl $0DBB5E.l		; 22 5E BB 0D ; Jump to subroutine long $0DBB5E.l [Writes: Stack Pointer] [Flow: call]
	ora #$01.b		; 09 01 ; Logical OR #$01.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $012F.w		; 8D 2F 01 ; Store accumulator to $012F.w [Reads: Accumulator]
	inc $0394.w,X		; FE 94 03 ; Increment memory $0394.w,X [Reads: X Index] [Flags: ZN]
	jsl $088DA2.l		; 22 A2 8D 08 ; Jump to subroutine long $088DA2.l [Writes: Stack Pointer] [Flow: call]
	.db $B0, $06		; B0 06 ; Branch if carry set to $B0, $06 [Flow: branch]
	jsl $08923B.l		; 22 3B 92 08 ; Jump to subroutine long $08923B.l [Writes: Stack Pointer] [Flow: call]
	.db $90, $3B		; 90 3B ; Branch if carry clear to $90, $3B [Flow: branch]
	ldy $0C72.w,X		; BC 72 0C ; Load Y register $0C72.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	lda $0BFA.w,X		; BD FA 0B ; Load $0BFA.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F754.w,Y		; 79 54 F7 ; Add $F754.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0BFA.w,X		; 9D FA 0B ; Store accumulator to $0BFA.w,X [Reads: Accumulator, X Index]
	lda $0C0E.w,X		; BD 0E 0C ; Load $0C0E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $F758.w,Y		; 79 58 F7 ; Add $F758.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C0E.w,X		; 9D 0E 0C ; Store accumulator to $0C0E.w,X [Reads: Accumulator, X Index]
	lda $0C04.w,X		; BD 04 0C ; Load $0C04.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F75C.w,Y		; 79 5C F7 ; Add $F75C.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C04.w,X		; 9D 04 0C ; Store accumulator to $0C04.w,X [Reads: Accumulator, X Index]
	lda $0C18.w,X		; BD 18 0C ; Load $0C18.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	adc $F760.w,Y		; 79 60 F7 ; Add $F760.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C18.w,X		; 9D 18 0C ; Store accumulator to $0C18.w,X [Reads: Accumulator, X Index]
	lda #$04.b		; A9 04 ; Load #$04.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C4A.w,X		; 9D 4A 0C ; Store accumulator to $0C4A.w,X [Reads: Accumulator, X Index]
	lda #$07.b		; A9 07 ; Load #$07.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C68.w,X		; 9D 68 0C ; Store accumulator to $0C68.w,X [Reads: Accumulator, X Index]
	lda #$10.b		; A9 10 ; Load #$10.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C90.w,X		; 9D 90 0C ; Store accumulator to $0C90.w,X [Reads: Accumulator, X Index]
	.db $82, $DD, $00		; 82 DD 00 ; Branch always long to $82, $DD, $00 [Flow: branch]
	dec $03B1.w,X		; DE B1 03 ; Decrement memory $03B1.w,X [Reads: X Index] [Flags: ZN]
	.db $10, $09		; 10 09 ; Branch if plus to $10, $09 [Flow: branch]
	lda #$04.b		; A9 04 ; Load #$04.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $73.b		; 85 73 ; Store accumulator to $73.b [Reads: Accumulator]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03B1.w,X		; 9D B1 03 ; Store accumulator to $03B1.w,X [Reads: Accumulator, X Index]
	lda $03A9.w,X		; BD A9 03 ; Load $03A9.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $76.b		; 85 76 ; Store accumulator to $76.b [Reads: Accumulator]
	ldy #$00.b		; A0 00 ; Load #$00.b into Y register [Writes: Y Index] [Flags: ZN]
	ldx #$03.b		; A2 03 ; Load #$03.b into X register [Writes: X Index] [Flags: ZN]
	stx $72.b		; 86 72 ; Store X register to $72.b [Reads: X Index]
	lda $11.b		; A5 11 ; Load $11.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $0D		; D0 0D ; Branch if not equal to $D0, $0D [Flow: branch]
	lda $7F5800.l,X		; BF 00 58 7F ; Load long $7F5800.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $76.b		; 65 76 ; Add $76.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and #$3F.b		; 29 3F ; Logical AND #$3F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $7F5800.l,X		; 9F 00 58 7F ; Store accumulator (long,X) $7F5800.l,X [Reads: Accumulator, X Index]
	phx		; [PATTERN: Function entry: Index register preservation prologue] DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	lda $7F5808.l		; AF 08 58 7F ; Load long $7F5808.l into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $08.b		; 85 08 ; Store accumulator to $08.b [Reads: Accumulator]
	lda $7F5800.l,X		; BF 00 58 7F ; Load long $7F5800.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	jsl $08FB23.l		; 22 23 FB 08 ; Jump to subroutine long $08FB23.l [Writes: Stack Pointer] [Flow: call]
	jsl $08DA17.l		; 22 17 DA 08 ; Jump to subroutine long $08DA17.l [Writes: Stack Pointer] [Flow: call]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	jsl $08F6FE.l		; 22 FE F6 08 ; Jump to subroutine long $08F6FE.l [Writes: Stack Pointer] [Flow: call]
	ldx $72.b		; A6 72 ; Load $72.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	lda $F74D.w,X		; BD 4D F7 ; Load $F74D.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta ($90.b),Y		; 91 90 ; Store accumulator ($90.b),Y [Reads: Accumulator, Direct Page, Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda $73.b		; A5 73 ; Load $73.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	ora $65.b		; 05 65 ; Logical OR $65.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta ($90.b),Y		; 91 90 ; Store accumulator ($90.b),Y [Reads: Accumulator, Direct Page, Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc #$04.b		; E9 04 ; Subtract #$04.b from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta ($92.b),Y		; 91 92 ; Store accumulator ($92.b),Y [Reads: Accumulator, Direct Page, Y Index]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $B4		; 10 B4 ; Branch if plus to $10, $B4 [Flow: branch]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	lda $11.b		; A5 11 ; Load $11.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $24		; D0 24 ; Branch if not equal to $D0, $24 [Flow: branch]
	dec $039F.w,X		; DE 9F 03 ; Decrement memory $039F.w,X [Reads: X Index] [Flags: ZN]
	.db $10, $5A		; 10 5A ; Branch if plus to $10, $5A [Flow: branch]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $039F.w,X		; 9D 9F 03 ; Store accumulator to $039F.w,X [Reads: Accumulator, X Index]
	lda $03A4.w,X		; BD A4 03 ; Load $03A4.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	and #$03.b		; 29 03 ; Logical AND #$03.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03A4.w,X		; 9D A4 03 ; Store accumulator to $03A4.w,X [Reads: Accumulator, X Index]
	cmp #$03.b		; C9 03 ; Compare #$03.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $0D		; D0 0D ; Branch if not equal to $D0, $0D [Flow: branch]
	lda $7F5804.l		; AF 04 58 7F ; Load long $7F5804.l into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $76.b		; 65 76 ; Add $76.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and #$3F.b		; 29 3F ; Logical AND #$3F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $7F5804.l		; 8F 04 58 7F ; Store accumulator (long) $7F5804.l [Reads: Accumulator]
	lda $03A4.w,X		; BD A4 03 ; Load $03A4.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $72.b		; 85 72 ; Store accumulator to $72.b [Reads: Accumulator]
	cmp #$03.b		; C9 03 ; Compare #$03.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $32		; F0 32 ; Branch if equal to $F0, $32 [Flow: branch]
	phy		; 5A ; Push Y register [Reads: Y Index] [Writes: Stack Pointer]
	lda $7F5808.l		; AF 08 58 7F ; Load long $7F5808.l into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $08.b		; 85 08 ; Store accumulator to $08.b [Reads: Accumulator]
	lda $7F5804.l		; AF 04 58 7F ; Load long $7F5804.l into accumulator [Writes: Accumulator] [Flags: ZN]
	jsl $08FB23.l		; 22 23 FB 08 ; Jump to subroutine long $08FB23.l [Writes: Stack Pointer] [Flow: call]
	jsl $08DA17.l		; 22 17 DA 08 ; Jump to subroutine long $08DA17.l [Writes: Stack Pointer] [Flow: call]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Stack Pointer, Y Index] [Flags: ZN]
	jsl $08F6FE.l		; 22 FE F6 08 ; Jump to subroutine long $08F6FE.l [Writes: Stack Pointer] [Flow: call]
	ldx $72.b		; A6 72 ; Load $72.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	lda $F751.w,X		; BD 51 F7 ; Load $F751.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta ($90.b),Y		; 91 90 ; Store accumulator ($90.b),Y [Reads: Accumulator, Direct Page, Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda #$04.b		; A9 04 ; Load #$04.b into accumulator [Writes: Accumulator] [Flags: ZN]
	ora $65.b		; 05 65 ; Logical OR $65.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta ($90.b),Y		; 91 90 ; Store accumulator ($90.b),Y [Reads: Accumulator, Direct Page, Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc #$04.b		; E9 04 ; Subtract #$04.b from accumulator with borrow [Writes: Accumulator] [Flags: ZVNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta ($92.b),Y		; 91 92 ; Store accumulator ($92.b),Y [Reads: Accumulator, Direct Page, Y Index]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ldy #$01.b		; A0 01 ; Load #$01.b into Y register [Writes: Y Index] [Flags: ZN]
	lda ($90.b),Y		; B1 90 ; Load accumulator ($90.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$F0.b		; C9 F0 ; Compare #$F0.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $0B		; D0 0B ; Branch if not equal to $D0, $0B [Flow: branch]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	cpy #$11.b		; C0 11 ; Compare #$11.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $D0, $F2		; D0 F2 ; Branch if not equal to $D0, $F2 [Flow: branch]
	stz $0C4A.w,X		; 9E 4A 0C ; Store zero to $0C4A.w,X [Reads: X Index]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sed		; F8 ; Set decimal flag [Flags: D]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tsb $FF0C.w		; 0C 0C FF ; Test and set bits $FF0C.w [Reads: Accumulator] [Flags: Z]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $04.b		; 00 04 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	tsb $F3.b		; 04 F3 ; Test and set bits $F3.b [Reads: Accumulator] [Flags: Z]
	trb $00.b		; 14 00 ; Test and reset bits $00.b [Reads: Accumulator] [Flags: Z]
	brk $FF.b		; 00 FF ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $20.b		; 00 20 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $10, $30		; 10 30 ; Branch if plus to $10, $30 [Flow: branch]
	jsr $4B8B.w		; 20 8B 4B ; Jump to subroutine at $4B8B.w [Writes: Stack Pointer] [Flow: call]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	lda $0C68.w,X		; BD 68 0C ; Load $0C68.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $05		; D0 05 ; Branch if not equal to $D0, $05 [Flow: branch]
	stz $0C4A.w,X		; 9E 4A 0C ; Store zero to $0C4A.w,X [Reads: X Index]
	.db $80, $53		; 80 53 ; Branch always to $80, $53 [Flow: branch]
	lda $2F.b		; A5 2F ; Load $2F.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	lda $20.b		; A5 20 ; Load $20.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F8EB.w,Y		; 79 EB F8 ; Add $F8EB.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
	lda $21.b		; A5 21 ; Load $21.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $F8EF.w,Y		; 79 EF F8 ; Add $F8EF.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $01.b		; 85 01 ; Store accumulator to $01.b [Reads: Accumulator]
	lda $22.b		; A5 22 ; Load $22.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F8F3.w,Y		; 79 F3 F8 ; Add $F8F3.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
	lda $23.b		; A5 23 ; Load $23.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc $F8F7.w,Y		; 79 F7 F8 ; Add $F8F7.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $03.b		; 85 03 ; Store accumulator to $03.b [Reads: Accumulator]
.ACCU 16
	rep #$20		; C2 20
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $E8.b		; E5 E8 ; Subtract $E8.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
	lda $02.b		; A5 02 ; Load $02.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $E2.b		; E5 E2 ; Subtract $E2.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	ldy $0C7C.w,X		; BC 7C 0C ; Load Y register $0C7C.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	lda $F8FB.w,Y		; B9 FB F8 ; Load $F8FB.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $65.b		; 85 65 ; Store accumulator to $65.b [Reads: Accumulator]
	stz $64.b		; 64 64 ; Store zero to $64.b
	ldy #$00.b		; A0 00 ; Load #$00.b into Y register [Writes: Y Index] [Flags: ZN]
	jsl $08F6FE.l		; 22 FE F6 08 ; Jump to subroutine long $08F6FE.l [Writes: Stack Pointer] [Flow: call]
	lda #$D7.b		; A9 D7 ; Load #$D7.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta ($90.b),Y		; 91 90 ; Store accumulator ($90.b),Y [Reads: Accumulator, Direct Page, Y Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	ora $65.b		; 05 65 ; Logical OR $65.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta ($90.b),Y		; 91 90 ; Store accumulator ($90.b),Y [Reads: Accumulator, Direct Page, Y Index]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta ($92.b)		; 92 92 ; Store accumulator (indirect) ($92.b) [Reads: Accumulator, Direct Page]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ora $00.b		; 05 00 ; Logical OR $00.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	tsb $0800.w		; 0C 00 08 ; Test and set bits $0800.w [Reads: Accumulator] [Flags: Z]
	brk $08.b		; 00 08 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $03.b		; 00 03 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $04.b		; 00 04 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $05.b		; 00 05 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $07.b		; 00 07 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora [$70.b]		; 07 70 ; OR accumulator with memory (long) [$70.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $70, $00		; 70 00 ; Branch if overflow set to $70, $00 [Flow: branch]
	brk $8B.b		; 00 8B ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	ldx #$09.b		; A2 09 ; Load #$09.b into X register [Writes: X Index] [Flags: ZN]
	lda $0C4A.w,X		; BD 4A 0C ; Load $0C4A.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $F0, $06		; F0 06 ; Branch if equal to $F0, $06 [Flow: branch]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $F8		; 10 F8 ; Branch if plus to $10, $F8 [Flow: branch]
	.db $82, $AC, $00		; 82 AC 00 ; Branch always long to $82, $AC, $00 [Flow: branch]
	lda #$3C.b		; A9 3C ; Load #$3C.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C4A.w,X		; 9D 4A 0C ; Store accumulator to $0C4A.w,X [Reads: Accumulator, X Index]
	stz $0C5E.w,X		; 9E 5E 0C ; Store zero to $0C5E.w,X [Reads: X Index]
	lda #$04.b		; A9 04 ; Load #$04.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C68.w,X		; [PATTERN: Memory clearing operation] 9D 68 0C ; Store accumulator to $0C68.w,X [Reads: Accumulator, X Index]
	lda $EE.b		; A5 EE ; Load $EE.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0C7C.w,X		; 9D 7C 0C ; Store accumulator to $0C7C.w,X [Reads: Accumulator, X Index]
	stz $74.b		; 64 74 ; Store zero to $74.b
	stz $75.b		; 64 75 ; Store zero to $75.b
	lda $2F.b		; A5 2F ; Load $2F.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: ZN]
	lda $F971.w,Y		; B9 71 F9 ; Load $F971.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $10		; D0 10 ; Branch if not equal to $D0, $10 [Flow: branch]
	lda $0079.w		; AD 79 00 ; Load $0079.w into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	cpy #$00.b		; C0 00 ; Compare #$00.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $D0, $03		; D0 03 ; Branch if not equal to $D0, $03 [Flow: branch]
	eor #$FF.b		; 49 FF ; Exclusive OR #$FF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	sta $74.b		; 85 74 ; Store accumulator to $74.b [Reads: Accumulator]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $72.b		; 85 72 ; Store accumulator to $72.b [Reads: Accumulator]
	lda $F975.w,Y		; B9 75 F9 ; Load $F975.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $10		; D0 10 ; Branch if not equal to $D0, $10 [Flow: branch]
	lda $0079.w		; AD 79 00 ; Load $0079.w into accumulator [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	cpy #$02.b		; C0 02 ; Compare #$02.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $D0, $03		; D0 03 ; Branch if not equal to $D0, $03 [Flow: branch]
	eor #$FF.b		; 49 FF ; Exclusive OR #$FF.b with accumulator [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	sta $75.b		; 85 75 ; Store accumulator to $75.b [Reads: Accumulator]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $73.b		; 85 73 ; Store accumulator to $73.b [Reads: Accumulator]
	jsl $0DBA71.l		; 22 71 BA 0D ; Jump to subroutine long $0DBA71.l [Writes: Stack Pointer] [Flow: call]
	sta $08.b		; 85 08 ; Store accumulator to $08.b [Reads: Accumulator]
	and $72.b		; 25 72 ; Logical AND $72.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $04.b		; 85 04 ; Store accumulator to $04.b [Reads: Accumulator]
	stz $05.b		; 64 05 ; Store zero to $05.b
	lda $08.b		; A5 08 ; Load $08.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	sta $06.b		; 85 06 ; Store accumulator to $06.b [Reads: Accumulator]
	stz $07.b		; 64 07 ; Store zero to $07.b
	ldy $2F.b		; A4 2F ; Load $2F.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: ZN]
.ACCU 16
	rep #$20		; C2 20
	lda $74.b		; A5 74 ; Load $74.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and #$00FF.w		; 29 FF 00 ; Logical AND #$00FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$0080.w		; C9 80 00 ; Compare #$0080.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $90, $03		; 90 03 ; Branch if carry clear to $90, $03 [Flow: branch]
	ora #$FF00.w		; 09 00 FF ; Logical OR #$FF00.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $20.b		; 65 20 ; Add $20.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F961.w,Y		; 79 61 F9 ; Add $F961.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $04.b		; 65 04 ; Add $04.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
	lda $75.b		; A5 75 ; Load $75.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and #$00FF.w		; 29 FF 00 ; Logical AND #$00FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$0080.w		; C9 80 00 ; Compare #$0080.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $90, $03		; 90 03 ; Branch if carry clear to $90, $03 [Flow: branch]
	ora #$FF00.w		; 09 00 FF ; Logical OR #$FF00.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $22.b		; 65 22 ; Add $22.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $F969.w,Y		; 79 69 F9 ; Add $F969.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $06.b		; 65 06 ; Add $06.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0BFA.w,X		; 9D FA 0B ; Store accumulator to $0BFA.w,X [Reads: Accumulator, X Index]
	lda $01.b		; A5 01 ; Load $01.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0C0E.w,X		; 9D 0E 0C ; Store accumulator to $0C0E.w,X [Reads: Accumulator, X Index]
	lda $02.b		; A5 02 ; Load $02.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0C04.w,X		; 9D 04 0C ; Store accumulator to $0C04.w,X [Reads: Accumulator, X Index]
	lda $03.b		; A5 03 ; Load $03.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0C18.w,X		; 9D 18 0C ; Store accumulator to $0C18.w,X [Reads: Accumulator, X Index]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0A.b		; 69 0A ; Add #$0A.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: ZN]
	jsr $FA43.w		; 20 43 FA ; Jump to subroutine at $FA43.w [Writes: Stack Pointer] [Flow: call]
	ldx $0FA0.w		; AE A0 0F ; Load $0FA0.w into X register [Writes: X Index] [Flags: ZN]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	lda $0C22.w,X		; BD 22 0C ; Load $0C22.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $0C36.w,X		; 7D 36 0C ; Add $0C36.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C36.w,X		; 9D 36 0C ; Store accumulator to $0C36.w,X [Reads: Accumulator, X Index]
	ldy #$00.b		; A0 00 ; Load #$00.b into Y register [Writes: Y Index] [Flags: ZN]
	lda $0C22.w,X		; BD 22 0C ; Load $0C22.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: XVNMZIDC]
	.db $10, $03		; 10 03 ; Branch if plus to $10, $03 [Flow: branch]
	ora #$F0.b		; 09 F0 ; Logical OR #$F0.b with accumulator [Writes: Accumulator] [Flags: ZN]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: ZN]
	adc $0BFA.w,X		; 7D FA 0B ; Add $0BFA.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0BFA.w,X		; 9D FA 0B ; Store accumulator to $0BFA.w,X [Reads: Accumulator, X Index]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	adc $0C0E.w,X		; 7D 0E 0C ; Add $0C0E.w,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sta $0C0E.w,X		; 9D 0E 0C ; Store accumulator to $0C0E.w,X [Reads: Accumulator, X Index]
	rts		; 60 ; Return from subroutine [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	phb		; [PATTERN: Function entry: Data bank preservation prologue] 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $2F.b		; [PATTERN: Memory clearing operation] 85 2F ; Store accumulator to $2F.b [Reads: Accumulator]
	lda #$01.b		; A9 01 ; Load #$01.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $036B.w		; 8D 6B 03 ; Store accumulator to $036B.w [Reads: Accumulator]
	stz $030D.w		; 9C 0D 03 ; Store zero to $030D.w
	stz $030A.w		; 9C 0A 03 ; Store zero to $030A.w
	lda #$05.b		; A9 05 ; Load #$05.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $030B.w		; 8D 0B 03 ; Store accumulator to $030B.w [Reads: Accumulator]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $7EF372.l		; [PATTERN: Memory clearing operation] 8F 72 F3 7E ; Store accumulator (long) $7EF372.l [Reads: Accumulator]
	sta $7EF36D.l		; 8F 6D F3 7E ; Store accumulator (long) $7EF36D.l [Reads: Accumulator]
	jsl $07F1FA.l		; 22 FA F1 07 ; Jump to subroutine long $07F1FA.l [Writes: Stack Pointer] [Flow: call]
	stz $02F5.w		; 9C F5 02 ; Store zero to $02F5.w
	stz $0351.w		; 9C 51 03 ; Store zero to $0351.w
	stz $02E0.w		; [PATTERN: Memory clearing operation] 9C E0 02 ; Store zero to $02E0.w
	stz $48.b		; 64 48 ; Store zero to $48.b
	stz $02EC.w		; 9C EC 02 ; Store zero to $02EC.w
	stz $4D.b		; 64 4D ; Store zero to $4D.b
	stz $46.b		; 64 46 ; Store zero to $46.b
	stz $0373.w		; [PATTERN: Memory clearing operation] 9C 73 03 ; Store zero to $0373.w
	stz $02E1.w		; 9C E1 02 ; Store zero to $02E1.w
	stz $5E.b		; 64 5E ; Store zero to $5E.b
	stz $03F7.w		; 9C F7 03 ; Store zero to $03F7.w
	lda $7EF357.l		; AF 57 F3 7E ; Load long $7EF357.l into accumulator [Writes: Accumulator] [Flags: ZN]
	.db $F0, $02		; [PATTERN: Memory clearing operation] F0 02 ; Branch if equal to $F0, $02 [Flow: branch]
	stz $56.b		; 64 56 ; Store zero to $56.b
	stz $03F5.w		; 9C F5 03 ; Store zero to $03F5.w
	stz $03F6.w		; 9C F6 03 ; Store zero to $03F6.w
	jsl $0DBB67.l		; 22 67 BB 0D ; Jump to subroutine long $0DBB67.l [Writes: Stack Pointer] [Flow: call]
	ora #$27.b		; 09 27 ; Logical OR #$27.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $012E.w		; 8D 2E 01 ; Store accumulator to $012E.w [Reads: Accumulator]
	lda #$06.b		; A9 06 ; Load #$06.b into accumulator [Writes: Accumulator] [Flags: ZN]
	cmp $7EF35C.l		; CF 5C F3 7E ; Compare accumulator (long) $7EF35C.l [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $18		; F0 18 ; Branch if equal to $F0, $18 [Flow: branch]
	cmp $7EF35D.l		; CF 5D F3 7E ; Compare accumulator (long) $7EF35D.l [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $12		; F0 12 ; Branch if equal to $F0, $12 [Flow: branch]
	cmp $7EF35E.l		; CF 5E F3 7E ; Compare accumulator (long) $7EF35E.l [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $0C		; [PATTERN: Memory clearing operation] F0 0C ; Branch if equal to $F0, $0C [Flow: branch]
	cmp $7EF35F.l		; CF 5F F3 7E ; Compare accumulator (long) $7EF35F.l [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $06		; F0 06 ; Branch if equal to $F0, $06 [Flow: branch]
	stz $05FC.w		; 9C FC 05 ; Store zero to $05FC.w
	stz $05FD.w		; 9C FD 05 ; Store zero to $05FD.w
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ldx #$04.b		; A2 04 ; Load #$04.b into X register [Writes: X Index] [Flags: ZN]
	lda $0C4A.w,X		; BD 4A 0C ; Load $0C4A.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$22.b		; C9 22 ; Compare #$22.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $05		; D0 05 ; Branch if not equal to $D0, $05 [Flow: branch]
	lda #$01.b		; A9 01 ; Load #$01.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03B1.w,X		; 9D B1 03 ; Store accumulator to $03B1.w,X [Reads: Accumulator, X Index]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $F1		; 10 F1 ; Branch if plus to $10, $F1 [Flow: branch]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ldy $0C72.w,X		; BC 72 0C ; Load Y register $0C72.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	lda $0BFA.w,X		; BD FA 0B ; Load $0BFA.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
	lda $0C0E.w,X		; BD 0E 0C ; Load $0C0E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sta $01.b		; 85 01 ; Store accumulator to $01.b [Reads: Accumulator]
.ACCU 16
	rep #$20		; C2 20
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	eor #$FFFF.w		; 49 FF FF ; Exclusive OR #$FFFF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0BFA.w,X		; 9D FA 0B ; Store accumulator to $0BFA.w,X [Reads: Accumulator, X Index]
	lda $01.b		; A5 01 ; Load $01.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $0C0E.w,X		; 9D 0E 0C ; Store accumulator to $0C0E.w,X [Reads: Accumulator, X Index]
	lda $1B.b		; A5 1B ; Load $1B.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $52		; D0 52 ; Branch if not equal to $D0, $52 [Flow: branch]
	cpy #$02.b		; C0 02 ; Compare #$02.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $D0, $27		; D0 27 ; Branch if not equal to $D0, $27 [Flow: branch]
.ACCU 16
	rep #$20		; C2 20
	lda $0600.w		; AD 00 06 ; Load $0600.w into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0001.w		; 69 01 00 ; Add #$0001.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
	lda $0602.w		; AD 02 06 ; Load $0602.w into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$FFFF.w		; 69 FF FF ; Add #$FFFF.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $04.b		; 85 04 ; Store accumulator to $04.b [Reads: Accumulator]
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $E8.b		; 65 E8 ; Add $E8.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $02.b		; C5 02 ; Compare $02.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	.db $F0, $08		; F0 08 ; Branch if equal to $F0, $08 [Flow: branch]
	.db $90, $06		; 90 06 ; Branch if carry clear to $90, $06 [Flow: branch]
	cmp $04.b		; C5 04 ; Compare $04.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	.db $F0, $02		; F0 02 ; Branch if equal to $F0, $02 [Flow: branch]
	.db $90, $29		; 90 29 ; Branch if carry clear to $90, $29 [Flow: branch]
	.db $80, $25		; 80 25 ; Branch always to $80, $25 [Flow: branch]
.ACCU 16
	rep #$20		; C2 20
	lda $0604.w		; AD 04 06 ; Load $0604.w into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0001.w		; 69 01 00 ; Add #$0001.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
	lda $0606.w		; AD 06 06 ; Load $0606.w into accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$FFFF.w		; 69 FF FF ; Add #$FFFF.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $04.b		; 85 04 ; Store accumulator to $04.b [Reads: Accumulator]
	lda $00.b		; A5 00 ; Load $00.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $E2.b		; 65 E2 ; Add $E2.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp $02.b		; C5 02 ; Compare $02.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	.db $F0, $08		; F0 08 ; Branch if equal to $F0, $08 [Flow: branch]
	.db $90, $06		; 90 06 ; Branch if carry clear to $90, $06 [Flow: branch]
	cmp $04.b		; C5 04 ; Compare $04.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	.db $F0, $02		; F0 02 ; Branch if equal to $F0, $02 [Flow: branch]
	.db $90, $02		; 90 02 ; Branch if carry clear to $90, $02 [Flow: branch]
	stz $00.b		; 64 00 ; Store zero to $00.b
.ACCU 8
	sep #$20		; E2 20
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	ldx $5D.b,Y		; B6 5D ; Load X register $5D.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: ZN]
	lda ($30.b,X)		; A1 30 ; Load accumulator ($30.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN]
	adc #$B5.b		; 69 B5 ; Add #$B5.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	lda $24.b,S		; A3 24 ; Load accumulator (stack relative) $24.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: ZN]
	stx $AC.b,Y		; 96 AC ; Store X register $AC.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	adc ($5F.b,S),Y		; 73 5F ; Add with carry (stack relative indirect indexed) ($5F.b,S),Y [Reads: Stack Pointer, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	sta ($48.b)		; 92 48 ; Store accumulator (indirect) ($48.b) [Reads: Accumulator, Direct Page]
	eor ($81.b)		; 52 81 ; Exclusive OR accumulator with memory (indirect) ($81.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	and $7F95.w,Y		; 39 95 7F ; AND accumulator with memory $7F95.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jsr $5D88.w		; 20 88 5D ; Jump to subroutine at $5D88.w [Writes: Stack Pointer] [Flow: call]
	bit $98.b,X		; 34 98 ; Test bits $98.b,X [Reads: X Index, Direct Page] [Flags: ZVN] [Flow: branch]
	ldy $51D2.w,X		; BC D2 51 ; Load Y register $51D2.w,X [Reads: X Index] [Writes: Y Index] [Flags: ZN]
	adc [$A2.b],Y		; 77 A2 ; Add with carry (long indexed) [$A2.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZVNC]
	eor [$94.b]		; 47 94 ; Exclusive OR accumulator with memory (long) [$94.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	lda ($34.b)		; B2 34 ; Load accumulator (indirect) ($34.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	.db $30, $62		; 30 62 ; Branch if minus to $30, $62 [Flow: branch]
	sta $465176.l,X		; 9F 76 51 46 ; Store accumulator (long,X) $465176.l,X [Reads: Accumulator, X Index]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	jmp $58619B.l		; 5C 9B 61 58 ; Jump long to $58619B.l [Flow: jump]
	sta $4C.b,X		; 95 4C ; Store accumulator to $4C.b,X [Reads: Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: ZN]
	ror $12CB.w,X		; 7E CB 12 ; Rotate right $12CB.w,X [Reads: X Index] [Flags: ZNC]
	.db $D0, $70		; D0 70 ; Branch if not equal to $D0, $70 [Flow: branch]
	ldx $46.b		; A6 46 ; Load $46.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: ZN]
	lda $7E5040.l,X		; BF 40 50 7E ; Load long $7E5040.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	sty $612D.w		; 8C 2D 61 ; Store Y register to $612D.w [Reads: Y Index]
	ldy $2088.w		; AC 88 20 ; Load $2088.w into Y register [Writes: Y Index] [Flags: ZN]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZNC]
	adc ($5F.b)		; 72 5F ; Add with carry (indirect) ($5F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	eor ($80.b)		; 52 80 ; Exclusive OR accumulator with memory (indirect) ($80.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($4A.b),Y		; 31 4A ; AND accumulator with memory ($4A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($78.b,X)		; 61 78 ; Add with carry ($78.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stx $B5A2.w		; 8E A2 B5 ; Store X register to $B5A2.w [Reads: X Index]
	cmp $D4.b		; C5 D4 ; Compare $D4.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($EC.b,X)		; E1 EC ; Subtract with carry ($EC.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pea $FEFB.w		; F4 FB FE ; Push absolute address $FEFB.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	sbc $F4FBFE.l,X		; FF FE FB F4 ; Subtract with carry (long,X) $F4FBFE.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cpx $D4E1.w		; EC E1 D4 ; Compare $D4E1.w with X register [Reads: X Index] [Flags: ZNC]
	cmp $B5.b		; C5 B5 ; Compare $B5.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	ldx #$8E.b		; A2 8E ; Load #$8E.b into X register [Writes: X Index] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($4A.b,X)		; 61 4A ; Add with carry ($4A.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($4A.b),Y		; 31 4A ; AND accumulator with memory ($4A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($78.b,X)		; 61 78 ; Add with carry ($78.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stx $B5A2.w		; 8E A2 B5 ; Store X register to $B5A2.w [Reads: X Index]
	cmp $D4.b		; C5 D4 ; Compare $D4.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($EC.b,X)		; E1 EC ; Subtract with carry ($EC.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pea $FEFB.w		; F4 FB FE ; Push absolute address $FEFB.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	sbc $F4FBFE.l,X		; FF FE FB F4 ; Subtract with carry (long,X) $F4FBFE.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cpx $D4E1.w		; EC E1 D4 ; Compare $D4E1.w with X register [Reads: X Index] [Flags: ZNC]
	cmp $B5.b		; C5 B5 ; Compare $B5.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	ldx #$8E.b		; A2 8E ; Load #$8E.b into X register [Writes: X Index] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($4A.b,X)		; 61 4A ; Add with carry ($4A.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	sbc $F4FBFE.l,X		; FF FE FB F4 ; Subtract with carry (long,X) $F4FBFE.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cpx $D4E1.w		; EC E1 D4 ; Compare $D4E1.w with X register [Reads: X Index] [Flags: ZNC]
	cmp $B5.b		; C5 B5 ; Compare $B5.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	ldx #$8E.b		; A2 8E ; Load #$8E.b into X register [Writes: X Index] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($4A.b,X)		; 61 4A ; Add with carry ($4A.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($4A.b),Y		; 31 4A ; AND accumulator with memory ($4A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($78.b,X)		; 61 78 ; Add with carry ($78.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stx $B5A2.w		; 8E A2 B5 ; Store X register to $B5A2.w [Reads: X Index]
	cmp $D4.b		; C5 D4 ; Compare $D4.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($EC.b,X)		; E1 EC ; Subtract with carry ($EC.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pea $FEFB.w		; F4 FB FE ; Push absolute address $FEFB.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	sbc $F4FBFE.l,X		; FF FE FB F4 ; Subtract with carry (long,X) $F4FBFE.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	cpx $D4E1.w		; EC E1 D4 ; Compare $D4E1.w with X register [Reads: X Index] [Flags: ZNC]
	cmp $B5.b		; C5 B5 ; Compare $B5.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	ldx #$8E.b		; A2 8E ; Load #$8E.b into X register [Writes: X Index] [Flags: ZN]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	adc ($4A.b,X)		; 61 4A ; Add with carry ($4A.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	and ($19.b),Y		; 31 19 ; AND accumulator with memory ($19.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	brk $19.b		; 00 19 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($4A.b),Y		; 31 4A ; AND accumulator with memory ($4A.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: ZN]
	adc ($78.b,X)		; 61 78 ; Add with carry ($78.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	stx $B5A2.w		; 8E A2 B5 ; Store X register to $B5A2.w [Reads: X Index]
	cmp $D4.b		; C5 D4 ; Compare $D4.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	sbc ($EC.b,X)		; E1 EC ; Subtract with carry ($EC.b,X) [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	pea $FEFB.w		; F4 FB FE ; Push absolute address $FEFB.w to stack [Writes: Stack Pointer] [SNES: Pushes 16-bit address to stack]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $00.b		; 00 00 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $01.b		; 00 01 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	ora ($01.b,X)		; 01 01 ; Logical OR ($01.b,X) with accumulator [Reads: X Index, Direct Page] [Writes: Accumulator] [Flags: ZN] [SNES: Indexed indirect addressing]
	inc $FF.b,X		; F6 FF ; Increment memory $FF.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	inc $FF.b,X		; F6 FF ; Increment memory $FF.b,X [Reads: X Index, Direct Page] [Flags: ZN]
	cop $00.b		; 02 00 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cop $00.b		; 02 00 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sed		; F8 ; Set decimal flag [Flags: D]
	sbc $F80000.l,X		; FF 00 00 F8 ; Subtract with carry (long,X) $F80000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $F40000.l,X		; FF 00 00 F4 ; Subtract with carry (long,X) $F40000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $04FFF4.l,X		; FF F4 FF 04 ; Subtract with carry (long,X) $04FFF4.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $04.b		; 00 04 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $F8.b		; 00 F8 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sbc $F80000.l,X		; FF 00 00 F8 ; Subtract with carry (long,X) $F80000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $F80000.l,X		; FF 00 00 F8 ; Subtract with carry (long,X) $F80000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $F80000.l,X		; FF 00 00 F8 ; Subtract with carry (long,X) $F80000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $F60000.l,X		; FF 00 00 F6 ; Subtract with carry (long,X) $F60000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $02FFF6.l,X		; FF F6 FF 02 ; Subtract with carry (long,X) $02FFF6.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $02.b		; 00 02 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $F8.b		; 00 F8 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sbc $F80000.l,X		; FF 00 00 F8 ; Subtract with carry (long,X) $F80000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $F40000.l,X		; FF 00 00 F4 ; Subtract with carry (long,X) $F40000.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $04FFF4.l,X		; FF F4 FF 04 ; Subtract with carry (long,X) $04FFF4.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	brk $04.b		; 00 04 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $C6.b		; 00 C6 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	dec $C6.b		; C6 C6 ; Decrement $C6.b [Reads: Direct Page] [Flags: ZN]
	dec $C4.b		; C6 C4 ; Decrement $C4.b [Reads: Direct Page] [Flags: ZN]
	cpy $C4.b		; C4 C4 ; Compare $C4.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cpy $D2.b		; C4 D2 ; Compare $D2.b with Y register [Reads: Direct Page, Y Index] [Flags: ZNC]
	cmp ($D2.b)		; D2 D2 ; Compare accumulator (indirect) ($D2.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp ($C5.b)		; D2 C5 ; Compare accumulator (indirect) ($C5.b) [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $C5.b		; C5 C5 ; Compare $C5.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	cmp $C6.b		; C5 C6 ; Compare $C6.b with accumulator [Reads: Accumulator, Direct Page] [Flags: ZNC]
	stx $46.b		; 86 46 ; Store X register to $46.b [Reads: X Index]
	asl $46.b		; 06 46 ; Arithmetic shift left $46.b [Reads: Direct Page] [Flags: ZNC]
	dec $06.b		; C6 06 ; Decrement $06.b [Reads: Direct Page] [Flags: ZN]
	stx $C6.b		; 86 C6 ; Store X register to $C6.b [Reads: X Index]
	stx $46.b		; 86 46 ; Store X register to $46.b [Reads: X Index]
	asl $46.b		; 06 46 ; Arithmetic shift left $46.b [Reads: Direct Page] [Flags: ZNC]
	dec $06.b		; C6 06 ; Decrement $06.b [Reads: Direct Page] [Flags: ZN]
	stx $A5.b		; 86 A5 ; Store X register to $A5.b [Reads: X Index]
	eor $02C9.w,X		; 5D C9 02 ; Exclusive OR accumulator with memory $02C9.w,X [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $D0, $13		; D0 13 ; Branch if not equal to $D0, $13 [Flow: branch]
	ldy #$00.b		; A0 00 ; Load #$00.b into Y register [Writes: Y Index] [Flags: ZN]
	lda $02E0.w		; AD E0 02 ; Load $02E0.w into accumulator [Writes: Accumulator] [Flags: ZN]
	.db $F0, $0A		; F0 0A ; Branch if equal to $F0, $0A [Flow: branch]
	ldy #$17.b		; A0 17 ; Load #$17.b into Y register [Writes: Y Index] [Flags: ZN]
	lda $7EF357.l		; AF 57 F3 7E ; Load long $7EF357.l into accumulator [Writes: Accumulator] [Flags: ZN]
	.db $F0, $02		; F0 02 ; Branch if equal to $F0, $02 [Flow: branch]
	ldy #$1C.b		; A0 1C ; Load #$1C.b into Y register [Writes: Y Index] [Flags: ZN]
	sty $5D.b		; 84 5D ; Store Y register to $5D.b [Reads: Y Index]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	lda $8A.b		; A5 8A ; Load $8A.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp #$0F.b		; C9 0F ; Compare #$0F.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $0F		; D0 0F ; Branch if not equal to $D0, $0F [Flow: branch]
	ldx #$04.b		; A2 04 ; Load #$04.b into X register [Writes: X Index] [Flags: ZN]
	lda $0C4A.w,X		; BD 4A 0C ; Load $0C4A.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$41.b		; C9 41 ; Compare #$41.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $03		; D0 03 ; Branch if not equal to $D0, $03 [Flow: branch]
	stz $0C4A.w,X		; 9E 4A 0C ; Store zero to $0C4A.w,X [Reads: X Index]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $F3		; 10 F3 ; Branch if plus to $10, $F3 [Flow: branch]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	lda $0BFA.w,Y		; B9 FA 0B ; Load $0BFA.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $0C.b		; 85 0C ; Store accumulator to $0C.b [Reads: Accumulator]
	lda $0C0E.w,Y		; B9 0E 0C ; Load $0C0E.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $0D.b		; 85 0D ; Store accumulator to $0D.b [Reads: Accumulator]
	lda $0C04.w,Y		; B9 04 0C ; Load $0C04.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $0E.b		; 85 0E ; Store accumulator to $0E.b [Reads: Accumulator]
	lda $0C18.w,Y		; B9 18 0C ; Load $0C18.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: ZN]
	sta $0F.b		; 85 0F ; Store accumulator to $0F.b [Reads: Accumulator]
.ACCU 16
	rep #$20		; C2 20
	lda $0C.b		; A5 0C ; Load $0C.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $E8.b		; E5 E8 ; Subtract $E8.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$00F0.w		; C9 F0 00 ; Compare #$00F0.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $B0, $0A		; B0 0A ; Branch if carry set to $B0, $0A [Flow: branch]
	lda $0E.b		; A5 0E ; Load $0E.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sec		; 38 ; Set carry flag [Flags: C]
	sbc $E2.b		; E5 E2 ; Subtract $E2.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	cmp #$00F4.w		; C9 F4 00 ; Compare #$00F4.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $90, $07		; 90 07 ; Branch if carry clear to $90, $07 [Flow: branch]
.ACCU 8
	sep #$20		; E2 20
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0C4A.w,Y		; 99 4A 0C ; Store accumulator to $0C4A.w,Y [Reads: Accumulator, Y Index]
.ACCU 8
	sep #$20		; E2 20
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	sta $03FC.w		; 8D FC 03 ; Store accumulator to $03FC.w [Reads: Accumulator]
	jsl $07F1FA.l		; 22 FA F1 07 ; Jump to subroutine long $07F1FA.l [Writes: Stack Pointer] [Flow: call]
	ldx #$04.b		; A2 04 ; Load #$04.b into X register [Writes: X Index] [Flags: ZN]
	lda $0C4A.w,X		; BD 4A 0C ; Load $0C4A.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$30.b		; C9 30 ; Compare #$30.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $0B		; F0 0B ; Branch if equal to $F0, $0B [Flow: branch]
	cmp #$31.b		; C9 31 ; Compare #$31.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $07		; [PATTERN: Memory clearing operation] F0 07 ; Branch if equal to $F0, $07 [Flow: branch]
	cmp #$05.b		; C9 05 ; Compare #$05.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $06		; D0 06 ; Branch if not equal to $D0, $06 [Flow: branch]
	stz $035F.w		; 9C 5F 03 ; Store zero to $035F.w
	stz $0C4A.w,X		; 9E 4A 0C ; Store zero to $0C4A.w,X [Reads: X Index]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: ZN]
	.db $10, $E8		; 10 E8 ; Branch if plus to $10, $E8 [Flow: branch]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	lda $10.b		; [PATTERN: Memory clearing operation] A5 10 ; Load $10.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	cmp #$0E.b		; C9 0E ; Compare #$0E.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $13		; F0 13 ; Branch if equal to $F0, $13 [Flow: branch]
	stz $0223.w		; 9C 23 02 ; Store zero to $0223.w
	stz $1CD8.w		; 9C D8 1C ; Store zero to $1CD8.w
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $11.b		; 85 11 ; Store accumulator to $11.b [Reads: Accumulator]
	lda $10.b		; A5 10 ; Load $10.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $010C.w		; 8D 0C 01 ; Store accumulator to $010C.w [Reads: Accumulator]
	lda #$0E.b		; A9 0E ; Load #$0E.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $10.b		; 85 10 ; Store accumulator to $10.b [Reads: Accumulator]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	phb		; [PATTERN: Function entry: Data bank preservation prologue] 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	jsl $099757.l		; 22 57 97 09 ; Jump to subroutine long $099757.l [Writes: Stack Pointer] [Flow: call]
	plx		; FA ; Pull X register [Reads: Stack Pointer] [Writes: X Index, Stack Pointer] [Flags: ZN]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: ZN]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	lda $0C5E.w,X		; BD 5E 0C ; Load $0C5E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	.db $F0, $03		; F0 03 ; Branch if equal to $F0, $03 [Flow: branch]
	.db $82, $99, $00		; 82 99 00 ; Branch always long to $82, $99, $00 [Flow: branch]
	stz $0A.b		; 64 0A ; Store zero to $0A.b
	lda $03E4.w,X		; BD E4 03 ; Load $03E4.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$09.b		; C9 09 ; Compare #$09.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $3C		; D0 3C ; Branch if not equal to $D0, $3C [Flow: branch]
	dec $03E1.w,X		; DE E1 03 ; Decrement memory $03E1.w,X [Reads: X Index] [Flags: ZN]
	.db $10, $14		; 10 14 ; Branch if plus to $10, $14 [Flow: branch]
	lda #$03.b		; A9 03 ; Load #$03.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03E1.w,X		; 9D E1 03 ; Store accumulator to $03E1.w,X [Reads: Accumulator, X Index]
	inc $03D2.w,X		; FE D2 03 ; Increment memory $03D2.w,X [Reads: X Index] [Flags: ZN]
	lda $03D2.w,X		; BD D2 03 ; Load $03D2.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$03.b		; C9 03 ; Compare #$03.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $05		; D0 05 ; Branch if not equal to $D0, $05 [Flow: branch]
	lda #$00.b		; A9 00 ; Load #$00.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $03D2.w,X		; 9D D2 03 ; Store accumulator to $03D2.w,X [Reads: Accumulator, X Index]
	lda $03D2.w,X		; BD D2 03 ; Load $03D2.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$04.b		; 69 04 ; Add #$04.b to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $0A.b		; 85 0A ; Store accumulator to $0A.b [Reads: Accumulator]
	lda $012E.w		; AD 2E 01 ; Load $012E.w into accumulator [Writes: Accumulator] [Flags: ZN]
	and #$3F.b		; 29 3F ; Logical AND #$3F.b with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$0B.b		; C9 0B ; Compare #$0B.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $F0, $04		; F0 04 ; Branch if equal to $F0, $04 [Flow: branch]
	cmp #$21.b		; C9 21 ; Compare #$21.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $16		; D0 16 ; Branch if not equal to $D0, $16 [Flow: branch]
	stz $012E.w		; 9C 2E 01 ; Store zero to $012E.w
	jsl $0DBB5E.l		; 22 5E BB 0D ; Jump to subroutine long $0DBB5E.l [Writes: Stack Pointer] [Flow: call]
	ora #$28.b		; 09 28 ; Logical OR #$28.b with accumulator [Writes: Accumulator] [Flags: ZN]
	sta $012E.w		; 8D 2E 01 ; Store accumulator to $012E.w [Reads: Accumulator]
	.db $80, $08		; 80 08 ; Branch always to $80, $08 [Flow: branch]
	cmp #$40.b		; C9 40 ; Compare #$40.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $04		; D0 04 ; Branch if not equal to $D0, $04 [Flow: branch]
	lda #$03.b		; A9 03 ; Load #$03.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0A.b		; 85 0A ; Store accumulator to $0A.b [Reads: Accumulator]
	lda $029E.w,X		; BD 9E 02 ; Load $029E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	cmp #$02.b		; C9 02 ; Compare #$02.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $90, $08		; 90 08 ; Branch if carry clear to $90, $08 [Flow: branch]
	cmp #$FC.b		; C9 FC ; Compare #$FC.b with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $B0, $04		; B0 04 ; Branch if carry set to $B0, $04 [Flow: branch]
	lda #$02.b		; A9 02 ; Load #$02.b into accumulator [Writes: Accumulator] [Flags: ZN]
	sta $0A.b		; 85 0A ; Store accumulator to $0A.b [Reads: Accumulator]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: ZN]
	cmp $02EC.w		; CD EC 02 ; Compare $02EC.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $D0, $07		; D0 07 ; Branch if not equal to $D0, $07 [Flow: branch]
	lda $0308.w		; AD 08 03 ; Load $0308.w into accumulator [Writes: Accumulator] [Flags: ZN]
	and #$80.b		; 29 80 ; Logical AND #$80.b with accumulator [Writes: Accumulator] [Flags: ZN]
	.db $D0, $2F		; D0 2F ; Branch if not equal to $D0, $2F [Flow: branch]
	cpy #$04.b		; C0 04 ; Compare #$04.b with Y register [Reads: Y Index] [Flags: ZNC]
	.db $F0, $02		; F0 02 ; Branch if equal to $F0, $02 [Flow: branch]
	ldy #$00.b		; A0 00 ; Load #$00.b into Y register [Writes: Y Index] [Flags: ZN]
.ACCU 16
	rep #$20		; C2 20
	lda $029E.w,X		; BD 9E 02 ; Load $029E.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: ZN]
	and #$00FF.w		; 29 FF 00 ; Logical AND #$00FF.w with accumulator [Writes: Accumulator] [Flags: ZN]
	cmp #$0080.w		; C9 80 00 ; Compare #$0080.w with accumulator [Reads: Accumulator] [Flags: ZNC]
	.db $90, $03		; 90 03 ; Branch if carry clear to $90, $03 [Flow: branch]
	ora #$FF00.w		; 09 00 FF ; Logical OR #$FF00.w with accumulator [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc $0C.b		; 65 0C ; Add $0C.b to accumulator with carry [Reads: Direct Page] [Writes: Accumulator] [Flags: ZVNC]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$0002.w		; 69 02 00 ; Add #$0002.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $00.b		; 85 00 ; Store accumulator to $00.b [Reads: Accumulator]
	lda $0E.b		; A5 0E ; Load $0E.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	clc		; 18 ; Clear carry flag [Flags: C]
	adc #$FFF8.w		; 69 F8 FF ; Add #$FFF8.w to accumulator with carry [Writes: Accumulator] [Flags: ZVNC]
	sta $02.b		; 85 02 ; Store accumulator to $02.b [Reads: Accumulator]
.ACCU 8
	sep #$20		; E2 20
	lda $65.b		; A5 65 ; Load $65.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: ZN]
	sta $04.b		; 85 04 ; Store accumulator to $04.b [Reads: Accumulator]
	clc		; 18 ; Clear carry flag [Flags: C]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sec		; 38 ; Set carry flag [Flags: C]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $FF		; Opcode FF overrunning bank boundry at 07FFFE. Skipping. ; Subtract with carry (long,X) $FF [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
	.db $FF		; Opcode FF overrunning bank boundry at 07FFFF. Skipping. ; Subtract with carry (long,X) $FF [Reads: X Index] [Writes: Accumulator] [Flags: ZVNC]
.ENDS

.BANK 28 SLOT 0
.ORG $0000

.SECTION "Bank28" FORCE

	adc $76007A.l,X		; 7F 7A 00 76 ; Add long $76007A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	mvp $7F,$68		; 44 68 7F ; Move block positive $7F,$68 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $75.b		; 00 75 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $88.b,X		; 76 88 ; Rotate right $88.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	mvp $7F,$68		; 44 68 7F ; Move block positive $7F,$68 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $12.b		; 00 12 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $00591E.l		; 2F 1E 59 00 ; AND accumulator with memory (long) $00591E.l [Writes: Accumulator] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $C702.w,Y		; 59 02 C7 ; Exclusive OR accumulator with memory $C702.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2EB4.w		; 2D B4 2E ; Logical AND $2EB4.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $1275.w,X		; 1E 75 12 ; Arithmetic shift left $1275.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $00591E.l		; 2F 1E 59 00 ; AND accumulator with memory (long) $00591E.l [Writes: Accumulator] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E10.w,Y		; 59 10 2E ; Exclusive OR accumulator with memory $2E10.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $76.b,Y		; B6 76 ; Load X register $76.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $280D.w,Y		; 59 0D 28 ; Exclusive OR accumulator with memory $280D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1259.w		; 2D 59 12 ; Logical AND $1259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $00591E.l		; 2F 1E 59 00 ; AND accumulator with memory (long) $00591E.l [Writes: Accumulator] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $C702.w,Y		; 59 02 C7 ; Exclusive OR accumulator with memory $C702.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2EB4.w		; 2D B4 2E ; Logical AND $2EB4.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $7A7F.w,X		; 1E 7F 7A ; Arithmetic shift left $7A7F.w,X [Reads: X Index] [Flags: NCZ]
	brk $34.b		; 00 34 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: MXCZIDVN] [Flow: return]

	eor $006C.w,Y		; 59 6C 00 ; Exclusive OR accumulator with memory $006C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $40.b,X		; 35 40 ; Logical AND $40.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $016C.w,Y		; 59 6C 01 ; Exclusive OR accumulator with memory $016C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $36.b,X		; 75 36 ; Add $36.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: MXCZIDVN] [Flow: return]

	eor $026C.w,Y		; 59 6C 02 ; Exclusive OR accumulator with memory $026C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and [$40.b],Y		; 37 40 ; AND accumulator with memory (long indexed) [$40.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $036C.w,Y		; 59 6C 03 ; Exclusive OR accumulator with memory $036C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1C59E8.l,X		; 7F E8 59 1C ; Add long $1C59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sta ($51.b,S),Y		; 93 51 ; Store accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and $A359.w		; 2D 59 A3 ; Logical AND $A359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda ($DE.b,X)		; A1 DE ; Load accumulator ($DE.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $D5CF.w,Y		; 59 CF D5 ; Exclusive OR accumulator with memory $D5CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1F75.w		; 20 75 1F ; Jump to subroutine at $1F75.w [Writes: Stack Pointer] [Flow: call]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $BB.b		; 25 BB ; Logical AND $BB.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$27		; E2 27
	jsr $E359.w		; 20 59 E3 ; Jump to subroutine at $E359.w [Writes: Stack Pointer] [Flow: call]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $74.b		; 00 74 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	mvp $8A,$75		; 44 75 8A ; Move block positive $8A,$75 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	ror $8A.b,X		; 76 8A ; Rotate right $8A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($7F.b),Y		; 71 7F ; Add with carry ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NCVZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $74.b		; 00 74 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $44.b,X		; 75 44 ; Add $44.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ror $8A.b,X		; 76 8A ; Rotate right $8A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($7F.b),Y		; 71 7F ; Add with carry ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NCVZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $74.b		; 00 74 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $8A.b,X		; 75 8A ; Add $8A.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ror $44.b,X		; 76 44 ; Rotate right $44.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($7F.b),Y		; 71 7F ; Add with carry ($7F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NCVZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $74.b		; 00 74 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	mvp $8A,$75		; 44 75 8A ; Move block positive $8A,$75 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	adc ($7F.b)		; 72 7F ; Add with carry (indirect) ($7F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $74.b		; 00 74 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $44.b,X		; 75 44 ; Add $44.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	adc ($7F.b)		; 72 7F ; Add with carry (indirect) ($7F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $76.b		; 00 76 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	adc $8A.b,X		; 75 8A ; Add $8A.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	mvp $7F,$6F		; 44 6F 7F ; Move block positive $7F,$6F [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	brk $75.b		; 00 75 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ror $8A.b,X		; 76 8A ; Rotate right $8A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	mvp $7F,$6F		; 44 6F 7F ; Move block positive $7F,$6F [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B3AC.w,Y		; 59 AC B3 ; Exclusive OR accumulator with memory $B3AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $A8.b		; C5 A8 ; Compare $A8.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $751A.w,Y		; 59 1A 75 ; Exclusive OR accumulator with memory $751A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	stx $9C.b,Y		; 96 9C ; Store X register $9C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	eor $321B.w,Y		; 59 1B 32 ; Exclusive OR accumulator with memory $321B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $C826.w,Y		; 59 26 C8 ; Exclusive OR accumulator with memory $C826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$B4.b]		; 27 B4 ; AND accumulator with memory (long) [$B4.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $7641.w		; 20 41 76 ; Jump to subroutine at $7641.w [Writes: Stack Pointer] [Flow: call]
	ora $C7.b,S		; 03 C7 ; OR accumulator with stack relative $C7.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $D8591E.l		; 2F 1E 59 D8 ; AND accumulator with memory (long) $D8591E.l [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $41D0.w		; 2E D0 41 ; Rotate left $41D0.w [Flags: NCZ]
	adc $272714.l,X		; 7F 14 27 27 ; Add long $272714.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $426A.w,Y		; 59 6A 42 ; Exclusive OR accumulator with memory $426A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $C01D.w,X		; 9E 1D C0 ; Store zero to $C01D.w,X [Reads: X Index]
	cmp $752D27.l,X		; DF 27 2D 75 ; Compare accumulator (long,X) $752D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ldy $2F.b,X		; B4 2F ; Load Y register $2F.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $2F.b		; 25 2F ; Logical AND $2F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $B4.b		; A4 B4 ; Load $B4.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25DA.w,Y		; 59 DA 25 ; Exclusive OR accumulator with memory $25DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $E376.w,X		; 1D 76 E3 ; OR accumulator with memory $E376.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $D8591E.l		; 2F 1E 59 D8 ; AND accumulator with memory (long) $D8591E.l [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $43D0.w		; 2E D0 43 ; Rotate left $43D0.w [Flags: NCZ]
	ror $1373.w,X		; 7E 73 13 ; Rotate right $1373.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $8C59.w,X		; 1D 59 8C ; OR accumulator with memory $8C59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($22.b),Y		; D1 22 ; Compare accumulator ($22.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	eor $7390.w,Y		; 59 90 73 ; Exclusive OR accumulator with memory $7390.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $B5.b		; 25 B5 ; Logical AND $B5.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $41A5.w		; 2D A5 41 ; Logical AND $41A5.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $1F99.w,Y		; 59 99 1F ; Exclusive OR accumulator with memory $1F99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $A1CB.w,Y		; 59 CB A1 ; Exclusive OR accumulator with memory $A1CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $73.b,X		; B4 73 ; Load Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BA1B.w,Y		; 59 1B BA ; Exclusive OR accumulator with memory $BA1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $591E.w,X		; 1D 1E 59 ; OR accumulator with memory $591E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $21.b		; 45 21 ; Exclusive OR $21.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jmp $2E0159.l		; 5C 59 01 2E ; Jump long to $2E0159.l [Flow: jump]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lsr $41.b		; 46 41 ; Logical shift right $41.b [Reads: Direct Page] [Flags: NCZ]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	inc $27.b		; E6 27 ; Increment $27.b [Reads: Direct Page] [Flags: NZ]
	eor $25CE.w,Y		; 59 CE 25 ; Exclusive OR accumulator with memory $25CE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $D01A.w,X		; 1E 1A D0 ; Arithmetic shift left $D01A.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $B32C.w		; 2E 2C B3 ; Rotate left $B32C.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($D0.b,S),Y		; 73 D0 ; Add with carry (stack relative indirect indexed) ($D0.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	trb $2DCE.w		; 1C CE 2D ; Test and reset bits $2DCE.w [Reads: Accumulator] [Flags: Z]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2721.w		; 1C 21 27 ; Test and reset bits $2721.w [Reads: Accumulator] [Flags: Z]
	jsl $1E2E2A.l		; 22 2A 2E 1E ; Jump to subroutine long $1E2E2A.l [Writes: Stack Pointer] [Flow: call]
	eor $27B1.w,Y		; 59 B1 27 ; Exclusive OR accumulator with memory $27B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $9FA4.w,X		; 1D A4 9F ; OR accumulator with memory $9FA4.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	adc ($1B.b,S),Y		; 73 1B ; Add with carry (stack relative indirect indexed) ($1B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($6A.b,S),Y		; 73 6A ; Add with carry (stack relative indirect indexed) ($6A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $599F.w,Y		; 99 9F 59 ; Store accumulator to $599F.w,Y [Reads: Y Index, Accumulator]
	ldx $3E.b,Y		; B6 3E ; Load X register $3E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc ($12.b,S),Y		; 73 12 ; Add with carry (stack relative indirect indexed) ($12.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $D8591E.l		; 2F 1E 59 D8 ; AND accumulator with memory (long) $D8591E.l [Writes: Accumulator] [Flags: NZ]
	eor $2B0F.w,Y		; 59 0F 2B ; Exclusive OR accumulator with memory $2B0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $251E.w,Y		; 19 1E 25 ; OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $591A.w,X		; 1D 1A 59 ; OR accumulator with memory $591A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $CD51.w		; 2D 51 CD ; Logical AND $CD51.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $59DCB3.l,X		; 9F B3 DC 59 ; Store accumulator (long,X) $59DCB3.l,X [Reads: Accumulator, X Index]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and $421E.w		; 2D 1E 42 ; Logical AND $421E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $24.b,X		; 75 24 ; Add $24.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsl $8A3F1D.l		; 22 1D 3F 8A ; Jump to subroutine long $8A3F1D.l [Writes: Stack Pointer] [Flow: call]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D399.w,Y		; 59 99 D3 ; Exclusive OR accumulator with memory $D399.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jmp.w [$E159]		; DC 59 E1 ; Jump long indirect [$E159] [Flow: jump]
	lda $76.b		; A5 76 ; Load $76.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $51.b,S		; E3 51 ; Subtract stack-relative $51.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $2B20.w		; CD 20 2B ; Compare $2B20.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	eor $3EDC.w,Y		; 59 DC 3E ; Exclusive OR accumulator with memory $3EDC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ldx $7F3E.w,Y		; BE 3E 7F ; Load X register $7F3E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $29BD.w,Y		; 59 BD 29 ; Exclusive OR accumulator with memory $29BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D2.w,Y		; 59 D2 59 ; Exclusive OR accumulator with memory $59D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $75.b,S		; E3 75 ; Subtract stack-relative $75.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $59ABC0.l,X		; 9F C0 AB 59 ; Store accumulator (long,X) $59ABC0.l,X [Reads: Accumulator, X Index]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	cmp ($41.b,S),Y		; D3 41 ; Compare accumulator (stack relative indirect indexed) ($41.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $0F.b		; 45 0F ; Exclusive OR $0F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $76D8.w,Y		; 59 D8 76 ; Exclusive OR accumulator with memory $76D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $0159.w,X		; 5D 59 01 ; Exclusive OR accumulator with memory $0159.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $DA2D.w		; 2E 2D DA ; Rotate left $DA2D.w [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $29BD.w,Y		; 59 BD 29 ; Exclusive OR accumulator with memory $29BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lsr $41.b		; 46 41 ; Logical shift right $41.b [Reads: Direct Page] [Flags: NCZ]
	adc $BB59E8.l,X		; 7F E8 59 BB ; Add long $BB59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cmp ($2B.b,S),Y		; D3 2B ; Compare accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $8A41.w,X		; 1D 41 8A ; OR accumulator with memory $8A41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $75		; 30 75 ; Branch if minus to $30, $75 [Flow: branch]
	lda $59211C.l,X		; BF 1C 21 59 ; Load long $59211C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $59E3.w,Y		; 99 E3 59 ; Store accumulator to $59E3.w,Y [Reads: Y Index, Accumulator]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $8A3F2D.l,X		; 1F 2D 3F 8A ; Logical OR long $8A3F2D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $0F.b		; 45 0F ; Exclusive OR $0F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $76D8.w,Y		; 59 D8 76 ; Exclusive OR accumulator with memory $76D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $22E1.w,Y		; 59 E1 22 ; Exclusive OR accumulator with memory $22E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2EDA.w,Y		; 59 DA 2E ; Exclusive OR accumulator with memory $2EDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $27B0.w		; 1C B0 27 ; Test and reset bits $27B0.w [Reads: Accumulator] [Flags: Z]
	jsr $1A59.w		; 20 59 1A ; Jump to subroutine at $1A59.w [Writes: Stack Pointer] [Flow: call]
	eor $20D5.w,Y		; 59 D5 20 ; Exclusive OR accumulator with memory $20D5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $DA73.w,X		; 7E 73 DA ; Rotate right $DA73.w,X [Reads: X Index] [Flags: NCZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B6592D.l,X		; 1F 2D 59 B6 ; Logical OR long $B6592D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor ($46.b,X)		; 41 46 ; Exclusive OR accumulator with memory ($46.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $255108.l,X		; 7F 08 51 25 ; Add long $255108.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$2D.b],Y		; 97 2D ; Store accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5193.w		; 1C 93 51 ; Test and reset bits $5193.w [Reads: Accumulator] [Flags: Z]
	and $DF59.w		; 2D 59 DF ; Logical AND $DF59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	jsl $E35925.l		; 22 25 59 E3 ; Jump to subroutine long $E35925.l [Writes: Stack Pointer] [Flow: call]
	adc $8D.b,X		; 75 8D ; Add $8D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $28A5.w,Y		; 59 A5 28 ; Exclusive OR accumulator with memory $28A5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $763E.w,X		; 1D 3E 76 ; OR accumulator with memory $763E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $0F.b		; 45 0F ; Exclusive OR $0F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jmp $2E0159.l		; 5C 59 01 2E ; Jump long to $2E0159.l [Flow: jump]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $7ED0.w		; 2E D0 7E ; Rotate left $7ED0.w [Flags: NCZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $E159.w,X		; 1D 59 E1 ; OR accumulator with memory $E159.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E3.b		; A0 E3 ; Load #$E3.b into Y register [Writes: Y Index] [Flags: NZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $41.b,Y		; B6 41 ; Load X register $41.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lsr $7F.b		; 46 7F ; Logical shift right $7F.b [Reads: Direct Page] [Flags: NCZ]
	sbc $2D.b		; E5 2D ; Subtract $2D.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $2BBD.w,Y		; 59 BD 2B ; Exclusive OR accumulator with memory $2BBD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $29BD.w,Y		; 59 BD 29 ; Exclusive OR accumulator with memory $29BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7597.w,Y		; 59 97 75 ; Exclusive OR accumulator with memory $7597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $2D9D.w,Y		; 59 9D 2D ; Exclusive OR accumulator with memory $2D9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $94.b,X		; B4 94 ; Load Y register $94.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $7F41C7.l		; 22 C7 41 7F ; Jump to subroutine long $7F41C7.l [Writes: Stack Pointer] [Flow: call]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C699.w,Y		; 59 99 C6 ; Exclusive OR accumulator with memory $C699.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1FA0.w		; 2D A0 1F ; Logical AND $1FA0.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $1A2F.w,Y		; 59 2F 1A ; Exclusive OR accumulator with memory $1A2F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2E.b		; 25 2E ; Logical AND $2E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	sta $2C.b,X		; 95 2C ; Store accumulator to $2C.b,X [Reads: Accumulator, X Index]
	adc $B4.b,X		; 75 B4 ; Add $B4.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $D39A.w,Y		; 59 9A D3 ; Exclusive OR accumulator with memory $D39A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $0F.b		; 45 0F ; Exclusive OR $0F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	ror $01.b,X		; 76 01 ; Rotate right $01.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $DA2D.w		; 2E 2D DA ; Rotate left $DA2D.w [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	lda #$27.b		; A9 27 ; Load #$27.b into accumulator [Writes: Accumulator] [Flags: NZ]
	and $C659.w		; 2D 59 C6 ; Logical AND $C659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ror $C373.w,X		; 7E 73 C3 ; Rotate right $C373.w,X [Reads: X Index] [Flags: NCZ]
	eor $41B6.w,Y		; 59 B6 41 ; Exclusive OR accumulator with memory $41B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lsr $7F.b		; 46 7F ; Logical shift right $7F.b [Reads: Direct Page] [Flags: NCZ]
	trb $2C.b		; 14 2C ; Test and reset bits $2C.b [Reads: Accumulator] [Flags: Z]
	eor $25D2.w,Y		; 59 D2 25 ; Exclusive OR accumulator with memory $25D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $2CA6.w,X		; 9E A6 2C ; Store zero to $2CA6.w,X [Reads: X Index]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$A0.b],Y		; 97 A0 ; Store accumulator (long indexed) [$A0.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $42.b		; C4 42 ; Compare $42.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	adc $24.b,X		; 75 24 ; Add $24.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsl $8A411D.l		; 22 1D 41 8A ; Jump to subroutine long $8A411D.l [Writes: Stack Pointer] [Flow: call]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2599.w,Y		; 59 99 25 ; Exclusive OR accumulator with memory $2599.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx #$27.b		; A2 27 ; Load #$27.b into X register [Writes: X Index] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $A959.w		; 2D 59 A9 ; Logical AND $A959.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $76.b		; 26 76 ; Rotate left $76.b [Reads: Direct Page] [Flags: NCZ]
	rol $412C.w		; 2E 2C 41 ; Rotate left $412C.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $251A.w,Y		; 59 1A 25 ; Exclusive OR accumulator with memory $251A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $1D1A.w		; CE 1A 1D ; Decrement $1D1A.w [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	clv		; B8 ; Clear overflow flag [Flags: V]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $0C7F.w,X		; 3E 7F 0C ; Rotate left $0C7F.w,X [Reads: X Index] [Flags: NCZ]
	asl $2D1E.w,X		; 1E 1E 2D ; Arithmetic shift left $2D1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	lda ($C6.b,X)		; A1 C6 ; Load accumulator ($C6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA2522.l		; 2F 22 25 BA ; AND accumulator with memory (long) $BA2522.l [Writes: Accumulator] [Flags: NZ]
	jsr $751E.w		; 20 1E 75 ; Jump to subroutine at $751E.w [Writes: Stack Pointer] [Flow: call]
	sty $59AB.w		; 8C AB 59 ; Store Y register to $59AB.w [Reads: Y Index]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $7F41.w,X		; 1D 41 7F ; OR accumulator with memory $7F41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1CB42B.l		; 0F 2B B4 1C ; OR accumulator with memory (long) $1CB42B.l [Writes: Accumulator] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $1A2C.w		; 8D 2C 1A ; Store accumulator to $1A2C.w [Reads: Accumulator]
	ora $753E1E.l,X		; 1F 1E 3E 75 ; Logical OR long $753E1E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $D959.w		; 2C 59 D9 ; Test bits $D959.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $E359.w		; 2C 59 E3 ; Test bits $E359.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $B49F.w,Y		; 59 9F B4 ; Exclusive OR accumulator with memory $B49F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $5942.w		; 20 42 59 ; Jump to subroutine at $5942.w [Writes: Stack Pointer] [Flow: call]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	and $59087F.l,X		; 3F 7F 08 59 ; AND accumulator with memory (long,X) $59087F.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $27		; D0 27 ; Branch if not equal to $D0, $27 [Flow: branch]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $75.b		; 25 75 ; Logical AND $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	jsr $222E.w		; 20 2E 22 ; Jump to subroutine at $222E.w [Writes: Stack Pointer] [Flow: call]
	sta $D859.w,X		; 9D 59 D8 ; Store accumulator to $D859.w,X [Reads: Accumulator, X Index]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $2C51.w,X		; 1D 51 2C ; OR accumulator with memory $2C51.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $1A.b,X		; 76 1A ; Rotate right $1A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	trb $222D.w		; 1C 2D 22 ; Test and reset bits $222D.w [Reads: Accumulator] [Flags: Z]
	cmp [$2C.b]		; C7 2C ; Compare accumulator (long) [$2C.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $1A8C.w,Y		; 59 8C 1A ; Exclusive OR accumulator with memory $1A8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $BE20.w		; 2E 20 BE ; Rotate left $BE20.w [Flags: NCZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $B059.w		; 2C 59 B0 ; Test bits $B059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $737E.w		; 2C 7E 73 ; Test bits $737E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $251A.w		; 1C 1A 25 ; Test and reset bits $251A.w [Reads: Accumulator] [Flags: Z]
	eor $A6CB.w,Y		; 59 CB A6 ; Exclusive OR accumulator with memory $A6CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cmp [$25.b]		; C7 25 ; Compare accumulator (long) [$25.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx #$1A.b		; E0 1A ; Compare #$1A.b with X register [Reads: X Index] [Flags: NCZ]
	and #$C7.b		; 29 C7 ; Logical AND #$C7.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59A3.w		; 2D A3 59 ; Logical AND $59A3.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $28.b		; A5 28 ; Load $28.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $73DA.w,Y		; 59 DA 73 ; Exclusive OR accumulator with memory $73DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1F1E.w,X		; 1D 1E 1F ; OR accumulator with memory $1F1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $D891.w,X		; 1E 91 D8 ; Arithmetic shift left $D891.w,X [Reads: X Index] [Flags: NCZ]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $7ED8.w,Y		; 59 D8 7E ; Exclusive OR accumulator with memory $7ED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($25.b,S),Y		; 73 25 ; Add with carry (stack relative indirect indexed) ($25.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $A520.w,X		; 1E 20 A5 ; Arithmetic shift left $A520.w,X [Reads: X Index] [Flags: NCZ]
	ora $2B1A.w,X		; 1D 1A 2B ; OR accumulator with memory $2B1A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tsb $A192.w		; 0C 92 A1 ; Test and set bits $A192.w [Reads: Accumulator] [Flags: Z]
	ora ($30.b)		; 12 30 ; OR accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $7341.w,X		; 1D 41 73 ; OR accumulator with memory $7341.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $D7591D.l		; 22 1D 59 D7 ; Jump to subroutine long $D7591D.l [Writes: Stack Pointer] [Flow: call]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $222F.w,Y		; 59 2F 22 ; Exclusive OR accumulator with memory $222F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	ldx $73.b		; A6 73 ; Load $73.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1C9D.w,Y		; 59 9D 1C ; Exclusive OR accumulator with memory $1C9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $D073.w,X		; 7E 73 D0 ; Rotate right $D073.w,X [Reads: X Index] [Flags: NCZ]
	and $D0E2A0.l		; 2F A0 E2 D0 ; AND accumulator with memory (long) $D0E2A0.l [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	tsb $321A.w		; 0C 1A 32 ; Test and set bits $321A.w [Reads: Accumulator] [Flags: Z]
	sta [$73.b],Y		; 97 73 ; Store accumulator (long indexed) [$73.b],Y [Reads: Direct Page, Y Index, Accumulator]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $2D99.w,Y		; 59 99 2D ; Exclusive OR accumulator with memory $2D99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $7343.w,X		; 1E 43 73 ; Arithmetic shift left $7343.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $242B.w,X		; BD 2B 24 ; Load $242B.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $BD73.w,X		; 7E 73 BD ; Rotate right $BD73.w,X [Reads: X Index] [Flags: NCZ]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $DF59.w		; 2D 59 DF ; Logical AND $DF59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $211C.w		; 2D 1C 21 ; Logical AND $211C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A6A7.w,Y		; 59 A7 A6 ; Exclusive OR accumulator with memory $A6A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $8A3E1E.l		; 2F 1E 3E 8A ; AND accumulator with memory (long) $8A3E1E.l [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A61C.w,Y		; 59 1C A6 ; Exclusive OR accumulator with memory $A61C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $598F.w		; 2D 8F 59 ; Logical AND $598F.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2592.w		; 1C 92 25 ; Test and reset bits $2592.w [Reads: Accumulator] [Flags: Z]
	asl $D259.w,X		; 1E 59 D2 ; Arithmetic shift left $D259.w,X [Reads: X Index] [Flags: NCZ]
	and $9E.b		; 25 9E ; Logical AND $9E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $B4.b		; 24 B4 ; Test bits $B4.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	jsr $737E.w		; 20 7E 73 ; Jump to subroutine at $737E.w [Writes: Stack Pointer] [Flow: call]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $88.b,S		; 43 88 ; Exclusive OR accumulator with stack relative $88.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $88.b,S		; 43 88 ; Exclusive OR accumulator with stack relative $88.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $79.b,S		; 43 79 ; Exclusive OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and $0873.w		; 2D 73 08 ; Logical AND $0873.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $1D		; B0 1D ; Branch if carry set to $B0, $1D [Flow: branch]
	asl $0F59.w,X		; 1E 59 0F ; Arithmetic shift left $0F59.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b)		; 12 1E ; OR accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $5924.w,X		; 1E 24 59 ; Arithmetic shift left $5924.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251E.w,Y		; 59 1E 25 ; Exclusive OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $3EA6.w,X		; 1D A6 3E ; OR accumulator with memory $3EA6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $88.b,S		; 43 88 ; Exclusive OR accumulator with stack relative $88.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D27.w		; 2E 27 1D ; Rotate left $1D27.w [Flags: NCZ]
	ldx $D3.b		; A6 D3 ; Load $D3.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	.db $90, $3F		; 90 3F ; Branch if carry clear to $90, $3F [Flow: branch]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $18,$59		; 44 59 18 ; Move block positive $18,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $732C.w,X		; 1E 2C 73 ; Arithmetic shift left $732C.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $9159.w		; 2D 59 91 ; Logical AND $9159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $591F08.l,X		; 7F 08 1F 59 ; Add long $591F08.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ora $1F1E.w,X		; 1D 1E 1F ; OR accumulator with memory $1F1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $D891.w,X		; 1E 91 D8 ; Arithmetic shift left $D891.w,X [Reads: X Index] [Flags: NCZ]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $D2.b,X		; 75 D2 ; Add $D2.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $9E.b		; 25 9E ; Logical AND $9E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor $32BD.w,Y		; 59 BD 32 ; Exclusive OR accumulator with memory $32BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $20CE.w,Y		; 59 CE 20 ; Exclusive OR accumulator with memory $20CE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $22D876.l		; 8F 76 D8 22 ; Store accumulator (long) $22D876.l [Reads: Accumulator]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $932C.w,Y		; 59 2C 93 ; Exclusive OR accumulator with memory $932C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $32.b,Y		; B6 32 ; Load X register $32.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $42, $59		; 42 59 ; Reserved instruction
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $7F3E.w		; 2C 3E 7F ; Test bits $7F3E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora ($1A.b,S),Y		; 13 1A ; OR accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $CE21.w		; 2D 21 CE ; Logical AND $CE21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $0F59.w,X		; 1E 59 0F ; Arithmetic shift left $0F59.w,X [Reads: X Index] [Flags: NCZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $B459.w		; 2C 59 B4 ; Test bits $B459.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc $D8.b,X		; 75 D8 ; Add $D8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $280B.w,Y		; 59 0B 28 ; Exclusive OR accumulator with memory $280B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $412C.w,X		; 1D 2C 41 ; OR accumulator with memory $412C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	tsb $A692.w		; 0C 92 A6 ; Test and set bits $A692.w [Reads: Accumulator] [Flags: Z]
	ror $12.b,X		; 76 12 ; Rotate right $12.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $1A59.w,X		; 1D 59 1A ; OR accumulator with memory $1A59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592CB6.l,X		; DF B6 2C 59 ; Compare accumulator (long,X) $592CB6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cld		; D8 ; Clear decimal flag [Flags: D]
	dec $7F41.w		; CE 41 7F ; Decrement $7F41.w [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $E88A.w,X		; 3E 8A E8 ; Rotate left $E88A.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A8D.w,Y		; 59 8D 1A ; Exclusive OR accumulator with memory $1A8D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1CD0.w,Y		; 59 D0 1C ; Exclusive OR accumulator with memory $1CD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $28DA.w,Y		; 59 DA 28 ; Exclusive OR accumulator with memory $28DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $BA.b,X		; 75 BA ; Add $BA.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $411E.w		; 2D 1E 41 ; Logical AND $411E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $25221A.l,X		; 1F 1A 22 25 ; Logical OR long $25221A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $431D.w,X		; 1E 1D 43 ; Arithmetic shift left $431D.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cmp ($25.b)		; D2 25 ; Compare accumulator (indirect) ($25.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	stz $2CA6.w,X		; 9E A6 2C ; Store zero to $2CA6.w,X [Reads: X Index]
	eor $7EAD.w,Y		; 59 AD 7E ; Exclusive OR accumulator with memory $7EAD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ora $1C2E.w,X		; 1D 2E 1C ; OR accumulator with memory $1C2E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $AFA4.w		; 2D A4 AF ; Logical AND $AFA4.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc $32.b		; E6 32 ; Increment $32.b [Reads: Direct Page] [Flags: NZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy #$AF.b		; A0 AF ; Load #$AF.b into Y register [Writes: Y Index] [Flags: NZ]
	eor $73DA.w,Y		; 59 DA 73 ; Exclusive OR accumulator with memory $73DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $AF59.w,X		; 1D 59 AF ; OR accumulator with memory $AF59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $A897.w,Y		; 59 97 A8 ; Exclusive OR accumulator with memory $A897.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $3059.w,X		; 1D 59 30 ; OR accumulator with memory $3059.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit $2C.b		; 24 2C ; Test bits $2C.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $73411C.l		; 22 1C 41 73 ; Jump to subroutine long $73411C.l [Writes: Stack Pointer] [Flow: call]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $43		; D0 43 ; Branch if not equal to $D0, $43 [Flow: branch]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $288D.w,Y		; 59 8D 28 ; Exclusive OR accumulator with memory $288D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	cmp [$B9.b]		; C7 B9 ; Compare accumulator (long) [$B9.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $416A.w,Y		; 59 6A 41 ; Exclusive OR accumulator with memory $416A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1DB1.w,Y		; 59 B1 1D ; Exclusive OR accumulator with memory $1DB1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $751A.w,Y		; 59 1A 75 ; Exclusive OR accumulator with memory $751A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $251E1E.l,X		; 1F 1E 1E 25 ; Logical OR long $251E1E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda ($E3.b,S),Y		; B3 E3 ; Load accumulator (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $CDE0.w,Y		; 59 E0 CD ; Exclusive OR accumulator with memory $CDE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	and $1CB3.w		; 2D B3 1C ; Logical AND $1CB3.w with accumulator [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	.db $D0, $41		; D0 41 ; Branch if not equal to $D0, $41 [Flow: branch]
	adc $2C1E18.l,X		; 7F 18 1E 2C ; Add long $2C1E18.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	cmp $6A592C.l,X		; DF 2C 59 6A ; Compare accumulator (long,X) $6A592C.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $751D.w,X		; 1E 1D 75 ; Arithmetic shift left $751D.w,X [Reads: X Index] [Flags: NCZ]
	ldx $1E59.w,Y		; BE 59 1E ; Load X register $1E59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	bit $1A1C.w		; 2C 1C 1A ; Test bits $1A1C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	rol $1676.w,X		; 3E 76 16 ; Rotate left $1676.w,X [Reads: X Index] [Flags: NCZ]
	and ($A0.b,X)		; 21 A0 ; Logical AND ($A0.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2CDF.w,Y		; 59 DF 2C ; Exclusive OR accumulator with memory $2CDF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $591E2F.l		; 22 2F 1E 59 ; Jump to subroutine long $591E2F.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $737E.w,X		; 1D 7E 73 ; OR accumulator with memory $737E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $221A.w		; 2C 1A 22 ; Test bits $221A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jmp $270E.w		; 4C 0E 27 ; Jump to $270E.w [Flow: jump]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $21B5B4.l,X		; 1F B4 B5 21 ; Logical OR long $21B5B4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DE.b		; A4 DE ; Load $DE.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $73.b		; C6 73 ; Decrement $73.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $41.b,S		; C3 41 ; Compare accumulator (stack relative) $41.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	jmp $737E.w		; 4C 7E 73 ; Jump to $737E.w [Flow: jump]
	eor $88.b,S		; 43 88 ; Exclusive OR accumulator with stack relative $88.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $88.b,S		; 43 88 ; Exclusive OR accumulator with stack relative $88.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $C259D3.l,X		; BF D3 59 C2 ; Load long $C259D3.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($BA.b,S),Y		; 73 BA ; Add with carry (stack relative indirect indexed) ($BA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $8E1F.w,Y		; 59 1F 8E ; Exclusive OR accumulator with memory $8E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $7ED8.w,Y		; 59 D8 7E ; Exclusive OR accumulator with memory $7ED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $1C8B.w,X		; 1D 8B 1C ; OR accumulator with memory $1C8B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $2E.b		; 25 2E ; Logical AND $2E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2C9A.w		; 2D 9A 2C ; Logical AND $2C9A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $1E2159.l,X		; 1F 59 21 1E ; Logical OR long $1E2159.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $25CE.w,Y		; 59 CE 25 ; Exclusive OR accumulator with memory $25CE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $D01A.w,X		; 1E 1A D0 ; Arithmetic shift left $D01A.w,X [Reads: X Index] [Flags: NCZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($D0.b,S),Y		; 73 D0 ; Add with carry (stack relative indirect indexed) ($D0.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $D0E2A0.l		; 2F A0 E2 D0 ; AND accumulator with memory (long) $D0E2A0.l [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	wai		; CB ; Wait for interrupt
	lda ($E2.b,X)		; A1 E2 ; Load accumulator ($E2.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $2873.w,X		; 7E 73 28 ; Rotate right $2873.w,X [Reads: X Index] [Flags: NCZ]
	cmp $1EE1.w,X		; DD E1 1E ; Compare accumulator $1EE1.w,X [Reads: X Index] [Flags: NCZ]
	and $26.b		; 25 26 ; Logical AND $26.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BA.w,Y		; 59 BA 27 ; Exclusive OR accumulator with memory $27BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $7341.w,X		; 1D 41 73 ; OR accumulator with memory $7341.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b,X)		; 01 1E ; Logical OR ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $D759.w,X		; 1E 59 D7 ; Arithmetic shift left $D759.w,X [Reads: X Index] [Flags: NCZ]
	and $B159.w		; 2D 59 B1 ; Logical AND $B159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $2C.b		; A5 2C ; Load $2C.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sta [$A8.b],Y		; 97 A8 ; Store accumulator (long indexed) [$A8.b],Y [Reads: Direct Page, Y Index, Accumulator]
	asl $B659.w,X		; 1E 59 B6 ; Arithmetic shift left $B659.w,X [Reads: X Index] [Flags: NCZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $2DBA.w,Y		; 59 BA 2D ; Exclusive OR accumulator with memory $2DBA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $5943.w,X		; 1E 43 59 ; Arithmetic shift left $5943.w,X [Reads: X Index] [Flags: NCZ]
	sta $28DB.w,X		; 9D DB 28 ; Store accumulator to $28DB.w,X [Reads: Accumulator, X Index]
	and ($7E.b)		; 32 7E ; AND accumulator with memory (indirect) ($7E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $9759.w,X		; 1D 59 97 ; OR accumulator with memory $9759.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $2159.w,X		; 1E 59 21 ; Arithmetic shift left $2159.w,X [Reads: X Index] [Flags: NCZ]
	asl $9D59.w,X		; 1E 59 9D ; Arithmetic shift left $9D59.w,X [Reads: X Index] [Flags: NCZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($8E.b,S),Y		; 73 8E ; Add with carry (stack relative indirect indexed) ($8E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	rol $E88A.w,X		; 3E 8A E8 ; Rotate left $E88A.w,X [Reads: X Index] [Flags: NCZ]
	eor $9F99.w,Y		; 59 99 9F ; Exclusive OR accumulator with memory $9F99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3EB6.w,Y		; 59 B6 3E ; Exclusive OR accumulator with memory $3EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	trb $CE1A.w		; 1C 1A CE ; Test and reset bits $CE1A.w [Reads: Accumulator] [Flags: Z]
	ora $59252E.l,X		; 1F 2E 25 59 ; Logical OR long $59252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $D8.b		; C5 D8 ; Compare $D8.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NCZ]
	dec $753E.w		; CE 3E 75 ; Decrement $753E.w [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59B8.w,Y		; 59 B8 59 ; Exclusive OR accumulator with memory $59B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $1A2C.w,Y		; 99 2C 1A ; Store accumulator to $1A2C.w,Y [Reads: Y Index, Accumulator]
	and $07591E.l		; 2F 1E 59 07 ; AND accumulator with memory (long) $07591E.l [Writes: Accumulator] [Flags: NZ]
	and ($2B.b)		; 32 2B ; AND accumulator with memory (indirect) ($2B.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	rol $6B7F.w,X		; 3E 7F 6B ; Rotate left $6B7F.w,X [Reads: X Index] [Flags: NCZ]
	cop $7A.b		; 02 7A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $07.b,S		; 03 07 ; OR accumulator with stack relative $07.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $2925.w,X		; 1E 25 29 ; Arithmetic shift left $2925.w,X [Reads: X Index] [Flags: NCZ]
	eor $43BE.w,Y		; 59 BE 43 ; Exclusive OR accumulator with memory $43BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora ($76.b,X)		; 01 76 ; Logical OR ($76.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $43BE.w,Y		; 59 BE 43 ; Exclusive OR accumulator with memory $43BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2B.b		; 29 2B ; Logical AND #$2B.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $C7.b,X		; B5 C7 ; Load $C7.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	lda ($B4.b,X)		; A1 B4 ; Load accumulator ($B4.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	adc ($C6.b,S),Y		; 73 C6 ; Add with carry (stack relative indirect indexed) ($C6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2592.w		; 1C 92 25 ; Test and reset bits $2592.w [Reads: Accumulator] [Flags: Z]
	asl $7341.w,X		; 1E 41 73 ; Arithmetic shift left $7341.w,X [Reads: X Index] [Flags: NCZ]
	tsb $5932.w		; 0C 32 59 ; Test and set bits $5932.w [Reads: Accumulator] [Flags: Z]
	and [$1A.b]		; 27 1A ; AND accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $B559.w,Y		; BE 59 B5 ; Load X register $B559.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $20.b		; 00 20 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($27.b,X)		; 21 27 ; Logical AND ($27.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsl $594226.l		; 22 26 42 59 ; Jump to subroutine long $594226.l [Writes: Stack Pointer] [Flow: call]
	ldx $9F59.w		; AE 59 9F ; Load $9F59.w into X register [Writes: X Index] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cmp $5920D5.l		; CF D5 20 59 ; Compare accumulator (long) $5920D5.l [Reads: Accumulator] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $B526.w,Y		; 59 26 B5 ; Exclusive OR accumulator with memory $B526.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $20B4.w		; 2C B4 20 ; Test bits $20B4.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($20.b,S),Y		; 73 20 ; Add with carry (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $2C252B.l		; 22 2B 25 2C ; Jump to subroutine long $2C252B.l [Writes: Stack Pointer] [Flow: call]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $B9C7.w,Y		; 59 C7 B9 ; Exclusive OR accumulator with memory $B9C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $BDCE.w,Y		; 59 CE BD ; Exclusive OR accumulator with memory $BDCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $43.b,X		; B4 43 ; Load Y register $43.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	ror $0073.w,X		; 7E 73 00 ; Rotate right $0073.w,X [Reads: X Index] [Flags: NCZ]
	jsr $211A.w		; 20 1A 21 ; Jump to subroutine at $211A.w [Writes: Stack Pointer] [Flow: call]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	ldx $D059.w		; AE 59 D0 ; Load $D059.w into X register [Writes: X Index] [Flags: NZ]
	jsl $1CA433.l		; 22 33 A4 1C ; Jump to subroutine long $1CA433.l [Writes: Stack Pointer] [Flow: call]
	cmp [$DB.b]		; C7 DB ; Compare accumulator (long) [$DB.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $73.b		; C6 73 ; Decrement $73.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $B58C.w,Y		; 59 8C B5 ; Exclusive OR accumulator with memory $B58C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($C3.b,S),Y		; 73 C3 ; Add with carry (stack relative indirect indexed) ($C3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2F		; D0 2F ; Branch if not equal to $D0, $2F [Flow: branch]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $5127.w,Y		; BE 27 51 ; Load X register $5127.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	bit $737E.w		; 2C 7E 73 ; Test bits $737E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $41.b		; 25 41 ; Logical AND $41.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $89.b,S		; 43 89 ; Exclusive OR accumulator with stack relative $89.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2E1D.w,Y		; 59 1D 2E ; Exclusive OR accumulator with memory $2E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $59C7.w,X		; 1E C7 59 ; Arithmetic shift left $59C7.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($25.b)		; 92 25 ; Store accumulator (indirect) ($25.b) [Reads: Direct Page, Accumulator]
	asl $7E41.w,X		; 1E 41 7E ; Arithmetic shift left $7E41.w,X [Reads: X Index] [Flags: NCZ]
	adc ($0F.b,S),Y		; 73 0F ; Add with carry (stack relative indirect indexed) ($0F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $43BE.w,Y		; 59 BE 43 ; Exclusive OR accumulator with memory $43BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $7A026B.l,X		; 7F 6B 02 7A ; Add long $7A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $07.b,S		; 03 07 ; OR accumulator with stack relative $07.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $2925.w,X		; 1E 25 29 ; Arithmetic shift left $2925.w,X [Reads: X Index] [Flags: NCZ]
	eor $43BE.w,Y		; 59 BE 43 ; Exclusive OR accumulator with memory $43BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2E1D.w,Y		; 59 1D 2E ; Exclusive OR accumulator with memory $2E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $59C7.w,X		; 1E C7 59 ; Arithmetic shift left $59C7.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $1C.b,X		; 76 1C ; Rotate right $1C.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	sta ($25.b)		; 92 25 ; Store accumulator (indirect) ($25.b) [Reads: Direct Page, Accumulator]
	asl $7E41.w,X		; 1E 41 7E ; Arithmetic shift left $7E41.w,X [Reads: X Index] [Flags: NCZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B8.w,Y		; 59 B8 59 ; Exclusive OR accumulator with memory $59B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	cmp $59B5.w		; CD B5 59 ; Compare $59B5.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1DB0.w,Y		; 59 B0 1D ; Exclusive OR accumulator with memory $1DB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $29A0.w,X		; 1D A0 29 ; OR accumulator with memory $29A0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sty $21.b,X		; 94 21 ; Store Y register $21.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	adc ($A9.b,S),Y		; 73 A9 ; Add with carry (stack relative indirect indexed) ($A9.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $2C2D.w		; 2E 2D 2C ; Rotate left $2C2D.w [Flags: NCZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	dec $8A.b		; C6 8A ; Decrement $8A.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73DA.w,Y		; 59 DA 73 ; Exclusive OR accumulator with memory $73DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A20.w,Y		; 59 20 1A ; Exclusive OR accumulator with memory $1A20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $B4A0.w,X		; 1D A0 B4 ; OR accumulator with memory $B4A0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $1D22.w		; 2C 22 1D ; Test bits $1D22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $7F41.w,X		; 1E 41 7F ; Arithmetic shift left $7F41.w,X [Reads: X Index] [Flags: NCZ]
	inc $CD.b		; E6 CD ; Increment $CD.b [Reads: Direct Page] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1CD0.w,Y		; 59 D0 1C ; Exclusive OR accumulator with memory $1CD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $592D.w		; CE 2D 59 ; Decrement $592D.w [Flags: NZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1A2C.w		; 2C 2C 1A ; Test bits $1A2C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	ldy $75.b,X		; B4 75 ; Load Y register $75.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $282B.w,Y		; 59 2B 28 ; Exclusive OR accumulator with memory $282B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $592C.w,X		; 1D 2C 59 ; OR accumulator with memory $592C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ror $12.b,X		; 76 12 ; Rotate right $12.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	sta ($1C.b,S),Y		; 93 1C ; Store accumulator (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and $1A2E.w		; 2D 2E 1A ; Logical AND $1A2E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($41.b)		; 32 41 ; AND accumulator with memory (indirect) ($41.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $59D8.w		; CD D8 59 ; Compare $59D8.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $BC73.w,X		; 7E 73 BC ; Rotate right $BC73.w,X [Reads: X Index] [Flags: NCZ]
	eor $CDD8.w,Y		; 59 D8 CD ; Exclusive OR accumulator with memory $CDD8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2C2E.w,Y		; 59 2E 2C ; Exclusive OR accumulator with memory $2C2E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2D.b		; E5 2D ; Subtract $2D.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $27C8.w,Y		; 59 C8 27 ; Exclusive OR accumulator with memory $27C8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ldx $2D27.w,Y		; BE 27 2D ; Load X register $2D27.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and $1F.b		; 25 1F ; Logical AND $1F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	adc $C3.b,X		; 75 C3 ; Add $C3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1A59.w		; AD 59 1A ; Load $1A59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	and $2D0876.l,X		; 3F 76 08 2D ; AND accumulator with memory (long,X) $2D0876.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	and #$B6.b		; 29 B6 ; Logical AND #$B6.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	ora $2B1A.w,X		; 1D 1A 2B ; OR accumulator with memory $2B1A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	sty $7EE3.w		; 8C E3 7E ; Store Y register to $7EE3.w [Reads: Y Index]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($51.b,S),Y		; 93 51 ; Store accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and $D059.w		; 2D 59 D0 ; Logical AND $D059.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $DE59.w,X		; 1E 59 DE ; Arithmetic shift left $DE59.w,X [Reads: X Index] [Flags: NCZ]
	cmp $C7.b		; C5 C7 ; Compare $C7.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NCZ]
	asl $7341.w,X		; 1E 41 73 ; Arithmetic shift left $7341.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $51E359.l,X		; 1F 59 E3 51 ; Logical OR long $51E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $1ACE.w		; CD CE 1A ; Compare $1ACE.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	ora $4232.w,X		; 1D 32 42 ; OR accumulator with memory $4232.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $AC8B.w		; 2D 8B AC ; Logical AND $AC8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $0773.w,X		; 3E 73 07 ; Rotate left $0773.w,X [Reads: X Index] [Flags: NCZ]
	asl $2925.w,X		; 1E 25 29 ; Arithmetic shift left $2925.w,X [Reads: X Index] [Flags: NCZ]
	eor $59BE.w,Y		; 59 BE 59 ; Exclusive OR accumulator with memory $59BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2E.b		; 29 2E ; Logical AND #$2E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b),Y		; D1 59 ; Compare accumulator ($59.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda #$26.b		; A9 26 ; Load #$26.b into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $7F3E2D.l,X		; 1F 2D 3E 7F ; Logical OR long $7F3E2D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2E29.w,Y		; 59 29 2E ; Exclusive OR accumulator with memory $2E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $A7.b		; 25 A7 ; Logical AND $A7.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($DA.b,X)		; A1 DA ; Load accumulator ($DA.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $C3.b,X		; 75 C3 ; Add $C3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $8A41C8.l,X		; 9F C8 41 8A ; Store accumulator (long,X) $8A41C8.l,X [Reads: Accumulator, X Index]
	eor $0F.b		; 45 0F ; Exclusive OR $0F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	ror $01.b,X		; 76 01 ; Rotate right $01.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $DA2D.w		; 2E 2D DA ; Rotate left $DA2D.w [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sty $2821.w		; 8C 21 28 ; Store Y register to $2821.w [Reads: Y Index]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2803.w,Y		; 59 03 28 ; Exclusive OR accumulator with memory $2803.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	eor $59C7.w,Y		; 59 C7 59 ; Exclusive OR accumulator with memory $59C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $0273.w,X		; 7E 73 02 ; Rotate right $0273.w,X [Reads: X Index] [Flags: NCZ]
	cmp [$DB.b]		; C7 DB ; Compare accumulator (long) [$DB.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $411D1A.l		; 0F 1A 1D 41 ; OR accumulator with memory (long) $411D1A.l [Writes: Accumulator] [Flags: NZ]
	eor $7F46.w,Y		; 59 46 7F ; Exclusive OR accumulator with memory $7F46.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	brk $25.b		; 00 25 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	.db $42, $8A		; 42 8A ; Reserved instruction
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $AB8B.w		; 2D 8B AB ; Logical AND $AB8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $C6C5.w,Y		; 59 C5 C6 ; Exclusive OR accumulator with memory $C6C5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $97.b,X		; 75 97 ; Add $97.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $C259.w,X		; 1D 59 C2 ; OR accumulator with memory $C259.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2C1E1C.l		; 22 1C 1E 2C ; Jump to subroutine long $2C1E1C.l [Writes: Stack Pointer] [Flow: call]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ror $B8.b,X		; 76 B8 ; Rotate right $B8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1C		; D0 1C ; Branch if not equal to $D0, $1C [Flow: branch]
	dec $592D.w		; CE 2D 59 ; Decrement $592D.w [Flags: NZ]
	and #$94.b		; 29 94 ; Logical AND #$94.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($42.b,X)		; 21 42 ; Logical AND ($42.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1F59.w		; 2D 59 1F ; Logical AND $1F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $7ED32B.l		; 22 2B D3 7E ; Jump to subroutine long $7ED32B.l [Writes: Stack Pointer] [Flow: call]
	adc ($E0.b,S),Y		; 73 E0 ; Add with carry (stack relative indirect indexed) ($E0.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D32B22.l,X		; 1F 22 2B D3 ; Logical OR long $D32B22.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $BB1F.w,Y		; 59 1F BB ; Exclusive OR accumulator with memory $BB1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	asl $8B2D.w,X		; 1E 2D 8B ; Arithmetic shift left $8B2D.w,X [Reads: X Index] [Flags: NCZ]
	eor $3EAC.w,Y		; 59 AC 3E ; Exclusive OR accumulator with memory $3EAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $59426A.l,X		; 7F 6A 42 59 ; Add long $59426A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $B5.b		; 25 B5 ; Logical AND $B5.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1CA0.w		; 2D A0 1C ; Logical AND $1CA0.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $2E1F.w		; CE 1F 2E ; Decrement $2E1F.w [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($41.b)		; 32 41 ; AND accumulator with memory (indirect) ($41.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $75.b		; E6 75 ; Increment $75.b [Reads: Direct Page] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	lda $C71C.w,Y		; B9 1C C7 ; Load $C71C.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $20.b,X		; B4 20 ; Load Y register $20.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	ror $8E.b,X		; 76 8E ; Rotate right $8E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $25D2.w,Y		; 59 D2 25 ; Exclusive OR accumulator with memory $25D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $2CA6.w,X		; 9E A6 2C ; Store zero to $2CA6.w,X [Reads: X Index]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $A21F.w,Y		; 59 1F A2 ; Exclusive OR accumulator with memory $A21F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	adc ($26.b,S),Y		; 73 26 ; Add with carry (stack relative indirect indexed) ($26.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $43AF94.l,X		; 1F 94 AF 43 ; Logical OR long $43AF94.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $5993.w,Y		; 59 93 59 ; Exclusive OR accumulator with memory $5993.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $21.b,X		; B4 21 ; Load Y register $21.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	rol $59BC.w		; 2E BC 59 ; Rotate left $59BC.w [Flags: NCZ]
	ora $1DA522.l,X		; 1F 22 A5 1D ; Logical OR long $1DA522.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $DE73.w,X		; 7E 73 DE ; Rotate right $DE73.w,X [Reads: X Index] [Flags: NCZ]
	eor $2BD3.w,Y		; 59 D3 2B ; Exclusive OR accumulator with memory $2BD3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	eor $A6CB.w,Y		; 59 CB A6 ; Exclusive OR accumulator with memory $A6CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $733E.w		; 2C 3E 73 ; Test bits $733E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $89.b,S		; 43 89 ; Exclusive OR accumulator with stack relative $89.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $89.b,S		; 43 89 ; Exclusive OR accumulator with stack relative $89.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($03.b,S),Y		; 73 03 ; Add with carry (stack relative indirect indexed) ($03.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D27.w		; 2E 27 1D ; Rotate left $1D27.w [Flags: NCZ]
	ldx $D3.b		; A6 D3 ; Load $D3.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	.db $90, $3F		; 90 3F ; Branch if carry clear to $90, $3F [Flow: branch]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $18,$59		; 44 59 18 ; Move block positive $18,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $732C.w,X		; 1E 2C 73 ; Arithmetic shift left $732C.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $9159.w		; 2D 59 91 ; Logical AND $9159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $D159E8.l,X		; 7F E8 59 D1 ; Add long $D159E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BB.b		; 25 BB ; Logical AND $BB.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2BBD.w,Y		; 59 BD 2B ; Exclusive OR accumulator with memory $2BBD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $2C.b		; 24 2C ; Test bits $2C.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc $D8.b,X		; 75 D8 ; Add $D8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $251E.w,Y		; 59 1E 25 ; Exclusive OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $BDA1.w,X		; 1D A1 BD ; OR accumulator with memory $BDA1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $591E.w,X		; 1D 1E 59 ; OR accumulator with memory $591E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $29BD.w,Y		; 59 BD 29 ; Exclusive OR accumulator with memory $29BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $E1.b,X		; 76 E1 ; Rotate right $E1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ldy #$E3.b		; A0 E3 ; Load #$E3.b into Y register [Writes: Y Index] [Flags: NZ]
	eor $311E.w,Y		; 59 1E 31 ; Exclusive OR accumulator with memory $311E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$BB.b		; 29 BB ; Logical AND #$BB.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $7E41.w		; CE 41 7E ; Decrement $7E41.w [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $59B8C0.l,X		; 9F C0 B8 59 ; Store accumulator (long,X) $59B8C0.l,X [Reads: Accumulator, X Index]
	sbc ($91.b,X)		; E1 91 ; Subtract with carry ($91.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $739F.w,Y		; 59 9F 73 ; Exclusive OR accumulator with memory $739F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($2D.b),Y		; 31 2D ; AND accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $251A.w,Y		; 99 1A 25 ; Store accumulator to $251A.w,Y [Reads: Y Index, Accumulator]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $59B6B5.l		; 2F B5 B6 59 ; AND accumulator with memory (long) $59B6B5.l [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc ($A8.b,S),Y		; 73 A8 ; Add with carry (stack relative indirect indexed) ($A8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $272E.w		; 2D 2E 27 ; Logical AND $272E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $2D59.w,X		; 1E 59 2D ; Arithmetic shift left $2D59.w,X [Reads: X Index] [Flags: NCZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $59426A.l,X		; 7F 6A 42 59 ; Add long $59426A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $C730.w		; 8D 30 C7 ; Store accumulator to $C730.w [Reads: Accumulator]
	ora $1FA6.w,X		; 1D A6 1F ; OR accumulator with memory $1FA6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $3E25.w		; 2E 25 3E ; Rotate left $3E25.w [Flags: NCZ]
	adc $00.b,X		; 75 00 ; Add $00.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $0859.w		; 2C 59 08 ; Test bits $0859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $5942.w		; 2D 42 59 ; Logical AND $5942.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $D859.w		; AD 59 D8 ; Load $D859.w into accumulator [Writes: Accumulator] [Flags: NZ]
	ror $CB.b,X		; 76 CB ; Rotate right $CB.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	lda ($C6.b,X)		; A1 C6 ; Load accumulator ($C6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $2CB4.w,Y		; 59 B4 2C ; Exclusive OR accumulator with memory $2CB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $0D73.w,X		; 7E 73 0D ; Rotate right $0D73.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $73.b		; A6 73 ; Load $73.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	ora ($30.b)		; 12 30 ; OR accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $8A41.w,X		; 1D 41 8A ; OR accumulator with memory $8A41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $C71C.w,Y		; 59 1C C7 ; Exclusive OR accumulator with memory $C71C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $A31D22.l,X		; 1F 22 1D A3 ; Logical OR long $A31D22.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73E3.w,Y		; 59 E3 73 ; Exclusive OR accumulator with memory $73E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $1E1D.w,Y		; 99 1D 1E ; Store accumulator to $1E1D.w,Y [Reads: Y Index, Accumulator]
	ora $D8911E.l,X		; 1F 1E 91 D8 ; Logical OR long $D8911E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $7A.b		; 02 7A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $6A.b,S		; 03 6A ; OR accumulator with stack relative $6A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $078A.w,X		; 3E 8A 07 ; Rotate left $078A.w,X [Reads: X Index] [Flags: NCZ]
	asl $2925.w,X		; 1E 25 29 ; Arithmetic shift left $2925.w,X [Reads: X Index] [Flags: NCZ]
	rol $E68A.w,X		; 3E 8A E6 ; Rotate left $E68A.w,X [Reads: X Index] [Flags: NCZ]
	eor $25D2.w,Y		; 59 D2 25 ; Exclusive OR accumulator with memory $25D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $2CA6.w,X		; 9E A6 2C ; Store zero to $2CA6.w,X [Reads: X Index]
	adc $8D.b,X		; 75 8D ; Add $8D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	lda ($DA.b,S),Y		; B3 DA ; Load accumulator (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $9312.w,Y		; 59 12 93 ; Exclusive OR accumulator with memory $9312.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E2D.w		; 1C 2D 2E ; Test and reset bits $2E2D.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $00.b,X		; 76 00 ; Rotate right $00.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	tsb $04.b		; 04 04 ; Test and set bits $04.b [Reads: Accumulator] [Flags: Z]
	tsb $04.b		; 04 04 ; Test and set bits $04.b [Reads: Accumulator] [Flags: Z]
	tsb $04.b		; 04 04 ; Test and set bits $04.b [Reads: Accumulator] [Flags: Z]
	tsb $3E.b		; 04 3E ; Test and set bits $3E.b [Reads: Accumulator] [Flags: Z]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	eor $5943.w,Y		; 59 43 59 ; Exclusive OR accumulator with memory $5943.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	brk $1F.b		; 00 1F ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pei ($29.b)		; D4 29 ; Push effective indirect address ($29.b) [Reads: Direct Page] [Writes: Stack Pointer]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $B32C.w		; 2C 2C B3 ; Test bits $B32C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $2B21.w		; 2D 21 2B ; Logical AND $2B21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $D0D8.w,Y		; 59 D8 D0 ; Exclusive OR accumulator with memory $D0D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $D0.b,X		; 75 D0 ; Add $D0.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cpx #$59.b		; E0 59 ; Compare #$59.b with X register [Reads: X Index] [Flags: NCZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	trb $D0BB.w		; 1C BB D0 ; Test and reset bits $D0BB.w [Reads: Accumulator] [Flags: Z]
	ror $DA.b,X		; 76 DA ; Rotate right $DA.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $9312.w,Y		; 59 12 93 ; Exclusive OR accumulator with memory $9312.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E2D.w		; 1C 2D 2E ; Test and reset bits $2E2D.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $0B73.w,X		; 7E 73 0B ; Rotate right $0B73.w,X [Reads: X Index] [Flags: NCZ]
	asl $8B2D.w,X		; 1E 2D 8B ; Arithmetic shift left $8B2D.w,X [Reads: X Index] [Flags: NCZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	trb $CE1A.w		; 1C 1A CE ; Test and reset bits $CE1A.w [Reads: Accumulator] [Flags: Z]
	ora $3E252E.l,X		; 1F 2E 25 3E ; Logical OR long $3E252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $1C9312.l,X		; 7F 12 93 1C ; Add long $1C9312.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1A2E.w		; 2D 2E 1A ; Logical AND $1A2E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	lda [$59.b],Y		; B7 59 ; Load accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$32.b],Y		; 97 32 ; Store accumulator (long indexed) [$32.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $9F.b,X		; 75 9F ; Add $9F.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $25252E.l		; 0F 2E 25 25 ; OR accumulator with memory (long) $25252E.l [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $2DE2.w		; 2C E2 2D ; Test bits $2DE2.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp $D876.w,X		; DD 76 D8 ; Compare accumulator $D876.w,X [Reads: X Index] [Flags: NCZ]
	dec $7F41.w		; CE 41 7F ; Decrement $7F41.w [Flags: NZ]
	asl $21.b,X		; 16 21 ; Arithmetic shift left $21.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $210E59.l,X		; 3F 59 0E 21 ; AND accumulator with memory (long,X) $210E59.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $8B.b,Y		; B6 8B ; Load X register $8B.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $3E6A.w,Y		; 59 6A 3E ; Exclusive OR accumulator with memory $3E6A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $0899.w,Y		; 59 99 08 ; Exclusive OR accumulator with memory $0899.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $42E3.w,Y		; 59 E3 42 ; Exclusive OR accumulator with memory $42E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27E3.w,Y		; 59 E3 27 ; Exclusive OR accumulator with memory $27E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $BC76.w		; 20 76 BC ; Jump to subroutine at $BC76.w [Writes: Stack Pointer] [Flow: call]
	and $59E68A.l,X		; 3F 8A E6 59 ; AND accumulator with memory (long,X) $59E68A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	ldx $3F.b		; A6 3F ; Load $3F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $4221.w		; 0E 21 42 ; Arithmetic shift left $4221.w [Flags: NCZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $AE73.w,X		; 7E 73 AE ; Rotate right $AE73.w,X [Reads: X Index] [Flags: NCZ]
	eor $A0D0.w,Y		; 59 D0 A0 ; Exclusive OR accumulator with memory $A0D0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $B42C.w,Y		; 59 2C B4 ; Exclusive OR accumulator with memory $B42C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $9773.w,X		; 1D 73 97 ; OR accumulator with memory $9773.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $5993.w		; 20 93 59 ; Jump to subroutine at $5993.w [Writes: Stack Pointer] [Flow: call]
	trb $2528.w		; 1C 28 25 ; Test and reset bits $2528.w [Reads: Accumulator] [Flags: Z]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $B32D.w		; 1C 2D B3 ; Test and reset bits $B32D.w [Reads: Accumulator] [Flags: Z]
	and $2D1C22.l		; 2F 22 1C 2D ; AND accumulator with memory (long) $2D1C22.l [Writes: Accumulator] [Flags: NZ]
	jsl $432C26.l		; 22 26 2C 43 ; Jump to subroutine long $432C26.l [Writes: Stack Pointer] [Flow: call]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit #$43.b		; 89 43 ; Test bits #$43.b with accumulator [Reads: Accumulator] [Flags: Z]
	bit #$43.b		; 89 43 ; Test bits #$43.b with accumulator [Reads: Accumulator] [Flags: Z]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $920C8A.l,X		; 3F 8A 0C 92 ; AND accumulator with memory (long,X) $920C8A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $8A3F.w,X		; 1D 3F 8A ; OR accumulator with memory $8A3F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($9F.b,S),Y		; 73 9F ; Add with carry (stack relative indirect indexed) ($9F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cpy #$CE.b		; C0 CE ; Compare #$CE.b with Y register [Reads: Y Index] [Flags: NCZ]
	ldx $9726.w,Y		; BE 26 97 ; Load X register $9726.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D1E.w,X		; 1D 1E 2D ; OR accumulator with memory $2D1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $732C25.l		; 22 25 2C 73 ; Jump to subroutine long $732C25.l [Writes: Stack Pointer] [Flow: call]
	asl $1A31.w,X		; 1E 31 1A ; Arithmetic shift left $1A31.w,X [Reads: X Index] [Flags: NCZ]
	trb $252D.w		; 1C 2D 25 ; Test and reset bits $252D.w [Reads: Accumulator] [Flags: Z]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $7F43.w		; 2D 43 7F ; Logical AND $7F43.w with accumulator [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $AC1A.w,Y		; 59 1A AC ; Exclusive OR accumulator with memory $AC1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2CCC.w,Y		; 59 CC 2C ; Exclusive OR accumulator with memory $2CCC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp #$28.b		; C9 28 ; Compare #$28.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	adc $B8.b,X		; 75 B8 ; Add $B8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $B1B4.w,Y		; 59 B4 B1 ; Exclusive OR accumulator with memory $B1B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $1E.b,Y		; B6 1E ; Load X register $1E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	ora $D976.w,X		; 1D 76 D9 ; OR accumulator with memory $D976.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $BA59.w		; 2C 59 BA ; Test bits $BA59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($0B.b,S),Y		; 73 0B ; Add with carry (stack relative indirect indexed) ($0B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $A520.w,X		; 1E 20 A5 ; Arithmetic shift left $A520.w,X [Reads: X Index] [Flags: NCZ]
	ora $592C.w,X		; 1D 2C 59 ; OR accumulator with memory $592C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ldy $5932.w,X		; BC 32 59 ; Load Y register $5932.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	asl $2C1A.w,X		; 1E 1A 2C ; Arithmetic shift left $2C1A.w,X [Reads: X Index] [Flags: NCZ]
	rol $2CCE.w		; 2E CE 2C ; Rotate left $2CCE.w [Flags: NCZ]
	adc ($D7.b,S),Y		; 73 D7 ; Add with carry (stack relative indirect indexed) ($D7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1DB0.w,Y		; 59 B0 1D ; Exclusive OR accumulator with memory $1DB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $732D.w		; 2E 2D 73 ; Rotate left $732D.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $27BA.w,Y		; 59 BA 27 ; Exclusive OR accumulator with memory $27BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $7E43.w,X		; 1D 43 7E ; OR accumulator with memory $7E43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2226.w,Y		; 59 26 22 ; Exclusive OR accumulator with memory $2226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	ora $591E.w,X		; 1D 1E 59 ; OR accumulator with memory $591E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	jsr $1AA4.w		; 20 A4 1A ; Jump to subroutine at $1AA4.w [Writes: Stack Pointer] [Flow: call]
	jsr $D38F.w		; 20 8F D3 ; Jump to subroutine at $D38F.w [Writes: Stack Pointer] [Flow: call]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $D0, $73		; D0 73 ; Branch if not equal to $D0, $73 [Flow: branch]
	dec $A759.w,X		; DE 59 A7 ; Decrement memory $A759.w,X [Reads: X Index] [Flags: NZ]
	jsl $215925.l		; 22 25 59 21 ; Jump to subroutine long $215925.l [Writes: Stack Pointer] [Flow: call]
	ldx #$2D.b		; A2 2D ; Load #$2D.b into X register [Writes: X Index] [Flags: NZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $7EC6.w,Y		; 59 C6 7E ; Exclusive OR accumulator with memory $7EC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $41.b		; 26 41 ; Rotate left $41.b [Reads: Direct Page] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $CA281E.l		; 0F 1E 28 CA ; OR accumulator with memory (long) $CA281E.l [Writes: Accumulator] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ldx $73.b,Y		; B6 73 ; Load X register $73.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E25.w		; 2C 25 1E ; Test bits $1E25.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $B329.w,X		; 1E 29 B3 ; Arithmetic shift left $B329.w,X [Reads: X Index] [Flags: NCZ]
	ora $1E1E.w,X		; 1D 1E 1E ; OR accumulator with memory $1E1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1EA8.w,Y		; 59 A8 1E ; Exclusive OR accumulator with memory $1EA8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($43.b,S),Y		; D3 43 ; Compare accumulator (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $5943.w,Y		; 59 43 59 ; Exclusive OR accumulator with memory $5943.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($03.b,S),Y		; 73 03 ; Add with carry (stack relative indirect indexed) ($03.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D27.w		; 2E 27 1D ; Rotate left $1D27.w [Flags: NCZ]
	ldx $D3.b		; A6 D3 ; Load $D3.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	sty $59D8.w		; 8C D8 59 ; Store Y register to $59D8.w [Reads: Y Index]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	and $448873.l,X		; 3F 73 88 44 ; AND accumulator with memory (long,X) $448873.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E18.w,Y		; 59 18 1E ; Exclusive OR accumulator with memory $1E18.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $8873.w		; 2C 73 88 ; Test bits $8873.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $9159.w		; 2D 59 91 ; Logical AND $9159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $322700.l,X		; 7F 00 27 32 ; Add long $322700.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $594232.l,X		; DF 32 42 59 ; Compare accumulator (long,X) $594232.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $E6.b,X		; 75 E6 ; Add $E6.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $D3BF.w		; CD BF D3 ; Compare $D3BF.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $591EC7.l		; CF C7 1E 59 ; Compare accumulator (long) $591EC7.l [Reads: Accumulator] [Flags: NCZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $2F.b,X		; 76 2F ; Rotate right $2F.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	jsl $20BA25.l		; 22 25 BA 20 ; Jump to subroutine long $20BA25.l [Writes: Stack Pointer] [Flow: call]
	asl $E159.w,X		; 1E 59 E1 ; Arithmetic shift left $E159.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $2CB8.w,Y		; 59 B8 2C ; Exclusive OR accumulator with memory $2CB8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A6E1.w,Y		; 59 E1 A6 ; Exclusive OR accumulator with memory $A6E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2159.w,X		; 1E 59 21 ; Arithmetic shift left $2159.w,X [Reads: X Index] [Flags: NCZ]
	asl $B559.w,X		; 1E 59 B5 ; Arithmetic shift left $B559.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1A2D.w,Y		; 59 2D 1A ; Exclusive OR accumulator with memory $1A2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $8D1C.w,Y		; 59 1C 8D ; Exclusive OR accumulator with memory $8D1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $436A.w,Y		; 59 6A 43 ; Exclusive OR accumulator with memory $436A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $21210E.l,X		; 7F 0E 21 21 ; Add long $21210E.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and ($42.b,X)		; 21 42 ; Logical AND ($42.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1C59.w,X		; 1E 59 1C ; Arithmetic shift left $1C59.w,X [Reads: X Index] [Flags: NCZ]
	lda ($27.b),Y		; B1 27 ; Load accumulator ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1D1E.w		; 20 1E 1D ; Jump to subroutine at $1D1E.w [Writes: Stack Pointer] [Flow: call]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $28BB.w,Y		; 59 BB 28 ; Exclusive OR accumulator with memory $28BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	lda $2F2B.w,X		; BD 2B 2F ; Load $2F2B.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $2EBB.w,X		; 1E BB 2E ; Arithmetic shift left $2EBB.w,X [Reads: X Index] [Flags: NCZ]
	bit $8A43.w		; 2C 43 8A ; Test bits $8A43.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $76		; D0 76 ; Branch if not equal to $D0, $76 [Flow: branch]
	bit $2F1A.w		; 2C 1A 2F ; Test bits $2F1A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $2E59.w,X		; 1E 59 2E ; Arithmetic shift left $2E59.w,X [Reads: X Index] [Flags: NCZ]
	bit $A959.w		; 2C 59 A9 ; Test bits $A959.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	brk $20.b		; 00 20 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($27.b,X)		; 21 27 ; Logical AND ($27.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsl $737E26.l		; 22 26 7E 73 ; Jump to subroutine long $737E26.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cpx $1E.b		; E4 1E ; Compare $1E.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $DF.b,X		; 75 DF ; Add $DF.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $BC.b		; A4 BC ; Load $BC.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	rol $128A.w,X		; 3E 8A 12 ; Rotate left $128A.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $9E.b		; 25 9E ; Logical AND $9E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	rol $008A.w,X		; 3E 8A 00 ; Rotate left $008A.w,X [Reads: X Index] [Flags: NCZ]
	and [$32.b]		; 27 32 ; AND accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	rol $0276.w,X		; 3E 76 02 ; Rotate left $0276.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $2A59.w,Y		; BE 59 2A ; Load X register $2A59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	rol $9C22.w		; 2E 22 9C ; Rotate left $9C22.w [Flags: NCZ]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $087F.w,X		; 3E 7F 08 ; Rotate left $087F.w,X [Reads: X Index] [Flags: NCZ]
	and [$1C.b]		; 27 1C ; AND accumulator with memory (long) [$1C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $959E.w		; CE 9E 95 ; Decrement $959E.w [Flags: NZ]
	rol $008A.w,X		; 3E 8A 00 ; Rotate left $008A.w,X [Reads: X Index] [Flags: NCZ]
	and $BA59.w		; 2D 59 BA ; Logical AND $BA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $D875.w		; AD 75 D8 ; Load $D875.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $591E.w		; CE 1E 59 ; Decrement $591E.w [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $432C.w		; 2D 2C 43 ; Logical AND $432C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $76.b,S		; E3 76 ; Subtract stack-relative $76.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $412C.w,X		; 1D 2C 41 ; OR accumulator with memory $412C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $59D8.w		; 8D D8 59 ; Store accumulator to $59D8.w [Reads: Accumulator]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	rol $591E.w		; 2E 1E 59 ; Rotate left $591E.w [Flags: NCZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($2C.b,S),Y		; 73 2C ; Add with carry (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $B659.w,X		; 1D 59 B6 ; OR accumulator with memory $B659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	ora $25E259.l,X		; 1F 59 E2 25 ; Logical OR long $25E259.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $5943.w,Y		; 59 43 59 ; Exclusive OR accumulator with memory $5943.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $28DA.w,Y		; 59 DA 28 ; Exclusive OR accumulator with memory $28DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2528.w,Y		; 59 28 25 ; Exclusive OR accumulator with memory $2528.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $DA59.w,X		; 1D 59 DA ; OR accumulator with memory $DA59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C799.w,Y		; 59 99 C7 ; Exclusive OR accumulator with memory $C799.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $B9CE.w,Y		; B9 CE B9 ; Load $B9CE.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $1A5908.l,X		; 7F 08 59 1A ; Add long $1A5908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $42.b		; 26 42 ; Rotate left $42.b [Reads: Direct Page] [Flags: NCZ]
	eor $1DB4.w,Y		; 59 B4 1D ; Exclusive OR accumulator with memory $1DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D1E.w,X		; 1E 1E 1D ; Arithmetic shift left $1D1E.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $2F.b,X		; 75 2F ; Add $2F.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsl $20BA25.l		; 22 25 BA 20 ; Jump to subroutine long $20BA25.l [Writes: Stack Pointer] [Flow: call]
	asl $1E59.w,X		; 1E 59 1E ; Arithmetic shift left $1E59.w,X [Reads: X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($8C.b,X)		; A1 8C ; Load accumulator ($8C.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1C9D.w,Y		; 59 9D 1C ; Exclusive OR accumulator with memory $1C9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $76.b,S		; A3 76 ; Load accumulator (stack relative) $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $4127.w,Y		; BE 27 41 ; Load X register $4127.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	bit #$43.b		; 89 43 ; Test bits #$43.b with accumulator [Reads: Accumulator] [Flags: Z]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $210E.w,Y		; 59 0E 21 ; Exclusive OR accumulator with memory $210E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1ACE.w,Y		; 59 CE 1A ; Exclusive OR accumulator with memory $1ACE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3F.b)		; 32 3F ; AND accumulator with memory (indirect) ($3F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($6A.b,S),Y		; 73 6A ; Add with carry (stack relative indirect indexed) ($6A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and #$2B.b		; 29 2B ; Logical AND #$2B.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $A4.b,X		; B5 A4 ; Load $A4.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $27E3.w,Y		; 59 E3 27 ; Exclusive OR accumulator with memory $27E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $BC73.w		; 20 73 BC ; Jump to subroutine at $BC73.w [Writes: Stack Pointer] [Flow: call]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	trb $27B0.w		; 1C B0 27 ; Test and reset bits $27B0.w [Reads: Accumulator] [Flags: Z]
	jsr $A859.w		; 20 59 A8 ; Jump to subroutine at $A859.w [Writes: Stack Pointer] [Flow: call]
	ror $D873.w,X		; 7E 73 D8 ; Rotate right $D873.w,X [Reads: X Index] [Flags: NCZ]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $8B.b		; 25 8B ; Logical AND $8B.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	stx $27.b,Y		; 96 27 ; Store X register $27.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	asl $7341.w,X		; 1E 41 73 ; Arithmetic shift left $7341.w,X [Reads: X Index] [Flags: NCZ]
	ora $2D28.w		; 0D 28 2D ; Logical OR $2D28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $2E99.w,Y		; 59 99 2E ; Exclusive OR accumulator with memory $2E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	adc ($E0.b,S),Y		; 73 E0 ; Add with carry (stack relative indirect indexed) ($E0.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$C7.b		; 29 C7 ; Logical AND #$C7.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	asl $A520.w,X		; 1E 20 A5 ; Arithmetic shift left $A520.w,X [Reads: X Index] [Flags: NCZ]
	ora $592C.w,X		; 1D 2C 59 ; OR accumulator with memory $592C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $321A.w		; 2C 1A 32 ; Test bits $321A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $B9C7.w,Y		; 59 C7 B9 ; Exclusive OR accumulator with memory $B9C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $E473.w,X		; 7E 73 E4 ; Rotate right $E473.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59AE.w,Y		; 59 AE 59 ; Exclusive OR accumulator with memory $59AE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C7		; 30 C7 ; Branch if minus to $30, $C7 [Flow: branch]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $CE21.w		; 2D 21 CE ; Logical AND $CE21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $0F73.w,X		; 1E 73 0F ; Arithmetic shift left $0F73.w,X [Reads: X Index] [Flags: NCZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $9959.w		; 2C 59 99 ; Test bits $9959.w with accumulator [Reads: Accumulator] [Flags: NVZ]
.INDEX 8
	sep #$1E		; E2 1E
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $C830.w		; 2C 30 C8 ; Test bits $C830.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $7341.w,X		; 1D 41 73 ; OR accumulator with memory $7341.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $89.b,S		; 43 89 ; Exclusive OR accumulator with stack relative $89.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $89.b,S		; 43 89 ; Exclusive OR accumulator with stack relative $89.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($03.b,S),Y		; 73 03 ; Add with carry (stack relative indirect indexed) ($03.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $251A.w		; CE 1A 25 ; Decrement $251A.w [Flags: NZ]
	lda $27DF.w,Y		; B9 DF 27 ; Load $27DF.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B659.w,X		; 1D 59 B6 ; OR accumulator with memory $B659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $448873.l,X		; 3F 73 88 44 ; AND accumulator with memory (long,X) $448873.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E18.w,Y		; 59 18 1E ; Exclusive OR accumulator with memory $1E18.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit #$0E.b		; 89 0E ; Test bits #$0E.b with accumulator [Reads: Accumulator] [Flags: Z]
	ora $280259.l,X		; 1F 59 02 28 ; Logical OR long $280259.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $D02B.w		; 2E 2B D0 ; Rotate left $D02B.w [Flags: NCZ]
	rol $7F68.w,X		; 3E 68 7F ; Rotate left $7F68.w,X [Reads: X Index] [Flags: NCZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $8A41.w,X		; 1D 41 8A ; OR accumulator with memory $8A41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $2C.b		; 00 2C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D31E.w		; 2D 1E D3 ; Logical AND $D31E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta $75E3.w,Y		; 99 E3 75 ; Store accumulator to $75E3.w,Y [Reads: Y Index, Accumulator]
	dec $22DB.w		; CE DB 22 ; Decrement $22DB.w [Flags: NZ]
	lda [$1E.b]		; A7 1E ; Load accumulator (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $0E59.w		; 2D 59 0E ; Logical AND $0E59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $280276.l,X		; 1F 76 02 28 ; Logical OR long $280276.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	lda #$26.b		; A9 26 ; Load #$26.b into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $92.b		; 04 92 ; Test and set bits $92.b [Reads: Accumulator] [Flags: Z]
	eor $1A0F.w,Y		; 59 0F 1A ; Exclusive OR accumulator with memory $1A0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $3F1E.w		; 1C 1E 3F ; Test and reset bits $3F1E.w [Reads: Accumulator] [Flags: Z]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda ($B6.b,S),Y		; B3 B6 ; Load accumulator (stack relative indirect indexed) ($B6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	eor $7390.w,Y		; 59 90 73 ; Exclusive OR accumulator with memory $7390.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	eor $2B1A.w,Y		; 59 1A 2B ; Exclusive OR accumulator with memory $2B1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1F22.w		; 2D 22 1F ; Logical AND $1F22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $412D.w		; 1C 2D 41 ; Test and reset bits $412D.w [Reads: Accumulator] [Flags: Z]
	adc $7E2D.w,Y		; 79 2D 7E ; Add $7E2D.w,Y to accumulator with carry [Reads: Y Index] [Writes: Accumulator] [Flags: NCVZ]
	adc ($0D.b,S),Y		; 73 0D ; Add with carry (stack relative indirect indexed) ($0D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	cmp $591D2B.l,X		; DF 2B 1D 59 ; Compare accumulator (long,X) $591D2B.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $411E.w		; 1C 1E 41 ; Test and reset bits $411E.w [Reads: Accumulator] [Flags: Z]
	adc $2BD80E.l,X		; 7F 0E D8 2B ; Add long $2BD80E.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $BACE.w,Y		; 59 CE BA ; Exclusive OR accumulator with memory $BACE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2F22.w		; 2D 22 2F ; Logical AND $2F22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $8D.b,X		; 75 8D ; Add $8D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $B0, $9E		; B0 9E ; Branch if carry set to $B0, $9E [Flow: branch]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $76.b		; 25 76 ; Logical AND $76.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $1F8B.w,X		; 1D 8B 1F ; OR accumulator with memory $1F8B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $BB.b		; 25 BB ; Logical AND $BB.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	bit $7E41.w		; 2C 41 7E ; Test bits $7E41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D859.w,X		; 1D 59 D8 ; OR accumulator with memory $D859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $41.b		; 26 41 ; Rotate left $41.b [Reads: Direct Page] [Flags: NCZ]
	adc $7A026B.l,X		; 7F 6B 02 7A ; Add long $7A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $6A.b,S		; 03 6A ; OR accumulator with stack relative $6A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $BF9B.w,Y		; 59 9B BF ; Exclusive OR accumulator with memory $BF9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $B394.w		; 1C 94 B3 ; Test and reset bits $B394.w [Reads: Accumulator] [Flags: Z]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $76E3.w,Y		; 59 E3 76 ; Exclusive OR accumulator with memory $76E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $282B.w		; 1C 2B 28 ; Test and reset bits $282B.w [Reads: Accumulator] [Flags: Z]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $282F.w,Y		; 59 2F 28 ; Exclusive OR accumulator with memory $282F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D591D.l		; 22 1D 59 2D ; Jump to subroutine long $2D591D.l [Writes: Stack Pointer] [Flow: call]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	ror $2D73.w,X		; 7E 73 2D ; Rotate right $2D73.w,X [Reads: X Index] [Flags: NCZ]
	asl $1E25.w,X		; 1E 25 1E ; Arithmetic shift left $1E25.w,X [Reads: X Index] [Flags: NCZ]
	and #$94.b		; 29 94 ; Logical AND #$94.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($32.b,X)		; 21 32 ; Logical AND ($32.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $E373.w,X		; 1E 73 E3 ; Arithmetic shift left $E373.w,X [Reads: X Index] [Flags: NCZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp ($8C.b,S),Y		; D3 8C ; Compare accumulator (stack relative indirect indexed) ($8C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	cmp $D8592C.l,X		; DF 2C 59 D8 ; Compare accumulator (long,X) $D8592C.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $73.b		; A5 73 ; Load $73.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	.db $90, $42		; 90 42 ; Branch if carry clear to $90, $42 [Flow: branch]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $A759.w		; 2D 59 A7 ; Logical AND $A759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $CB5925.l		; 22 25 59 CB ; Jump to subroutine long $CB5925.l [Writes: Stack Pointer] [Flow: call]
	lda ($2D.b,X)		; A1 2D ; Load accumulator ($2D.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rol $272B.w		; 2E 2B 27 ; Rotate left $272B.w [Flags: NCZ]
	ldy $B6.b		; A4 B6 ; Load $B6.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	ror $B473.w,X		; 7E 73 B4 ; Rotate right $B473.w,X [Reads: X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc $73.b		; E6 73 ; Increment $73.b [Reads: Direct Page] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $AE59.w,X		; 1D 59 AE ; OR accumulator with memory $AE59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2B1B.w,Y		; 59 1B 2B ; Exclusive OR accumulator with memory $2B1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $A0.b		; 24 A0 ; Test bits $A0.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($BE.b,S),Y		; 73 BE ; Add with carry (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$8B.b]		; 27 8B ; AND accumulator with memory (long) [$8B.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sty $A4C3.w		; 8C C3 A4 ; Store Y register to $A4C3.w [Reads: Y Index]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $9420.w,Y		; 59 20 94 ; Exclusive OR accumulator with memory $9420.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $737E.w,X		; 1E 7E 73 ; Arithmetic shift left $737E.w,X [Reads: X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $B425.w,Y		; 59 25 B4 ; Exclusive OR accumulator with memory $B425.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $9173.w		; 2C 73 91 ; Test bits $9173.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $9202.w,Y		; 59 02 92 ; Exclusive OR accumulator with memory $9202.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and [$73.b]		; 27 73 ; AND accumulator with memory (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $DAA1.w,X		; 1D A1 DA ; OR accumulator with memory $DAA1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D9591E.l		; 2F 1E 59 D9 ; AND accumulator with memory (long) $D9591E.l [Writes: Accumulator] [Flags: NZ]
	bit $B159.w		; 2C 59 B1 ; Test bits $B159.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $1F.b		; 25 1F ; Logical AND $1F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $3073.w,X		; 7E 73 30 ; Rotate right $3073.w,X [Reads: X Index] [Flags: NCZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $B20B.w,Y		; 59 0B B2 ; Exclusive OR accumulator with memory $B20B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $73.b,S		; E3 73 ; Subtract stack-relative $73.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $E259D3.l,X		; BF D3 59 E2 ; Load long $E259D3.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	stx $9C.b,Y		; 96 9C ; Store X register $9C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $73.b		; A5 73 ; Load $73.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $2BE028.l		; 0F 28 E0 2B ; OR accumulator with memory (long) $2BE028.l [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $251A.w,Y		; 59 1A 25 ; Exclusive OR accumulator with memory $251A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	dec $1C2C.w		; CE 2C 1C ; Decrement $1C2C.w [Flags: NZ]
	rol $7E1E.w		; 2E 1E 7E ; Rotate left $7E1E.w [Flags: NCZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$BD.b		; A0 BD ; Load #$BD.b into Y register [Writes: Y Index] [Flags: NZ]
	jsl $2CA51D.l		; 22 1D A5 2C ; Jump to subroutine long $2CA51D.l [Writes: Stack Pointer] [Flow: call]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2000.w,Y		; 59 00 20 ; Exclusive OR accumulator with memory $2000.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($27.b,X)		; 21 27 ; Logical AND ($27.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsl $D07326.l		; 22 26 73 D0 ; Jump to subroutine long $D07326.l [Writes: Stack Pointer] [Flow: call]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A03.w,Y		; 59 03 1A ; Exclusive OR accumulator with memory $1A03.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	brk $2C.b		; 00 2C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	adc ($BE.b,S),Y		; 73 BE ; Add with carry (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $97.b		; 26 97 ; Rotate left $97.b [Reads: Direct Page] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2540.w,X		; 1D 40 25 ; OR accumulator with memory $2540.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $7EC6.w,Y		; 59 C6 7E ; Exclusive OR accumulator with memory $7EC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $4227.w,Y		; BE 27 42 ; Load X register $4227.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $32D8.w,Y		; 59 D8 32 ; Exclusive OR accumulator with memory $32D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73AD.w,Y		; 59 AD 73 ; Exclusive OR accumulator with memory $73AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	wai		; CB ; Wait for interrupt
	lda ($D7.b,X)		; A1 D7 ; Load accumulator ($D7.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $21B9.w		; CE B9 21 ; Decrement $21B9.w [Flags: NZ]
	asl $2925.w,X		; 1E 25 29 ; Arithmetic shift left $2925.w,X [Reads: X Index] [Flags: NCZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $22BD.w,Y		; 59 BD 22 ; Exclusive OR accumulator with memory $22BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2CA5.w,X		; 1D A5 2C ; OR accumulator with memory $2CA5.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $BB8D.w,Y		; 59 8D BB ; Exclusive OR accumulator with memory $BB8D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $B4A4.w		; 9C A4 B4 ; Store zero to $B4A4.w
	ror $B073.w,X		; 7E 73 B0 ; Rotate right $B073.w,X [Reads: X Index] [Flags: NCZ]
	ora $A01D.w,X		; 1D 1D A0 ; OR accumulator with memory $A01D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	bit $1F59.w		; 2C 59 1F ; Test bits $1F59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $2525.w		; 2E 25 25 ; Rotate left $2525.w [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $94CE.w		; 1C CE 94 ; Test and reset bits $94CE.w [Reads: Accumulator] [Flags: Z]
	rol $2CCE.w		; 2E CE 2C ; Rotate left $2CCE.w [Flags: NCZ]
	eor $1D8C.w,Y		; 59 8C 1D ; Exclusive OR accumulator with memory $1D8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	ldx $28.b		; A6 28 ; Load $28.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$2C.b		; 29 2C ; Logical AND #$2C.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	ora $1CBA1A.l		; 0F 1A BA 1C ; OR accumulator with memory (long) $1CBA1A.l [Writes: Accumulator] [Flags: NZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A03.w,Y		; 59 03 1A ; Exclusive OR accumulator with memory $1A03.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $27.b		; 24 27 ; Test bits $27.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	ror $9773.w,X		; 7E 73 97 ; Rotate right $9773.w,X [Reads: X Index] [Flags: NCZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	ldy $251A.w		; AC 1A 25 ; Load $251A.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $2D79.w,X		; 3E 79 2D ; Rotate left $2D79.w,X [Reads: X Index] [Flags: NCZ]
	adc ($6A.b,S),Y		; 73 6A ; Add with carry (stack relative indirect indexed) ($6A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $CE99.w,Y		; 59 99 CE ; Exclusive OR accumulator with memory $CE99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $59C7.w,Y		; B9 C7 59 ; Load $59C7.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$25.b]		; C7 25 ; Compare accumulator (long) [$25.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	lda $1E24.w,X		; BD 24 1E ; Load $1E24.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2528.w,Y		; 59 28 25 ; Exclusive OR accumulator with memory $2528.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $737E.w,X		; 1D 7E 73 ; OR accumulator with memory $737E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $E28B.w,X		; BC 8B E2 ; Load Y register $E28B.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	bit $9B59.w		; 2C 59 9B ; Test bits $9B59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $DB59.w,X		; 1E 59 DB ; Arithmetic shift left $DB59.w,X [Reads: X Index] [Flags: NCZ]
	rol $411E.w		; 2E 1E 41 ; Rotate left $411E.w [Flags: NCZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2097.w,Y		; 59 97 20 ; Exclusive OR accumulator with memory $2097.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3EE3.w,Y		; 59 E3 3E ; Exclusive OR accumulator with memory $3EE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $7A026B.l,X		; 7F 6B 02 7A ; Add long $7A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $01.b,S		; 03 01 ; OR accumulator with stack relative $01.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27D0.w,Y		; 59 D0 27 ; Exclusive OR accumulator with memory $27D0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $CA.b		; 25 CA ; Logical AND $CA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $272C.w		; 2C 2C 27 ; Test bits $272C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b,X)		; 01 1E ; Logical OR ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $2E1F.w,Y		; 59 1F 2E ; Exclusive OR accumulator with memory $2E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	.db $42, $76		; 42 76 ; Reserved instruction
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $5925A2.l		; 0F A2 25 59 ; OR accumulator with memory (long) $5925A2.l [Writes: Accumulator] [Flags: NZ]
	cmp [$7E.b]		; C7 7E ; Compare accumulator (long) [$7E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc ($03.b,S),Y		; 73 03 ; Add with carry (stack relative indirect indexed) ($03.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $2194.w,X		; 1E 94 21 ; Arithmetic shift left $2194.w,X [Reads: X Index] [Flags: NCZ]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $088A41.l		; 8F 41 8A 08 ; Store accumulator (long) $088A41.l [Reads: Accumulator]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2DCC.w,Y		; 59 CC 2D ; Exclusive OR accumulator with memory $2DCC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($2C.b),Y		; 51 2C ; Exclusive OR accumulator with memory ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($BD.b,S),Y		; 73 BD ; Add with carry (stack relative indirect indexed) ($BD.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $59D2.w,Y		; 59 D2 59 ; Exclusive OR accumulator with memory $59D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $1E24.w,Y		; 99 24 1E ; Store accumulator to $1E24.w,Y [Reads: Y Index, Accumulator]
	asl $5929.w,X		; 1E 29 59 ; Arithmetic shift left $5929.w,X [Reads: X Index] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $AF73.w,X		; 7E 73 AF ; Rotate right $AF73.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	jsl $1F591C.l		; 22 1C 59 1F ; Jump to subroutine long $1F591C.l [Writes: Stack Pointer] [Flow: call]
	jsl $CE2E20.l		; 22 20 2E CE ; Jump to subroutine long $CE2E20.l [Writes: Stack Pointer] [Flow: call]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $59252E.l,X		; 1F 2E 25 59 ; Logical OR long $59252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1E.b,Y		; B6 1E ; Load X register $1E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $1D		; B0 1D ; Branch if carry set to $B0, $1D [Flow: branch]
	ora $B4A0.w,X		; 1D A0 B4 ; OR accumulator with memory $B4A0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2F1A.w		; 1C 1A 2F ; Test and reset bits $2F1A.w [Reads: Accumulator] [Flags: Z]
	asl $C759.w,X		; 1E 59 C7 ; Arithmetic shift left $C759.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $5992.w,X		; 1E 92 59 ; Arithmetic shift left $5992.w,X [Reads: X Index] [Flags: NCZ]
	bit $1D22.w		; 2C 22 1D ; Test bits $1D22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A0B.w,Y		; 59 0B 1A ; Exclusive OR accumulator with memory $1A0B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ror $07.b,X		; 76 07 ; Rotate right $07.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($25.b)		; 32 25 ; AND accumulator with memory (indirect) ($25.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $8A411A.l		; 22 1A 41 8A ; Jump to subroutine long $8A411A.l [Writes: Stack Pointer] [Flow: call]
	asl $1E.b		; 06 1E ; Arithmetic shift left $1E.b [Reads: Direct Page] [Flags: NCZ]
	and $B659.w		; 2D 59 B6 ; Logical AND $B659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $0E7F.w,X		; 3E 7F 0E ; Rotate left $0E7F.w,X [Reads: X Index] [Flags: NCZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $59E88A.l,X		; 3F 8A E8 59 ; AND accumulator with memory (long,X) $59E88A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $592D.w		; AC 2D 59 ; Load $592D.w into Y register [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $02.b,X		; 75 02 ; Add $02.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $3E1E.w		; 20 1E 3E ; Jump to subroutine at $3E1E.w [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $76.b,S		; E3 76 ; Subtract stack-relative $76.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($13.b,S),Y		; 73 13 ; Add with carry (stack relative indirect indexed) ($13.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($CE.b,X)		; 21 CE ; Logical AND ($CE.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $C859.w,X		; 1E 59 C8 ; Arithmetic shift left $C859.w,X [Reads: X Index] [Flags: NCZ]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	jsr $A6A5.w		; 20 A5 A6 ; Jump to subroutine at $A6A5.w [Writes: Stack Pointer] [Flow: call]
	sty $22.b,X		; 94 22 ; Store Y register $22.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	cmp [$2C.b]		; C7 2C ; Compare accumulator (long) [$2C.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $AC1A.w,Y		; 59 1A AC ; Exclusive OR accumulator with memory $AC1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $73		; 42 73 ; Reserved instruction
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $C6A1.w,X		; 1D A1 C6 ; OR accumulator with memory $C6A1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2724.w,Y		; 59 24 27 ; Exclusive OR accumulator with memory $2724.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $CC59.w		; 2C 59 CC ; Test bits $CC59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $1C1E.w		; 2D 1E 1C ; Logical AND $1C1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $1D1E.w		; 2D 1E 1D ; Logical AND $1D1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $282B.w,Y		; 59 2B 28 ; Exclusive OR accumulator with memory $282B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($1A.b)		; 32 1A ; AND accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2D.b		; 25 2D ; Logical AND $2D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	bit $0E59.w		; 2C 59 0E ; Test bits $0E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $320759.l,X		; 1F 59 07 32 ; Logical OR long $320759.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $CEE0.w,Y		; 59 E0 CE ; Exclusive OR accumulator with memory $CEE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $D2.b		; 25 D2 ; Logical AND $D2.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E20.w,Y		; 59 20 2E ; Exclusive OR accumulator with memory $2E20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	stz $2C93.w,X		; 9E 93 2C ; Store zero to $2C93.w,X [Reads: X Index]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $280259.l,X		; 1F 59 02 28 ; Logical OR long $280259.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $411E.w		; 20 1E 41 ; Jump to subroutine at $411E.w [Writes: Stack Pointer] [Flow: call]
	ror $1473.w,X		; 7E 73 14 ; Rotate right $1473.w,X [Reads: X Index] [Flags: NCZ]
	and [$A8.b]		; 27 A8 ; AND accumulator with memory (long) [$A8.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $272E.w		; 2D 2E 27 ; Logical AND $272E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sty $1E.b,X		; 94 1E ; Store Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $73.b		; 26 73 ; Rotate left $73.b [Reads: Direct Page] [Flags: NCZ]
	cpx #$CD.b		; E0 CD ; Compare #$CD.b with X register [Reads: X Index] [Flags: NCZ]
	sta $28DB.w,X		; 9D DB 28 ; Store accumulator to $28DB.w,X [Reads: Accumulator, X Index]
	and ($A4.b)		; 32 A4 ; AND accumulator with memory (indirect) ($A4.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $CE20.w,Y		; 59 20 CE ; Exclusive OR accumulator with memory $CE20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sty $73.b,X		; 94 73 ; Store Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	cmp $1A592B.l,X		; DF 2B 59 1A ; Compare accumulator (long,X) $1A592B.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	jsr $D38F.w		; 20 8F D3 ; Jump to subroutine at $D38F.w [Writes: Stack Pointer] [Flow: call]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $28DA.w,Y		; 59 DA 28 ; Exclusive OR accumulator with memory $28DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $7E.b		; 24 7E ; Test bits $7E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc ($29.b,S),Y		; 73 29 ; Add with carry (stack relative indirect indexed) ($29.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	sbc ($A0.b,X)		; E1 A0 ; Subtract with carry ($A0.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $7327.w,Y		; BE 27 73 ; Load X register $7327.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	trb $94CE.w		; 1C CE 94 ; Test and reset bits $94CE.w [Reads: Accumulator] [Flags: Z]
	ldy $D8.b		; A4 D8 ; Load $D8.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	jsl $D0592B.l		; 22 2B 59 D0 ; Jump to subroutine long $D0592B.l [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $41.b		; 25 41 ; Logical AND $41.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $26.b		; 00 26 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $A51C.w,X		; 9D 1C A5 ; Store accumulator to $A51C.w,X [Reads: Accumulator, X Index]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	bit $0E59.w		; 2C 59 0E ; Test bits $0E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $07737E.l,X		; 1F 7E 73 07 ; Logical OR long $07737E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($2B.b)		; 32 2B ; AND accumulator with memory (indirect) ($2B.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $BF5928.l		; AF 28 59 BF ; Load long $BF5928.l into accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldx #$41.b		; A2 41 ; Load #$41.b into X register [Writes: X Index] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2597.w,Y		; 59 97 25 ; Exclusive OR accumulator with memory $2597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591EA7.l		; 22 A7 1E 59 ; Jump to subroutine long $591EA7.l [Writes: Stack Pointer] [Flow: call]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BDCE.w,Y		; 59 CE BD ; Exclusive OR accumulator with memory $BDCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $B4.b,X		; B4 B4 ; Load Y register $B4.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsr $737E.w		; 20 7E 73 ; Jump to subroutine at $737E.w [Writes: Stack Pointer] [Flow: call]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $412C.w		; 2D 2C 41 ; Logical AND $412C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	dec $E359.w,X		; DE 59 E3 ; Decrement memory $E359.w,X [Reads: X Index] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1EDB.w,Y		; 59 DB 1E ; Exclusive OR accumulator with memory $1EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $CD2E.w		; 2C 2E CD ; Test bits $CD2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1DD0.w		; 2C D0 1D ; Test bits $1DD0.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $309F.w,Y		; 59 9F 30 ; Exclusive OR accumulator with memory $309F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$7E.b]		; 27 7E ; AND accumulator with memory (long) [$7E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($1B.b,S),Y		; 73 1B ; Add with carry (stack relative indirect indexed) ($1B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($BE.b,S),Y		; 73 BE ; Add with carry (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $B659.w		; AD 59 B6 ; Load $B659.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $1C8D.w,Y		; 59 8D 1C ; Exclusive OR accumulator with memory $1C8D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dec $2D1C.w		; CE 1C 2D ; Decrement $2D1C.w [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $27.b,S		; E3 27 ; Subtract stack-relative $27.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	jsr $BC59.w		; 20 59 BC ; Jump to subroutine at $BC59.w [Writes: Stack Pointer] [Flow: call]
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A12.w,Y		; 59 12 1A ; Exclusive OR accumulator with memory $1A12.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $222F.w,Y		; 59 2F 22 ; Exclusive OR accumulator with memory $222F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $761E.w		; 20 1E 76 ; Jump to subroutine at $761E.w [Writes: Stack Pointer] [Flow: call]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	lda ($8C.b,X)		; A1 8C ; Load accumulator ($8C.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1C9D.w,Y		; 59 9D 1C ; Exclusive OR accumulator with memory $1C9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,S		; A3 59 ; Load accumulator (stack relative) $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $D073.w,X		; 7E 73 D0 ; Rotate right $D073.w,X [Reads: X Index] [Flags: NCZ]
	and $D0E2A0.l		; 2F A0 E2 D0 ; AND accumulator with memory (long) $D0E2A0.l [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $733F.w		; 2D 3F 73 ; Logical AND $733F.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and #$2B.b		; 29 2B ; Logical AND #$2B.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $A4.b,X		; B5 A4 ; Load $A4.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $27E3.w,Y		; 59 E3 27 ; Exclusive OR accumulator with memory $27E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $737E.w		; 20 7E 73 ; Jump to subroutine at $737E.w [Writes: Stack Pointer] [Flow: call]
	ldy $2559.w,X		; BC 59 25 ; Load Y register $2559.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	jsl $591E24.l		; 22 24 1E 59 ; Jump to subroutine long $591E24.l [Writes: Stack Pointer] [Flow: call]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $C830.w		; 2C 30 C8 ; Test bits $C830.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $8B.b		; 25 8B ; Logical AND $8B.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	stx $27.b,Y		; 96 27 ; Store X register $27.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	asl $8A41.w,X		; 1E 41 8A ; Arithmetic shift left $8A41.w,X [Reads: X Index] [Flags: NCZ]
	ora $2D28.w		; 0D 28 2D ; Logical OR $2D28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $73B7.w,Y		; 59 B7 73 ; Exclusive OR accumulator with memory $73B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $2E99.w,Y		; 59 99 2E ; Exclusive OR accumulator with memory $2E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $7E41.w,X		; 1D 41 7E ; OR accumulator with memory $7E41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	trb $C81C.w		; 1C 1C C8 ; Test and reset bits $C81C.w [Reads: Accumulator] [Flags: Z]
	stz $2027.w,X		; 9E 27 20 ; Store zero to $2027.w,X [Reads: X Index]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A2D.w,Y		; 59 2D 1A ; Exclusive OR accumulator with memory $1A2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $B159.w		; 2C 59 B1 ; Test bits $B159.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $731D.w,X		; 1E 1D 73 ; Arithmetic shift left $731D.w,X [Reads: X Index] [Flags: NCZ]
	sta $592730.l,X		; 9F 30 27 59 ; Store accumulator (long,X) $592730.l,X [Reads: Accumulator, X Index]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cmp [$B9.b]		; C7 B9 ; Compare accumulator (long) [$B9.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($E4.b,S),Y		; 73 E4 ; Add with carry (stack relative indirect indexed) ($E4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59AE.w,Y		; 59 AE 59 ; Exclusive OR accumulator with memory $59AE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $28DB.w,X		; 9D DB 28 ; Store accumulator to $28DB.w,X [Reads: Accumulator, X Index]
	and ($A4.b)		; 32 A4 ; AND accumulator with memory (indirect) ($A4.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $CE21.w		; 2D 21 CE ; Logical AND $CE21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $737E.w,X		; 1E 7E 73 ; Arithmetic shift left $737E.w,X [Reads: X Index] [Flags: NCZ]
	jsr $91CE.w		; 20 CE 91 ; Jump to subroutine at $91CE.w [Writes: Stack Pointer] [Flow: call]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $308C.w,Y		; 59 8C 30 ; Exclusive OR accumulator with memory $308C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $731E.w		; CE 1E 73 ; Decrement $731E.w [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sta $1EE2.w,Y		; 99 E2 1E ; Store accumulator to $1EE2.w,Y [Reads: Y Index, Accumulator]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $C830.w		; 2C 30 C8 ; Test bits $C830.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $7343.w,X		; 1D 43 73 ; OR accumulator with memory $7343.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1A59.w		; AD 59 1A ; Load $1A59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	trb $2E2A.w		; 1C 2A 2E ; Test and reset bits $2E2A.w [Reads: Accumulator] [Flags: Z]
	jsl $591DCE.l		; 22 CE 1D 59 ; Jump to subroutine long $591DCE.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($0F.b,S),Y		; 73 0F ; Add with carry (stack relative indirect indexed) ($0F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $411E.w		; 20 1E 41 ; Jump to subroutine at $411E.w [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	eor $B097.w,Y		; 59 97 B0 ; Exclusive OR accumulator with memory $B097.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $41B6.w,Y		; 59 B6 41 ; Exclusive OR accumulator with memory $41B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $1373.w,X		; 7E 73 13 ; Rotate right $1373.w,X [Reads: X Index] [Flags: NCZ]
	and ($CE.b,X)		; 21 CE ; Logical AND ($CE.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $C859.w,X		; 1E 59 C8 ; Arithmetic shift left $C859.w,X [Reads: X Index] [Flags: NCZ]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	jsr $A6A5.w		; 20 A5 A6 ; Jump to subroutine at $A6A5.w [Writes: Stack Pointer] [Flow: call]
	sty $22.b,X		; 94 22 ; Store Y register $22.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	cmp [$2C.b]		; C7 2C ; Compare accumulator (long) [$2C.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $AC1A.w,Y		; 59 1A AC ; Exclusive OR accumulator with memory $AC1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $73		; 42 73 ; Reserved instruction
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $C6A1.w,X		; 1D A1 C6 ; OR accumulator with memory $C6A1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2724.w,Y		; 59 24 27 ; Exclusive OR accumulator with memory $2724.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $CC59.w		; 2C 59 CC ; Test bits $CC59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $1C1E.w		; 2D 1E 1C ; Logical AND $1C1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $1D1E.w		; 2D 1E 1D ; Logical AND $1D1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $282B.w,Y		; 59 2B 28 ; Exclusive OR accumulator with memory $282B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($1A.b)		; 32 1A ; AND accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2D.b		; 25 2D ; Logical AND $2D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	bit $0E59.w		; 2C 59 0E ; Test bits $0E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $320759.l,X		; 1F 59 07 32 ; Logical OR long $320759.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $CEE0.w,Y		; 59 E0 CE ; Exclusive OR accumulator with memory $CEE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $D2.b		; 25 D2 ; Logical AND $D2.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E20.w,Y		; 59 20 2E ; Exclusive OR accumulator with memory $2E20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	stz $2C93.w,X		; 9E 93 2C ; Store zero to $2C93.w,X [Reads: X Index]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $280259.l,X		; 1F 59 02 28 ; Logical OR long $280259.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $411E.w		; 20 1E 41 ; Jump to subroutine at $411E.w [Writes: Stack Pointer] [Flow: call]
	ror $1473.w,X		; 7E 73 14 ; Rotate right $1473.w,X [Reads: X Index] [Flags: NCZ]
	and [$A8.b]		; 27 A8 ; AND accumulator with memory (long) [$A8.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $272E.w		; 2D 2E 27 ; Logical AND $272E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sty $1E.b,X		; 94 1E ; Store Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $73.b		; 26 73 ; Rotate left $73.b [Reads: Direct Page] [Flags: NCZ]
	cpx #$CD.b		; E0 CD ; Compare #$CD.b with X register [Reads: X Index] [Flags: NCZ]
	sta $28DB.w,X		; 9D DB 28 ; Store accumulator to $28DB.w,X [Reads: Accumulator, X Index]
	and ($A4.b)		; 32 A4 ; AND accumulator with memory (indirect) ($A4.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $CE20.w,Y		; 59 20 CE ; Exclusive OR accumulator with memory $CE20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sty $73.b,X		; 94 73 ; Store Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	cmp $1A592B.l,X		; DF 2B 59 1A ; Compare accumulator (long,X) $1A592B.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	jsr $D38F.w		; 20 8F D3 ; Jump to subroutine at $D38F.w [Writes: Stack Pointer] [Flow: call]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $28DA.w,Y		; 59 DA 28 ; Exclusive OR accumulator with memory $28DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $7E.b		; 24 7E ; Test bits $7E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc ($29.b,S),Y		; 73 29 ; Add with carry (stack relative indirect indexed) ($29.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	sbc ($A0.b,X)		; E1 A0 ; Subtract with carry ($A0.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $7327.w,Y		; BE 27 73 ; Load X register $7327.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	trb $94CE.w		; 1C CE 94 ; Test and reset bits $94CE.w [Reads: Accumulator] [Flags: Z]
	ldy $D8.b		; A4 D8 ; Load $D8.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	jsl $D0592B.l		; 22 2B 59 D0 ; Jump to subroutine long $D0592B.l [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $41.b		; 25 41 ; Logical AND $41.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $26.b		; 00 26 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $A51C.w,X		; 9D 1C A5 ; Store accumulator to $A51C.w,X [Reads: Accumulator, X Index]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	bit $0E59.w		; 2C 59 0E ; Test bits $0E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $07737E.l,X		; 1F 7E 73 07 ; Logical OR long $07737E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($2B.b)		; 32 2B ; AND accumulator with memory (indirect) ($2B.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $BF5928.l		; AF 28 59 BF ; Load long $BF5928.l into accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldx #$41.b		; A2 41 ; Load #$41.b into X register [Writes: X Index] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2597.w,Y		; 59 97 25 ; Exclusive OR accumulator with memory $2597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591EA7.l		; 22 A7 1E 59 ; Jump to subroutine long $591EA7.l [Writes: Stack Pointer] [Flow: call]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BDCE.w,Y		; 59 CE BD ; Exclusive OR accumulator with memory $BDCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $B4.b,X		; B4 B4 ; Load Y register $B4.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsr $737E.w		; 20 7E 73 ; Jump to subroutine at $737E.w [Writes: Stack Pointer] [Flow: call]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $412C.w		; 2D 2C 41 ; Logical AND $412C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	dec $E359.w,X		; DE 59 E3 ; Decrement memory $E359.w,X [Reads: X Index] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1EDB.w,Y		; 59 DB 1E ; Exclusive OR accumulator with memory $1EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $CD2E.w		; 2C 2E CD ; Test bits $CD2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1DD0.w		; 2C D0 1D ; Test bits $1DD0.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $309F.w,Y		; 59 9F 30 ; Exclusive OR accumulator with memory $309F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$7E.b]		; 27 7E ; AND accumulator with memory (long) [$7E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($1B.b,S),Y		; 73 1B ; Add with carry (stack relative indirect indexed) ($1B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($BE.b,S),Y		; 73 BE ; Add with carry (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $B659.w		; AD 59 B6 ; Load $B659.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	and $34.b,X		; 35 34 ; Logical AND $34.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $BC.b,X		; 75 BC ; Add $BC.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $592C.w,X		; 1D 2C 59 ; OR accumulator with memory $592C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1C9D.w,Y		; 59 9D 1C ; Exclusive OR accumulator with memory $1C9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $C676.w		; 2C 76 C6 ; Test bits $C676.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 8
	sep #$D0		; E2 D0
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($89.b,X)		; 41 89 ; Exclusive OR accumulator with memory ($89.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($07.b,S),Y		; 13 07 ; OR accumulator (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	tsb $59.b		; 04 59 ; Test and set bits $59.b [Reads: Accumulator] [Flags: Z]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $7F06.w		; 0D 06 7F ; Logical OR $7F06.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lsr A		; 4A ; Logical shift right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	phk		; 4B ; Push program bank register  [Reads: Program Bank] [Writes: Stack Pointer]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $00.b,X		; 16 00 ; Arithmetic shift left $00.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ora $0413.w		; 0D 13 04 ; Logical OR $0413.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $3E.b,S		; 03 3E ; OR accumulator with stack relative $3E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $1C.b,X		; 75 1C ; Add $1C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $1AB426.l		; 22 26 B4 1A ; Jump to subroutine long $1AB426.l [Writes: Stack Pointer] [Flow: call]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A27.w,X		; 1D 27 1A ; OR accumulator with memory $1A27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $19.b		; A4 19 ; Load $19.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cop $8E.b		; 02 8E ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $25D2.w,Y		; 59 D2 25 ; Exclusive OR accumulator with memory $25D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $22A1.w,X		; 9E A1 22 ; Store zero to $22A1.w,X [Reads: X Index]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	eor $26B0.w,Y		; 59 B0 26 ; Exclusive OR accumulator with memory $26B0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $887F.w,X		; 3E 7F 88 ; Rotate left $887F.w,X [Reads: X Index] [Flags: NCZ]
	eor $0003.w,Y		; 59 03 00 ; Exclusive OR accumulator with memory $0003.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $0406.w		; 0D 06 04 ; Logical OR $0406.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora ($3E.b),Y		; 11 3E ; OR accumulator with memory ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $A1.b,S		; A3 A1 ; Load accumulator (stack relative) $A1.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $1E.b,S		; 03 1E ; OR accumulator with stack relative $1E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sty $21.b,X		; 94 21 ; Store Y register $21.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $C5DE76.l		; 8F 76 DE C5 ; Store accumulator (long) $C5DE76.l [Reads: Accumulator]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $B40A.w,Y		; 59 0A B4 ; Exclusive OR accumulator with memory $B40A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C98B.w		; 20 8B C9 ; Jump to subroutine at $C98B.w [Writes: Stack Pointer] [Flow: call]
	rol $B5.b		; 26 B5 ; Rotate left $B5.b [Reads: Direct Page] [Flags: NCZ]
	bit $C722.w		; 2C 22 C7 ; Test bits $C722.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $E77F.w,X		; 3E 7F E7 ; Rotate left $E77F.w,X [Reads: X Index] [Flags: NCZ]
	bit $DF59.w		; 2C 59 DF ; Test bits $DF59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $280B.w,Y		; 59 0B 28 ; Exclusive OR accumulator with memory $280B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $7F2C.w,X		; 1D 2C 7F ; OR accumulator with memory $7F2C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$03.b		; 89 03 ; Test bits #$03.b with accumulator [Reads: Accumulator] [Flags: Z]
	brk $0D.b		; 00 0D ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl $04.b		; 06 04 ; Arithmetic shift left $04.b [Reads: Direct Page] [Flags: NCZ]
	ora ($3E.b),Y		; 11 3E ; OR accumulator with memory ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $01.b,X		; 75 01 ; Add $01.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $CDDF.w,X		; 1E DF CD ; Arithmetic shift left $CDDF.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora $1E1E.w,X		; 1D 1E 1E ; OR accumulator with memory $1E1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $198CD4.l,X		; DF D4 8C 19 ; Compare accumulator (long,X) $198CD4.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $167F.w,X		; 3E 7F 16 ; Rotate left $167F.w,X [Reads: X Index] [Flags: NCZ]
	asl $9B25.w,X		; 1E 25 9B ; Arithmetic shift left $9B25.w,X [Reads: X Index] [Flags: NCZ]
	asl $DA59.w,X		; 1E 59 DA ; Arithmetic shift left $DA59.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $12591C.l		; 22 1C 59 12 ; Jump to subroutine long $12591C.l [Writes: Stack Pointer] [Flow: call]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $E6.b,X		; 75 E6 ; Add $E6.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $9416.w,Y		; 59 16 94 ; Exclusive OR accumulator with memory $9416.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1F.b		; A6 1F ; Load $1F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	stx $1F0E.w		; 8E 0E 1F ; Store X register to $1F0E.w [Reads: X Index]
	eor $B516.w,Y		; 59 16 B5 ; Exclusive OR accumulator with memory $B516.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	jsr $B559.w		; 20 59 B5 ; Jump to subroutine at $B559.w [Writes: Stack Pointer] [Flow: call]
	ror $B7.b,X		; 76 B7 ; Rotate right $B7.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $211A.w,Y		; 59 1A 21 ; Exclusive OR accumulator with memory $211A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D1A.w,X		; 1E 1A 1D ; Arithmetic shift left $1D1A.w,X [Reads: X Index] [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	trb $2F1A.w		; 1C 1A 2F ; Test and reset bits $2F1A.w [Reads: Accumulator] [Flags: Z]
	asl $2559.w,X		; 1E 59 25 ; Arithmetic shift left $2559.w,X [Reads: X Index] [Flags: NCZ]
	asl $1D1A.w,X		; 1E 1A 1D ; Arithmetic shift left $1D1A.w,X [Reads: X Index] [Flags: NCZ]
	bit $DA59.w		; 2C 59 DA ; Test bits $DA59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$94.b		; 29 94 ; Logical AND #$94.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($75.b,X)		; 21 75 ; Logical AND ($75.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	stx $9C.b,Y		; 96 9C ; Store X register $9C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $592824.l		; 22 24 28 59 ; Jump to subroutine long $592824.l [Writes: Stack Pointer] [Flow: call]
	ora $22.b,X		; 15 22 ; OR accumulator with memory $22.b,X [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $411E.w		; 20 1E 41 ; Jump to subroutine at $411E.w [Writes: Stack Pointer] [Flow: call]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $4E5932.l,X		; DF 32 59 4E ; Compare accumulator (long,X) $4E5932.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $1A0B.w,Y		; 59 0B 1A ; Exclusive OR accumulator with memory $1A0B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ror $88.b,X		; 76 88 ; Rotate right $88.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $2112.w,Y		; 59 12 21 ; Exclusive OR accumulator with memory $2112.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$7F.b		; 29 7F ; Logical AND #$7F.b with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $754F.w,Y		; 59 4F 75 ; Exclusive OR accumulator with memory $754F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $1A0A.w,Y		; 59 0A 1A ; Exclusive OR accumulator with memory $1A0A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $592824.l		; 22 24 28 59 ; Jump to subroutine long $592824.l [Writes: Stack Pointer] [Flow: call]
	ora $22.b,X		; 15 22 ; OR accumulator with memory $22.b,X [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $7F1E.w		; 20 1E 7F ; Jump to subroutine at $7F1E.w [Writes: Stack Pointer] [Flow: call]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $754F.w,Y		; 59 4F 75 ; Exclusive OR accumulator with memory $754F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $1E03.w,Y		; 59 03 1E ; Exclusive OR accumulator with memory $1E03.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2B		; D0 2B ; Branch if not equal to $D0, $2B [Flow: branch]
	and $0E59.w		; 2D 59 0E ; Logical AND $0E59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $320C59.l,X		; 1F 59 0C 32 ; Logical OR long $320C59.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	and ($7F.b)		; 32 7F ; AND accumulator with memory (indirect) ($7F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $594D.w,Y		; 59 4D 59 ; Exclusive OR accumulator with memory $594D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $50, $75		; 50 75 ; Branch if overflow clear to $50, $75 [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $2112.w,Y		; 59 12 21 ; Exclusive OR accumulator with memory $2112.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$76.b		; 29 76 ; Logical AND #$76.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $9416.w,Y		; 59 16 94 ; Exclusive OR accumulator with memory $9416.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1F.b		; A6 1F ; Load $1F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	stx $1F0E.w		; 8E 0E 1F ; Store X register to $1F0E.w [Reads: X Index]
	eor $B516.w,Y		; 59 16 B5 ; Exclusive OR accumulator with memory $B516.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	jsr $E77F.w		; 20 7F E7 ; Jump to subroutine at $E77F.w [Writes: Stack Pointer] [Flow: call]
	bit $DF59.w		; 2C 59 DF ; Test bits $DF59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $50, $59		; 50 59 ; Branch if overflow clear to $50, $59 [Flow: branch]
	tsb $92.b		; 04 92 ; Test and set bits $92.b [Reads: Accumulator] [Flags: Z]
	ldx $27.b		; A6 27 ; Load $27.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor $1A0F.w,Y		; 59 0F 1A ; Exclusive OR accumulator with memory $1A0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $761E.w		; 1C 1E 76 ; Test and reset bits $761E.w [Reads: Accumulator] [Flags: Z]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $594F.w,Y		; 59 4F 59 ; Exclusive OR accumulator with memory $594F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $9202.w,Y		; 59 02 92 ; Exclusive OR accumulator with memory $9202.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $888875.l,X		; 7F 75 88 88 ; Add long $888875.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc $321A0F.l,X		; 7F 0F 1A 32 ; Add long $321A0F.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2D94.w,Y		; 59 94 2D ; Exclusive OR accumulator with memory $2D94.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $22.b,S		; A3 22 ; Load accumulator (stack relative) $22.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	cmp $201A.w,X		; DD 1A 20 ; Compare accumulator $201A.w,X [Reads: X Index] [Flags: NCZ]
	asl $2659.w,X		; 1E 59 26 ; Arithmetic shift left $2659.w,X [Reads: X Index] [Flags: NCZ]
	jsl $251D1D.l		; 22 1D 1D 25 ; Jump to subroutine long $251D1D.l [Writes: Stack Pointer] [Flow: call]
	asl $1A40.w,X		; 1E 40 1A ; Arithmetic shift left $1A40.w,X [Reads: X Index] [Flags: NCZ]
	jsr $BCA4.w		; 20 A4 BC ; Jump to subroutine at $BCA4.w [Writes: Stack Pointer] [Flow: call]
	ror $D3.b,X		; 76 D3 ; Rotate right $D3.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $90, $B3		; 90 B3 ; Branch if carry clear to $90, $B3 [Flow: branch]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	bit $2022.w		; 2C 22 20 ; Test bits $2022.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $0B73.w,X		; 7E 73 0B ; Rotate right $0B73.w,X [Reads: X Index] [Flags: NCZ]
	asl $2F1A.w,X		; 1E 1A 2F ; Arithmetic shift left $2F1A.w,X [Reads: X Index] [Flags: NCZ]
	asl $B059.w,X		; 1E 59 B0 ; Arithmetic shift left $B059.w,X [Reads: X Index] [Flags: NCZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $757F.w,X		; 3E 7F 75 ; Rotate left $757F.w,X [Reads: X Index] [Flags: NCZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	asl $591F.w		; 0E 1F 59 ; Arithmetic shift left $591F.w [Flags: NCZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	rol $9726.w		; 2E 26 97 ; Rotate left $9726.w [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $1A.b,S		; 23 1A ; AND accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	stz $762C.w		; 9C 2C 76 ; Store zero to $762C.w
	brk $41.b		; 00 41 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	bit $B4.b		; 24 B4 ; Test bits $B4.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $018C.w,Y		; 59 8C 01 ; Exclusive OR accumulator with memory $018C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($59.b,X)		; 41 59 ; Exclusive OR accumulator with memory ($59.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	bit $B4.b		; 24 B4 ; Test bits $B4.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $4E5932.l,X		; DF 32 59 4E ; Compare accumulator (long,X) $4E5932.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit #$0A.b		; 89 0A ; Test bits #$0A.b with accumulator [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $592824.l		; 22 24 28 59 ; Jump to subroutine long $592824.l [Writes: Stack Pointer] [Flow: call]
	ora $22.b,X		; 15 22 ; OR accumulator with memory $22.b,X [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $7F1E.w		; 20 1E 7F ; Jump to subroutine at $7F1E.w [Writes: Stack Pointer] [Flow: call]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $4295.w		; 2E 95 42 ; Rotate left $4295.w [Flags: NCZ]
	eor $2E9F.w,Y		; 59 9F 2E ; Exclusive OR accumulator with memory $2E9F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	jsl $8C5925.l		; 22 25 59 8C ; Jump to subroutine long $8C5925.l [Writes: Stack Pointer] [Flow: call]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $4295.w		; 2E 95 42 ; Rotate left $4295.w [Flags: NCZ]
	adc $1F.b,X		; 75 1F ; Add $1F.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsl $2E1BCD.l		; 22 CD 1B 2E ; Jump to subroutine long $2E1BCD.l [Writes: Stack Pointer] [Flow: call]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sty $1A1C.w		; 8C 1C 1A ; Store Y register to $1A1C.w [Reads: Y Index]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $951B.w		; 2E 1B 95 ; Rotate left $951B.w [Flags: NCZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	tsb $241A.w		; 0C 1A 24 ; Test and set bits $241A.w [Reads: Accumulator] [Flags: Z]
	lda ($BF.b,S),Y		; B3 BF ; Load accumulator (stack relative indirect indexed) ($BF.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cmp ($2B.b),Y		; D1 2B ; Compare accumulator ($2B.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	dec $4230.w		; CE 30 42 ; Decrement $4230.w [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $43.b		; 26 43 ; Rotate left $43.b [Reads: Direct Page] [Flags: NCZ]
	adc $211E07.l,X		; 7F 07 1E 21 ; Add long $211E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $27E3.w,Y		; 59 E3 27 ; Exclusive OR accumulator with memory $27E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $BC75.w		; 20 75 BC ; Jump to subroutine at $BC75.w [Writes: Stack Pointer] [Flow: call]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $DA59.w		; 9C 59 DA ; Store zero to $DA59.w
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and #$76.b		; 29 76 ; Logical AND #$76.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	pei ($A8.b)		; D4 A8 ; Push effective indirect address ($A8.b) [Reads: Direct Page] [Writes: Stack Pointer]
	eor $D5CF.w,Y		; 59 CF D5 ; Exclusive OR accumulator with memory $D5CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $AC59.w		; 20 59 AC ; Jump to subroutine at $AC59.w [Writes: Stack Pointer] [Flow: call]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $7E43.w,X		; 1D 43 7E ; OR accumulator with memory $7E43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $5921.w,X		; 1E 21 59 ; Arithmetic shift left $5921.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $26260C.l,X		; 7F 0C 26 26 ; Add long $26260C.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $26.b		; 26 26 ; Rotate left $26.b [Reads: Direct Page] [Flags: NCZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	bit $25BE.w		; 2C BE 25 ; Test bits $25BE.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $A52D.w		; 2D 2D A5 ; Logical AND $A52D.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $1F.b,X		; 75 1F ; Add $1F.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $43B6.w		; 2E B6 43 ; Rotate left $43B6.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	ldx $D759.w,Y		; BE 59 D7 ; Load X register $D759.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $0C76.w		; 2D 76 0C ; Logical AND $0C76.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $2BD1.w		; 2E D1 2B ; Rotate left $2BD1.w [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $42.b		; 26 42 ; Rotate left $42.b [Reads: Direct Page] [Flags: NCZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $B41F.w,Y		; 99 1F B4 ; Store accumulator to $B41F.w,Y [Reads: Y Index, Accumulator]
	lda $21.b,X		; B5 21 ; Load $21.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $CE1B.w,Y		; 59 1B CE ; Exclusive OR accumulator with memory $CE1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $41		; 30 41 ; Branch if minus to $30, $41 [Flow: branch]
	ror $0773.w,X		; 7E 73 07 ; Rotate right $0773.w,X [Reads: X Index] [Flags: NCZ]
	asl $5921.w,X		; 1E 21 59 ; Arithmetic shift left $5921.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $591F08.l,X		; 7F 08 1F 59 ; Add long $591F08.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $C722.w		; 2D 22 C7 ; Logical AND $C722.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $75		; 42 75 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $2B1B.w,Y		; 59 1B 2B ; Exclusive OR accumulator with memory $2B1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($1A.b,S),Y		; B3 1A ; Load accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $76DA.w,Y		; 59 DA 76 ; Exclusive OR accumulator with memory $76DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2E.b		; 29 2E ; Logical AND #$2E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and $B659.w		; 2D 59 B6 ; Logical AND $B659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $43B4.w,Y		; 59 B4 43 ; Exclusive OR accumulator with memory $43B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $117F.w,X		; 3E 7F 11 ; Rotate left $117F.w,X [Reads: X Index] [Flags: NCZ]
	ldy $B5.b		; A4 B5 ; Load $B5.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1C9E.w,Y		; BE 9E 1C ; Load X register $1C9E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $75411E.l,X		; 1F 1E 41 75 ; Logical OR long $75411E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $CE.b		; 06 CE ; Arithmetic shift left $CE.b [Reads: Direct Page] [Flags: NCZ]
	ldy #$B5.b		; A0 B5 ; Load #$B5.b into Y register [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1C9E.w,Y		; BE 9E 1C ; Load X register $1C9E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $7641.w		; 1C 41 76 ; Test and reset bits $7641.w [Reads: Accumulator] [Flags: Z]
	ora ($25.b,X)		; 01 25 ; Logical OR ($25.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $591E.w		; 2E 1E 59 ; Rotate left $591E.w [Flags: NCZ]
	dec $1E27.w		; CE 27 1E ; Decrement $1E27.w [Flags: NZ]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $90591E.l,X		; 1F 1E 59 90 ; Logical OR long $90591E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $BD73.w,X		; 7E 73 BD ; Rotate right $BD73.w,X [Reads: X Index] [Flags: NCZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cpx $1E.b		; E4 1E ; Compare $1E.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	and $1E92.w		; 2D 92 1E ; Logical AND $1E92.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $261A.w		; 2C 1A 26 ; Test bits $261A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($11.b,S),Y		; 73 11 ; Add with carry (stack relative indirect indexed) ($11.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldy $0F.b		; A4 0F ; Load $0F.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $C722.w		; 2D 22 C7 ; Logical AND $C722.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $167F.w,X		; 3E 7F 16 ; Rotate left $167F.w,X [Reads: X Index] [Flags: NCZ]
	ldx $21.b,Y		; B6 21 ; Load X register $21.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	cmp $1A.b		; C5 1A ; Compare $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $98591C.l		; 22 1C 59 98 ; Jump to subroutine long $98591C.l [Writes: Stack Pointer] [Flow: call]
	and $252D.w		; 2D 2D 25 ; Logical AND $252D.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $5942.w,X		; 1E 42 59 ; Arithmetic shift left $5942.w,X [Reads: X Index] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
.INDEX 16
	rep #$59		; C2 59
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $5932.w		; 2E 32 59 ; Rotate left $5932.w [Flags: NCZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $C722.w		; 2D 22 C7 ; Logical AND $C722.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $7641.w		; 2C 41 76 ; Test bits $7641.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $0D7F.w,X		; 3E 7F 0D ; Rotate left $0D7F.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $42, $8A		; 42 8A ; Reserved instruction
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $8A		; 42 8A ; Reserved instruction
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E29.w,Y		; 59 29 2E ; Exclusive OR accumulator with memory $2E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $9375.w		; 2D 75 93 ; Logical AND $9375.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($D5.b)		; 32 D5 ; AND accumulator with memory (indirect) ($D5.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $B459.w		; 20 59 B4 ; Jump to subroutine at $B459.w [Writes: Stack Pointer] [Flow: call]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $25252E.l,X		; 1F 2E 25 25 ; Logical OR long $25252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	rol $0D75.w,X		; 3E 75 0D ; Rotate left $0D75.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $B225.w,Y		; 99 25 B2 ; Store accumulator to $B225.w,Y [Reads: Y Index, Accumulator]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	bit $9059.w		; 2C 59 90 ; Test bits $9059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $D0.b,X		; 76 D0 ; Rotate right $D0.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2B1A.w,X		; 1D 1A 2B ; OR accumulator with memory $2B1A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $27.b		; 24 27 ; Test bits $27.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $932B.w,Y		; BE 2B 93 ; Load X register $932B.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	jsr $753E.w		; 20 3E 75 ; Jump to subroutine at $753E.w [Writes: Stack Pointer] [Flow: call]
	asl $22.b		; 06 22 ; Arithmetic shift left $22.b [Reads: Direct Page] [Flags: NCZ]
	and $B6591E.l		; 2F 1E 59 B6 ; AND accumulator with memory (long) $B6591E.l [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $13.b		; 45 13 ; Exclusive OR $13.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $25D0.w,Y		; 59 D0 25 ; Exclusive OR accumulator with memory $25D0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $7693.w,Y		; 59 93 76 ; Exclusive OR accumulator with memory $7693.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1E.b,Y		; B6 1E ; Load X register $1E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $42.b		; 26 42 ; Rotate left $42.b [Reads: Direct Page] [Flags: NCZ]
	eor $CE29.w,Y		; 59 29 CE ; Exclusive OR accumulator with memory $CE29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2D12.w,Y		; 59 12 2D ; Exclusive OR accumulator with memory $2D12.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $0159.w		; 2D 59 01 ; Logical AND $0159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $DA2D.w		; 2E 2D DA ; Rotate left $DA2D.w [Flags: NCZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $7F46.w,Y		; 59 46 7F ; Exclusive OR accumulator with memory $7F46.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $D199.w,Y		; 59 99 D1 ; Exclusive OR accumulator with memory $D199.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	eor $272E.w,Y		; 59 2E 27 ; Exclusive OR accumulator with memory $272E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2522.w		; 2D 22 25 ; Logical AND $2522.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $76E3.w,Y		; 59 E3 76 ; Exclusive OR accumulator with memory $76E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $5927.w		; 2E 27 59 ; Rotate left $5927.w [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $3E2D.w		; 2E 2D 3E ; Rotate left $3E2D.w [Flags: NCZ]
	adc $9859E8.l,X		; 7F E8 59 98 ; Add long $9859E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$591D.w		; E0 1D 59 ; Compare #$591D.w with X register [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $3E251E.l		; 2F 1E 25 3E ; AND accumulator with memory (long) $3E251E.l [Writes: Accumulator] [Flags: NZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $9E99.w,Y		; 59 99 9E ; Exclusive OR accumulator with memory $9E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $B459.w		; 20 59 B4 ; Jump to subroutine at $B459.w [Writes: Stack Pointer] [Flow: call]
	eor $32BC.w,Y		; 59 BC 32 ; Exclusive OR accumulator with memory $32BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $BA29.w,Y		; 59 29 BA ; Exclusive OR accumulator with memory $BA29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C1E.w		; 1C 1E 2C ; Test and reset bits $2C1E.w [Reads: Accumulator] [Flags: Z]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $A727.w,Y		; 59 27 A7 ; Exclusive OR accumulator with memory $A727.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($B8.b,X)		; A1 B8 ; Load accumulator ($B8.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $91E1.w,Y		; 59 E1 91 ; Exclusive OR accumulator with memory $91E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $51.b,S		; E3 51 ; Subtract stack-relative $51.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $1F73.w,X		; 7E 73 1F ; Rotate right $1F73.w,X [Reads: X Index] [Flags: NCZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	rol $E77F.w,X		; 3E 7F E7 ; Rotate left $E77F.w,X [Reads: X Index] [Flags: NCZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $02591C.l		; 22 1C 59 02 ; Jump to subroutine long $02591C.l [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $B48D.w,Y		; 59 8D B4 ; Exclusive OR accumulator with memory $B48D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $9522B5.l		; 2F B5 22 95 ; AND accumulator with memory (long) $9522B5.l [Writes: Accumulator] [Flags: NZ]
	eor $A0E1.w,Y		; 59 E1 A0 ; Exclusive OR accumulator with memory $A0E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cpx #$2B1A.w		; E0 1A 2B ; Compare #$2B1A.w with X register [Reads: X Index] [Flags: NCZ]
	ror $B6.b,X		; 76 B6 ; Rotate right $B6.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $1659.w,X		; 3E 59 16 ; Rotate left $1659.w,X [Reads: X Index] [Flags: NCZ]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $0F591C.l		; 22 1C 59 0F ; Jump to subroutine long $0F591C.l [Writes: Stack Pointer] [Flow: call]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $1D		; 30 1D ; Branch if minus to $30, $1D [Flow: branch]
	ldx $3E.b		; A6 3E ; Load $3E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $13.b,X		; 75 13 ; Add $13.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $292C.w,Y		; 59 2C 29 ; Exclusive OR accumulator with memory $292C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $24.b,X		; B4 24 ; Load Y register $24.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	lda $1E.b		; A5 1E ; Load $1E.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	asl $762C.w,X		; 1E 2C 76 ; Arithmetic shift left $762C.w,X [Reads: X Index] [Flags: NCZ]
	sty $32BC.w		; 8C BC 32 ; Store Y register to $32BC.w [Reads: Y Index]
	eor $D828.w,Y		; 59 28 D8 ; Exclusive OR accumulator with memory $D828.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $20D5.w,Y		; 59 D5 20 ; Exclusive OR accumulator with memory $20D5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $7F3E.w		; 2C 3E 7F ; Test bits $7F3E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2E98.w,Y		; 59 98 2E ; Exclusive OR accumulator with memory $2E98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	eor $C819.w,Y		; 59 19 C8 ; Exclusive OR accumulator with memory $C819.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	ora $25.b		; 05 25 ; Logical OR $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $2CC929.l		; 22 29 C9 2C ; Jump to subroutine long $2CC929.l [Writes: Stack Pointer] [Flow: call]
	rol $1675.w,X		; 3E 75 16 ; Rotate left $1675.w,X [Reads: X Index] [Flags: NCZ]
	ldx $21.b,Y		; B6 21 ; Load X register $21.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $D0D8.w,Y		; 59 D8 D0 ; Exclusive OR accumulator with memory $D0D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	sta $76.b,X		; 95 76 ; Store accumulator to $76.b,X [Reads: Accumulator, X Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $E22C.w,Y		; 59 2C E2 ; Exclusive OR accumulator with memory $E22C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	lda [$A0.b]		; A7 A0 ; Load accumulator (long) [$A0.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	ora $1E1E.w,X		; 1D 1E 1E ; OR accumulator with memory $1E1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $7F3ED6.l,X		; DF D6 3E 7F ; Compare accumulator (long,X) $7F3ED6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2BE028.l		; 0F 28 E0 2B ; OR accumulator with memory (long) $2BE028.l [Writes: Accumulator] [Flags: NZ]
	eor $BB06.w,Y		; 59 06 BB ; Exclusive OR accumulator with memory $BB06.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $753E1E.l		; 2F 1E 3E 75 ; AND accumulator with memory (long) $753E1E.l [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $1F99.w,Y		; 59 99 1F ; Exclusive OR accumulator with memory $1F99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $251E.w,X		; 1E 1E 25 ; Arithmetic shift left $251E.w,X [Reads: X Index] [Flags: NCZ]
	eor $CED3.w,Y		; 59 D3 CE ; Exclusive OR accumulator with memory $CED3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $5921.w		; 2D 21 59 ; Logical AND $5921.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $7621.w		; 2D 21 76 ; Logical AND $7621.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda ($27.b),Y		; B1 27 ; Load accumulator ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $3E2C.w,X		; 1D 2C 3E ; OR accumulator with memory $3E2C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2999.w,Y		; 59 99 29 ; Exclusive OR accumulator with memory $2999.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $DC599C.l		; 22 9C 59 DC ; Jump to subroutine long $DC599C.l [Writes: Stack Pointer] [Flow: call]
	eor $7E90.w,Y		; 59 90 7E ; Exclusive OR accumulator with memory $7E90.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($C7.b,S),Y		; D3 C7 ; Compare accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	adc $3059E8.l,X		; 7F E8 59 30 ; Add long $3059E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $02.b,X		; 75 02 ; Add $02.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $3E1E.w		; 20 1E 3E ; Jump to subroutine at $3E1E.w [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1A.b,S),Y		; 13 1A ; OR accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ror $12.b,X		; 76 12 ; Rotate right $12.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	ora ($30.b,S),Y		; 13 30 ; OR accumulator (stack relative indirect indexed) ($30.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $CE59.w		; 2C 59 CE ; Test bits $CE59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $3EB4.w,X		; BD B4 3E ; Load $3EB4.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $3059E8.l,X		; 7F E8 59 30 ; Add long $3059E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$3E2B.w		; E0 2B 3E ; Compare #$3E2B.w with X register [Reads: X Index] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AAC.w,Y		; 59 AC 1A ; Exclusive OR accumulator with memory $1AAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora $279EB4.l,X		; 1F B4 9E 27 ; Logical OR long $279EB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D59.w		; 20 59 2D ; Jump to subroutine at $2D59.w [Writes: Stack Pointer] [Flow: call]
	and ($CE.b,X)		; 21 CE ; Logical AND ($CE.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $0F76.w,X		; 1E 76 0F ; Arithmetic shift left $0F76.w,X [Reads: X Index] [Flags: NCZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $2022.w		; 2C 22 20 ; Test bits $2022.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($2D.b,X)		; 21 2D ; Logical AND ($2D.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $C730.w,Y		; 59 30 C7 ; Exclusive OR accumulator with memory $C730.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $0E59.w		; 2D 59 0E ; Logical AND $0E59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $B51659.l,X		; 1F 59 16 B5 ; Logical OR long $B51659.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $753E26.l,X		; 9F 26 3E 75 ; Store accumulator (long,X) $753E26.l,X [Reads: Accumulator, X Index]
	asl $B6.b,X		; 16 B6 ; Arithmetic shift left $B6.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cmp $422C.w,Y		; D9 2C 42 ; Compare accumulator $422C.w,Y [Reads: Y Index] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1C59.w		; AD 59 1C ; Load $1C59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	asl $761D.w,X		; 1E 1D 76 ; Arithmetic shift left $761D.w,X [Reads: X Index] [Flags: NCZ]
	stx TSUB.w		; 8E 2D 21 ; Store X register to TSUB.w [Reads: X Index]
	dec $591E.w		; CE 1E 59 ; Decrement $591E.w [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $3E2C.w		; 2D 2C 3E ; Logical AND $3E2C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ror $D873.w,X		; 7E 73 D8 ; Rotate right $D873.w,X [Reads: X Index] [Flags: NCZ]
	eor $280B.w,Y		; 59 0B 28 ; Exclusive OR accumulator with memory $280B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $592C.w,X		; 1D 2C 59 ; OR accumulator with memory $592C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $73AB.w,Y		; 59 AB 73 ; Exclusive OR accumulator with memory $73AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $2E0C.w,Y		; 59 0C 2E ; Exclusive OR accumulator with memory $2E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2B.b),Y		; D1 2B ; Compare accumulator ($2B.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	bit $25BE.w		; 2C BE 25 ; Test bits $25BE.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $E02C.w,Y		; 59 2C E0 ; Exclusive OR accumulator with memory $E02C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $752D.w,X		; 1E 2D 75 ; Arithmetic shift left $752D.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $A02D.w		; 2D 2D A0 ; Logical AND $A02D.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $B62E2B.l,X		; 1F 2B 2E B6 ; Logical OR long $B62E2B.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $AA99.w,Y		; 59 99 AA ; Exclusive OR accumulator with memory $AA99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $3293.w,Y		; 59 93 32 ; Exclusive OR accumulator with memory $3293.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ror $E173.w,X		; 7E 73 E1 ; Rotate right $E173.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $12.b		; 45 12 ; Exclusive OR $12.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $1E25.w,X		; 1E 25 1E ; Arithmetic shift left $1E25.w,X [Reads: X Index] [Flags: NCZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	.db $90, $73		; 90 73 ; Branch if carry clear to $90, $73 [Flow: branch]
	and #$CE.b		; 29 CE ; Logical AND #$CE.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $595E.w,Y		; 59 5E 59 ; Exclusive OR accumulator with memory $595E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lsr $41.b		; 46 41 ; Logical shift right $41.b [Reads: Direct Page] [Flags: NCZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	tsb $9F2E.w		; 0C 2E 9F ; Test and set bits $9F2E.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $2E99.w,Y		; 59 99 2E ; Exclusive OR accumulator with memory $2E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1ACE.w,Y		; 59 CE 1A ; Exclusive OR accumulator with memory $1ACE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D859.w,X		; 1D 59 D8 ; OR accumulator with memory $D859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $93.b,X		; 76 93 ; Rotate right $93.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	trb $A322.w		; 1C 22 A3 ; Test and reset bits $A322.w [Reads: Accumulator] [Flags: Z]
	eor $27BA.w,Y		; 59 BA 27 ; Exclusive OR accumulator with memory $27BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1A2E.w		; 20 2E 1A ; Jump to subroutine at $1A2E.w [Writes: Stack Pointer] [Flow: call]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $C728.w		; 0C 28 C7 ; Test and set bits $C728.w [Reads: Accumulator] [Flags: Z]
	eor $A20F.w,Y		; 59 0F A2 ; Exclusive OR accumulator with memory $A20F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $3E.b		; 25 3E ; Logical AND $3E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $CC59.w		; 2C 59 CC ; Test bits $CC59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $1C1E.w		; 2D 1E 1C ; Logical AND $1C1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $B11C.w,Y		; 59 1C B1 ; Exclusive OR accumulator with memory $B11C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($1E.b,S),Y		; B3 1E ; Load accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $1C1E1F.l,X		; 1F 1F 1E 1C ; Logical OR long $1C1E1F.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $0673.w,X		; 7E 73 06 ; Rotate right $0673.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$280F.w		; A0 0F 28 ; Load #$280F.w into Y register [Writes: Y Index] [Flags: NZ]
	cpx #$412B.w		; E0 2B 41 ; Compare #$412B.w with X register [Reads: X Index] [Flags: NCZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2802.w,Y		; 59 02 28 ; Exclusive OR accumulator with memory $2802.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $3E2C.w		; 2C 2C 3E ; Test bits $3E2C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc $0D.b,X		; 75 0D ; Add $0D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $B429.w,Y		; 99 29 B4 ; Store accumulator to $B429.w,Y [Reads: Y Index, Accumulator]
	and #$28.b		; 29 28 ; Logical AND #$28.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $2D.b,X		; B4 2D ; Load Y register $2D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $76D8.w,Y		; 59 D8 76 ; Exclusive OR accumulator with memory $76D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	jsl $C6592B.l		; 22 2B 59 C6 ; Jump to subroutine long $C6592B.l [Writes: Stack Pointer] [Flow: call]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $7E.b		; 25 7E ; Logical AND $7E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($BD.b,S),Y		; 73 BD ; Add with carry (stack relative indirect indexed) ($BD.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $291A.w		; 0C 1A 29 ; Test and set bits $291A.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $2E99.w,Y		; 59 99 2E ; Exclusive OR accumulator with memory $2E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $1C.b,X		; 76 1C ; Rotate right $1C.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $CE2B.w		; 2E 2B CE ; Rotate left $CE2B.w [Flags: NCZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $22B6.w		; 2C B6 22 ; Test bits $22B6.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sty $59D8.w		; 8C D8 59 ; Store Y register to $59D8.w [Reads: Y Index]
	dec $7ED3.w		; CE D3 7E ; Decrement $7ED3.w [Flags: NZ]
	adc ($C6.b,S),Y		; 73 C6 ; Add with carry (stack relative indirect indexed) ($C6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	eor $0F45.w,Y		; 59 45 0F ; Exclusive OR accumulator with memory $0F45.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $465D.w,Y		; 59 5D 46 ; Exclusive OR accumulator with memory $465D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	ora ($28.b),Y		; 11 28 ; OR accumulator with memory ($28.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $753E.w,X		; 1D 3E 75 ; OR accumulator with memory $753E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $25B0.w		; 1C B0 25 ; Test and reset bits $25B0.w [Reads: Accumulator] [Flags: Z]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $1B59.w		; 1C 59 1B ; Test and reset bits $1B59.w [Reads: Accumulator] [Flags: Z]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	cmp ($2C.b,S),Y		; D3 2C ; Compare accumulator (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $763E2B.l		; 22 2B 3E 76 ; Jump to subroutine long $763E2B.l [Writes: Stack Pointer] [Flow: call]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $DF59.w		; 2D 59 DF ; Logical AND $DF59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $211C.w		; 2D 1C 21 ; Logical AND $211C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2205.w,Y		; 59 05 22 ; Exclusive OR accumulator with memory $2205.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $2811.w		; CD 11 28 ; Compare $2811.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	ora $753E.w,X		; 1D 3E 75 ; OR accumulator with memory $753E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $282B.w,Y		; 59 2B 28 ; Exclusive OR accumulator with memory $282B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $9B59.w,X		; 1D 59 9B ; OR accumulator with memory $9B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $2C1D.w,X		; BC 1D 2C ; Load Y register $2C1D.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $591D.w		; CE 1D 59 ; Decrement $591D.w [Flags: NZ]
	ora $3ECE22.l,X		; 1F 22 CE 3E ; Logical OR long $3ECE22.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $01.b,X		; 76 01 ; Rotate right $01.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cmp $211C2D.l,X		; DF 2D 1C 21 ; Compare accumulator (long,X) $211C2D.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D804.w,Y		; 59 04 D8 ; Exclusive OR accumulator with memory $D804.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $251A.w,X		; 1D 1A 25 ; OR accumulator with memory $251A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$3E.b]		; C7 3E ; Compare accumulator (long) [$3E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $1C59.w		; 1C 59 1C ; Test and reset bits $1C59.w [Reads: Accumulator] [Flags: Z]
	cmp [$DB.b]		; C7 DB ; Compare accumulator (long) [$DB.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jmp.w [$76C9]		; DC C9 76 ; Jump long indirect [$76C9] [Flow: jump]
	sty $26.b,X		; 94 26 ; Store Y register $26.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $AF29.w		; 2C 29 AF ; Test bits $AF29.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $8C59.w,X		; 1E 59 8C ; Arithmetic shift left $8C59.w,X [Reads: X Index] [Flags: NCZ]
	and #$28.b		; 29 28 ; Logical AND #$28.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $27E2.w,Y		; 59 E2 27 ; Exclusive OR accumulator with memory $27E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $7E3E.w,X		; 1D 3E 7E ; OR accumulator with memory $7E3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $98.b		; 26 98 ; Rotate left $98.b [Reads: Direct Page] [Flags: NCZ]
	bit $0C59.w		; 2C 59 0C ; Test bits $0C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $1A1D.w,X		; 1E 1D 1A ; Arithmetic shift left $1A1D.w,X [Reads: X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $753EC7.l		; 22 C7 3E 75 ; Jump to subroutine long $753EC7.l [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $BD59.w		; 1C 59 BD ; Test and reset bits $BD59.w [Reads: Accumulator] [Flags: Z]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $2B20.w,Y		; 59 20 2B ; Exclusive OR accumulator with memory $2B20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpy $76.b		; C4 76 ; Compare $76.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	asl $2931.w,X		; 1E 31 29 ; Arithmetic shift left $2931.w,X [Reads: X Index] [Flags: NCZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	ora $591E.w,X		; 1D 1E 59 ; OR accumulator with memory $591E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dec $CB59.w,X		; DE 59 CB ; Decrement memory $CB59.w,X [Reads: X Index] [Flags: NZ]
	ldx $3E.b		; A6 3E ; Load $3E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2E10.w,Y		; 59 10 2E ; Exclusive OR accumulator with memory $2E10.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $251A.w,X		; 1D 1A 25 ; OR accumulator with memory $251A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$3E.b]		; C7 3E ; Compare accumulator (long) [$3E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $1C59.w		; 1C 59 1C ; Test and reset bits $1C59.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $2CD0.w		; 2E D0 2C ; Rotate left $2CD0.w [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C42B.w		; 20 2B C4 ; Jump to subroutine at $C42B.w [Writes: Stack Pointer] [Flow: call]
	ror $DA.b,X		; 76 DA ; Rotate right $DA.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $1D8C.w,Y		; 59 8C 1D ; Exclusive OR accumulator with memory $1D8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E1F.w,X		; 1E 1F 1E ; Arithmetic shift left $1E1F.w,X [Reads: X Index] [Flags: NCZ]
	sty $2C.b,X		; 94 2C ; Store Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	ror $2773.w,X		; 7E 73 27 ; Rotate right $2773.w,X [Reads: X Index] [Flags: NCZ]
	ldx #$321B.w		; A2 1B 32 ; Load #$321B.w into X register [Writes: X Index] [Flags: NZ]
	eor $1EA5.w,Y		; 59 A5 1E ; Exclusive OR accumulator with memory $1EA5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	asl $3E2C.w,X		; 1E 2C 3E ; Arithmetic shift left $3E2C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $AC59E8.l,X		; 7F E8 59 AC ; Add long $AC59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1A07.w,Y		; 59 07 1A ; Exclusive OR accumulator with memory $1A07.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $BE.b		; 26 BE ; Rotate left $BE.b [Reads: Direct Page] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $1D99.w,Y		; 59 99 1D ; Exclusive OR accumulator with memory $1D99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $591E2F.l		; 22 2F 1E 59 ; Jump to subroutine long $591E2F.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2830.w,Y		; 59 30 28 ; Exclusive OR accumulator with memory $2830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $76A5.w,X		; 1D A5 76 ; OR accumulator with memory $76A5.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($1A.b,S),Y		; D3 1A ; Compare accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	bit $9F59.w		; 2C 59 9F ; Test bits $9F59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	eor $DAB4.w,Y		; 59 B4 DA ; Exclusive OR accumulator with memory $DAB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C42B.w		; 20 2B C4 ; Jump to subroutine at $C42B.w [Writes: Stack Pointer] [Flow: call]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2E99.w,Y		; 59 99 2E ; Exclusive OR accumulator with memory $2E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $C429.w,Y		; 59 29 C4 ; Exclusive OR accumulator with memory $C429.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73C7.w,Y		; 59 C7 73 ; Exclusive OR accumulator with memory $73C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $20D5.w,Y		; 59 D5 20 ; Exclusive OR accumulator with memory $20D5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $DA59.w		; 2C 59 DA ; Test bits $DA59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $0E7F.w,X		; 3E 7F 0E ; Rotate left $0E7F.w,X [Reads: X Index] [Flags: NCZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cpx $1E.b		; E4 1E ; Compare $1E.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2505.w,Y		; 59 05 25 ; Exclusive OR accumulator with memory $2505.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $1C222C.l,X		; BF 2C 22 1C ; Load long $1C222C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $AEB9.w		; CE B9 AE ; Decrement $AEB9.w [Flags: NZ]
	eor $76CF.w,Y		; 59 CF 76 ; Exclusive OR accumulator with memory $76CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	jsl $2C2E28.l		; 22 28 2E 2C ; Jump to subroutine long $2C2E28.l [Writes: Stack Pointer] [Flow: call]
	eor $A6CB.w,Y		; 59 CB A6 ; Exclusive OR accumulator with memory $A6CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cop $93.b		; 02 93 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl $0E59.w,X		; 1E 59 0E ; Arithmetic shift left $0E59.w,X [Reads: X Index] [Flags: NCZ]
	ora $281259.l,X		; 1F 59 12 28 ; Logical OR long $281259.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $222B.w,X		; BD 2B 22 ; Load $222B.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $59252E.l,X		; 1F 2E 25 59 ; Logical OR long $59252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $E3591F.l		; 22 1F 59 E3 ; Jump to subroutine long $E3591F.l [Writes: Stack Pointer] [Flow: call]
	ror $BD.b,X		; 76 BD ; Rotate right $BD.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $C9CC.w,Y		; 59 CC C9 ; Exclusive OR accumulator with memory $C9CC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $3E.b,Y		; B6 3E ; Load X register $3E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	jsl $2C2E28.l		; 22 28 2E 2C ; Jump to subroutine long $2C2E28.l [Writes: Stack Pointer] [Flow: call]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $7F3E.w,X		; 1E 3E 7F ; Arithmetic shift left $7F3E.w,X [Reads: X Index] [Flags: NCZ]
	ora ($0E.b,X)		; 01 0E ; Logical OR ($0E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $3E06.w		; 0D 06 3E ; Logical OR $3E06.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2807.w,Y		; 59 07 28 ; Exclusive OR accumulator with memory $2807.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ora ($21.b)		; 12 21 ; OR accumulator with memory (indirect) ($21.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $753E.w		; 2D 3E 75 ; Logical AND $753E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $1E59.w		; 2D 59 1E ; Logical AND $1E59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($2D.b),Y		; 31 2D ; AND accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $8C59.w		; 2C 59 8C ; Test bits $8C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	trb $DBC7.w		; 1C C7 DB ; Test and reset bits $DBC7.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $2C2D.w		; 1C 2D 2C ; Test and reset bits $2C2D.w [Reads: Accumulator] [Flags: Z]
	eor $4390.w,Y		; 59 90 43 ; Exclusive OR accumulator with memory $4390.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $01.b,X		; 76 01 ; Rotate right $01.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $0D08.w		; 0E 08 0D ; Arithmetic shift left $0D08.w [Flags: NCZ]
	asl $3E.b		; 06 3E ; Arithmetic shift left $3E.b [Reads: Direct Page] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $9959.w		; 2D 59 99 ; Logical AND $9959.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsr $1A2B.w		; 20 2B 1A ; Jump to subroutine at $1A2B.w [Writes: Stack Pointer] [Flow: call]
	and #$CA.b		; 29 CA ; Logical AND #$CA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $32BC.w,Y		; 59 BC 32 ; Exclusive OR accumulator with memory $32BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $D573.w,X		; 7E 73 D5 ; Rotate right $D573.w,X [Reads: X Index] [Flags: NCZ]
	jsr $3E2C.w		; 20 2C 3E ; Jump to subroutine at $3E2C.w [Writes: Stack Pointer] [Flow: call]
	adc $AC59E8.l,X		; 7F E8 59 AC ; Add long $AC59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $CF59.w		; 2D 59 CF ; Logical AND $CF59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $753E.w		; 2C 3E 75 ; Test bits $753E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2999.w,Y		; 59 99 29 ; Exclusive OR accumulator with memory $2999.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $DC599C.l		; 22 9C 59 DC ; Jump to subroutine long $DC599C.l [Writes: Stack Pointer] [Flow: call]
	eor $2D8C.w,Y		; 59 8C 2D ; Exclusive OR accumulator with memory $2D8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $76		; 30 76 ; Branch if minus to $30, $76 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $1D1E.w		; 1C 1E 1D ; Test and reset bits $1D1E.w [Reads: Accumulator] [Flags: Z]
	ror $4573.w,X		; 7E 73 45 ; Rotate right $4573.w,X [Reads: X Index] [Flags: NCZ]
	ora $2C2CCE.l		; 0F CE 2C 2C ; OR accumulator with memory (long) $2C2CCE.l [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lsr $3E.b		; 46 3E ; Logical shift right $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $252D.w		; 2D 2D 25 ; Logical AND $252D.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $753E.w,X		; 1E 3E 75 ; Arithmetic shift left $753E.w,X [Reads: X Index] [Flags: NCZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D399.w,Y		; 59 99 D3 ; Exclusive OR accumulator with memory $D399.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	asl $9359.w,X		; 1E 59 93 ; Arithmetic shift left $9359.w,X [Reads: X Index] [Flags: NCZ]
	eor $1EB6.w,Y		; 59 B6 1E ; Exclusive OR accumulator with memory $1EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $76.b		; 26 76 ; Rotate left $76.b [Reads: Direct Page] [Flags: NCZ]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	sty $27D8.w		; 8C D8 27 ; Store Y register to $27D8.w [Reads: Y Index]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $AC59E8.l,X		; 7F E8 59 AC ; Add long $AC59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2201.w,Y		; 59 01 22 ; Exclusive OR accumulator with memory $2201.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $0A59.w		; 20 59 0A ; Jump to subroutine at $0A59.w [Writes: Stack Pointer] [Flow: call]
	asl $3E32.w,X		; 1E 32 3E ; Arithmetic shift left $3E32.w,X [Reads: X Index] [Flags: NCZ]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $A1D3.w,X		; BD D3 A1 ; Load $A1D3.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $2027.w		; 2E 27 20 ; Rotate left $2027.w [Flags: NCZ]
	asl $41C7.w,X		; 1E C7 41 ; Arithmetic shift left $41C7.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $9959.w		; 2D 59 99 ; Logical AND $9959.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $59.b,S		; C3 59 ; Compare accumulator (stack relative) $59.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	ldy $7E32.w,X		; BC 32 7E ; Load Y register $7E32.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	adc ($BB.b,S),Y		; 73 BB ; Add with carry (stack relative indirect indexed) ($BB.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	stz $592C.w		; 9C 2C 59 ; Store zero to $592C.w
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $BD2C.w,Y		; 59 2C BD ; Exclusive OR accumulator with memory $BD2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E24.w,Y		; 59 24 1E ; Exclusive OR accumulator with memory $1E24.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rep #$41		; C2 41 ; Reset processor status bits #$41 [Writes: Processor Status] [SNES: Configures CPU mode (8/16-bit registers)]
	adc $AC59E8.l,X		; 7F E8 59 AC ; Add long $AC59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $B613.w,Y		; 59 13 B6 ; Exclusive OR accumulator with memory $B613.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($8B.b,S),Y		; 93 8B ; Store accumulator (stack relative indirect indexed) ($8B.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	tsb $2DB6.w		; 0C B6 2D ; Test and set bits $2DB6.w [Reads: Accumulator] [Flags: Z]
	rol $0D75.w,X		; 3E 75 0D ; Rotate left $0D75.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $2225.w,Y		; 99 25 22 ; Store accumulator to $2225.w,Y [Reads: Y Index, Accumulator]
	ora $D8592D.l,X		; 1F 2D 59 D8 ; Logical OR long $D8592D.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $D31E22.l		; 2F 22 1E D3 ; AND accumulator with memory (long) $D31E22.l [Writes: Accumulator] [Flags: NZ]
	ror $D3.b,X		; 76 D3 ; Rotate right $D3.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	bit $D759.w		; 2C 59 D7 ; Test bits $D759.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $E059.w		; 2D 59 E0 ; Logical AND $E059.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $1CC7.w		; CD C7 1C ; Compare $1CC7.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	asl $737E.w,X		; 1E 7E 73 ; Arithmetic shift left $737E.w,X [Reads: X Index] [Flags: NCZ]
	jsl $282926.l		; 22 26 29 28 ; Jump to subroutine long $282926.l [Writes: Stack Pointer] [Flow: call]
	bit $222C.w		; 2C 2C 22 ; Test bits $222C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1E20.w,X		; 1D 20 1E ; OR accumulator with memory $1E20.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1A20.w,Y		; 59 20 1A ; Exclusive OR accumulator with memory $1A20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E3591E.l		; 2F 1E 59 E3 ; AND accumulator with memory (long) $E3591E.l [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $0C591C.l		; 22 1C 59 0C ; Jump to subroutine long $0C591C.l [Writes: Stack Pointer] [Flow: call]
	jsl $C82B2B.l		; 22 2B 2B C8 ; Jump to subroutine long $C82B2B.l [Writes: Stack Pointer] [Flow: call]
	rol $E775.w,X		; 3E 75 E7 ; Rotate left $E775.w,X [Reads: X Index] [Flags: NCZ]
	bit $2659.w		; 2C 59 26 ; Test bits $2659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsl $C82B2B.l		; 22 2B 2B C8 ; Jump to subroutine long $C82B2B.l [Writes: Stack Pointer] [Flow: call]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and $2E.b		; 25 2E ; Logical AND $2E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $5942.w,X		; 1E 42 59 ; Arithmetic shift left $5942.w,X [Reads: X Index] [Flags: NCZ]
	trb $A225.w		; 1C 25 A2 ; Test and reset bits $A225.w [Reads: Accumulator] [Flags: Z]
	eor $7690.w,Y		; 59 90 76 ; Exclusive OR accumulator with memory $7690.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$1A.b],Y		; 97 1A ; Store accumulator (long indexed) [$1A.b],Y [Reads: Direct Page, Y Index, Accumulator]
	rol $222D.w		; 2E 2D 22 ; Rotate left $222D.w [Flags: NCZ]
	ora $43252E.l,X		; 1F 2E 25 43 ; Logical OR long $43252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $E873.w,X		; 7E 73 E8 ; Rotate right $E873.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E1F.w,Y		; 59 1F 1E ; Exclusive OR accumulator with memory $1E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $5925.w,X		; 1E 25 59 ; Arithmetic shift left $5925.w,X [Reads: X Index] [Flags: NCZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DAB3.w		; AC B3 DA ; Load $DAB3.w into Y register [Writes: Y Index] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	cmp ($2B.b)		; D2 2B ; Compare accumulator (indirect) ($2B.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $2893.w,Y		; 59 93 28 ; Exclusive OR accumulator with memory $2893.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $3E.b,Y		; B6 3E ; Load X register $3E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	tsb $A192.w		; 0C 92 A1 ; Test and set bits $A192.w [Reads: Accumulator] [Flags: Z]
	ora ($30.b)		; 12 30 ; OR accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $753E.w,X		; 1D 3E 75 ; OR accumulator with memory $753E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $4228.w		; 0D 28 42 ; Logical OR $4228.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $43.b,Y		; B6 43 ; Load X register $43.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $2813.w,Y		; 59 13 28 ; Exclusive OR accumulator with memory $2813.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $1D96.w,Y		; 59 96 1D ; Exclusive OR accumulator with memory $1D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $7A.b		; 02 7A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $12.b,S		; 03 12 ; OR accumulator with stack relative $12.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $1D1D.w		; 2E 1D 1D ; Rotate left $1D1D.w [Flags: NCZ]
	lda $25.b		; A5 25 ; Load $25.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1A12.w,Y		; 59 12 1A ; Exclusive OR accumulator with memory $1A12.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $C71C.w,Y		; 59 1C C7 ; Exclusive OR accumulator with memory $C71C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1C1A.w		; 2D 1A 1C ; Logical AND $1C1A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $752C.w		; 2D 2C 75 ; Logical AND $752C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $9429.w,X		; 1E 29 94 ; Arithmetic shift left $9429.w,X [Reads: X Index] [Flags: NCZ]
	.db $B0, $1C		; B0 1C ; Branch if carry set to $B0, $1C [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $43.b,X		; 76 43 ; Rotate right $43.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($6A.b,S),Y		; 73 6A ; Add with carry (stack relative indirect indexed) ($6A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $DB31.w,X		; 1E 31 DB ; Arithmetic shift left $DB31.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	stz $1A27.w,X		; 9E 27 1A ; Store zero to $1A27.w,X [Reads: X Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C7		; 30 C7 ; Branch if minus to $30, $C7 [Flow: branch]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $A192.w		; 0C 92 A1 ; Test and set bits $A192.w [Reads: Accumulator] [Flags: Z]
	ora ($30.b)		; 12 30 ; OR accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $D773.w,X		; 1D 73 D7 ; OR accumulator with memory $D773.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $BD59.w		; 2D 59 BD ; Logical AND $BD59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	bit $A759.w		; 2C 59 A7 ; Test bits $A759.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsl $CE5925.l		; 22 25 59 CE ; Jump to subroutine long $CE5925.l [Writes: Stack Pointer] [Flow: call]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	asl $4394.w,X		; 1E 94 43 ; Arithmetic shift left $4394.w,X [Reads: X Index] [Flags: NCZ]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	ldx $21.b,Y		; B6 21 ; Load X register $21.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B4D1.w,Y		; 59 D1 B4 ; Exclusive OR accumulator with memory $B4D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($2C.b,S),Y		; B3 2C ; Load accumulator (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($97.b,S),Y		; 73 97 ; Add with carry (stack relative indirect indexed) ($97.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda [$1E.b]		; A7 1E ; Load accumulator (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $1E1D.w,Y		; 99 1D 1E ; Store accumulator to $1E1D.w,Y [Reads: Y Index, Accumulator]
	ora $1C1E25.l,X		; 1F 25 1E 1C ; Logical OR long $1C1E25.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $A78B.w,X		; 1D 8B A7 ; OR accumulator with memory $A78B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $CB5925.l		; 22 25 59 CB ; Jump to subroutine long $CB5925.l [Writes: Stack Pointer] [Flow: call]
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($73.b,S),Y		; 73 73 ; Add with carry (stack relative indirect indexed) ($73.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	sta $B42D.w,X		; 9D 2D B4 ; Store accumulator to $B42D.w,X [Reads: Accumulator, X Index]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($B5.b,S),Y		; 73 B5 ; Add with carry (stack relative indirect indexed) ($B5.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $27B1.w,Y		; 59 B1 27 ; Exclusive OR accumulator with memory $27B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $412C.w,X		; 1D 2C 41 ; OR accumulator with memory $412C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $0F73.w,X		; 7E 73 0F ; Rotate right $0F73.w,X [Reads: X Index] [Flags: NCZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $42		; D0 42 ; Branch if not equal to $D0, $42 [Flow: branch]
	eor $436A.w,Y		; 59 6A 43 ; Exclusive OR accumulator with memory $436A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $211E07.l,X		; 7F 07 1E 21 ; Add long $211E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $9E1E.w		; 0C 1E 9E ; Test and set bits $9E1E.w [Reads: Accumulator] [Flags: Z]
	trb $1EB4.w		; 1C B4 1E ; Test and reset bits $1EB4.w [Reads: Accumulator] [Flags: Z]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	jsl $411E1F.l		; 22 1F 1E 41 ; Jump to subroutine long $411E1F.l [Writes: Stack Pointer] [Flow: call]
	ror $14.b,X		; 76 14 ; Rotate right $14.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $20CE.w,Y		; 59 CE 20 ; Exclusive OR accumulator with memory $20CE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $2BE359.l		; 8F 59 E3 2B ; Store accumulator (long) $2BE359.l [Reads: Accumulator]
	eor $220B.w,Y		; 59 0B 22 ; Exclusive OR accumulator with memory $220B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $737E1E.l,X		; 1F 1E 7E 73 ; Logical OR long $737E1E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	wai		; CB ; Wait for interrupt
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $211E07.l,X		; 7F 07 1E 21 ; Add long $211E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $9E1E.w		; 0C 1E 9E ; Test and set bits $9E1E.w [Reads: Accumulator] [Flags: Z]
	trb $1EB4.w		; 1C B4 1E ; Test and reset bits $1EB4.w [Reads: Accumulator] [Flags: Z]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $76411C.l		; 22 1C 41 76 ; Jump to subroutine long $76411C.l [Writes: Stack Pointer] [Flow: call]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $CE99.w,Y		; 59 99 CE ; Exclusive OR accumulator with memory $CE99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2BB1.w		; 1C B1 2B ; Test and reset bits $2BB1.w [Reads: Accumulator] [Flags: Z]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($22.b,S),Y		; D3 22 ; Compare accumulator (stack relative indirect indexed) ($22.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	trb $737E.w		; 1C 7E 73 ; Test and reset bits $737E.w [Reads: Accumulator] [Flags: Z]
	lda $A6.b		; A5 A6 ; Load $A6.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $5932.w		; 20 32 59 ; Jump to subroutine at $5932.w [Writes: Stack Pointer] [Flow: call]
	dec $B659.w,X		; DE 59 B6 ; Decrement memory $B659.w,X [Reads: X Index] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $9E1E.w		; 0C 1E 9E ; Test and set bits $9E1E.w [Reads: Accumulator] [Flags: Z]
	trb $1EB4.w		; 1C B4 1E ; Test and reset bits $1EB4.w [Reads: Accumulator] [Flags: Z]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	jsl $591E1F.l		; 22 1F 1E 59 ; Jump to subroutine long $591E1F.l [Writes: Stack Pointer] [Flow: call]
	.db $90, $76		; 90 76 ; Branch if carry clear to $90, $76 [Flow: branch]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $8A3E1C.l		; 22 1C 3E 8A ; Jump to subroutine long $8A3E1C.l [Writes: Stack Pointer] [Flow: call]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $CE99.w,Y		; 59 99 CE ; Exclusive OR accumulator with memory $CE99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $DD28.w		; 1C 28 DD ; Test and reset bits $DD28.w [Reads: Accumulator] [Flags: Z]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $9859E8.l,X		; 7F E8 59 98 ; Add long $9859E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$591D.w		; E0 1D 59 ; Compare #$591D.w with X register [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $0259.w		; 20 59 02 ; Jump to subroutine at $0259.w [Writes: Stack Pointer] [Flow: call]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	jsr $0D75.w		; 20 75 0D ; Jump to subroutine at $0D75.w [Writes: Stack Pointer] [Flow: call]
	asl $3E2D.w,X		; 1E 2D 3E ; Arithmetic shift left $3E2D.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $CD.b		; E6 CD ; Increment $CD.b [Reads: Direct Page] [Flags: NZ]
	lda $5932.w,X		; BD 32 59 ; Load $5932.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cmp $D82859.l		; CF 59 28 D8 ; Compare accumulator (long) $D82859.l [Reads: Accumulator] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ror $D5.b,X		; 76 D5 ; Rotate right $D5.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	jsr $592C.w		; 20 2C 59 ; Jump to subroutine at $592C.w [Writes: Stack Pointer] [Flow: call]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $941C.w,Y		; 99 1C 94 ; Store accumulator to $941C.w,Y [Reads: Y Index, Accumulator]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	dec $B659.w,X		; DE 59 B6 ; Decrement memory $B659.w,X [Reads: X Index] [Flags: NZ]
	.db $42, $7E		; 42 7E ; Reserved instruction
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($25.b,X)		; 01 25 ; Logical OR ($25.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $591E.w		; 2E 1E 59 ; Rotate left $591E.w [Flags: NCZ]
	tsb $221A.w		; 0C 1A 22 ; Test and set bits $221A.w [Reads: Accumulator] [Flags: Z]
	and $3E.b		; 25 3E ; Logical AND $3E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $1A59.w		; 2C 59 1A ; Test bits $1A59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	eor $1DCE.w,Y		; 59 CE 1D ; Exclusive OR accumulator with memory $1DCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E1C.w		; 2E 1C 1E ; Rotate left $1E1C.w [Flags: NCZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $1A1D.w,Y		; 59 1D 1A ; Exclusive OR accumulator with memory $1A1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1E20.w,X		; BD 20 1E ; Load $1E20.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $D7.b,X		; 76 D7 ; Rotate right $D7.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A2D.w,Y		; 59 2D 1A ; Exclusive OR accumulator with memory $1A2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EA5.w,Y		; 59 A5 1E ; Exclusive OR accumulator with memory $1EA5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	asl $3E2C.w,X		; 1E 2C 3E ; Arithmetic shift left $3E2C.w,X [Reads: X Index] [Flags: NCZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A411.w,Y		; 59 11 A4 ; Exclusive OR accumulator with memory $A411.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $221A.w		; 0C 1A 22 ; Test and set bits $221A.w [Reads: Accumulator] [Flags: Z]
	and $3E.b		; 25 3E ; Logical AND $3E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $CC59.w		; 2C 59 CC ; Test bits $CC59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $599D22.l		; 2F 22 9D 59 ; AND accumulator with memory (long) $599D22.l [Writes: Accumulator] [Flags: NZ]
	lda [$A0.b]		; A7 A0 ; Load accumulator (long) [$A0.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$2D.b],Y		; 97 2D ; Store accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator]
	dec $76.b,X		; D6 76 ; Decrement memory $76.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	cpy $1E2D.w		; CC 2D 1E ; Compare $1E2D.w with Y register [Reads: Y Index] [Flags: NCZ]
	trb $222D.w		; 1C 2D 22 ; Test and reset bits $222D.w [Reads: Accumulator] [Flags: Z]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cmp [$27.b],Y		; D7 27 ; Compare accumulator (long indexed) [$27.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($25.b,X)		; 01 25 ; Logical OR ($25.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $591E.w		; 2E 1E 59 ; Rotate left $591E.w [Flags: NCZ]
	tsb $221A.w		; 0C 1A 22 ; Test and set bits $221A.w [Reads: Accumulator] [Flags: Z]
	and $3E.b		; 25 3E ; Logical AND $3E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $94CE06.l,X		; 7F 06 CE 94 ; Add long $94CE06.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $E88A.w,X		; 3E 8A E8 ; Rotate left $E88A.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BD3.w,Y		; 59 D3 2B ; Exclusive OR accumulator with memory $2BD3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ldx $3E.b		; A6 3E ; Load $3E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1F99.w,Y		; 59 99 1F ; Exclusive OR accumulator with memory $1F99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $251E.w,X		; 1E 1E 25 ; Arithmetic shift left $251E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	lda ($CB.b,X)		; A1 CB ; Load accumulator ($CB.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ldx $76.b		; A6 76 ; Load $76.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	ora $27E2BB.l,X		; 1F BB E2 27 ; Logical OR long $27E2BB.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D59.w		; 20 59 2D ; Jump to subroutine at $2D59.w [Writes: Stack Pointer] [Flow: call]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1D98.w,Y		; 59 98 1D ; Exclusive OR accumulator with memory $1D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $220C.w,Y		; 59 0C 22 ; Exclusive OR accumulator with memory $220C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $B012.w,Y		; 59 12 B0 ; Exclusive OR accumulator with memory $B012.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $2799.w,Y		; 59 99 27 ; Exclusive OR accumulator with memory $2799.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	dec $251F.w		; CE 1F 25 ; Decrement $251F.w [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A97.w,Y		; 59 97 1A ; Exclusive OR accumulator with memory $1A97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2C.b		; 26 2C ; Rotate left $2C.b [Reads: Direct Page] [Flags: NCZ]
	ror $D7.b,X		; 76 D7 ; Rotate right $D7.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $2528.w,Y		; 59 28 25 ; Exclusive OR accumulator with memory $2528.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D159.w,X		; 1D 59 D1 ; OR accumulator with memory $D159.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $1D251E.l		; 22 1E 25 1D ; Jump to subroutine long $1D251E.l [Writes: Stack Pointer] [Flow: call]
	ror $1C73.w,X		; 7E 73 1C ; Rotate right $1C73.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	cpy #$BB1B.w		; C0 1B BB ; Compare #$BB1B.w with Y register [Reads: Y Index] [Flags: NCZ]
	stz $7F3E.w		; 9C 3E 7F ; Store zero to $7F3E.w
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cop $93.b		; 02 93 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	asl $0E59.w,X		; 1E 59 0E ; Arithmetic shift left $0E59.w,X [Reads: X Index] [Flags: NCZ]
	ora $320159.l,X		; 1F 59 01 32 ; Logical OR long $320159.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$1A.b]		; 27 1A ; AND accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $27E2.w		; 2C E2 27 ; Test bits $27E2.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsr $B659.w		; 20 59 B6 ; Jump to subroutine at $B659.w [Writes: Stack Pointer] [Flow: call]
	eor $1CC7.w,Y		; 59 C7 1C ; Exclusive OR accumulator with memory $1CC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $5942.w,X		; 1E 42 59 ; Arithmetic shift left $5942.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $B32B.w,Y		; 59 2B B3 ; Exclusive OR accumulator with memory $B32B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $76.b		; C6 76 ; Decrement $76.b [Reads: Direct Page] [Flags: NZ]
	and $B2.b		; 25 B2 ; Logical AND $B2.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpy $1E2D.w		; CC 2D 1E ; Compare $1E2D.w with Y register [Reads: Y Index] [Flags: NCZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $3F2104.l,X		; 7F 04 21 3F ; Add long $3F2104.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $BB8B.w		; 2D 8B BB ; Logical AND $BB8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	stz $1D1E.w		; 9C 1E 1D ; Store zero to $1D1E.w
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda ($1D.b),Y		; B1 1D ; Load accumulator ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($22.b,X)		; 01 22 ; Logical OR ($22.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsr $0A59.w		; 20 59 0A ; Jump to subroutine at $0A59.w [Writes: Stack Pointer] [Flow: call]
	asl $4232.w,X		; 1E 32 42 ; Arithmetic shift left $4232.w,X [Reads: X Index] [Flags: NCZ]
	eor $76E3.w,Y		; 59 E3 76 ; Exclusive OR accumulator with memory $76E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $B2.b		; 26 B2 ; Rotate left $B2.b [Reads: Direct Page] [Flags: NCZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59C3.w,Y		; 59 C3 59 ; Exclusive OR accumulator with memory $59C3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $3E.b,Y		; B6 3E ; Load X register $3E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc $8D59E8.l,X		; 7F E8 59 8D ; Add long $8D59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp ($C8.b),Y		; D1 C8 ; Compare accumulator ($C8.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and $C759.w		; 2D 59 C7 ; Logical AND $C759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$3E2B.w		; E0 2B 3E ; Compare #$3E2B.w with X register [Reads: X Index] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EB6.w,Y		; 59 B6 1E ; Exclusive OR accumulator with memory $1EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $41		; 30 41 ; Branch if minus to $30, $41 [Flow: branch]
	ror $16.b,X		; 76 16 ; Rotate right $16.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $591E07.l,X		; 7F 07 1E 59 ; Add long $591E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsr $2F22.w		; 20 22 2F ; Jump to subroutine at $2F22.w [Writes: Stack Pointer] [Flow: call]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1E0F.w,Y		; 59 0F 1E ; Exclusive OR accumulator with memory $1E0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2C1A.w		; 20 1A 2C ; Jump to subroutine at $2C1A.w [Writes: Stack Pointer] [Flow: call]
	rol $752C.w		; 2E 2C 75 ; Rotate left $752C.w [Flags: NCZ]
	ora ($21.b)		; 12 21 ; OR accumulator with memory (indirect) ($21.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	asl $3E2C.w,X		; 1E 2C 3E ; Arithmetic shift left $3E2C.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $311E.w,Y		; 99 1E 31 ; Store accumulator to $311E.w,Y [Reads: Y Index, Accumulator]
	asl $2E1C.w,X		; 1E 1C 2E ; Arithmetic shift left $2E1C.w,X [Reads: X Index] [Flags: NCZ]
	and $591E.w		; 2D 1E 59 ; Logical AND $591E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	lda [$92.b]		; A7 92 ; Load accumulator (long) [$92.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sty $B3.b,X		; 94 B3 ; Store Y register $B3.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	ora $D11A.w,X		; 1D 1A D1 ; OR accumulator with memory $D11A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2D94.w,Y		; 59 94 2D ; Exclusive OR accumulator with memory $2D94.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	stz $7E3E.w		; 9C 3E 7E ; Store zero to $7E3E.w
	adc ($45.b,S),Y		; 73 45 ; Add with carry (stack relative indirect indexed) ($45.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($A8.b,S),Y		; 73 A8 ; Add with carry (stack relative indirect indexed) ($A8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($C8.b),Y		; D1 C8 ; Compare accumulator ($C8.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $4641BE.l		; 22 BE 41 46 ; Jump to subroutine long $4641BE.l [Writes: Stack Pointer] [Flow: call]
	adc $302816.l,X		; 7F 16 28 30 ; Add long $302816.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	eor $C0AD.w,Y		; 59 AD C0 ; Exclusive OR accumulator with memory $C0AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $A0		; D0 A0 ; Branch if not equal to $D0, $A0 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $C827.w,Y		; 59 27 C8 ; Exclusive OR accumulator with memory $C827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $7525.w,X		; BD 25 75 ; Load $7525.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E1F.w,Y		; 59 1F 1E ; Exclusive OR accumulator with memory $1E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	and ($2E.b,X)		; 21 2E ; Logical AND ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $591D.w		; CE 1D 59 ; Decrement $591D.w [Flags: NZ]
	and ($A2.b)		; 32 A2 ; AND accumulator with memory (indirect) ($A2.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $763E.w		; 2C 3E 76 ; Test bits $763E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	asl $592D.w,X		; 1E 2D 59 ; Arithmetic shift left $592D.w,X [Reads: X Index] [Flags: NCZ]
	ldx $2D59.w,Y		; BE 59 2D ; Load X register $2D59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $24.b		; 25 24 ; Logical AND $24.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	clv		; B8 ; Clear overflow flag [Flags: V]
	eor $981A.w,Y		; 59 1A 98 ; Exclusive OR accumulator with memory $981A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $06.b,X		; 75 06 ; Add $06.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $2532.w		; AC 32 25 ; Load $2532.w into Y register [Writes: Y Index] [Flags: NZ]
	asl $D359.w,X		; 1E 59 D3 ; Arithmetic shift left $D359.w,X [Reads: X Index] [Flags: NCZ]
	sty $2E.b,X		; 94 2E ; Store Y register $2E.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	asl $B459.w,X		; 1E 59 B4 ; Arithmetic shift left $B459.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA2522.l		; 2F 22 25 BA ; AND accumulator with memory (long) $BA2522.l [Writes: Accumulator] [Flags: NZ]
	jsr $3F1E.w		; 20 1E 3F ; Jump to subroutine at $3F1E.w [Writes: Stack Pointer] [Flow: call]
	ror $0F.b,X		; 76 0F ; Rotate right $0F.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $CA28.w,X		; 1E 28 CA ; Arithmetic shift left $CA28.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta $A221.w,Y		; 99 21 A2 ; Store accumulator to $A221.w,Y [Reads: Y Index, Accumulator]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2B22.w		; 20 22 2B ; Jump to subroutine at $2B22.w [Writes: Stack Pointer] [Flow: call]
	and $7E.b		; 25 7E ; Logical AND $7E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($A8.b,S),Y		; B3 A8 ; Load accumulator (stack relative indirect indexed) ($A8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $272E.w,Y		; 59 2E 27 ; Exclusive OR accumulator with memory $272E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D8A1.w,X		; 1D A1 D8 ; OR accumulator with memory $D8A1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($D3.b,S),Y		; 73 D3 ; Add with carry (stack relative indirect indexed) ($D3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sty $2E.b,X		; 94 2E ; Store Y register $2E.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	asl $8A41.w,X		; 1E 41 8A ; Arithmetic shift left $8A41.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $D7C0.w		; 2C C0 D7 ; Test bits $D7C0.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BD3.w,Y		; 59 D3 2B ; Exclusive OR accumulator with memory $2BD3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $D373.w,X		; 1E 73 D3 ; Arithmetic shift left $D373.w,X [Reads: X Index] [Flags: NCZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $2B2E12.l,X		; 7F 12 2E 2B ; Add long $2B2E12.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and #$2B.b		; 29 2B ; Logical AND #$2B.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $B4.b,X		; B5 B4 ; Load $B4.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $3225.w		; 20 25 32 ; Jump to subroutine at $3225.w [Writes: Stack Pointer] [Flow: call]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2B13.w,Y		; 59 13 2B ; Exclusive OR accumulator with memory $2B13.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	adc $1C.b,X		; 75 1C ; Add $1C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	dec $A494.w		; CE 94 A4 ; Decrement $A494.w [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1F252E.l,X		; 1F 2E 25 1F ; Logical OR long $1F252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $762525.l		; 22 25 25 76 ; Jump to subroutine long $762525.l [Writes: Stack Pointer] [Flow: call]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$8B.b]		; C7 8B ; Compare accumulator (long) [$8B.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
.INDEX 8
	sep #$D1		; E2 D1
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$8B.b]		; C7 8B ; Compare accumulator (long) [$8B.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
.INDEX 8
	sep #$D1		; E2 D1
	.db $42, $73		; 42 73 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $3F24.w		; 2C 24 3F ; Test bits $3F24.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $22.b,S		; A3 22 ; Load accumulator (stack relative) $22.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cmp $281C.w		; CD 1C 28 ; Compare $281C.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	bit $2826.w		; 2C 26 28 ; Test bits $2826.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $8A3E.w		; 2C 3E 8A ; Test bits $8A3E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $C7.b,S		; 03 C7 ; OR accumulator with stack relative $C7.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $24.b,X		; D5 24 ; Compare accumulator $24.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ror $B673.w,X		; 7E 73 B6 ; Rotate right $B673.w,X [Reads: X Index] [Flags: NCZ]
	eor $B226.w,Y		; 59 26 B2 ; Exclusive OR accumulator with memory $B226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	and #$28.b		; 29 28 ; Logical AND #$28.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $222C.w		; 2C 2C 22 ; Test bits $222C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	dec $D859.w,X		; DE 59 D8 ; Decrement memory $D859.w,X [Reads: X Index] [Flags: NZ]
	adc ($CB.b,S),Y		; 73 CB ; Add with carry (stack relative indirect indexed) ($CB.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda ($C6.b,X)		; A1 C6 ; Load accumulator ($C6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2B.b,S),Y		; 13 2B ; OR accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	adc ($97.b,S),Y		; 73 97 ; Add with carry (stack relative indirect indexed) ($97.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	ora $E359.w,X		; 1D 59 E3 ; OR accumulator with memory $E359.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $59087F.l,X		; 3F 7F 08 59 ; AND accumulator with memory (long,X) $59087F.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1C.b]		; C7 1C ; Compare accumulator (long) [$1C.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	asl $2559.w,X		; 1E 59 25 ; Arithmetic shift left $2559.w,X [Reads: X Index] [Flags: NCZ]
	jsl $B4A42F.l		; 22 2F A4 B4 ; Jump to subroutine long $B4A42F.l [Writes: Stack Pointer] [Flow: call]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $422C.w,X		; 1D 2C 42 ; OR accumulator with memory $422C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $2E.b,X		; 75 2E ; Add $2E.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $D85925.l		; 22 25 59 D8 ; Jump to subroutine long $D85925.l [Writes: Stack Pointer] [Flow: call]
	eor $1A1D.w,Y		; 59 1D 1A ; Exclusive OR accumulator with memory $1A1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $A4A6.w,X		; 1D A6 A4 ; OR accumulator with memory $A4A6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $761A.w,Y		; 59 1A 76 ; Exclusive OR accumulator with memory $761A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $DB59.w		; 1C 59 DB ; Test and reset bits $DB59.w [Reads: Accumulator] [Flags: Z]
	sta ($2C.b,S),Y		; 93 2C ; Store accumulator (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and #$C8.b		; 29 C8 ; Logical AND #$C8.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $43.b,X		; D6 43 ; Decrement memory $43.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	ror $E673.w,X		; 7E 73 E6 ; Rotate right $E673.w,X [Reads: X Index] [Flags: NCZ]
	eor $A1CB.w,Y		; 59 CB A1 ; Exclusive OR accumulator with memory $A1CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A03.w,Y		; 59 03 1A ; Exclusive OR accumulator with memory $1A03.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($2A.b,S),Y		; 73 2A ; Add with carry (stack relative indirect indexed) ($2A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $9C22.w		; 2E 22 9C ; Rotate left $9C22.w [Flags: NCZ]
	lda $2E2D.w,Y		; B9 2D 2E ; Load $2E2D.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$A4.b]		; 27 A4 ; AND accumulator with memory (long) [$A4.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $B459.w,Y		; BE 59 B4 ; Load X register $B459.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($DB.b,S),Y		; 73 DB ; Add with carry (stack relative indirect indexed) ($DB.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $591E.w,X		; 1E 1E 59 ; Arithmetic shift left $591E.w,X [Reads: X Index] [Flags: NCZ]
	cmp ($1A.b),Y		; D1 1A ; Compare accumulator ($1A.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2E20.w,Y		; 59 20 2E ; Exclusive OR accumulator with memory $2E20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2830.w		; 2D 30 28 ; Logical AND $2830.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1EA8.w,Y		; 59 A8 1E ; Exclusive OR accumulator with memory $1EA8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2C.b,S),Y		; D3 2C ; Compare accumulator (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	eor $CE1A.w,Y		; 59 1A CE ; Exclusive OR accumulator with memory $CE1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$27.b]		; C7 27 ; Compare accumulator (long) [$27.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	ldy $DE.b		; A4 DE ; Load $DE.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $1A1E.w,Y		; 59 1E 1A ; Exclusive OR accumulator with memory $1A1E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D759.w,X		; 1D 59 D7 ; OR accumulator with memory $D759.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $2E59.w		; 2D 59 2E ; Logical AND $2E59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $01B3.w		; 2C B3 01 ; Test bits $01B3.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$D3.b],Y		; 97 D3 ; Store accumulator (long indexed) [$D3.b],Y [Reads: Direct Page, Y Index, Accumulator]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1F1E.w,X		; 1D 1E 1F ; OR accumulator with memory $1F1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $D891.w,X		; 1E 91 D8 ; Arithmetic shift left $D891.w,X [Reads: X Index] [Flags: NCZ]
	ror $C7.b,X		; 76 C7 ; Rotate right $C7.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $1E40.w,X		; 1E 40 1E ; Arithmetic shift left $1E40.w,X [Reads: X Index] [Flags: NCZ]
	and ($A4.b)		; 32 A4 ; AND accumulator with memory (indirect) ($A4.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $9322.w		; 20 22 93 ; Jump to subroutine at $9322.w [Writes: Stack Pointer] [Flow: call]
	and $412C.w		; 2D 2C 41 ; Logical AND $412C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ror $E573.w,X		; 7E 73 E5 ; Rotate right $E573.w,X [Reads: X Index] [Flags: NCZ]
	and $8E8B.w		; 2D 8B 8E ; Logical AND $8E8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $3EB8.w,Y		; 59 B8 3E ; Exclusive OR accumulator with memory $3EB8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $B62E10.l,X		; 7F 10 2E B6 ; Add long $B62E10.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $D898.w,Y		; 59 98 D8 ; Exclusive OR accumulator with memory $D898.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda ($BE.b,S),Y		; B3 BE ; Load accumulator (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $008A.w,X		; 3E 8A 00 ; Rotate left $008A.w,X [Reads: X Index] [Flags: NCZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2DDF.w,Y		; 59 DF 2D ; Exclusive OR accumulator with memory $2DDF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7521.w		; 1C 21 75 ; Test and reset bits $7521.w [Reads: Accumulator] [Flags: Z]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	eor ($CD.b),Y		; 51 CD ; Exclusive OR accumulator with memory ($CD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $E1B3.w		; AC B3 E1 ; Load $E1B3.w into Y register [Writes: Y Index] [Flags: NZ]
	ldy #$E3.b		; A0 E3 ; Load #$E3.b into Y register [Writes: Y Index] [Flags: NZ]
	ror $1D.b,X		; 76 1D ; Rotate right $1D.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b),Y		; D1 59 ; Compare accumulator ($59.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $3E.b		; C4 3E ; Compare $3E.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	adc $AC59E8.l,X		; 7F E8 59 AC ; Add long $AC59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $A50F.w,Y		; 59 0F A5 ; Exclusive OR accumulator with memory $A50F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D93.w,X		; 1D 93 2D ; OR accumulator with memory $2D93.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	trb $2528.w		; 1C 28 25 ; Test and reset bits $2528.w [Reads: Accumulator] [Flags: Z]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $A42D.w		; 1C 2D A4 ; Test and reset bits $A42D.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $2D.b,X		; 76 2D ; Rotate right $2D.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($CE.b,X)		; 21 CE ; Logical AND ($CE.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $0F59.w,X		; 1E 59 0F ; Arithmetic shift left $0F59.w,X [Reads: X Index] [Flags: NCZ]
	lda $1D.b		; A5 1D ; Load $1D.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $8A3E.w		; 2C 3E 8A ; Test bits $8A3E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	eor $2DA8.w,Y		; 59 A8 2D ; Exclusive OR accumulator with memory $2DA8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $7E		; 30 7E ; Branch if minus to $30, $7E [Flow: branch]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $592C.w,X		; 1D 2C 59 ; OR accumulator with memory $592C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $A192.w		; 0C 92 A1 ; Test and set bits $A192.w [Reads: Accumulator] [Flags: Z]
	ora ($30.b)		; 12 30 ; OR accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $0E59.w		; 2D 59 0E ; Logical AND $0E59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $B51659.l,X		; 1F 59 16 B5 ; Logical OR long $B51659.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $753E26.l,X		; 9F 26 3E 75 ; Store accumulator (long,X) $753E26.l,X [Reads: Accumulator, X Index]
	brk $20.b		; 00 20 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sta $2BE359.l		; 8F 59 E3 2B ; Store accumulator (long) $2BE359.l [Reads: Accumulator]
	eor $A1CB.w,Y		; 59 CB A1 ; Exclusive OR accumulator with memory $A1CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $B459.w		; AE 59 B4 ; Load $B459.w into X register [Writes: X Index] [Flags: NZ]
	trb $1ACE.w		; 1C CE 1A ; Test and reset bits $1ACE.w [Reads: Accumulator] [Flags: Z]
	.db $D0, $1D		; D0 1D ; Branch if not equal to $D0, $1D [Flow: branch]
	rol $0D76.w,X		; 3E 76 0D ; Rotate left $0D76.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	rol $167F.w,X		; 3E 7F 16 ; Rotate left $167F.w,X [Reads: X Index] [Flags: NCZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $1D		; 30 1D ; Branch if minus to $30, $1D [Flow: branch]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $B20B.w,Y		; 59 0B B2 ; Exclusive OR accumulator with memory $B20B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $3E.b		; A6 3E ; Load $3E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $28BB.w,Y		; 59 BB 28 ; Exclusive OR accumulator with memory $28BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2B.b,S),Y		; D3 2B ; Compare accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	ror $D1.b,X		; 76 D1 ; Rotate right $D1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dec $43.b,X		; D6 43 ; Decrement memory $43.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $93.b,X		; 16 93 ; Arithmetic shift left $93.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $32DB.w,Y		; 59 DB 32 ; Exclusive OR accumulator with memory $32DB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $2C73.w,X		; 7E 73 2C ; Rotate right $2C73.w,X [Reads: X Index] [Flags: NCZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $20B3.w		; 2D B3 20 ; Logical AND $20B3.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $32.b		; A6 32 ; Load $32.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	and $510873.l,X		; 3F 73 08 51 ; AND accumulator with memory (long,X) $510873.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $E3AA.w,Y		; 59 AA E3 ; Exclusive OR accumulator with memory $E3AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D1591E.l		; 2F 1E 59 D1 ; AND accumulator with memory (long) $D1591E.l [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $3436.w,Y		; 59 36 34 ; Exclusive OR accumulator with memory $3436.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($11.b,S),Y		; 73 11 ; Add with carry (stack relative indirect indexed) ($11.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jmp.w [$1E1E]		; DC 1E 1E ; Jump long indirect [$1E1E] [Flow: jump]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $51E359.l,X		; 1F 59 E3 51 ; Logical OR long $51E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $2C1A.w		; CD 1A 2C ; Compare $2C1A.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and #$7E.b		; 29 7E ; Logical AND #$7E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $0859.w		; 2C 59 08 ; Test bits $0859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $24D5.w,Y		; 59 D5 24 ; Exclusive OR accumulator with memory $24D5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $5942.w		; CE 42 59 ; Decrement $5942.w [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp ($90.b,S),Y		; D3 90 ; Compare accumulator (stack relative indirect indexed) ($90.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1A2B.w,Y		; 59 2B 1A ; Exclusive OR accumulator with memory $1A2B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	ldx $42.b,Y		; B6 42 ; Load X register $42.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $2BD3.w,Y		; 59 D3 2B ; Exclusive OR accumulator with memory $2BD3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	ldx $3F.b		; A6 3F ; Load $3F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $0F,$59		; 44 59 0F ; Move block positive $0F,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $252500.l,X		; 7F 00 25 25 ; Add long $252500.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $222B.w,Y		; 59 2B 22 ; Exclusive OR accumulator with memory $222B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	rol $008A.w,X		; 3E 8A 00 ; Rotate left $008A.w,X [Reads: X Index] [Flags: NCZ]
	jsl $1C5926.l		; 22 26 59 1C ; Jump to subroutine long $1C5926.l [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $2E1F.w		; CE 1F 2E ; Decrement $2E1F.w [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $1D1A.w,X		; 1E 1A 1D ; Arithmetic shift left $1D1A.w,X [Reads: X Index] [Flags: NCZ]
	and ($3F.b)		; 32 3F ; AND accumulator with memory (indirect) ($3F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $0E.b		; 06 0E ; Arithmetic shift left $0E.b [Reads: Direct Page] [Flags: NCZ]
	rol $167F.w,X		; 3E 7F 16 ; Rotate left $167F.w,X [Reads: X Index] [Flags: NCZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $B625.w,Y		; 59 25 B6 ; Exclusive OR accumulator with memory $B625.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $A627.w		; 2D 27 A6 ; Logical AND $A627.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
	and $2B2E.w		; 2D 2E 2B ; Logical AND $2B2E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	ora $B22B59.l,X		; 1F 59 2B B2 ; Logical OR long $B22B59.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	.db $90, $76		; 90 76 ; Branch if carry clear to $90, $76 [Flow: branch]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $D8591E.l		; 2F 1E 59 D8 ; AND accumulator with memory (long) $D8591E.l [Writes: Accumulator] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $DF59.w,Y		; BE 59 DF ; Load X register $DF59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $1C73.w,X		; 7E 73 1C ; Rotate right $1C73.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ldx $B459.w,Y		; BE 59 B4 ; Load X register $B459.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b)		; 12 1E ; OR accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	eor $D6BA.w,Y		; 59 BA D6 ; Exclusive OR accumulator with memory $D6BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $078A.w,X		; 3E 8A 07 ; Rotate left $078A.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $1A591E.l		; 2F 1E 59 1A ; AND accumulator with memory (long) $1A591E.l [Writes: Accumulator] [Flags: NZ]
	eor $2227.w,Y		; 59 27 22 ; Exclusive OR accumulator with memory $2227.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	ora $321A.w,X		; 1D 1A 32 ; OR accumulator with memory $321A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $167F.w,X		; 3E 7F 16 ; Rotate left $167F.w,X [Reads: X Index] [Flags: NCZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsr $3F8F.w		; 20 8F 3F ; Jump to subroutine at $3F8F.w [Writes: Stack Pointer] [Flow: call]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	mvp $02,$59		; 44 59 02 ; Move block positive $02,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	cmp [$2D.b]		; C7 2D ; Compare accumulator (long) [$2D.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ldy $2E.b,X		; B4 2E ; Load Y register $2E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $8876.w,X		; 1E 76 88 ; Arithmetic shift left $8876.w,X [Reads: X Index] [Flags: NCZ]
	bit #$10.b		; 89 10 ; Test bits #$10.b with accumulator [Reads: Accumulator] [Flags: Z]
	rol $68B6.w		; 2E B6 68 ; Rotate left $68B6.w [Flags: NCZ]
	adc $0F4040.l,X		; 7F 40 40 0F ; Add long $0F4040.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $030D.w		; 0E 0D 03 ; Arithmetic shift left $030D.w [Flags: NCZ]
	eor $050E.w,Y		; 59 0E 05 ; Exclusive OR accumulator with memory $050E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $0007.w,Y		; 59 07 00 ; Exclusive OR accumulator with memory $0007.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $0D080F.l		; 0F 0F 08 0D ; OR accumulator with memory (long) $0D080F.l [Writes: Accumulator] [Flags: NZ]
	tsb $12.b		; 04 12 ; Test and set bits $12.b [Reads: Accumulator] [Flags: Z]
	ora ($40.b)		; 12 40 ; OR accumulator with memory (indirect) ($40.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: MXCZIDVN] [Flow: return]

	adc $13.b,X		; 75 13 ; Add $13.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp $DC1159.l		; CF 59 11 DC ; Compare accumulator (long) $DC1159.l [Reads: Accumulator] [Flags: NCZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sty $2BE3.w		; 8C E3 2B ; Store Y register to $2BE3.w [Reads: Y Index]
	ror $E2.b,X		; 76 E2 ; Rotate right $E2.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	bit $E259.w		; 2C 59 E2 ; Test bits $E259.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $9BB9.w		; CE B9 9B ; Decrement $9BB9.w [Flags: NZ]
	asl $DB59.w,X		; 1E 59 DB ; Arithmetic shift left $DB59.w,X [Reads: X Index] [Flags: NCZ]
	rol $411E.w		; 2E 1E 41 ; Rotate left $411E.w [Flags: NCZ]
	ror $0373.w,X		; 7E 73 03 ; Rotate right $0373.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	and $448873.l,X		; 3F 73 88 44 ; AND accumulator with memory (long,X) $448873.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2113.w,Y		; 59 13 21 ; Exclusive OR accumulator with memory $2113.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E1F.w,Y		; 59 1F 1E ; Exclusive OR accumulator with memory $1E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $73		; 30 73 ; Branch if minus to $30, $73 [Flow: branch]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$03.b		; 89 03 ; Test bits #$03.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $1F59.w		; 2D 59 1F ; Logical AND $1F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $251E.w,X		; 1E 1E 25 ; Arithmetic shift left $251E.w,X [Reads: X Index] [Flags: NCZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $68B6.w,Y		; 59 B6 68 ; Exclusive OR accumulator with memory $68B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $251E12.l,X		; 7F 12 1E 25 ; Add long $251E12.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $5993.w,Y		; 59 93 59 ; Exclusive OR accumulator with memory $5993.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1E.b,Y		; B6 1E ; Load X register $1E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	rol $B32C.w		; 2E 2C B3 ; Rotate left $B32C.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $02.b,X		; 75 02 ; Add $02.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$DB.b]		; C7 DB ; Compare accumulator (long) [$DB.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591D1A.l		; 0F 1A 1D 59 ; OR accumulator with memory (long) $591D1A.l [Writes: Accumulator] [Flags: NZ]
	sty TSUB.w		; 8C 2D 21 ; Store Y register to TSUB.w [Reads: Y Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $B42C.w		; 2E 2C B4 ; Rotate left $B42C.w [Flags: NCZ]
	jsr $D876.w		; 20 76 D8 ; Jump to subroutine at $D876.w [Writes: Stack Pointer] [Flow: call]
	eor $595E.w,Y		; 59 5E 59 ; Exclusive OR accumulator with memory $595E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($69.b,X)		; 41 69 ; Exclusive OR accumulator with memory ($69.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $251E07.l,X		; 7F 07 1E 25 ; Add long $251E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $CED8.w,Y		; 59 D8 CE ; Exclusive OR accumulator with memory $CED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $22.b,S		; 03 22 ; OR accumulator with stack relative $22.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $E359.w,X		; 1D 59 E3 ; OR accumulator with memory $E359.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2B1D.w,Y		; 59 1D 2B ; Exclusive OR accumulator with memory $2B1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $3F2C.w,Y		; D9 2C 3F ; Compare accumulator $3F2C.w,Y [Reads: Y Index] [Flags: NCZ]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	mvp $18,$59		; 44 59 18 ; Move block positive $18,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $762C.w,X		; 1E 2C 76 ; Arithmetic shift left $762C.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1D9E.w,Y		; 59 9E 1D ; Exclusive OR accumulator with memory $1D9E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$51.b]		; 27 51 ; AND accumulator with memory (long) [$51.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $7F68.w		; 2D 68 7F ; Logical AND $7F68.w with accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $5993.w,Y		; 59 93 59 ; Exclusive OR accumulator with memory $5993.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($C7.b,X)		; 21 C7 ; Logical AND ($C7.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $59D3.w,X		; 1E D3 59 ; Arithmetic shift left $59D3.w,X [Reads: X Index] [Flags: NCZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $5920D5.l		; CF D5 20 59 ; Compare accumulator (long) $5920D5.l [Reads: Accumulator] [Flags: NCZ]
	sta [$2D.b],Y		; 97 2D ; Store accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator]
	dec $76.b,X		; D6 76 ; Decrement memory $76.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $E3CD00.l,X		; 7F 00 CD E3 ; Add long $E3CD00.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $2CD9.w		; CD D9 2C ; Compare $2CD9.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 16
	rep #$59		; C2 59
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	bit $753F.w		; 2C 3F 75 ; Test bits $753F.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	mvp $11,$59		; 44 59 11 ; Move block positive $11,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $251A.w,X		; 1E 1A 25 ; Arithmetic shift left $251A.w,X [Reads: X Index] [Flags: NCZ]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $27.b,X		; B5 27 ; Load $27.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $88.b,X		; 76 88 ; Rotate right $88.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit #$13.b		; 89 13 ; Test bits #$13.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	rol TSUB.w		; 2E 2D 21 ; Rotate left TSUB.w [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $68.b,X		; B5 68 ; Load $68.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $30280D.l,X		; 7F 0D 28 30 ; Add long $30280D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $8A		; 42 8A ; Reserved instruction
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A59.w,Y		; BE 59 1A ; Load X register $1A59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $7541.w,X		; 1E 41 75 ; Arithmetic shift left $7541.w,X [Reads: X Index] [Flags: NCZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $B659.w,X		; 1E 59 B6 ; Arithmetic shift left $B659.w,X [Reads: X Index] [Flags: NCZ]
	eor $9C96.w,Y		; 59 96 9C ; Exclusive OR accumulator with memory $9C96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $932B.w,Y		; BE 2B 93 ; Load X register $932B.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	jsr $753E.w		; 20 3E 75 ; Jump to subroutine at $753E.w [Writes: Stack Pointer] [Flow: call]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2D99.w,Y		; 59 99 2D ; Exclusive OR accumulator with memory $2D99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	ora $90A192.l,X		; 1F 92 A1 90 ; Logical OR long $90A192.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $1F.b,X		; 76 1F ; Rotate right $1F.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $27D7.w,Y		; 59 D7 27 ; Exclusive OR accumulator with memory $27D7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2528.w,Y		; 59 28 25 ; Exclusive OR accumulator with memory $2528.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $C759.w,X		; 1D 59 C7 ; OR accumulator with memory $C759.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $7F3E.w,X		; 1E 3E 7F ; Arithmetic shift left $7F3E.w,X [Reads: X Index] [Flags: NCZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $22D1.w,Y		; 59 D1 22 ; Exclusive OR accumulator with memory $22D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2FCC26.l		; 22 26 CC 2F ; Jump to subroutine long $2FCC26.l [Writes: Stack Pointer] [Flow: call]
	asl $3E1D.w,X		; 1E 1D 3E ; Arithmetic shift left $3E1D.w,X [Reads: X Index] [Flags: NCZ]
	adc $0D.b,X		; 75 0D ; Add $0D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $1E1D.w,Y		; 99 1D 1E ; Store accumulator to $1E1D.w,Y [Reads: Y Index, Accumulator]
	ora $591DA5.l,X		; 1F A5 1D 59 ; Logical OR long $591DA5.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	ora $201A76.l,X		; 1F 76 1A 20 ; Logical OR long $201A76.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $1F59D3.l		; 8F D3 59 1F ; Store accumulator (long) $1F59D3.l [Reads: Accumulator]
	jsl $2596CE.l		; 22 CE 96 25 ; Jump to subroutine long $2596CE.l [Writes: Stack Pointer] [Flow: call]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $E67F.w,X		; 3E 7F E6 ; Rotate left $E67F.w,X [Reads: X Index] [Flags: NCZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	sta $59D8.w		; 8D D8 59 ; Store accumulator to $59D8.w [Reads: Accumulator]
	ora ($22.b)		; 12 22 ; OR accumulator with memory (indirect) ($22.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $DD.b		; 25 DD ; Logical AND $DD.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2B00.w,Y		; 59 00 2B ; Exclusive OR accumulator with memory $2B00.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	adc $E3.b,X		; 75 E3 ; Add $E3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1E27.w,Y		; 59 27 1E ; Exclusive OR accumulator with memory $1E27.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b		; A4 DA ; Load $DA.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $06911E.l,X		; 1F 1E 91 06 ; Logical OR long $06911E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	rol $127F.w,X		; 3E 7F 12 ; Rotate left $127F.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $E3.b		; A4 E3 ; Load $E3.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DE.w,Y		; 59 DE 59 ; Exclusive OR accumulator with memory $59DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $0C.b,X		; 75 0C ; Add $0C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $1C9E.w,X		; 1E 9E 1C ; Arithmetic shift left $1C9E.w,X [Reads: X Index] [Flags: NCZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1C2E.w		; 2C 2E 1C ; Test bits $1C2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($76.b,X)		; 21 76 ; Logical AND ($76.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $C722.w		; 2D 22 C7 ; Logical AND $C722.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $CE1F.w,Y		; 59 1F CE ; Exclusive OR accumulator with memory $CE1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $B559.w,X		; 1E 59 B5 ; Arithmetic shift left $B559.w,X [Reads: X Index] [Flags: NCZ]
	eor $2E2A.w,Y		; 59 2A 2E ; Exclusive OR accumulator with memory $2E2A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1E.b,Y		; B6 1E ; Load X register $1E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	ror $1A73.w,X		; 7E 73 1A ; Rotate right $1A73.w,X [Reads: X Index] [Flags: NCZ]
	eor $2B96.w,Y		; 59 96 2B ; Exclusive OR accumulator with memory $2B96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $3E8F.w		; 20 8F 3E ; Jump to subroutine at $3E8F.w [Writes: Stack Pointer] [Flow: call]
	adc $592BE8.l,X		; 7F E8 2B 59 ; Add long $592BE8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $C830.w		; 2C 30 C8 ; Test bits $C830.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BD3.w,Y		; 59 D3 2B ; Exclusive OR accumulator with memory $2BD3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ldx $3E.b		; A6 3E ; Load $3E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1F99.w,Y		; 59 99 1F ; Exclusive OR accumulator with memory $1F99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $251E.w,X		; 1E 1E 25 ; Arithmetic shift left $251E.w,X [Reads: X Index] [Flags: NCZ]
	eor $2CB6.w,Y		; 59 B6 2C ; Exclusive OR accumulator with memory $2CB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A6CB.w,Y		; 59 CB A6 ; Exclusive OR accumulator with memory $A6CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $2D.b,X		; 76 2D ; Rotate right $2D.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	lda ($B4.b,S),Y		; B3 B4 ; Load accumulator (stack relative indirect indexed) ($B4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27B1.w,Y		; 59 B1 27 ; Exclusive OR accumulator with memory $27B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1A.b]		; 07 1A ; OR accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $D01A.w		; CE 1A D0 ; Decrement $D01A.w [Flags: NZ]
	ora $6C59.w,X		; 1D 59 6C ; OR accumulator with memory $6C59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $6C.b,S		; 03 6C ; OR accumulator with stack relative $6C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and $251A.w		; 2D 1A 25 ; Logical AND $251A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1A07.w,Y		; 59 07 1A ; Exclusive OR accumulator with memory $1A07.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	jmp ($6C01.w)		; 6C 01 6C ; Jump indirect to ($6C01.w) [Flow: jump]
	brk $41.b		; 00 41 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ror $E8.b,X		; 76 E8 ; Rotate right $E8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $1C97.w,Y		; 59 97 1C ; Exclusive OR accumulator with memory $1C97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ldx $B159.w,Y		; BE 59 B1 ; Load X register $B159.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $321BA1.l		; 22 A1 1B 32 ; Jump to subroutine long $321BA1.l [Writes: Stack Pointer] [Flow: call]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $D373.w,X		; 7E 73 D3 ; Rotate right $D373.w,X [Reads: X Index] [Flags: NCZ]
	asl $4129.w,X		; 1E 29 41 ; Arithmetic shift left $4129.w,X [Reads: X Index] [Flags: NCZ]
	adc $E25908.l,X		; 7F 08 59 E2 ; Add long $E25908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $24BD.w,Y		; 59 BD 24 ; Exclusive OR accumulator with memory $24BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $D1E2.w,Y		; 59 E2 D1 ; Exclusive OR accumulator with memory $D1E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E9B.w,Y		; 59 9B 1E ; Exclusive OR accumulator with memory $1E9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $7541.w,X		; 1E 41 75 ; Arithmetic shift left $7541.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	mvp $59,$08		; 44 08 59 ; Move block positive $59,$08 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $0159.w,X		; 1E 59 01 ; Arithmetic shift left $0159.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $8876.w		; 2C 76 88 ; Test bits $8876.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $0059.w,X		; 1E 59 00 ; Arithmetic shift left $0059.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	adc $27E67F.l		; 6F 7F E6 27 ; Add with carry (long) $27E67F.l [Writes: Accumulator] [Flags: NCVZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $D01A.w		; CE 1A D0 ; Decrement $D01A.w [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1C.b,X		; 75 1C ; Add $1C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	jsl $32B625.l		; 22 25 B6 32 ; Jump to subroutine long $32B625.l [Writes: Stack Pointer] [Flow: call]
	eor $59D2.w,Y		; 59 D2 59 ; Exclusive OR accumulator with memory $59D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7693.w		; 1C 93 76 ; Test and reset bits $7693.w [Reads: Accumulator] [Flags: Z]
	trb $2B1A.w		; 1C 1A 2B ; Test and reset bits $2B1A.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jmp ($6C01.w)		; 6C 01 6C ; Jump indirect to ($6C01.w) [Flow: jump]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $9159.w		; 2C 59 91 ; Test bits $9159.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $2231.w,X		; BD 31 22 ; Load $2231.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $7E4126.l,X		; BF 26 41 7E ; Load long $7E4126.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E7.b,S),Y		; 73 E7 ; Add with carry (stack relative indirect indexed) ($E7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BD2C.w,Y		; 59 2C BD ; Exclusive OR accumulator with memory $BD2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $29B1.w,Y		; 59 B1 29 ; Exclusive OR accumulator with memory $29B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$B4.b		; 29 B4 ; Logical AND #$B4.b with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $AA99.w,Y		; 59 99 AA ; Exclusive OR accumulator with memory $AA99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $5927E6.l,X		; 7F E6 27 59 ; Add long $5927E6.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $D01A.w		; CE 1A D0 ; Decrement $D01A.w [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1C.b,X		; 75 1C ; Add $1C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	jsl $32B625.l		; 22 25 B6 32 ; Jump to subroutine long $32B625.l [Writes: Stack Pointer] [Flow: call]
	eor $59D2.w,Y		; 59 D2 59 ; Exclusive OR accumulator with memory $59D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7693.w		; 1C 93 76 ; Test and reset bits $7693.w [Reads: Accumulator] [Flags: Z]
	trb $2B1A.w		; 1C 1A 2B ; Test and reset bits $2B1A.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jmp ($6C01.w)		; 6C 01 6C ; Jump indirect to ($6C01.w) [Flow: jump]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	brk $2B.b		; 00 2B ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	eor $BD91.w,Y		; 59 91 BD ; Exclusive OR accumulator with memory $BD91.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($22.b),Y		; 31 22 ; AND accumulator with memory ($22.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $7E4126.l,X		; BF 26 41 7E ; Load long $7E4126.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E7.b,S),Y		; 73 E7 ; Add with carry (stack relative indirect indexed) ($E7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BD2C.w,Y		; 59 2C BD ; Exclusive OR accumulator with memory $BD2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $29B1.w,Y		; 59 B1 29 ; Exclusive OR accumulator with memory $29B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$B4.b		; 29 B4 ; Logical AND #$B4.b with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $AA99.w,Y		; 59 99 AA ; Exclusive OR accumulator with memory $AA99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1C5908.l,X		; 7F 08 59 1C ; Add long $1C5908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C2.b,S),Y		; 93 C2 ; Store accumulator (stack relative indirect indexed) ($C2.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $2B20.w,Y		; 59 20 2B ; Exclusive OR accumulator with memory $2B20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $3293.w,Y		; 59 93 32 ; Exclusive OR accumulator with memory $3293.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $C826.w,Y		; 59 26 C8 ; Exclusive OR accumulator with memory $C826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $E259.w,X		; 1E 59 E2 ; Arithmetic shift left $E259.w,X [Reads: X Index] [Flags: NCZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	bit $A875.w		; 2C 75 A8 ; Test bits $A875.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $42E3.w,Y		; 59 E3 42 ; Exclusive OR accumulator with memory $42E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2B1F.w,Y		; 59 1F 2B ; Exclusive OR accumulator with memory $2B1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591DA5.l		; 22 A5 1D 59 ; Jump to subroutine long $591DA5.l [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	rol $B4.b		; 26 B4 ; Rotate left $B4.b [Reads: Direct Page] [Flags: NCZ]
	asl $2676.w,X		; 1E 76 26 ; Arithmetic shift left $2676.w,X [Reads: X Index] [Flags: NCZ]
	lda ($97.b)		; B2 97 ; Load accumulator (indirect) ($97.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $951A.w,Y		; 59 1A 95 ; Exclusive OR accumulator with memory $951A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $43DA.w,Y		; 59 DA 43 ; Exclusive OR accumulator with memory $43DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $1273.w,X		; 7E 73 12 ; Rotate right $1273.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $592C1E.l		; 2F 1E 2C 59 ; AND accumulator with memory (long) $592C1E.l [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $9416.w,Y		; 59 16 94 ; Exclusive OR accumulator with memory $9416.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1F.b		; A6 1F ; Load $1F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	stx $1F0E.w		; 8E 0E 1F ; Store X register to $1F0E.w [Reads: X Index]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda $B0.b,X		; B5 B0 ; Load $B0.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $A227.w,Y		; 59 27 A2 ; Exclusive OR accumulator with memory $A227.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $C819.w,Y		; 59 19 C8 ; Exclusive OR accumulator with memory $C819.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $7EDA.w,Y		; 59 DA 7E ; Exclusive OR accumulator with memory $7EDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	tsb $321A.w		; 0C 1A 32 ; Test and set bits $321A.w [Reads: Accumulator] [Flags: Z]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	lda ($29.b),Y		; B1 29 ; Load accumulator ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$32.b		; 29 32 ; Logical AND #$32.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	trb $21.b		; 14 21 ; Test and reset bits $21.b [Reads: Accumulator] [Flags: Z]
	and ($21.b,X)		; 21 21 ; Logical AND ($21.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $94.b,X		; 16 94 ; Arithmetic shift left $94.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1ED3.w,Y		; 59 D3 1E ; Exclusive OR accumulator with memory $1ED3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $E6.b,X		; 75 E6 ; Add $E6.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $218D.w		; CD 8D 21 ; Compare $218D.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $B459.w		; 2C 59 B4 ; Test bits $B459.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C42B.w		; 20 2B C4 ; Jump to subroutine at $C42B.w [Writes: Stack Pointer] [Flow: call]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2B2E.w		; 2D 2E 2B ; Logical AND $2B2E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda ($AF.b)		; B2 AF ; Load accumulator (indirect) ($AF.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $7E3F.w,X		; 1E 3F 7E ; Arithmetic shift left $7E3F.w,X [Reads: X Index] [Flags: NCZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $42BC.w,Y		; 59 BC 42 ; Exclusive OR accumulator with memory $42BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $E38D.w,Y		; 59 8D E3 ; Exclusive OR accumulator with memory $E38D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $251A.w,Y		; 59 1A 25 ; Exclusive OR accumulator with memory $251A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ldy $20B4.w		; AC B4 20 ; Load $20B4.w into Y register [Writes: Y Index] [Flags: NZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $59DA59.l		; 8F 59 DA 59 ; Store accumulator (long) $59DA59.l [Reads: Accumulator]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$280F.w		; A0 0F 28 ; Load #$280F.w into Y register [Writes: Y Index] [Flags: NZ]
	cpx #$3F2B.w		; E0 2B 3F ; Compare #$3F2B.w with X register [Reads: X Index] [Flags: NCZ]
	ror $0973.w,X		; 7E 73 09 ; Rotate right $0973.w,X [Reads: X Index] [Flags: NCZ]
	rol $59D3.w		; 2E D3 59 ; Rotate left $59D3.w [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $2E1F59.l		; 8F 59 1F 2E ; Store accumulator (long) $2E1F59.l [Reads: Accumulator]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($C6.b,S),Y		; 73 C6 ; Add with carry (stack relative indirect indexed) ($C6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $C726.w,Y		; 59 26 C7 ; Exclusive OR accumulator with memory $C726.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	tsb $3293.w		; 0C 93 32 ; Test and set bits $3293.w [Reads: Accumulator] [Flags: Z]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $73AD.w,Y		; 59 AD 73 ; Exclusive OR accumulator with memory $73AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $21B593.l		; 2F 93 B5 21 ; AND accumulator with memory (long) $21B593.l [Writes: Accumulator] [Flags: NZ]
	ldy $B4.b		; A4 B4 ; Load $B4.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2826.w,Y		; 59 26 28 ; Exclusive OR accumulator with memory $2826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $22E159.l		; 8F 59 E1 22 ; Store accumulator (long) $22E159.l [Reads: Accumulator]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $BB73.w,X		; 7E 73 BB ; Rotate right $BB73.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$280F.w		; A0 0F 28 ; Load #$280F.w into Y register [Writes: Y Index] [Flags: NZ]
	cpx #$412B.w		; E0 2B 41 ; Compare #$412B.w with X register [Reads: X Index] [Flags: NCZ]
	adc ($73.b,S),Y		; 73 73 ; Add with carry (stack relative indirect indexed) ($73.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1ED3.w,Y		; 59 D3 1E ; Exclusive OR accumulator with memory $1ED3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($E3.b,X)		; A1 E3 ; Load accumulator ($E3.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($30.b,S),Y		; 73 30 ; Add with carry (stack relative indirect indexed) ($30.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	sta $59ABC0.l,X		; 9F C0 AB 59 ; Store accumulator (long,X) $59ABC0.l,X [Reads: Accumulator, X Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	adc ($B4.b,S),Y		; 73 B4 ; Add with carry (stack relative indirect indexed) ($B4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $2F2528.l		; 2F 28 25 2F ; AND accumulator with memory (long) $2F2528.l [Writes: Accumulator] [Flags: NZ]
	ldy $B4.b		; A4 B4 ; Load $B4.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1DBD.w,Y		; 59 BD 1D ; Exclusive OR accumulator with memory $1DBD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2A.w,Y		; 59 2A 2E ; Exclusive OR accumulator with memory $2E2A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $41D3.w,X		; 1E D3 41 ; Arithmetic shift left $41D3.w,X [Reads: X Index] [Flags: NCZ]
	adc $212114.l,X		; 7F 14 21 21 ; Add long $212114.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $CD.b		; E6 CD ; Increment $CD.b [Reads: Direct Page] [Flags: NZ]
	lda $9759D3.l,X		; BF D3 59 97 ; Load long $9759D3.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $B459.w		; 2D 59 B4 ; Logical AND $B459.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $D8.b,X		; 75 D8 ; Add $D8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	trb $21.b		; 14 21 ; Test and reset bits $21.b [Reads: Accumulator] [Flags: Z]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,S),Y		; 13 2E ; OR accumulator (stack relative indirect indexed) ($2E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda ($AF.b)		; B2 AF ; Load accumulator (indirect) ($AF.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $8943.w,X		; 1E 43 89 ; Arithmetic shift left $8943.w,X [Reads: X Index] [Flags: NCZ]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $42B8.w,Y		; 59 B8 42 ; Exclusive OR accumulator with memory $42B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1A59.w		; AD 59 1A ; Load $1A59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	ror $20.b,X		; 76 20 ; Rotate right $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	.db $90, $1D		; 90 1D ; Branch if carry clear to $90, $1D [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	pei ($E1.b)		; D4 E1 ; Push effective indirect address ($E1.b) [Reads: Direct Page] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $1A73.w,X		; 7E 73 1A ; Rotate right $1A73.w,X [Reads: X Index] [Flags: NCZ]
	jsr $431E.w		; 20 1E 43 ; Jump to subroutine at $431E.w [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	lda ($DA.b,S),Y		; B3 DA ; Load accumulator (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	lda $59DA59.l		; AF 59 DA 59 ; Load long $59DA59.l into accumulator [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($25.b)		; 92 25 ; Store accumulator (indirect) ($25.b) [Reads: Direct Page, Accumulator]
	asl $8C59.w,X		; 1E 59 8C ; Arithmetic shift left $8C59.w,X [Reads: X Index] [Flags: NCZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $A727.w,Y		; 59 27 A7 ; Exclusive OR accumulator with memory $A727.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($CE.b,X)		; A1 CE ; Load accumulator ($CE.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $2B2E.w		; 2D 2E 2B ; Logical AND $2B2E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $7341.w,X		; 1D 41 73 ; OR accumulator with memory $7341.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	jsl $1A271D.l		; 22 1D 27 1A ; Jump to subroutine long $1A271D.l [Writes: Stack Pointer] [Flow: call]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda ($2D.b,S),Y		; B3 2D ; Load accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	lda $1D22.w,X		; BD 22 1D ; Load $1D22.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $2C.b		; A5 2C ; Load $2C.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $9773.w,X		; 7E 73 97 ; Rotate right $9773.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $C659.w		; 2D 59 C6 ; Logical AND $C659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $298B.w,X		; 1D 8B 29 ; OR accumulator with memory $298B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $733E.w		; 2D 3E 73 ; Logical AND $733E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $1E21.w		; CD 21 1E ; Compare $1E21.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($CF.b,S),Y		; 73 CF ; Add with carry (stack relative indirect indexed) ($CF.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A1CB.w,Y		; 59 CB A1 ; Exclusive OR accumulator with memory $A1CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $9D73.w,X		; 7E 73 9D ; Rotate right $9D73.w,X [Reads: X Index] [Flags: NCZ]
	trb $1DA5.w		; 1C A5 1D ; Test and reset bits $1DA5.w [Reads: Accumulator] [Flags: Z]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 8
	sep #$D0		; E2 D0
	adc ($BE.b,S),Y		; 73 BE ; Add with carry (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$43.b]		; 27 43 ; AND accumulator with memory (long) [$43.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $9F5908.l,X		; 7F 08 59 9F ; Add long $9F5908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy #$B8.b		; C0 B8 ; Compare #$B8.b with Y register [Reads: Y Index] [Flags: NCZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $5942.w		; CE 42 59 ; Decrement $5942.w [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $752D.w		; 2E 2D 75 ; Rotate left $752D.w [Flags: NCZ]
	jsl $E3591F.l		; 22 1F 59 E3 ; Jump to subroutine long $E3591F.l [Writes: Stack Pointer] [Flow: call]
	eor $AC8D.w,Y		; 59 8D AC ; Exclusive OR accumulator with memory $AC8D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($DA.b,S),Y		; B3 DA ; Load accumulator (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jmp.w [$D876]		; DC 76 D8 ; Jump long indirect [$D876] [Flow: jump]
	eor $2826.w,Y		; 59 26 28 ; Exclusive OR accumulator with memory $2826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $E25942.l		; 8F 42 59 E2 ; Store accumulator (long) $E25942.l [Reads: Accumulator]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $BE59.w,X		; 1E 59 BE ; Arithmetic shift left $BE59.w,X [Reads: X Index] [Flags: NCZ]
	ror $DE73.w,X		; 7E 73 DE ; Rotate right $DE73.w,X [Reads: X Index] [Flags: NCZ]
	eor $3FE3.w,Y		; 59 E3 3F ; Exclusive OR accumulator with memory $3FE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $D3BB.w,Y		; 59 BB D3 ; Exclusive OR accumulator with memory $D3BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $26BA.w,Y		; 59 BA 26 ; Exclusive OR accumulator with memory $26BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$42.b		; 29 42 ; Logical AND #$42.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($D2.b,S),Y		; 73 D2 ; Add with carry (stack relative indirect indexed) ($D2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	rol $B5.b		; 26 B5 ; Rotate left $B5.b [Reads: Direct Page] [Flags: NCZ]
	bit $BDB3.w		; 2C B3 BD ; Test bits $BDB3.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsl $2CA51D.l		; 22 1D A5 2C ; Jump to subroutine long $2CA51D.l [Writes: Stack Pointer] [Flow: call]
	eor $D38D.w,Y		; 59 8D D3 ; Exclusive OR accumulator with memory $D38D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $752525.l		; 22 25 25 75 ; Jump to subroutine long $752525.l [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $CF591E.l		; 2F 1E 59 CF ; AND accumulator with memory (long) $CF591E.l [Writes: Accumulator] [Flags: NZ]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $8A41.w,X		; 1E 41 8A ; Arithmetic shift left $8A41.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2597.w,Y		; 59 97 25 ; Exclusive OR accumulator with memory $2597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591EA7.l		; 22 A7 1E 59 ; Jump to subroutine long $591EA7.l [Writes: Stack Pointer] [Flow: call]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	ror $1A.b,X		; 76 1A ; Rotate right $1A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $28E4.w,Y		; 59 E4 28 ; Exclusive OR accumulator with memory $28E4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $1C2C.w		; CE 2C 1C ; Decrement $1C2C.w [Flags: NZ]
	rol $591E.w		; 2E 1E 59 ; Rotate left $591E.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $43.b		; 26 43 ; Rotate left $43.b [Reads: Direct Page] [Flags: NCZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $B6DF.w,Y		; 59 DF B6 ; Exclusive OR accumulator with memory $B6DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $1A1D.w,Y		; 59 1D 1A ; Exclusive OR accumulator with memory $1A1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($14.b,S),Y		; 73 14 ; Add with carry (stack relative indirect indexed) ($14.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($21.b,X)		; 21 21 ; Logical AND ($21.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $D0.b		; E6 D0 ; Increment $D0.b [Reads: Direct Page] [Flags: NZ]
	eor $1D8D.w,Y		; 59 8D 1D ; Exclusive OR accumulator with memory $1D8D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	ldx $28.b		; A6 28 ; Load $28.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	rol $732C.w		; 2E 2C 73 ; Rotate left $732C.w [Flags: NCZ]
	and $BE22.w		; 2D 22 BE ; Logical AND $BE22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $8A43.w		; 2C 43 8A ; Test bits $8A43.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1A2D.w,Y		; 59 2D 1A ; Exclusive OR accumulator with memory $1A2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $24.b		; 25 24 ; Logical AND $24.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b		; A4 DA ; Load $DA.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $1CBF.w,Y		; 59 BF 1C ; Exclusive OR accumulator with memory $1CBF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($41.b,X)		; 21 41 ; Logical AND ($41.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ror $0073.w,X		; 7E 73 00 ; Rotate right $0073.w,X [Reads: X Index] [Flags: NCZ]
	and [$32.b]		; 27 32 ; AND accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $8A4332.l,X		; DF 32 43 8A ; Compare accumulator (long,X) $8A4332.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($24.b,S),Y		; 73 24 ; Add with carry (stack relative indirect indexed) ($24.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $5993.w,Y		; 59 93 59 ; Exclusive OR accumulator with memory $5993.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59BC.w,Y		; 59 BC 59 ; Exclusive OR accumulator with memory $59BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $41BE.w,Y		; 59 BE 41 ; Exclusive OR accumulator with memory $41BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($14.b,S),Y		; 73 14 ; Add with carry (stack relative indirect indexed) ($14.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($21.b,X)		; 21 21 ; Logical AND ($21.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DAA4.w		; 2D A4 DA ; Logical AND $DAA4.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $E3AA.w,Y		; 59 AA E3 ; Exclusive OR accumulator with memory $E3AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $D973.w,X		; 7E 73 D9 ; Rotate right $D973.w,X [Reads: X Index] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $A11D27.l,X		; DF 27 1D A1 ; Compare accumulator (long,X) $A11D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	eor $93DB.w,Y		; 59 DB 93 ; Exclusive OR accumulator with memory $93DB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $C829.w		; 2C 29 C8 ; Test bits $C829.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	dec $42.b,X		; D6 42 ; Decrement memory $42.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	eor $1A20.w,Y		; 59 20 1A ; Exclusive OR accumulator with memory $1A20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,S),Y		; 33 1E ; AND accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($B4.b,S),Y		; 73 B4 ; Add with carry (stack relative indirect indexed) ($B4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2226.w,Y		; 59 26 22 ; Exclusive OR accumulator with memory $2226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $AE59.w,X		; 1D 59 AE ; OR accumulator with memory $AE59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $221E.w		; 1C 1E 22 ; Test and reset bits $221E.w [Reads: Accumulator] [Flags: Z]
	and $75D8A4.l		; 2F A4 D8 75 ; AND accumulator with memory (long) $75D8A4.l [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	ldy $20.b,X		; B4 20 ; Load Y register $20.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sty $2827.w		; 8C 27 28 ; Store Y register to $2827.w [Reads: Y Index]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ror $C3.b,X		; 76 C3 ; Rotate right $C3.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $DA5932.l,X		; DF 32 59 DA ; Compare accumulator (long,X) $DA5932.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $7ED8.w,Y		; 59 D8 7E ; Exclusive OR accumulator with memory $7ED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($03.b,S),Y		; 73 03 ; Add with carry (stack relative indirect indexed) ($03.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $CA9B.w,Y		; 59 9B CA ; Exclusive OR accumulator with memory $CA9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $731E.w		; 2D 1E 73 ; Logical AND $731E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $2E2A.w,Y		; 59 2A 2E ; Exclusive OR accumulator with memory $2E2A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $42D3.w,X		; 1E D3 42 ; Arithmetic shift left $42D3.w,X [Reads: X Index] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $731D.w,X		; 1E 1D 73 ; Arithmetic shift left $731D.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $4225A2.l		; 0F A2 25 42 ; OR accumulator with memory (long) $4225A2.l [Writes: Accumulator] [Flags: NZ]
	eor $22E1.w,Y		; 59 E1 22 ; Exclusive OR accumulator with memory $22E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $DA73.w,X		; 7E 73 DA ; Rotate right $DA73.w,X [Reads: X Index] [Flags: NCZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $59C7.w,Y		; 59 C7 59 ; Exclusive OR accumulator with memory $59C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2826.w,Y		; 59 26 28 ; Exclusive OR accumulator with memory $2826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $007341.l		; 8F 41 73 00 ; Store accumulator (long) $007341.l [Reads: Accumulator]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $599F.w,Y		; 99 9F 59 ; Store accumulator to $599F.w,Y [Reads: Y Index, Accumulator]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($9B.b,S),Y		; 73 9B ; Add with carry (stack relative indirect indexed) ($9B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AE0.w,Y		; 59 E0 1A ; Exclusive OR accumulator with memory $1AE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $432C.w		; 2C 2C 43 ; Test bits $432C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $0273.w,X		; 7E 73 02 ; Rotate right $0273.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $AF59.w		; 9C 59 AF ; Store zero to $AF59.w
	asl $9359.w,X		; 1E 59 93 ; Arithmetic shift left $9359.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $BE22.w		; 2D 22 BE ; Logical AND $BE22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	stz $E6.b,X		; 74 E6 ; Store zero to $E6.b,X [Reads: X Index]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $5925A2.l		; 0F A2 25 59 ; OR accumulator with memory (long) $5925A2.l [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpy $1E2D.w		; CC 2D 1E ; Compare $1E2D.w with Y register [Reads: Y Index] [Flags: NCZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	ldx $2C.b,Y		; B6 2C ; Load X register $2C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc $97.b,X		; 75 97 ; Add $97.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $592B.w		; CE 2B 59 ; Decrement $592B.w [Flags: NZ]
	lda #$26.b		; A9 26 ; Load #$26.b into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $251A.w		; 1C 1A 25 ; Test and reset bits $251A.w [Reads: Accumulator] [Flags: Z]
	eor $221A.w,Y		; 59 1A 22 ; Exclusive OR accumulator with memory $221A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $76C6.w,Y		; 59 C6 76 ; Exclusive OR accumulator with memory $76C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0B.b		; A0 0B ; Load #$0B.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $90, $42		; 90 42 ; Branch if carry clear to $90, $42 [Flow: branch]
	eor $59D2.w,Y		; 59 D2 59 ; Exclusive OR accumulator with memory $59D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7E93.w		; 1C 93 7E ; Test and reset bits $7E93.w [Reads: Accumulator] [Flags: Z]
	adc ($24.b,S),Y		; 73 24 ; Add with carry (stack relative indirect indexed) ($24.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $291E.w,X		; 1E 1E 29 ; Arithmetic shift left $291E.w,X [Reads: X Index] [Flags: NCZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E21.w,Y		; 59 21 2E ; Exclusive OR accumulator with memory $2E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $D159.w,X		; BC 59 D1 ; Load Y register $D159.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $CED8.w,Y		; 59 D8 CE ; Exclusive OR accumulator with memory $CED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	brk $25.b		; 00 25 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $9F99.w,Y		; 59 99 9F ; Exclusive OR accumulator with memory $9F99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	lda $73.b,X		; B5 73 ; Load $73.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AE0.w,Y		; 59 E0 1A ; Exclusive OR accumulator with memory $1AE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $432C.w		; 2C 2C 43 ; Test bits $432C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $737E.w,Y		; 59 7E 73 ; Exclusive OR accumulator with memory $737E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $AF59.w		; 9C 59 AF ; Store zero to $AF59.w
	asl $9359.w,X		; 1E 59 93 ; Arithmetic shift left $9359.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $BE22.w		; 2D 22 BE ; Logical AND $BE22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $24D5.w,Y		; 59 D5 24 ; Exclusive OR accumulator with memory $24D5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
.INDEX 8
	sep #$33		; E2 33
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $1C75.w,X		; 1D 75 1C ; OR accumulator with memory $1C75.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$27.b]		; C7 27 ; Compare accumulator (long) [$27.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	ldy $D8.b		; A4 D8 ; Load $D8.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $302D.w,Y		; 59 2D 30 ; Exclusive OR accumulator with memory $302D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $CF76.w		; 2C 76 CF ; Test bits $CF76.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $1A59.w,X		; 1E 59 1A ; Arithmetic shift left $1A59.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $599F.w,Y		; 99 9F 59 ; Store accumulator to $599F.w,Y [Reads: Y Index, Accumulator]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($9B.b,S),Y		; 73 9B ; Add with carry (stack relative indirect indexed) ($9B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AE0.w,Y		; 59 E0 1A ; Exclusive OR accumulator with memory $1AE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $432C.w		; 2C 2C 43 ; Test bits $432C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($02.b,S),Y		; 73 02 ; Add with carry (stack relative indirect indexed) ($02.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $AF59.w		; 9C 59 AF ; Store zero to $AF59.w
	asl $9359.w,X		; 1E 59 93 ; Arithmetic shift left $9359.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $BE22.w		; 2D 22 BE ; Logical AND $BE22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $BF.b,S		; 43 BF ; Exclusive OR accumulator with stack relative $BF.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $95.b		; 26 95 ; Rotate left $95.b [Reads: Direct Page] [Flags: NCZ]
	eor $26BF.w,Y		; 59 BF 26 ; Exclusive OR accumulator with memory $26BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $43.b,X		; 95 43 ; Store accumulator to $43.b,X [Reads: Accumulator, X Index]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tsb $5932.w		; 0C 32 59 ; Test and set bits $5932.w [Reads: Accumulator] [Flags: Z]
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc $CE.b,X		; 75 CE ; Add $CE.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $B9.b		; 25 B9 ; Logical AND $B9.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $A4.b		; 24 A4 ; Test bits $A4.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $BA29.w,Y		; 59 29 BA ; Exclusive OR accumulator with memory $BA29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	.db $42, $76		; 42 76 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $27E0.w,Y		; 59 E0 27 ; Exclusive OR accumulator with memory $27E0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $28BB.w,Y		; 59 BB 28 ; Exclusive OR accumulator with memory $28BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $7ED8.w,Y		; 59 D8 7E ; Exclusive OR accumulator with memory $7ED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0F.b		; A0 0F ; Load #$0F.b into Y register [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $AE8C.w,Y		; 59 8C AE ; Exclusive OR accumulator with memory $AE8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73C2.w,Y		; 59 C2 73 ; Exclusive OR accumulator with memory $73C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $5943.w,X		; 1D 43 59 ; OR accumulator with memory $5943.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C730.w,Y		; 59 30 C7 ; Exclusive OR accumulator with memory $C730.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $E1A1.w,X		; 1D A1 E1 ; OR accumulator with memory $E1A1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1E.b		; A6 1E ; Load $1E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sty $94E1.w		; 8C E1 94 ; Store Y register to $94E1.w [Reads: Y Index]
	ror $2173.w,X		; 7E 73 21 ; Rotate right $2173.w,X [Reads: X Index] [Flags: NCZ]
	asl $B559.w,X		; 1E 59 B5 ; Arithmetic shift left $B559.w,X [Reads: X Index] [Flags: NCZ]
	eor $B39F.w,Y		; 59 9F B3 ; Exclusive OR accumulator with memory $B39F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $3F		; 30 3F ; Branch if minus to $30, $3F [Flow: branch]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $3333.w,Y		; 19 33 33 ; OR accumulator with memory $3333.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($8A.b,S),Y		; 33 8A ; AND accumulator (stack relative indirect indexed) ($8A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $3333.w,Y		; 19 33 33 ; OR accumulator with memory $3333.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($7F.b,S),Y		; 33 7F ; AND accumulator (stack relative indirect indexed) ($7F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $BF.b,S		; 43 BF ; Exclusive OR accumulator with stack relative $BF.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $95.b		; 26 95 ; Rotate left $95.b [Reads: Direct Page] [Flags: NCZ]
	eor $26BF.w,Y		; 59 BF 26 ; Exclusive OR accumulator with memory $26BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $43.b,X		; 95 43 ; Store accumulator to $43.b,X [Reads: Accumulator, X Index]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $3F21.w		; 0E 21 3F ; Arithmetic shift left $3F21.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	adc $B5.b,X		; 75 B5 ; Add $B5.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27D2.w,Y		; 59 D2 27 ; Exclusive OR accumulator with memory $27D2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	ora $2D2E25.l,X		; 1F 25 2E 2D ; Logical OR long $2D2E25.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $3E43.w,X		; 1E 43 3E ; Arithmetic shift left $3E43.w,X [Reads: X Index] [Flags: NCZ]
	ror $03.b,X		; 76 03 ; Rotate right $03.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	jsl $E3591D.l		; 22 1D 59 E3 ; Jump to subroutine long $E3591D.l [Writes: Stack Pointer] [Flow: call]
	eor $1EBE.w,Y		; 59 BE 1E ; Exclusive OR accumulator with memory $1EBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2659.w		; 2D 59 26 ; Logical AND $2659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $16737E.l,X		; 3F 7E 73 16 ; AND accumulator with memory (long,X) $16737E.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $B5591E.l		; AF 1E 59 B5 ; Load long $B5591E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2C088A.l,X		; 3F 8A 08 2C ; AND accumulator with memory (long,X) $2C088A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2B8E.w,Y		; 59 8E 2B ; Exclusive OR accumulator with memory $2B8E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	and $594373.l,X		; 3F 73 43 59 ; AND accumulator with memory (long,X) $594373.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ror $0E73.w,X		; 7E 73 0E ; Rotate right $0E73.w,X [Reads: X Index] [Flags: NCZ]
	and ($42.b,X)		; 21 42 ; Logical AND ($42.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2D99.w,Y		; 59 99 2D ; Exclusive OR accumulator with memory $2D99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	adc ($E1.b,S),Y		; 73 E1 ; Add with carry (stack relative indirect indexed) ($E1.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($E3.b),Y		; 91 E3 ; Store accumulator ($E3.b),Y [Reads: Direct Page, Y Index, Accumulator]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($BB.b,S),Y		; 73 BB ; Add with carry (stack relative indirect indexed) ($BB.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $321E.w,Y		; 59 1E 32 ; Exclusive OR accumulator with memory $321E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $432C.w,X		; 1E 2C 43 ; Arithmetic shift left $432C.w,X [Reads: X Index] [Flags: NCZ]
	adc $2E2816.l,X		; 7F 16 28 2E ; Add long $2E2816.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $5929.w,X		; 1E 29 59 ; Arithmetic shift left $5929.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	and $270075.l,X		; 3F 75 00 27 ; AND accumulator with memory (long,X) $270075.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $E259.w,X		; 1D 59 E2 ; OR accumulator with memory $E259.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2C.b,Y		; B6 2C ; Load X register $2C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $E02C.w,Y		; 59 2C E0 ; Exclusive OR accumulator with memory $E02C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $762D.w,X		; 1E 2D 76 ; Arithmetic shift left $762D.w,X [Reads: X Index] [Flags: NCZ]
	ldx $1DBB.w,Y		; BE BB 1D ; Load X register $1DBB.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	jsl $591D2B.l		; 22 2B 1D 59 ; Jump to subroutine long $591D2B.l [Writes: Stack Pointer] [Flow: call]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $2F73.w,X		; 7E 73 2F ; Rotate right $2F73.w,X [Reads: X Index] [Flags: NCZ]
	jsl $20BA25.l		; 22 25 BA 20 ; Jump to subroutine long $20BA25.l [Writes: Stack Pointer] [Flow: call]
	asl $2C59.w,X		; 1E 59 2C ; Arithmetic shift left $2C59.w,X [Reads: X Index] [Flags: NCZ]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $CE1A.w		; 2E 1A CE ; Rotate left $CE1A.w [Flags: NCZ]
	and $590873.l,X		; 3F 73 08 59 ; AND accumulator with memory (long,X) $590873.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta [$20.b],Y		; 97 20 ; Store accumulator (long indexed) [$20.b],Y [Reads: Direct Page, Y Index, Accumulator]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1ACA.w,Y		; 59 CA 1A ; Exclusive OR accumulator with memory $1ACA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $3E		; D0 3E ; Branch if not equal to $D0, $3E [Flow: branch]
	adc ($0C.b,S),Y		; 73 0C ; Add with carry (stack relative indirect indexed) ($0C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $2830.w,Y		; 59 30 28 ; Exclusive OR accumulator with memory $2830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $96CC.w,Y		; 59 CC 96 ; Exclusive OR accumulator with memory $96CC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	lda $27DF.w,Y		; B9 DF 27 ; Load $27DF.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $B659.w		; 2D 59 B6 ; Logical AND $B659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ror $D973.w,X		; 7E 73 D9 ; Rotate right $D973.w,X [Reads: X Index] [Flags: NCZ]
	bit $DF59.w		; 2C 59 DF ; Test bits $DF59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $D359.w		; 2D 59 D3 ; Logical AND $D359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $422525.l		; 22 25 25 42 ; Jump to subroutine long $422525.l [Writes: Stack Pointer] [Flow: call]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 8
	sep #$D1		; E2 D1
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E28.w		; 1C 28 2E ; Test and reset bits $2E28.w [Reads: Accumulator] [Flags: Z]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($D0.b,S),Y		; 73 D0 ; Add with carry (stack relative indirect indexed) ($D0.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $B059.w,X		; 1E 59 B0 ; Arithmetic shift left $B059.w,X [Reads: X Index] [Flags: NCZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$1C.b]		; C7 1C ; Compare accumulator (long) [$1C.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	asl $2659.w,X		; 1E 59 26 ; Arithmetic shift left $2659.w,X [Reads: X Index] [Flags: NCZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	asl $7F43.w,X		; 1E 43 7F ; Arithmetic shift left $7F43.w,X [Reads: X Index] [Flags: NCZ]
	ora $3333.w,Y		; 19 33 33 ; OR accumulator with memory $3333.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $3333.w,Y		; 19 33 33 ; OR accumulator with memory $3333.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($75.b,S),Y		; 33 75 ; AND accumulator (stack relative indirect indexed) ($75.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora ($27.b)		; 12 27 ; OR accumulator with memory (indirect) ($27.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	asl $198A.w,X		; 1E 8A 19 ; Arithmetic shift left $198A.w,X [Reads: X Index] [Flags: NCZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($8A.b,S),Y		; 33 8A ; AND accumulator (stack relative indirect indexed) ($8A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $3333.w,Y		; 19 33 33 ; OR accumulator with memory $3333.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($33.b,S),Y		; 33 33 ; AND accumulator (stack relative indirect indexed) ($33.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($7F.b,S),Y		; 33 7F ; AND accumulator (stack relative indirect indexed) ($7F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $4221.w		; 0E 21 42 ; Arithmetic shift left $4221.w [Flags: NCZ]
	eor $416A.w,Y		; 59 6A 41 ; Exclusive OR accumulator with memory $416A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $C826.w		; 2E 26 C8 ; Rotate left $C826.w [Flags: NCZ]
	bit $2C59.w		; 2C 59 2C ; Test bits $2C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($75.b)		; 32 75 ; AND accumulator with memory (indirect) ($75.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ora $1A27.w,X		; 1D 27 1A ; OR accumulator with memory $1A27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $D8.b		; A4 D8 ; Load $D8.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $2B0F.w,Y		; 59 0F 2B ; Exclusive OR accumulator with memory $2B0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $76		; 42 76 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $22D3.w,Y		; 59 D3 22 ; Exclusive OR accumulator with memory $22D3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $1C5908.l,X		; 7F 08 59 1C ; Add long $1C5908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sta ($51.b,S),Y		; 93 51 ; Store accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and $9759.w		; 2D 59 97 ; Logical AND $9759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda [$1E.b]		; A7 1E ; Load accumulator (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E1A.w		; 1C 1A 2E ; Test and reset bits $2E1A.w [Reads: Accumulator] [Flags: Z]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	eor $3EBE.w,Y		; 59 BE 3E ; Exclusive OR accumulator with memory $3EBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ldx $21.b,Y		; B6 21 ; Load X register $21.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $292C.w,Y		; 59 2C 29 ; Exclusive OR accumulator with memory $292C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $B6A4.w,X		; 1E A4 B6 ; Arithmetic shift left $B6A4.w,X [Reads: X Index] [Flags: NCZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $76AD.w,Y		; 59 AD 76 ; Exclusive OR accumulator with memory $76AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$A0.b],Y		; 97 A0 ; Store accumulator (long indexed) [$A0.b],Y [Reads: Direct Page, Y Index, Accumulator]
	asl $2C1A.w,X		; 1E 1A 2C ; Arithmetic shift left $2C1A.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A27.w,X		; 1D 27 1A ; OR accumulator with memory $1A27.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $251E.w,Y		; 19 1E 25 ; OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $431A.w,X		; 1D 1A 43 ; OR accumulator with memory $431A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $E873.w,X		; 7E 73 E8 ; Rotate right $E873.w,X [Reads: X Index] [Flags: NCZ]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1D96.w,Y		; 59 96 1D ; Exclusive OR accumulator with memory $1D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($20.b,S),Y		; 73 20 ; Add with carry (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $4232.w		; 2E 32 42 ; Rotate left $4232.w [Flags: NCZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	brk $27.b		; 00 27 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($DF.b)		; 32 DF ; AND accumulator with memory (indirect) ($DF.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1C97.w,Y		; 59 97 1C ; Exclusive OR accumulator with memory $1C97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $737E.w		; AD 7E 73 ; Load $737E.w into accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1C2E.w		; 2C 2E 1C ; Test bits $1C2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $9C22.w		; 2E 22 9C ; Rotate left $9C22.w [Flags: NCZ]
	eor $1E1F.w,Y		; 59 1F 1E ; Exclusive OR accumulator with memory $1E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $422D.w,X		; 1E 2D 42 ; Arithmetic shift left $422D.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $B2.b		; 26 B2 ; Rotate left $B2.b [Reads: Direct Page] [Flags: NCZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc ($AC.b,S),Y		; 73 AC ; Add with carry (stack relative indirect indexed) ($AC.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2259.w,X		; 1D 59 22 ; OR accumulator with memory $2259.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E.w,X		; 1D 1E 1A ; OR accumulator with memory $1A1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $5927.w		; 2E 27 59 ; Rotate left $5927.w [Flags: NCZ]
	sty $D196.w		; 8C 96 D1 ; Store Y register to $D196.w [Reads: Y Index]
	eor $DAB4.w,Y		; 59 B4 DA ; Exclusive OR accumulator with memory $DAB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($BC.b,S),Y		; 73 BC ; Add with carry (stack relative indirect indexed) ($BC.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $7E43.w		; 2C 43 7E ; Test bits $7E43.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($05.b,S),Y		; 73 05 ; Add with carry (stack relative indirect indexed) ($05.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $311E.w,Y		; 59 1E 31 ; Exclusive OR accumulator with memory $311E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $CA.b		; 26 CA ; Rotate left $CA.b [Reads: Direct Page] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1EDB.w,Y		; 59 DB 1E ; Exclusive OR accumulator with memory $1EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cmp $732C.w,Y		; D9 2C 73 ; Compare accumulator $732C.w,Y [Reads: Y Index] [Flags: NCZ]
	and $BA2522.l		; 2F 22 25 BA ; AND accumulator with memory (long) $BA2522.l [Writes: Accumulator] [Flags: NZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	lda $BC59.w		; AD 59 BC ; Load $BC59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $1FD0.w		; 2E D0 1F ; Rotate left $1FD0.w [Flags: NCZ]
	rol $5925.w		; 2E 25 59 ; Rotate left $5925.w [Flags: NCZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $B173.w		; 2C 73 B1 ; Test bits $B173.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($B4.b,S),Y		; B3 B4 ; Load accumulator (stack relative indirect indexed) ($B4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $22D8.w,Y		; 59 D8 22 ; Exclusive OR accumulator with memory $22D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $2B1B.w,Y		; 59 1B 2B ; Exclusive OR accumulator with memory $2B1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($9A.b,S),Y		; 93 9A ; Store accumulator (stack relative indirect indexed) ($9A.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $7E43.w		; 2C 43 7E ; Test bits $7E43.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	lda [$59.b],Y		; B7 59 ; Load accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $42.b,Y		; B6 42 ; Load X register $42.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $0A0E.w,Y		; 59 0E 0A ; Exclusive OR accumulator with memory $0A0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $087F3E.l,X		; 3F 3E 7F 08 ; AND accumulator with memory (long,X) $087F3E.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $A559.w		; AD 59 A5 ; Load $A559.w into accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $DA59.w,Y		; BE 59 DA ; Load X register $DA59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	adc $CE.b,X		; 75 CE ; Add $CE.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $D959.w,X		; 1D 59 D9 ; OR accumulator with memory $D959.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $2C59.w		; 2C 59 2C ; Test bits $2C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsl $422720.l		; 22 20 27 42 ; Jump to subroutine long $422720.l [Writes: Stack Pointer] [Flow: call]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $76AC.w,Y		; 59 AC 76 ; Exclusive OR accumulator with memory $76AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $251A.w		; AC 1A 25 ; Load $251A.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $2622.w,Y		; 59 22 26 ; Exclusive OR accumulator with memory $2622.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $949E.w,Y		; BE 9E 94 ; Load X register $949E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	asl $3225.w,X		; 1E 25 32 ; Arithmetic shift left $3225.w,X [Reads: X Index] [Flags: NCZ]
	rol $087F.w,X		; 3E 7F 08 ; Rotate left $087F.w,X [Reads: X Index] [Flags: NCZ]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2229.w,Y		; 59 29 22 ; Exclusive OR accumulator with memory $2229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E1C.w,X		; 1E 1C 1E ; Arithmetic shift left $1E1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $D8.b,X		; 75 D8 ; Add $D8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $D2C9.w,Y		; 59 C9 D2 ; Exclusive OR accumulator with memory $D2C9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1AE0.w,Y		; 59 E0 1A ; Exclusive OR accumulator with memory $1AE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $1A02.w,Y		; 59 02 1A ; Exclusive OR accumulator with memory $1A02.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cop $2E.b		; 02 2E ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	.db $D0, $2C		; D0 2C ; Branch if not equal to $D0, $2C [Flow: branch]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	adc $CF.b,X		; 75 CF ; Add $CF.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $DAB4.w,Y		; 59 B4 DA ; Exclusive OR accumulator with memory $DAB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $221C.w,Y		; 59 1C 22 ; Exclusive OR accumulator with memory $221C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	trb $1E25.w		; 1C 25 1E ; Test and reset bits $1E25.w [Reads: Accumulator] [Flags: Z]
	eor $76C6.w,Y		; 59 C6 76 ; Exclusive OR accumulator with memory $76C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($C7.b,S),Y		; D3 C7 ; Compare accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	asl $412C.w,X		; 1E 2C 41 ; Arithmetic shift left $412C.w,X [Reads: X Index] [Flags: NCZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp $4D5932.l,X		; DF 32 59 4D ; Compare accumulator (long,X) $4D5932.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $2412.w,Y		; 59 12 24 ; Exclusive OR accumulator with memory $2412.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E25.w,X		; 1E 25 1E ; Arithmetic shift left $1E25.w,X [Reads: X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $C8.b		; 05 C8 ; Logical OR $C8.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $76D3.w,X		; 1E D3 76 ; Arithmetic shift left $76D3.w,X [Reads: X Index] [Flags: NCZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $594E.w,Y		; 59 4E 59 ; Exclusive OR accumulator with memory $594E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $22.b,X		; 15 22 ; OR accumulator with memory $22.b,X [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	asl $591F.w		; 0E 1F 59 ; Arithmetic shift left $591F.w [Flags: NCZ]
	asl $2D2E.w		; 0E 2E 2D ; Arithmetic shift left $2D2E.w [Flags: NCZ]
	trb $2C92.w		; 1C 92 2C ; Test and reset bits $2C92.w [Reads: Accumulator] [Flags: Z]
	adc $2CE775.l,X		; 7F 75 E7 2C ; Add long $2CE775.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5950.w,Y		; 59 50 59 ; Exclusive OR accumulator with memory $5950.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cop $1A.b		; 02 1A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $757F1E.l		; 2F 1E 7F 75 ; AND accumulator with memory (long) $757F1E.l [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5950.w,Y		; 59 50 59 ; Exclusive OR accumulator with memory $5950.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1CBA1A.l		; 0F 1A BA 1C ; OR accumulator with memory (long) $1CBA1A.l [Writes: Accumulator] [Flags: NZ]
	asl $0E59.w,X		; 1E 59 0E ; Arithmetic shift left $0E59.w,X [Reads: X Index] [Flags: NCZ]
	ora $1A0359.l,X		; 1F 59 03 1A ; Logical OR long $1A0359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $27.b		; 24 27 ; Test bits $27.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	adc $2CE775.l,X		; 7F 75 E7 2C ; Add long $2CE775.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $594F.w,Y		; 59 4F 59 ; Exclusive OR accumulator with memory $594F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	eor $2112.w,Y		; 59 12 21 ; Exclusive OR accumulator with memory $2112.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$7F.b		; 29 7F ; Logical AND #$7F.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $DF128A.l		; 4F 8A 12 DF ; Exclusive OR accumulator with memory (long) $DF128A.l [Writes: Accumulator] [Flags: NZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2F04.w,Y		; 59 04 2F ; Exclusive OR accumulator with memory $2F04.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $887525.l		; 22 25 75 88 ; Jump to subroutine long $887525.l [Writes: Stack Pointer] [Flow: call]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $280D.w,Y		; 59 0D 28 ; Exclusive OR accumulator with memory $280D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2704.w,Y		; 59 04 27 ; Exclusive OR accumulator with memory $2704.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	sta ($1C.b,S),Y		; 93 1C ; Store accumulator (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $8876.w,X		; 1E 76 88 ; Arithmetic shift left $8876.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $280D.w,Y		; 59 0D 28 ; Exclusive OR accumulator with memory $280D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2C04.w,Y		; 59 04 2C ; Exclusive OR accumulator with memory $2C04.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $291A.w		; 1C 1A 29 ; Test and reset bits $291A.w [Reads: Accumulator] [Flags: Z]
	asl $E77F.w,X		; 1E 7F E7 ; Arithmetic shift left $E77F.w,X [Reads: X Index] [Flags: NCZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $22.b,X		; 15 22 ; OR accumulator with memory $22.b,X [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	asl $591F.w		; 0E 1F 59 ; Arithmetic shift left $591F.w [Flags: NCZ]
	asl $2D2E.w		; 0E 2E 2D ; Arithmetic shift left $2D2E.w [Flags: NCZ]
	trb $2C92.w		; 1C 92 2C ; Test and reset bits $2C92.w [Reads: Accumulator] [Flags: Z]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $CA281E.l		; 0F 1E 28 CA ; OR accumulator with memory (long) $CA281E.l [Writes: Accumulator] [Flags: NZ]
	eor $C5DE.w,Y		; 59 DE C5 ; Exclusive OR accumulator with memory $C5DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $C28D.w,Y		; 59 8D C2 ; Exclusive OR accumulator with memory $C28D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $E0.b,X		; 76 E0 ; Rotate right $E0.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $9B.b		; 25 9B ; Logical AND $9B.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $AF59.w,X		; 1E 59 AF ; Arithmetic shift left $AF59.w,X [Reads: X Index] [Flags: NCZ]
	asl $7F41.w,X		; 1E 41 7F ; Arithmetic shift left $7F41.w,X [Reads: X Index] [Flags: NCZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	asl $94.b,X		; 16 94 ; Arithmetic shift left $94.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ldx $1F.b		; A6 1F ; Load $1F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	stx $1F0E.w		; 8E 0E 1F ; Store X register to $1F0E.w [Reads: X Index]
	eor $B516.w,Y		; 59 16 B5 ; Exclusive OR accumulator with memory $B516.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	jsr $B559.w		; 20 59 B5 ; Jump to subroutine at $B559.w [Writes: Stack Pointer] [Flow: call]
	eor $75B7.w,Y		; 59 B7 75 ; Exclusive OR accumulator with memory $75B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $C81C.w,Y		; 59 1C C8 ; Exclusive OR accumulator with memory $C81C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$A6.b]		; 27 A6 ; AND accumulator with memory (long) [$A6.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $4D50.w,Y		; 59 50 4D ; Exclusive OR accumulator with memory $4D50.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $0B.b,X		; 75 0B ; Add $0B.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2508.w,Y		; 59 08 25 ; Exclusive OR accumulator with memory $2508.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $27BE.w		; 0E BE 27 ; Arithmetic shift left $27BE.w [Flags: NCZ]
	adc $D41F00.l,X		; 7F 00 1F D4 ; Add long $D41F00.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	brk $20.b		; 00 20 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($27.b,X)		; 21 27 ; Logical AND ($27.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsl $DA5926.l		; 22 26 59 DA ; Jump to subroutine long $DA5926.l [Writes: Stack Pointer] [Flow: call]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp $7542.w,X		; DD 42 75 ; Compare accumulator $7542.w,X [Reads: X Index] [Flags: NCZ]
	lda [$A6.b]		; A7 A6 ; Load accumulator (long) [$A6.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($C7.b)		; 32 C7 ; AND accumulator with memory (indirect) ($C7.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $9759.w,X		; 1E 59 97 ; Arithmetic shift left $9759.w,X [Reads: X Index] [Flags: NCZ]
	jsr $5993.w		; 20 93 59 ; Jump to subroutine at $5993.w [Writes: Stack Pointer] [Flow: call]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1C1A.w,Y		; 59 1A 1C ; Exclusive OR accumulator with memory $1C1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D376.w		; 2D 76 D3 ; Logical AND $D376.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $3225.w,X		; 1E 25 32 ; Arithmetic shift left $3225.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $DC2C.w,Y		; 59 2C DC ; Exclusive OR accumulator with memory $DC2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$28.b		; 29 28 ; Logical AND #$28.b with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $8B.b,Y		; B6 8B ; Load X register $8B.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	cmp [$25.b]		; C7 25 ; Compare accumulator (long) [$25.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2DBD.w,Y		; 59 BD 2D ; Exclusive OR accumulator with memory $2DBD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pei ($C6.b)		; D4 C6 ; Push effective indirect address ($C6.b) [Reads: Direct Page] [Writes: Stack Pointer]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $9759.w,Y		; BE 59 97 ; Load X register $9759.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $0873.w,X		; 1E 73 08 ; Arithmetic shift left $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1F1A.w,Y		; 59 1A 1F ; Exclusive OR accumulator with memory $1F1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D1C1E.l,X		; 1F 1E 1C 2D ; Logical OR long $2D1C1E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $421D.w,X		; 1E 1D 42 ; Arithmetic shift left $421D.w,X [Reads: X Index] [Flags: NCZ]
	eor $28DA.w,Y		; 59 DA 28 ; Exclusive OR accumulator with memory $28DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor ($CD.b),Y		; 51 CD ; Exclusive OR accumulator with memory ($CD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 16
	rep #$59		; C2 59
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $BB.b		; 25 BB ; Logical AND $BB.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx #$591D.w		; E0 1D 59 ; Compare #$591D.w with X register [Reads: X Index] [Flags: NCZ]
	ldy $75.b,X		; B4 75 ; Load Y register $75.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	rol $0676.w,X		; 3E 76 06 ; Rotate left $0676.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $8C59.w,Y		; BE 59 8C ; Load X register $8C59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $59CF.w,Y		; 59 CF 59 ; Exclusive OR accumulator with memory $59CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E25.w		; 2C 25 1E ; Test bits $1E25.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $3E29.w,X		; 1E 29 3E ; Arithmetic shift left $3E29.w,X [Reads: X Index] [Flags: NCZ]
	adc $6A026B.l,X		; 7F 6B 02 6A ; Add long $6A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $99.b,X		; 75 99 ; Add $99.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $251A.w		; 2D 1A 25 ; Logical AND $251A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $9429.w,X		; 1E 29 94 ; Arithmetic shift left $9429.w,X [Reads: X Index] [Flags: NCZ]
	.db $B0, $1C		; B0 1C ; Branch if carry set to $B0, $1C [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($76.b)		; 32 76 ; AND accumulator with memory (indirect) ($76.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($A0.b,X)		; E1 A0 ; Subtract with carry ($A0.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	rol M7B.w		; 2E 1C 21 ; Rotate left M7B.w [Flags: NCZ]
	eor $D0D8.w,Y		; 59 D8 D0 ; Exclusive OR accumulator with memory $D0D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $7E41.w		; 2C 41 7E ; Test bits $7E41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($E4.b,S),Y		; 73 E4 ; Add with carry (stack relative indirect indexed) ($E4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $B559.w,X		; 1E 59 B5 ; Arithmetic shift left $B559.w,X [Reads: X Index] [Flags: NCZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	and $8A41.w		; 2D 41 8A ; Logical AND $8A41.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $2E99.w,Y		; 59 99 2E ; Exclusive OR accumulator with memory $2E99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($DB.b,S),Y		; 73 DB ; Add with carry (stack relative indirect indexed) ($DB.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $2C1A.w,X		; 1E 1A 2C ; Arithmetic shift left $2C1A.w,X [Reads: X Index] [Flags: NCZ]
	rol $B0CD.w		; 2E CD B0 ; Rotate left $B0CD.w [Flags: NCZ]
	ora $A01D.w,X		; 1D 1D A0 ; OR accumulator with memory $A01D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $731E.w		; 1C 1E 73 ; Test and reset bits $731E.w [Reads: Accumulator] [Flags: Z]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A911E.l,X		; 1F 1E 91 1A ; Logical OR long $1A911E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	ldy $1F.b		; A4 1F ; Load $1F.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	asl $412C.w,X		; 1E 2C 41 ; Arithmetic shift left $412C.w,X [Reads: X Index] [Flags: NCZ]
	adc $6A026B.l,X		; 7F 6B 02 6A ; Add long $6A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $27.b		; 00 27 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $1BC8.w,Y		; 59 C8 1B ; Exclusive OR accumulator with memory $1BC8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27B8.w,Y		; 59 B8 27 ; Exclusive OR accumulator with memory $27B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2C1A.w,Y		; 59 1A 2C ; Exclusive OR accumulator with memory $2C1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $76D8.w,Y		; 59 D8 76 ; Exclusive OR accumulator with memory $76D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $C728.w		; 0C 28 C7 ; Test and set bits $C728.w [Reads: Accumulator] [Flags: Z]
	eor $A20F.w,Y		; 59 0F A2 ; Exclusive OR accumulator with memory $A20F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	cpx #$412B.w		; E0 2B 41 ; Compare #$412B.w with X register [Reads: X Index] [Flags: NCZ]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $5925A2.l		; 0F A2 25 59 ; OR accumulator with memory (long) $5925A2.l [Writes: Accumulator] [Flags: NZ]
	lda $73.b,X		; B5 73 ; Load $73.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cpy $1E2D.w		; CC 2D 1E ; Compare $1E2D.w with Y register [Reads: Y Index] [Flags: NCZ]
	trb $A42D.w		; 1C 2D A4 ; Test and reset bits $A42D.w [Reads: Accumulator] [Flags: Z]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $26A8.w,Y		; 59 A8 26 ; Exclusive OR accumulator with memory $26A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
.INDEX 16
	rep #$59		; C2 59
	trb $27B1.w		; 1C B1 27 ; Test and reset bits $27B1.w [Reads: Accumulator] [Flags: Z]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A03.w,Y		; 59 03 1A ; Exclusive OR accumulator with memory $1A03.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B659.w,X		; 1D 59 B6 ; OR accumulator with memory $B659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E8C.w,Y		; 59 8C 1E ; Exclusive OR accumulator with memory $1E8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A1C.w		; 2C 1C 1A ; Test bits $1A1C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($A9.b,S),Y		; 73 A9 ; Add with carry (stack relative indirect indexed) ($A9.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $E0DA.w,Y		; 59 DA E0 ; Exclusive OR accumulator with memory $E0DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $0373.w,X		; 3E 73 03 ; Rotate left $0373.w,X [Reads: X Index] [Flags: NCZ]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $A859.w		; 2D 59 A8 ; Logical AND $A859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $C728.w		; 0C 28 C7 ; Test and set bits $C728.w [Reads: Accumulator] [Flags: Z]
	eor $A20F.w,Y		; 59 0F A2 ; Exclusive OR accumulator with memory $A20F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $43.b		; 25 43 ; Logical AND $43.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $474847.l,X		; 7F 47 48 47 ; Add long $474847.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $47.b,X		; 75 47 ; Add $47.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $47.b,X		; 76 47 ; Rotate right $47.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$47.b]		; 47 47 ; Exclusive OR accumulator with memory (long) [$47.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor [$47.b]		; 47 47 ; Exclusive OR accumulator with memory (long) [$47.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor #$7F.b		; 49 7F ; Exclusive OR #$7F.b with accumulator [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	jsl $29262E.l		; 22 2E 26 29 ; Jump to subroutine long $29262E.l [Writes: Stack Pointer] [Flow: call]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cmp [$75.b]		; C7 75 ; Compare accumulator (long) [$75.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cop $94.b		; 02 94 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $3225.w		; 1C 25 32 ; Test and reset bits $3225.w [Reads: Accumulator] [Flags: Z]
	bit $8B26.w		; 2C 26 8B ; Test bits $8B26.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	tsb $2F.b		; 04 2F ; Test and set bits $2F.b [Reads: Accumulator] [Flags: Z]
	asl $1676.w,X		; 1E 76 16 ; Arithmetic shift left $1676.w,X [Reads: X Index] [Flags: NCZ]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $591E.w		; CE 1E 59 ; Decrement $591E.w [Flags: NZ]
	bit $2632.w		; 2C 32 26 ; Test bits $2632.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2D2B22.l		; 2F 22 2B 2D ; AND accumulator with memory (long) $2D2B22.l [Writes: Accumulator] [Flags: NZ]
	rol $411E.w		; 2E 1E 41 ; Rotate left $411E.w [Flags: NCZ]
	ror $E673.w,X		; 7E 73 E6 ; Rotate right $E673.w,X [Reads: X Index] [Flags: NCZ]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $2159.w,X		; 1D 59 21 ; OR accumulator with memory $2159.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $E259.w,X		; 1E 59 E2 ; Arithmetic shift left $E259.w,X [Reads: X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $27D8.w,Y		; 59 D8 27 ; Exclusive OR accumulator with memory $27D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($CE.b,S),Y		; 73 CE ; Add with carry (stack relative indirect indexed) ($CE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	jsl $421EA7.l		; 22 A7 1E 42 ; Jump to subroutine long $421EA7.l [Writes: Stack Pointer] [Flow: call]
	adc ($0A.b,S),Y		; 73 0A ; Add with carry (stack relative indirect indexed) ($0A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $291E.w,X		; 1E 1E 29 ; Arithmetic shift left $291E.w,X [Reads: X Index] [Flags: NCZ]
	lda ($D8.b,S),Y		; B3 D8 ; Load accumulator (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $270A.w,Y		; 59 0A 27 ; Exclusive OR accumulator with memory $270A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	and $B4.b		; 25 B4 ; Logical AND $B4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $DB59.w,X		; 1E 59 DB ; Arithmetic shift left $DB59.w,X [Reads: X Index] [Flags: NCZ]
	rol $411E.w		; 2E 1E 41 ; Rotate left $411E.w [Flags: NCZ]
	adc $6A026B.l,X		; 7F 6B 02 6A ; Add long $6A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $21CF.w,Y		; 59 CF 21 ; Exclusive OR accumulator with memory $21CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	lda $1E24.w,X		; BD 24 1E ; Load $1E24.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $DF.b,X		; 76 DF ; Rotate right $DF.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora ($29.b)		; 12 29 ; OR accumulator with memory (indirect) ($29.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1E25.w		; 1C 25 1E ; Test and reset bits $1E25.w [Reads: Accumulator] [Flags: Z]
	ror $1173.w,X		; 7E 73 11 ; Rotate right $1173.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	stz $8A41.w		; 9C 41 8A ; Store zero to $8A41.w
	ora $2B.b		; 05 2B ; Logical OR $2B.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	cmp $59E3.w		; CD E3 59 ; Compare $59E3.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	trb $7393.w		; 1C 93 73 ; Test and reset bits $7393.w [Reads: Accumulator] [Flags: Z]
	dec $1C1A.w		; CE 1A 1C ; Decrement $1C1A.w [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2813.w,Y		; 59 13 28 ; Exclusive OR accumulator with memory $2813.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$592B.w		; E0 2B 59 ; Compare #$592B.w with X register [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cpx $1A.b		; E4 1A ; Compare $1A.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $73C7.w,Y		; 59 C7 73 ; Exclusive OR accumulator with memory $73C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora $1E.b,S		; 03 1E ; OR accumulator with stack relative $1E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sty $21.b,X		; 94 21 ; Store Y register $21.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $6B7F41.l		; 8F 41 7F 6B ; Store accumulator (long) $6B7F41.l [Reads: Accumulator]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $231B.w		; 0E 1B 23 ; Arithmetic shift left $231B.w [Flags: NCZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	bit $1E59.w		; 2C 59 1E ; Test bits $1E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($B5.b),Y		; 31 B5 ; AND accumulator with memory ($B5.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2C59.w		; 2D 59 2C ; Logical AND $2C59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $2D25BF.l		; 22 BF 25 2D ; Jump to subroutine long $2D25BF.l [Writes: Stack Pointer] [Flow: call]
	sta ($1E.b,S),Y		; 93 1E ; Store accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $B92C.w		; 2E 2C B9 ; Rotate left $B92C.w [Flags: NCZ]
	ldy $76.b,X		; B4 76 ; Load Y register $76.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $5921.w		; 2D 21 59 ; Logical AND $5921.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $DE59.w		; 2C 59 DE ; Test bits $DE59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $222C.w,Y		; 59 2C 22 ; Exclusive OR accumulator with memory $222C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $7E41.w		; 2C 41 7E ; Test bits $7E41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $59D859.l,X		; 1F 59 D8 59 ; Logical OR long $59D859.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $20D5.w,Y		; 59 D5 20 ; Exclusive OR accumulator with memory $20D5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B11C.w,Y		; 59 1C B1 ; Exclusive OR accumulator with memory $B11C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $422C.w,X		; 1E 2C 42 ; Arithmetic shift left $422C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($B6.b,S),Y		; 73 B6 ; Add with carry (stack relative indirect indexed) ($B6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $1C1E1F.l,X		; 1F 1F 1E 1C ; Logical OR long $1C1E1F.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $2C.b,Y		; B6 2C ; Load X register $2C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc ($2D.b,S),Y		; 73 2D ; Add with carry (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
.ACCU 8
	sep #$27		; E2 27
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D828.w,Y		; 59 28 D8 ; Exclusive OR accumulator with memory $D828.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $BE8B.w		; 2D 8B BE ; Logical AND $BE8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora $251E.w,Y		; 19 1E 25 ; OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $431A.w,X		; 1D 1A 43 ; OR accumulator with memory $431A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $9759.w		; 2D 59 97 ; Logical AND $9759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $221E.w		; 1C 1E 22 ; Test and reset bits $221E.w [Reads: Accumulator] [Flags: Z]
	and $321BA4.l		; 2F A4 1B 32 ; AND accumulator with memory (long) $321BA4.l [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $C676.w		; 1C 76 C6 ; Test and reset bits $C676.w [Reads: Accumulator] [Flags: Z]
	eor $2501.w,Y		; 59 01 25 ; Exclusive OR accumulator with memory $2501.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$1E.b]		; E7 1E ; Subtract with carry (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	ora $018A3E.l,X		; 1F 3E 8A 01 ; Logical OR long $018A3E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1C59.w,X		; 1E 59 1C ; Arithmetic shift left $1C59.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $2E1F.w		; CE 1F 2E ; Decrement $2E1F.w [Flags: NZ]
	and $3E.b		; 25 3E ; Logical AND $3E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $6A026B.l,X		; 7F 6B 02 6A ; Add long $6A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $8A		; 42 8A ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $D8.b,X		; 75 D8 ; Add $D8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $251E.w,Y		; 59 1E 25 ; Exclusive OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $3EA6.w,X		; 1D A6 3E ; OR accumulator with memory $3EA6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DD0.w,Y		; 59 D0 2D ; Exclusive OR accumulator with memory $2DD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $DA76.w		; CE 76 DA ; Decrement $DA76.w [Flags: NZ]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	bit $DA59.w		; 2C 59 DA ; Test bits $DA59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $7EC3.w,Y		; 59 C3 7E ; Exclusive OR accumulator with memory $7EC3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $DFA8.w,Y		; 59 A8 DF ; Exclusive OR accumulator with memory $DFA8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $7F41.w,X		; 1D 41 7F ; OR accumulator with memory $7F41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$75.b]		; 47 75 ; Exclusive OR accumulator with memory (long) [$75.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $47.b,X		; 76 47 ; Rotate right $47.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$7F.b]		; 47 7F ; Exclusive OR accumulator with memory (long) [$7F.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59C3.w,Y		; 59 C3 59 ; Exclusive OR accumulator with memory $59C3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $A859.w		; AC 59 A8 ; Load $A859.w into Y register [Writes: Y Index] [Flags: NZ]
	cmp $421D2B.l,X		; DF 2B 1D 42 ; Compare accumulator (long,X) $421D2B.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	adc $0C.b,X		; 75 0C ; Add $0C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D1E2.w,Y		; 59 E2 D1 ; Exclusive OR accumulator with memory $D1E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $00.b,X		; 76 00 ; Rotate right $00.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	jsr $932B.w		; 20 2B 93 ; Jump to subroutine at $932B.w [Writes: Stack Pointer] [Flow: call]
	and $1D1E.w		; 2D 1E 1D ; Logical AND $1D1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $16.b		; 02 16 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and ($A0.b,X)		; 21 A0 ; Logical AND ($A0.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2E.b,S),Y		; D3 2E ; Compare accumulator (stack relative indirect indexed) ($2E.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	and [$27.b]		; 27 27 ; AND accumulator with memory (long) [$27.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $421D.w,X		; 1E 1D 42 ; Arithmetic shift left $421D.w,X [Reads: X Index] [Flags: NCZ]
	eor $2220.w,Y		; 59 20 22 ; Exclusive OR accumulator with memory $2220.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $B0751E.l		; 2F 1E 75 B0 ; AND accumulator with memory (long) $B0751E.l [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	.db $B0, $2C		; B0 2C ; Branch if carry set to $B0, $2C [Flow: branch]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2826.w,Y		; 59 26 28 ; Exclusive OR accumulator with memory $2826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $2D27.w,Y		; BE 27 2D ; Load X register $2D27.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $59DE.w,Y		; 59 DE 59 ; Exclusive OR accumulator with memory $59DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ror $12.b,X		; 76 12 ; Rotate right $12.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	jsl $59DD25.l		; 22 25 DD 59 ; Jump to subroutine long $59DD25.l [Writes: Stack Pointer] [Flow: call]
	brk $2B.b		; 00 2B ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	ror $0373.w,X		; 7E 73 03 ; Rotate right $0373.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D27.w		; 2E 27 1D ; Rotate left $1D27.w [Flags: NCZ]
	ldx $D3.b		; A6 D3 ; Load $D3.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	.db $90, $42		; 90 42 ; Branch if carry clear to $90, $42 [Flow: branch]
	eor $3F6A.w,Y		; 59 6A 3F ; Exclusive OR accumulator with memory $3F6A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $6A026B.l,X		; 7F 6B 02 6A ; Add long $6A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta $59E3.w,Y		; 99 E3 59 ; Store accumulator to $59E3.w,Y [Reads: Y Index, Accumulator]
	and ($A2.b,X)		; 21 A2 ; Logical AND ($A2.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $3FBE.w,Y		; 59 BE 3F ; Exclusive OR accumulator with memory $3FBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $BE8B.w		; 2D 8B BE ; Logical AND $BE8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora $251E.w,Y		; 19 1E 25 ; OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $411A.w,X		; 1D 1A 41 ; OR accumulator with memory $411A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $9CBB.w,Y		; 59 BB 9C ; Exclusive OR accumulator with memory $9CBB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $B4.b		; A4 B4 ; Load $B4.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	ror $13.b,X		; 76 13 ; Rotate right $13.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $2D2B.w		; 2E 2B 2D ; Rotate left $2D2B.w [Flags: NCZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2811.w,Y		; 59 11 28 ; Exclusive OR accumulator with memory $2811.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $C759.w		; 9C 59 C7 ; Store zero to $C759.w
	eor $29DA.w,Y		; 59 DA 29 ; Exclusive OR accumulator with memory $29DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1E.b,S		; 03 1E ; OR accumulator with stack relative $1E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sty $21.b,X		; 94 21 ; Store Y register $21.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	ror $0C73.w,X		; 7E 73 0C ; Rotate right $0C73.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $088A41.l		; 8F 41 8A 08 ; Store accumulator (long) $088A41.l [Reads: Accumulator]
	eor $59B8.w,Y		; 59 B8 59 ; Exclusive OR accumulator with memory $59B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $B49F.w		; 8D 9F B4 ; Store accumulator to $B49F.w [Reads: Accumulator]
	jsr $E373.w		; 20 73 E3 ; Jump to subroutine at $E373.w [Writes: Stack Pointer] [Flow: call]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $D397.w,Y		; 59 97 D3 ; Exclusive OR accumulator with memory $D397.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and ($2E.b,X)		; 21 2E ; Logical AND ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $6A026B.l,X		; 7F 6B 02 6A ; Add long $6A026B.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A727.w,Y		; 59 27 A7 ; Exclusive OR accumulator with memory $A727.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($1F.b,X)		; A1 1F ; Load accumulator ($1F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $DA5925.l		; 22 25 59 DA ; Jump to subroutine long $DA5925.l [Writes: Stack Pointer] [Flow: call]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A59.w,X		; 1D 59 1A ; OR accumulator with memory $1A59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $1EDB.w,Y		; 59 DB 1E ; Exclusive OR accumulator with memory $1EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $CE2E.w		; 2C 2E CE ; Test bits $CE2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $B459.w		; 2C 59 B4 ; Test bits $B459.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $1A1E.w,Y		; 59 1E 1A ; Exclusive OR accumulator with memory $1A1E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $0B.b		; 02 0B ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	lda $2D.b,X		; B5 2D ; Load $2D.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$25E0.w		; A0 E0 25 ; Load #$25E0.w into Y register [Writes: Y Index] [Flags: NZ]
	and $42.b		; 25 42 ; Logical AND $42.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $416A.w,Y		; 59 6A 41 ; Exclusive OR accumulator with memory $416A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $04.b,X		; 75 04 ; Add $04.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $59DEA0.l		; 2F A0 DE 59 ; AND accumulator with memory (long) $59DEA0.l [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $7642.w,X		; 1D 42 76 ; OR accumulator with memory $7642.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $C293.w		; 1C 93 C2 ; Test and reset bits $C293.w [Reads: Accumulator] [Flags: Z]
	eor $1FB4.w,Y		; 59 B4 1F ; Exclusive OR accumulator with memory $1FB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	and #$21.b		; 29 21 ; Logical AND #$21.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	ror $B173.w,X		; 7E 73 B1 ; Rotate right $B173.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $7341.w,X		; 1D 41 73 ; OR accumulator with memory $7341.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A59.w,X		; 1D 59 1A ; OR accumulator with memory $1A59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$73.b]		; 27 73 ; AND accumulator with memory (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $2C		; B0 2C ; Branch if carry set to $B0, $2C [Flow: branch]
	eor $3028.w,Y		; 59 28 30 ; Exclusive OR accumulator with memory $3028.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $CB59.w		; 1C 59 CB ; Test and reset bits $CB59.w [Reads: Accumulator] [Flags: Z]
	lda ($DA.b,X)		; A1 DA ; Load accumulator ($DA.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $26B0.w,Y		; 59 B0 26 ; Exclusive OR accumulator with memory $26B0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta $59C259.l,X		; 9F 59 C2 59 ; Store accumulator (long,X) $59C259.l,X [Reads: Accumulator, X Index]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	stx $2BE3.w		; 8E E3 2B ; Store X register to $2BE3.w [Reads: X Index]
	adc $BD.b,X		; 75 BD ; Add $BD.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $A1CB.w,Y		; 59 CB A1 ; Exclusive OR accumulator with memory $A1CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $E3591F.l		; 22 1F 59 E3 ; Jump to subroutine long $E3591F.l [Writes: Stack Pointer] [Flow: call]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 16
.INDEX 16
	rep #$76		; C2 76
	and #$2C28.w		; 29 28 2C ; Logical AND #$2C28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2C		; D0 2C ; Branch if not equal to $D0, $2C [Flow: branch]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $1E0C.w,Y		; 59 0C 1E ; Exclusive OR accumulator with memory $1E0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $B41C.w,X		; 9E 1C B4 ; Store zero to $B41C.w,X [Reads: X Index]
	asl $0E59.w,X		; 1E 59 0E ; Arithmetic shift left $0E59.w,X [Reads: X Index] [Flags: NCZ]
	ora $1A0C59.l,X		; 1F 59 0C 1A ; Logical OR long $1A0C59.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0D.b,S),Y		; 73 0D ; Add with carry (stack relative indirect indexed) ($0D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $1D1A.w		; CE 1A 1D ; Decrement $1D1A.w [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $291E.w,X		; 1D 1E 29 ; OR accumulator with memory $291E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $2C21.w		; 2D 21 2C ; Logical AND $2C21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta $59E359.l,X		; 9F 59 E3 59 ; Store accumulator (long,X) $59E359.l,X [Reads: Accumulator, X Index]
	and #$2C28.w		; 29 28 2C ; Logical AND #$2C28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2C		; D0 2C ; Branch if not equal to $D0, $2C [Flow: branch]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc $0C.b,X		; 75 0C ; Add $0C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $1C9E.w,X		; 1E 9E 1C ; Arithmetic shift left $1C9E.w,X [Reads: X Index] [Flags: NCZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $8A3F1C.l		; 22 1C 3F 8A ; Jump to subroutine long $8A3F1C.l [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $42C259.l,X		; 1F 59 C2 42 ; Logical OR long $42C259.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $7608.w,Y		; 59 08 76 ; Exclusive OR accumulator with memory $7608.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $BE9B.w		; CE 9B BE ; Decrement $BE9B.w [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $201A.w,Y		; 59 1A 20 ; Exclusive OR accumulator with memory $201A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $AC59D3.l		; 8F D3 59 AC ; Store accumulator (long) $AC59D3.l [Reads: Accumulator]
	lda ($93.b,S),Y		; B3 93 ; Load accumulator (stack relative indirect indexed) ($93.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and ($7E.b)		; 32 7E ; AND accumulator with memory (indirect) ($7E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($1F.b,S),Y		; 73 1F ; Add with carry (stack relative indirect indexed) ($1F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $D82B.w		; 2E 2B D8 ; Rotate left $D82B.w [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $1F591C.l		; 22 1C 59 1F ; Jump to subroutine long $1F591C.l [Writes: Stack Pointer] [Flow: call]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	ldx $592C.w,Y		; BE 2C 59 ; Load X register $592C.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $75.b		; 25 75 ; Logical AND $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpy $1E2D.w		; CC 2D 1E ; Compare $1E2D.w with Y register [Reads: Y Index] [Flags: NCZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	jsl $76321C.l		; 22 1C 32 76 ; Jump to subroutine long $76321C.l [Writes: Stack Pointer] [Flow: call]
	ora $272E.w,X		; 1D 2E 27 ; OR accumulator with memory $272E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $C71E.w		; 20 1E C7 ; Jump to subroutine at $C71E.w [Writes: Stack Pointer] [Flow: call]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $E8.b		; 02 E8 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 16
	rep #$59		; C2 59
	sta $28DB.w,X		; 9D DB 28 ; Store accumulator to $28DB.w,X [Reads: Accumulator, X Index]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $12.b,X		; 75 12 ; Add $12.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	and [$B2.b]		; 27 B2 ; AND accumulator with memory (long) [$B2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $D859.w,X		; DE 59 D8 ; Decrement memory $D859.w,X [Reads: X Index] [Flags: NZ]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $1A76.w,X		; 1D 76 1A ; OR accumulator with memory $1A76.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $21.b,X		; 16 21 ; Arithmetic shift left $21.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ldy #$1E21.w		; A0 21 1E ; Load #$1E21.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$D0.b		; 29 D0 ; Logical AND #$D0.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $7EB5.w,Y		; 59 B5 7E ; Exclusive OR accumulator with memory $7EB5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($2F.b,S),Y		; 73 2F ; Add with carry (stack relative indirect indexed) ($2F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $2725.w		; 2E 25 27 ; Rotate left $2725.w [Flags: NCZ]
	ldx $1A.b		; A6 1A ; Load $1A.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	sta $59.b,X		; 95 59 ; Store accumulator to $59.b,X [Reads: Accumulator, X Index]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2893.w,Y		; 59 93 28 ; Exclusive OR accumulator with memory $2893.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AE0.w,Y		; 59 E0 1A ; Exclusive OR accumulator with memory $1AE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$C7.b		; 29 C7 ; Logical AND #$C7.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	.db $42, $59		; 42 59 ; Reserved instruction
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $1D1A59.l		; CF 59 1A 1D ; Compare accumulator (long) $1D1A59.l [Reads: Accumulator] [Flags: NCZ]
	and $1E1C22.l		; 2F 22 1C 1E ; AND accumulator with memory (long) $1E1C22.l [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2E1D.w,Y		; 59 1D 2E ; Exclusive OR accumulator with memory $2E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $2CC7.w,X		; 1E C7 2C ; Arithmetic shift left $2CC7.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $1A20.w,Y		; 99 20 1A ; Store accumulator to $1A20.w,Y [Reads: Y Index, Accumulator]
	and ($1E.b,S),Y		; 33 1E ; AND accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ror $B473.w,X		; 7E 73 B4 ; Rotate right $B473.w,X [Reads: X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $201A.w		; 0C 1A 20 ; Test and set bits $201A.w [Reads: Accumulator] [Flags: Z]
	jsl $0C591C.l		; 22 1C 59 0C ; Jump to subroutine long $0C591C.l [Writes: Stack Pointer] [Flow: call]
	jsl $C82B2B.l		; 22 2B 2B C8 ; Jump to subroutine long $C82B2B.l [Writes: Stack Pointer] [Flow: call]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$73.b]		; 27 73 ; AND accumulator with memory (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2B.b,S		; A3 2B ; Load accumulator (stack relative) $2B.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sta ($1C.b,S),Y		; 93 1C ; Store accumulator (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $9159.w,X		; 1E 59 91 ; Arithmetic shift left $9159.w,X [Reads: X Index] [Flags: NCZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $7341.w,Y		; BE 41 73 ; Load X register $7341.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $0C7F.w,X		; 3E 7F 0C ; Rotate left $0C7F.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and [$1A.b]		; 27 1A ; AND accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $B559.w,Y		; BE 59 B5 ; Load X register $B559.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $2102.w,Y		; 59 02 21 ; Exclusive OR accumulator with memory $2102.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $2225.w		; 2E 25 22 ; Rotate left $2225.w [Flags: NCZ]
	lda ($27.b),Y		; B1 27 ; Load accumulator ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $29DA.w,Y		; 59 DA 29 ; Exclusive OR accumulator with memory $29DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1CD0.w,Y		; 59 D0 1C ; Exclusive OR accumulator with memory $1CD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $592D.w		; CE 2D 59 ; Decrement $592D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $41.b		; 26 41 ; Rotate left $41.b [Reads: Direct Page] [Flags: NCZ]
	ror $0A.b,X		; 76 0A ; Rotate right $0A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $291E.w,X		; 1E 1E 29 ; Arithmetic shift left $291E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$2D.b],Y		; 97 2D ; Store accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cpx #$2EA0.w		; E0 A0 2E ; Compare #$2EA0.w with X register [Reads: X Index] [Flags: NCZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $3F0A.w		; 0E 0A 3F ; Arithmetic shift left $3F0A.w [Flags: NCZ]
	adc $1C59E8.l,X		; 7F E8 59 1C ; Add long $1C59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1E97.w,Y		; 59 97 1E ; Exclusive OR accumulator with memory $1E97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $757E.w,X		; 3E 7E 75 ; Rotate left $757E.w,X [Reads: X Index] [Flags: NCZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $88763F.l,X		; 9F 3F 76 88 ; Store accumulator (long,X) $88763F.l,X [Reads: Accumulator, X Index]
	mvp $0A,$59		; 44 59 0A ; Move block positive $0A,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $291E.w,X		; 1E 1E 29 ; Arithmetic shift left $291E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit #$12.b		; 89 12 ; Test bits #$12.b with accumulator [Reads: Accumulator] [Flags: Z]
	asl $592D.w,X		; 1E 2D 59 ; Arithmetic shift left $592D.w,X [Reads: X Index] [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	ora $681ECE.l,X		; 1F CE 1E 68 ; Logical OR long $681ECE.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $1C59E8.l,X		; 7F E8 59 1C ; Add long $1C59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $1A59.w		; 2D 59 1A ; Logical AND $1A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $22.b		; A6 22 ; Load $22.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	asl $7E3E.w,X		; 1E 3E 7E ; Arithmetic shift left $7E3E.w,X [Reads: X Index] [Flags: NCZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $88763F.l,X		; 9F 3F 76 88 ; Store accumulator (long,X) $88763F.l,X [Reads: Accumulator, X Index]
	mvp $0A,$59		; 44 59 0A ; Move block positive $0A,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $291E.w,X		; 1E 1E 29 ; Arithmetic shift left $291E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit #$12.b		; 89 12 ; Test bits #$12.b with accumulator [Reads: Accumulator] [Flags: Z]
	asl $592D.w,X		; 1E 2D 59 ; Arithmetic shift left $592D.w,X [Reads: X Index] [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	ora $681ECE.l,X		; 1F CE 1E 68 ; Logical OR long $681ECE.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $9F59E8.l,X		; 7F E8 59 9F ; Add long $9F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy #$59AD.w		; C0 AD 59 ; Compare #$59AD.w with Y register [Reads: Y Index] [Flags: NCZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $261E.w,Y		; 59 1E 26 ; Exclusive OR accumulator with memory $261E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($75.b)		; 32 75 ; AND accumulator with memory (indirect) ($75.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $252D.w		; 2D 2D 25 ; Logical AND $252D.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $412C.w,X		; 1E 2C 41 ; Arithmetic shift left $412C.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $211C.w,Y		; 59 1C 21 ; Exclusive OR accumulator with memory $211C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	jsl $431E1C.l		; 22 1C 1E 43 ; Jump to subroutine long $431E1C.l [Writes: Stack Pointer] [Flow: call]
	ror $09.b,X		; 76 09 ; Rotate right $09.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $59D3.w		; 2E D3 59 ; Rotate left $59D3.w [Flags: NCZ]
	.db $D0, $2D		; D0 2D ; Branch if not equal to $D0, $2D [Flow: branch]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $411ECE.l,X		; 1F CE 1E 41 ; Logical OR long $411ECE.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $592CE7.l,X		; 7F E7 2C 59 ; Add long $592CE7.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $DF59.w,Y		; BE 59 DF ; Load X register $DF59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	bit $6C75.w		; 2C 75 6C ; Test bits $6C75.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $6C.b,S		; 03 6C ; OR accumulator with stack relative $6C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $B4.b		; 26 B4 ; Rotate left $B4.b [Reads: Direct Page] [Flags: NCZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	bit $6C59.w		; 2C 59 6C ; Test bits $6C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora ($6C.b,X)		; 01 6C ; Logical OR ($6C.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $D0, $1C		; D0 1C ; Branch if not equal to $D0, $1C [Flow: branch]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	bit $7F41.w		; 2C 41 7F ; Test bits $7F41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $1ACE.w,Y		; 99 CE 1A ; Store accumulator to $1ACE.w,Y [Reads: Y Index, Accumulator]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1AAC.w,Y		; 59 AC 1A ; Exclusive OR accumulator with memory $1AAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $75.b		; 25 75 ; Logical AND $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59B4.w,X		; DE B4 59 ; Decrement memory $59B4.w,X [Reads: X Index] [Flags: NZ]
	and $39.b,X		; 35 39 ; Logical AND $39.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1CD0.w,Y		; 59 D0 1C ; Exclusive OR accumulator with memory $1CD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1D.b]		; C7 1D ; Compare accumulator (long) [$1D.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cpx #$E259.w		; E0 59 E2 ; Compare #$E259.w with X register [Reads: X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2220.w,Y		; 59 20 22 ; Exclusive OR accumulator with memory $2220.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E3761E.l		; 2F 1E 76 E3 ; AND accumulator with memory (long) $E3761E.l [Writes: Accumulator] [Flags: NZ]
	eor $D5CF.w,Y		; 59 CF D5 ; Exclusive OR accumulator with memory $D5CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $AC59.w		; 20 59 AC ; Jump to subroutine at $AC59.w [Writes: Stack Pointer] [Flow: call]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $7E41.w,X		; 1D 41 7E ; OR accumulator with memory $7E41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($11.b,S),Y		; 73 11 ; Add with carry (stack relative indirect indexed) ($11.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $1D1A.w,X		; 1E 1A 1D ; Arithmetic shift left $1D1A.w,X [Reads: X Index] [Flags: NCZ]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E12.w,Y		; 59 12 1E ; Exclusive OR accumulator with memory $1E12.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $5943.w		; 2D 43 59 ; Logical AND $5943.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $0E.b		; 06 0E ; Arithmetic shift left $0E.b [Reads: Direct Page] [Flags: NCZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $2E2A.w,Y		; 59 2A 2E ; Exclusive OR accumulator with memory $2E2A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $1D1E22.l,X		; 1F 22 1E 1D ; Logical OR long $1D1E22.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $0275.w,X		; 3E 75 02 ; Rotate left $0275.w,X [Reads: X Index] [Flags: NCZ]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	sty $2E.b,X		; 94 2E ; Store Y register $2E.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and $C722.w		; 2D 22 C7 ; Logical AND $C722.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $763E.w		; 2C 3E 76 ; Test bits $763E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $CE29.w,Y		; 59 29 CE ; Exclusive OR accumulator with memory $CE29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $27		; D0 27 ; Branch if not equal to $D0, $27 [Flow: branch]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DE.w,Y		; 59 DE 59 ; Exclusive OR accumulator with memory $59DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2229.w,Y		; 59 29 22 ; Exclusive OR accumulator with memory $2229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E1C.w,X		; 1E 1C 1E ; Arithmetic shift left $1E1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $7EC6.w,Y		; 59 C6 7E ; Exclusive OR accumulator with memory $7EC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldx #$3E2D.w		; A2 2D 3E ; Load #$3E2D.w into X register [Writes: X Index] [Flags: NZ]
	adc $CD51E8.l,X		; 7F E8 51 CD ; Add long $CD51E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
.INDEX 16
	rep #$59		; C2 59
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $251A.w		; 2E 1A 25 ; Rotate left $251A.w [Flags: NCZ]
	jsl $1E221F.l		; 22 1F 22 1E ; Jump to subroutine long $1E221F.l [Writes: Stack Pointer] [Flow: call]
	ora $7541.w,X		; 1D 41 75 ; OR accumulator with memory $7541.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $1D96.w,Y		; 59 96 1D ; Exclusive OR accumulator with memory $1D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1676.w,X		; 3E 76 16 ; Rotate left $1676.w,X [Reads: X Index] [Flags: NCZ]
	and ($32.b,X)		; 21 32 ; Logical AND ($32.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $3F8F.w		; 20 8F 3F ; Jump to subroutine at $3F8F.w [Writes: Stack Pointer] [Flow: call]
	adc $9F5908.l,X		; 7F 08 59 9F ; Add long $9F5908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy #$59AD.w		; C0 AD 59 ; Compare #$59AD.w with Y register [Reads: Y Index] [Flags: NCZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $C826.w,Y		; 59 26 C8 ; Exclusive OR accumulator with memory $C826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $DA59.w,X		; 1E 59 DA ; Arithmetic shift left $DA59.w,X [Reads: X Index] [Flags: NCZ]
	adc $AA.b,X		; 75 AA ; Add $AA.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $08.b,X		; 76 08 ; Rotate right $08.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BD2.w,Y		; 59 D2 2B ; Exclusive OR accumulator with memory $2BD2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $AD59E8.l,X		; 7F E8 59 AD ; Add long $AD59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $A1.b,S		; A3 A1 ; Load accumulator (stack relative) $A1.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33BD.w,Y		; 59 BD 33 ; Exclusive OR accumulator with memory $33BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $A975.w,X		; 1E 75 A9 ; Arithmetic shift left $A975.w,X [Reads: X Index] [Flags: NCZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $C9CC.w,Y		; 59 CC C9 ; Exclusive OR accumulator with memory $C9CC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2BA3.w,Y		; 59 A3 2B ; Exclusive OR accumulator with memory $2BA3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($1C.b,S),Y		; 93 1C ; Store accumulator (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $C859.w,X		; 1E 59 C8 ; Arithmetic shift left $C859.w,X [Reads: X Index] [Flags: NCZ]
	eor $7608.w,Y		; 59 08 76 ; Exclusive OR accumulator with memory $7608.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5193.w		; 1C 93 51 ; Test and reset bits $5193.w [Reads: Accumulator] [Flags: Z]
	and $1C59.w		; 2D 59 1C ; Logical AND $1C59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $E359.w		; 9C 59 E3 ; Store zero to $E359.w
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $7F43.w,Y		; BE 43 7F ; Load X register $7F43.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	bit $2B22.w		; 2C 22 2B ; Test bits $2B22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $078A.w,X		; 3E 8A 07 ; Rotate left $078A.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $E3591E.l		; 2F 1E 59 E3 ; AND accumulator with memory (long) $E3591E.l [Writes: Accumulator] [Flags: NZ]
	eor $A097.w,Y		; 59 97 A0 ; Exclusive OR accumulator with memory $A097.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $20B4.w		; AC B4 20 ; Load $20B4.w into Y register [Writes: Y Index] [Flags: NZ]
	adc $2D.b,X		; 75 2D ; Add $2D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $DE591E.l,X		; 1F 1E 59 DE ; Logical OR long $DE591E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $C7.b		; C5 C7 ; Compare $C7.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NCZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $21.b,X		; 76 21 ; Rotate right $21.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rti		; 40 ; Return from interrupt [Reads: Stack Pointer] [Writes: Stack Pointer] [Flags: MXCZIDVN] [Flow: return]

	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $7E3F.w		; 2C 3F 7E ; Test bits $7E3F.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $1ED3.w,Y		; 59 D3 1E ; Exclusive OR accumulator with memory $1ED3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda ($DC.b)		; B2 DC ; Load accumulator (indirect) ($DC.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $BD8C.w,Y		; 59 8C BD ; Exclusive OR accumulator with memory $BD8C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $9B591E.l,X		; 1F 1E 59 9B ; Logical OR long $9B591E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	and $3E1E.w		; 2D 1E 3E ; Logical AND $3E1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $AC59.w,X		; 1E 59 AC ; Arithmetic shift left $AC59.w,X [Reads: X Index] [Flags: NCZ]
	and $C773.w		; 2D 73 C7 ; Logical AND $C773.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $C759.w,X		; 1E 59 C7 ; Arithmetic shift left $C759.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	ror $BB73.w,X		; 7E 73 BB ; Rotate right $BB73.w,X [Reads: X Index] [Flags: NCZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	and #$2B.b		; 29 2B ; Logical AND #$2B.b with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $591E1C.l		; 22 1C 1E 59 ; Jump to subroutine long $591E1C.l [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	and $34.b,X		; 35 34 ; Logical AND $34.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $9F59.w		; 2D 59 9F ; Logical AND $9F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $321A.w		; 2C 1A 32 ; Test bits $321A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $27088A.l,X		; 3F 8A 08 27 ; AND accumulator with memory (long,X) $27088A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dec $1E.b,X		; D6 1E ; Decrement memory $1E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	cmp ($1E.b,S),Y		; D3 1E ; Compare accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	ora $733F.w,X		; 1D 3F 73 ; OR accumulator with memory $733F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	mvp $08,$59		; 44 59 08 ; Move block positive $08,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $C759.w,X		; 1E 59 C7 ; Arithmetic shift left $C759.w,X [Reads: X Index] [Flags: NCZ]
	asl $8873.w,X		; 1E 73 88 ; Arithmetic shift left $8873.w,X [Reads: X Index] [Flags: NCZ]
	bit #$03.b		; 89 03 ; Test bits #$03.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $2759.w		; 2D 59 27 ; Logical AND $2759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $B6A4.w,X		; 1E A4 B6 ; Arithmetic shift left $B6A4.w,X [Reads: X Index] [Flags: NCZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $282806.l,X		; 7F 06 28 28 ; Add long $282806.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $1B59.w,X		; 1D 59 1B ; OR accumulator with memory $1B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $3E32.w		; 2E 32 3E ; Rotate left $3E32.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $2C.b		; 24 2C ; Test bits $2C.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $753E.w		; 2D 3E 75 ; Logical AND $753E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E3591E.l		; 2F 1E 59 E3 ; AND accumulator with memory (long) $E3591E.l [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $A876.w,X		; 1D 76 A8 ; OR accumulator with memory $A876.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	.db $42, $59		; 42 59 ; Reserved instruction
	asl $3F0A.w		; 0E 0A 3F ; Arithmetic shift left $3F0A.w [Flags: NCZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	and $AC8B.w		; 2D 8B AC ; Logical AND $AC8B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $A859.w,X		; 1D 59 A8 ; OR accumulator with memory $A859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1EB4.w		; 2C B4 1E ; Test bits $1EB4.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $3E2C.w		; 2C 2C 3E ; Test bits $3E2C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc $592812.l,X		; 7F 12 28 59 ; Add long $592812.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $51.b,S		; E3 51 ; Subtract stack-relative $51.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $2B1B.w		; CD 1B 2B ; Compare $2B1B.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	asl $3F21.w,X		; 1E 21 3F ; Arithmetic shift left $3F21.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $1D96.w,Y		; 59 96 1D ; Exclusive OR accumulator with memory $1D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $1A59.w		; 9C 59 1A ; Store zero to $1A59.w
	ora $59E3D4.l,X		; 1F D4 E3 59 ; Logical OR long $59E3D4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldx #$5927.w		; A2 27 59 ; Load #$5927.w into X register [Writes: X Index] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $1176.w,X		; 1E 76 11 ; Arithmetic shift left $1176.w,X [Reads: X Index] [Flags: NCZ]
	jmp.w [$1E1E]		; DC 1E 1E ; Jump long indirect [$1E1E] [Flow: jump]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2659.w		; 2D 59 26 ; Logical AND $2659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda ($D3.b)		; B2 D3 ; Load accumulator (indirect) ($D3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $592525.l		; 22 25 25 59 ; Jump to subroutine long $592525.l [Writes: Stack Pointer] [Flow: call]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	lda $7F411E.l		; AF 1E 41 7F ; Load long $7F411E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D28E.w,Y		; 59 8E D2 ; Exclusive OR accumulator with memory $D28E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $C6C5.w,Y		; 59 C5 C6 ; Exclusive OR accumulator with memory $C6C5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $7541.w		; 2C 41 75 ; Test bits $7541.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $BA59.w		; 9C 59 BA ; Store zero to $BA59.w
	dec $42.b,X		; D6 42 ; Decrement memory $42.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	eor $0A0E.w,Y		; 59 0E 0A ; Exclusive OR accumulator with memory $0A0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $597659.l,X		; 3F 59 76 59 ; AND accumulator with memory (long,X) $597659.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $28.b,X		; 16 28 ; Arithmetic shift left $28.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $30, $3E		; 30 3E ; Branch if minus to $30, $3E [Flow: branch]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2759.w,X		; 1E 59 27 ; Arithmetic shift left $2759.w,X [Reads: X Index] [Flags: NCZ]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $A0		; D0 A0 ; Branch if not equal to $D0, $A0 [Flow: branch]
	bit $1C2E.w		; 2C 2E 1C ; Test bits $1C2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc $2B.b,X		; 75 2B ; Add $2B.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	sta $2E1B.w		; 8D 1B 2E ; Store accumulator to $2E1B.w [Reads: Accumulator]
	jsr $8A3E.w		; 20 3E 8A ; Jump to subroutine at $8A3E.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $5932.w		; 2E 32 59 ; Rotate left $5932.w [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	ror $35.b,X		; 76 35 ; Rotate right $35.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $34.b,X		; 34 34 ; Test bits $34.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	asl $3F0A.w		; 0E 0A 3F ; Arithmetic shift left $3F0A.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $C7.b,S		; 03 C7 ; OR accumulator with stack relative $C7.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $7F3E.w,X		; 1E 3E 7F ; Arithmetic shift left $7F3E.w,X [Reads: X Index] [Flags: NCZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $32.b		; E6 32 ; Increment $32.b [Reads: Direct Page] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $B394.w,X		; 1E 94 B3 ; Arithmetic shift left $B394.w,X [Reads: X Index] [Flags: NCZ]
	ora $7521B5.l,X		; 1F B5 21 75 ; Logical OR long $7521B5.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $1E24.w,X		; BD 24 1E ; Load $1E24.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $E359.w		; 2C 59 E3 ; Test bits $E359.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $BD2C.w,Y		; 59 2C BD ; Exclusive OR accumulator with memory $BD2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $8A41.w		; 2D 41 8A ; Logical AND $8A41.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	ror $AA.b,X		; 76 AA ; Rotate right $AA.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ldx $D959.w,Y		; BE 59 D9 ; Load X register $D959.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	bit $1F59.w		; 2C 59 1F ; Test bits $1F59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $21.b,X		; B5 21 ; Load $21.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $7E2C.w,Y		; D9 2C 7E ; Compare accumulator $7E2C.w,Y [Reads: Y Index] [Flags: NCZ]
	adc ($D3.b,S),Y		; 73 D3 ; Add with carry (stack relative indirect indexed) ($D3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $1F1F.w		; 2E 1F 1F ; Rotate left $1F1F.w [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	asl $3F0A.w		; 0E 0A 3F ; Arithmetic shift left $3F0A.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $C7.b,S		; 03 C7 ; OR accumulator with stack relative $C7.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $7F3E.w,X		; 1E 3E 7F ; Arithmetic shift left $7F3E.w,X [Reads: X Index] [Flags: NCZ]
	clc		; 18 ; Clear carry flag [Flags: C]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $6A8A.w,X		; 3E 8A 6A ; Rotate left $6A8A.w,X [Reads: X Index] [Flags: NCZ]
	rol $E859.w,X		; 3E 59 E8 ; Rotate left $E859.w,X [Reads: X Index] [Flags: NCZ]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $75.b,X		; B4 75 ; Load Y register $75.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $4295.w		; 2E 95 42 ; Rotate left $4295.w [Flags: NCZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D959.w		; 2D 59 D9 ; Logical AND $D959.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $8E.b,X		; 76 8E ; Rotate right $8E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $AA99.w,Y		; 59 99 AA ; Exclusive OR accumulator with memory $AA99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $321E07.l,X		; 7F 07 1E 32 ; Add long $321E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $3EE3.w,Y		; 59 E3 3E ; Exclusive OR accumulator with memory $3EE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $9B25.w,X		; 1E 25 9B ; Arithmetic shift left $9B25.w,X [Reads: X Index] [Flags: NCZ]
	asl $763E.w,X		; 1E 3E 76 ; Arithmetic shift left $763E.w,X [Reads: X Index] [Flags: NCZ]
	ror $0073.w,X		; 7E 73 00 ; Rotate right $0073.w,X [Reads: X Index] [Flags: NCZ]
	bit $5924.w		; 2C 24 59 ; Test bits $5924.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $8873.w,X		; 3E 73 88 ; Rotate left $8873.w,X [Reads: X Index] [Flags: NCZ]
	mvp $13,$59		; 44 59 13 ; Move block positive $13,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $C926.w,X		; 1E 26 C9 ; Arithmetic shift left $C926.w,X [Reads: X Index] [Flags: NCZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $8873.w,X		; 1D 73 88 ; OR accumulator with memory $8873.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit #$08.b		; 89 08 ; Test bits #$08.b with accumulator [Reads: Accumulator] [Flags: Z]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $282B.w,X		; 1D 2B 28 ; OR accumulator with memory $282B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $1B.b		; A4 1B ; Load $1B.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	and ($68.b)		; 32 68 ; AND accumulator with memory (indirect) ($68.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $255108.l,X		; 7F 08 51 25 ; Add long $255108.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $221B.w,Y		; 59 1B 22 ; Exclusive OR accumulator with memory $221B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $9E59.w		; 20 59 9E ; Jump to subroutine at $9E59.w [Writes: Stack Pointer] [Flow: call]
	bit $281C.w		; 2C 1C 28 ; Test bits $281C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	rol $8875.w,X		; 3E 75 88 ; Rotate left $8875.w,X [Reads: X Index] [Flags: NCZ]
	mvp $30,$12		; 44 12 30 ; Move block positive $30,$12 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $1359.w,X		; 1D 59 13 ; OR accumulator with memory $1359.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $C926.w,X		; 1E 26 C9 ; Arithmetic shift left $C926.w,X [Reads: X Index] [Flags: NCZ]
	asl $431D.w,X		; 1E 1D 43 ; Arithmetic shift left $431D.w,X [Reads: X Index] [Flags: NCZ]
	eor $3435.w,Y		; 59 35 34 ; Exclusive OR accumulator with memory $3435.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	ror $88.b,X		; 76 88 ; Rotate right $88.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1A.b,X		; 16 1A ; Arithmetic shift left $1A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $B426.w,Y		; 59 26 B4 ; Exclusive OR accumulator with memory $B426.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $261E13.l,X		; 7F 13 1E 26 ; Add long $261E13.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp #$1E.b		; C9 1E ; Compare #$1E.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $3F21.w,X		; 1E 21 3F ; Arithmetic shift left $3F21.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $CD.b		; 00 CD ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	bit $CE2E.w		; 2C 2E CE ; Test bits $CE2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $448875.l,X		; 3F 75 88 44 ; AND accumulator with memory (long,X) $448875.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E18.w,Y		; 59 18 1E ; Exclusive OR accumulator with memory $1E18.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $8876.w		; 2C 76 88 ; Test bits $8876.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit #$08.b		; 89 08 ; Test bits #$08.b with accumulator [Reads: Accumulator] [Flags: Z]
	eor $B11C.w,Y		; 59 1C B1 ; Exclusive OR accumulator with memory $B11C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $26.b		; A4 26 ; Load $26.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $B4.b		; 26 B4 ; Rotate left $B4.b [Reads: Direct Page] [Flags: NCZ]
	ora $7F68.w,X		; 1D 68 7F ; OR accumulator with memory $7F68.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cpx #$1C59.w		; E0 59 1C ; Compare #$1C59.w with X register [Reads: X Index] [Flags: NCZ]
	sta ($51.b,S),Y		; 93 51 ; Store accumulator (stack relative indirect indexed) ($51.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and $BD59.w		; 2D 59 BD ; Logical AND $BD59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	adc $D3.b,X		; 75 D3 ; Add $D3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	lda ($D7.b,X)		; A1 D7 ; Load accumulator ($D7.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora ($C8.b)		; 12 C8 ; OR accumulator with memory (indirect) ($C8.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $282B03.l,X		; 7F 03 2B 28 ; Add long $282B03.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $598F.w		; 20 8F 59 ; Jump to subroutine at $598F.w [Writes: Stack Pointer] [Flow: call]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and $BE22.w		; 2D 22 BE ; Logical AND $BE22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $75E3.w,Y		; 59 E3 75 ; Exclusive OR accumulator with memory $75E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$22.b]		; 07 22 ; OR accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $078A.w,X		; 3E 8A 07 ; Rotate left $078A.w,X [Reads: X Index] [Flags: NCZ]
	jsl $282159.l		; 22 59 21 28 ; Jump to subroutine long $282159.l [Writes: Stack Pointer] [Flow: call]
	rol $1676.w,X		; 3E 76 16 ; Rotate left $1676.w,X [Reads: X Index] [Flags: NCZ]
	asl $CD51.w,X		; 1E 51 CD ; Arithmetic shift left $CD51.w,X [Reads: X Index] [Flags: NCZ]
	dec $1F.b		; C6 1F ; Decrement $1F.b [Reads: Direct Page] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	bit $3E.b		; 24 3E ; Test bits $3E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc $252500.l,X		; 7F 00 25 25 ; Add long $252500.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $222B.w,Y		; 59 2B 22 ; Exclusive OR accumulator with memory $222B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	.db $42, $59		; 42 59 ; Reserved instruction
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $95CC.w,Y		; 59 CC 95 ; Exclusive OR accumulator with memory $95CC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $41.b		; 26 41 ; Rotate left $41.b [Reads: Direct Page] [Flags: NCZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $2551.w,X		; 1E 51 25 ; Arithmetic shift left $2551.w,X [Reads: X Index] [Flags: NCZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $DA59.w		; AD 59 DA ; Load $DA59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1E24.w,Y		; 59 24 1E ; Exclusive OR accumulator with memory $1E24.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $5929.w,X		; 1E 29 59 ; Arithmetic shift left $5929.w,X [Reads: X Index] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $A876.w,X		; 1D 76 A8 ; OR accumulator with memory $A876.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $C9.b		; 26 C9 ; Rotate left $C9.b [Reads: Direct Page] [Flags: NCZ]
	asl $401D.w,X		; 1E 1D 40 ; Arithmetic shift left $401D.w,X [Reads: X Index] [Flags: NCZ]
	jmp.w [$753E]		; DC 3E 75 ; Jump long indirect [$753E] [Flow: jump]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $3EB6.w,Y		; 59 B6 3E ; Exclusive OR accumulator with memory $3EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $591F08.l,X		; 7F 08 1F 59 ; Add long $591F08.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $D3BB.w,Y		; 59 BB D3 ; Exclusive OR accumulator with memory $D3BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $A127.w		; 2D 27 A1 ; Logical AND $A127.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$2C.b]		; 27 2C ; AND accumulator with memory (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $75		; 42 75 ; Reserved instruction
	cpx #$9959.w		; E0 59 99 ; Compare #$9959.w with X register [Reads: X Index] [Flags: NCZ]
	and $261E.w		; 2D 1E 26 ; Logical AND $261E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp #$59.b		; C9 59 ; Compare #$59.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $7642.w,X		; 1D 42 76 ; OR accumulator with memory $7642.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5193.w		; 1C 93 51 ; Test and reset bits $5193.w [Reads: Accumulator] [Flags: Z]
	and $9F59.w		; 2D 59 9F ; Logical AND $9F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ror $9373.w,X		; 7E 73 93 ; Rotate right $9373.w,X [Reads: X Index] [Flags: NCZ]
	and ($D5.b)		; 32 D5 ; AND accumulator with memory (indirect) ($D5.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $A859.w		; 20 59 A8 ; Jump to subroutine at $A859.w [Writes: Stack Pointer] [Flow: call]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $3E210E.l,X		; 7F 0E 21 3E ; Add long $3E210E.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1A.b]		; 07 1A ; OR accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $321A.w,X		; 1D 1A 32 ; OR accumulator with memory $321A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $8D59.w		; 2C 59 8D ; Test bits $8D59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda $1A591E.l		; AF 1E 59 1A ; Load long $1A591E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	jsr $3E8F.w		; 20 8F 3E ; Jump to subroutine at $3E8F.w [Writes: Stack Pointer] [Flow: call]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $A627.w		; 2D 27 A6 ; Logical AND $A627.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $4376.w,X		; 3E 76 43 ; Rotate left $4376.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $DD8D.w,Y		; 59 8D DD ; Exclusive OR accumulator with memory $DD8D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($29.b),Y		; B1 29 ; Load accumulator ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$32.b		; 29 32 ; Logical AND #$32.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $43		; 30 43 ; Branch if minus to $30, $43 [Flow: branch]
	ror $0373.w,X		; 7E 73 03 ; Rotate right $0373.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $1A591E.l		; AF 1E 59 1A ; Load long $1A591E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	jsr $3E8F.w		; 20 8F 3E ; Jump to subroutine at $3E8F.w [Writes: Stack Pointer] [Flow: call]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $D759.w		; 2D 59 D7 ; Logical AND $D759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $5942BE.l		; 22 BE 42 59 ; Jump to subroutine long $5942BE.l [Writes: Stack Pointer] [Flow: call]
	cpx #$E259.w		; E0 59 E2 ; Compare #$E259.w with X register [Reads: X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $C9.b		; 26 C9 ; Rotate left $C9.b [Reads: Direct Page] [Flags: NCZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $302C.w,Y		; 59 2C 30 ; Exclusive OR accumulator with memory $302C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $C959.w,X		; 1D 59 C9 ; OR accumulator with memory $C959.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D1C1E.l,X		; 1F 1E 1C 2D ; Logical OR long $2D1C1E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $117F.w,X		; 3E 7F 11 ; Rotate left $117F.w,X [Reads: X Index] [Flags: NCZ]
	jsl $B61B1B.l		; 22 1B 1B B6 ; Jump to subroutine long $B61B1B.l [Writes: Stack Pointer] [Flow: call]
	eor $222B.w,Y		; 59 2B 22 ; Exclusive OR accumulator with memory $222B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $43.b,Y		; B6 43 ; Load X register $43.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1D98.w,Y		; 59 98 1D ; Exclusive OR accumulator with memory $1D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	stz $751D.w,X		; 9E 1D 75 ; Store zero to $751D.w,X [Reads: X Index]
.INDEX 16
	rep #$59		; C2 59
	trb $27B1.w		; 1C B1 27 ; Test and reset bits $27B1.w [Reads: Accumulator] [Flags: Z]
	jsr $3E1E.w		; 20 1E 3E ; Jump to subroutine at $3E1E.w [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C28D.w,Y		; 59 8D C2 ; Exclusive OR accumulator with memory $C28D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $76B7.w,Y		; 59 B7 76 ; Exclusive OR accumulator with memory $76B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	stz $1A27.w,X		; 9E 27 1A ; Store zero to $1A27.w,X [Reads: X Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $322E.w		; 20 2E 32 ; Jump to subroutine at $322E.w [Writes: Stack Pointer] [Flow: call]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta $3FE3.w		; 8D E3 3F ; Store accumulator to $3FE3.w [Reads: Accumulator]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $DA59.w,X		; 1D 59 DA ; OR accumulator with memory $DA59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $B4591E.l		; 2F 1E 59 B4 ; AND accumulator with memory (long) $B4591E.l [Writes: Accumulator] [Flags: NZ]
	eor $1A0A.w,Y		; 59 0A 1A ; Exclusive OR accumulator with memory $1A0A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $592824.l		; 22 24 28 59 ; Jump to subroutine long $592824.l [Writes: Stack Pointer] [Flow: call]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C730.w,Y		; 59 30 C7 ; Exclusive OR accumulator with memory $C730.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $E1A1.w,X		; 1D A1 E1 ; OR accumulator with memory $E1A1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta ($26.b),Y		; 91 26 ; Store accumulator ($26.b),Y [Reads: Direct Page, Y Index, Accumulator]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $A127.w		; 2D 27 A1 ; Logical AND $A127.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $73.b,X		; B5 73 ; Load $73.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sta $CDD8B3.l,X		; 9F B3 D8 CD ; Store accumulator (long,X) $CDD8B3.l,X [Reads: Accumulator, X Index]
	dec $BEC5.w,X		; DE C5 BE ; Decrement memory $BEC5.w,X [Reads: X Index] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($11.b,S),Y		; 73 11 ; Add with carry (stack relative indirect indexed) ($11.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $B61B1B.l		; 22 1B 1B B6 ; Jump to subroutine long $B61B1B.l [Writes: Stack Pointer] [Flow: call]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2ACE.w,Y		; 59 CE 2A ; Exclusive OR accumulator with memory $2ACE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $D31E.w		; 2E 1E D3 ; Rotate left $D31E.w [Flags: NCZ]
	eor $73C6.w,Y		; 59 C6 73 ; Exclusive OR accumulator with memory $73C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc ($0F.b,S),Y		; 73 0F ; Add with carry (stack relative indirect indexed) ($0F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $BE59.w,X		; 1E 59 BE ; Arithmetic shift left $BE59.w,X [Reads: X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $A627.w		; 2D 27 A6 ; Logical AND $A627.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $3E		; D0 3E ; Branch if not equal to $D0, $3E [Flow: branch]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($22.b),Y		; 11 22 ; OR accumulator with memory ($22.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $3E.b,Y		; B6 3E ; Load X register $3E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $3E		; D0 3E ; Branch if not equal to $D0, $3E [Flow: branch]
	adc $265108.l,X		; 7F 08 51 26 ; Add long $265108.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2BD2.w,Y		; 59 D2 2B ; Exclusive OR accumulator with memory $2BD2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $51E0.w,Y		; 59 E0 51 ; Exclusive OR accumulator with memory $51E0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $59C2.w		; CD C2 59 ; Compare $59C2.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	sta $591E27.l,X		; 9F 27 1E 59 ; Store accumulator (long,X) $591E27.l,X [Reads: Accumulator, X Index]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $7541.w		; 2D 41 75 ; Logical AND $7541.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ldx $9659.w,Y		; BE 59 96 ; Load X register $9659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $1A59.w		; 9C 59 1A ; Store zero to $1A59.w
	ora $591AD4.l,X		; 1F D4 1A 59 ; Logical OR long $591AD4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $76.b,X		; 75 76 ; Add $76.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $321E07.l,X		; 7F 07 1E 32 ; Add long $321E07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($42.b)		; 32 42 ; AND accumulator with memory (indirect) ($42.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $BD1A.w,Y		; 59 1A BD ; Exclusive OR accumulator with memory $BD1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2E1E.w		; 2D 1E 2E ; Logical AND $2E1E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $D159.w		; 2C 59 D1 ; Test bits $D159.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	and [$51.b]		; 27 51 ; AND accumulator with memory (long) [$51.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $DB75.w		; 2D 75 DB ; Logical AND $DB75.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $412C.w,Y		; D9 2C 41 ; Compare accumulator $412C.w,Y [Reads: Y Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor ($CD.b),Y		; 51 CD ; Exclusive OR accumulator with memory ($CD.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$76.b],Y		; B7 76 ; Load accumulator (long indexed) [$76.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	and $B4B3.w		; 2D B3 B4 ; Logical AND $B4B3.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $7F3E32.l,X		; DF 32 3E 7F ; Compare accumulator (long,X) $7F3E32.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	brk $1F.b		; 00 1F ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pei ($DF.b)		; D4 DF ; Push effective indirect address ($DF.b) [Reads: Direct Page] [Writes: Stack Pointer]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $B3.b		; A6 B3 ; Load $B3.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2E2D.w,Y		; 59 2D 2E ; Exclusive OR accumulator with memory $2E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$A4.b]		; 27 A4 ; AND accumulator with memory (long) [$A4.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $23A5.w,Y		; 59 A5 23 ; Exclusive OR accumulator with memory $23A5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($A4.b)		; 32 A4 ; AND accumulator with memory (indirect) ($A4.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	eor $73B4.w,Y		; 59 B4 73 ; Exclusive OR accumulator with memory $73B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22C8.w,Y		; 59 C8 22 ; Exclusive OR accumulator with memory $22C8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1AB4.w		; 20 B4 1A ; Jump to subroutine at $1AB4.w [Writes: Stack Pointer] [Flow: call]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp $2CDF.w		; CD DF 2C ; Compare $2CDF.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $25BD.w		; 2C BD 25 ; Test bits $25BD.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $282B.w		; 20 2B 28 ; Jump to subroutine at $282B.w [Writes: Stack Pointer] [Flow: call]
	and $E1591E.l		; 2F 1E 59 E1 ; AND accumulator with memory (long) $E1591E.l [Writes: Accumulator] [Flags: NZ]
	ldx $1E.b		; A6 1E ; Load $1E.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc ($BC.b,S),Y		; 73 BC ; Add with carry (stack relative indirect indexed) ($BC.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($22.b,S),Y		; 93 22 ; Store accumulator (stack relative indirect indexed) ($22.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	lda $2C25.w,X		; BD 25 2C ; Load $2C25.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $9420.w,Y		; 59 20 94 ; Exclusive OR accumulator with memory $9420.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $411D1E.l		; AF 1E 1D 41 ; Load long $411D1E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DA73.w		; 2D 73 DA ; Logical AND $DA73.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $BA29.w,Y		; 59 29 BA ; Exclusive OR accumulator with memory $BA29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $438F.w		; 20 8F 43 ; Jump to subroutine at $438F.w [Writes: Stack Pointer] [Flow: call]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $3226A4.l		; 22 A4 26 32 ; Jump to subroutine long $3226A4.l [Writes: Stack Pointer] [Flow: call]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	eor $CDD8.w,Y		; 59 D8 CD ; Exclusive OR accumulator with memory $CDD8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $CF73.w,X		; DE 73 CF ; Decrement memory $CF73.w,X [Reads: X Index] [Flags: NZ]
	eor $BB1F.w,Y		; 59 1F BB ; Exclusive OR accumulator with memory $BB1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$592B.w		; E0 2B 59 ; Compare #$592B.w with X register [Reads: X Index] [Flags: NCZ]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	ora $412C.w,X		; 1D 2C 41 ; OR accumulator with memory $412C.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($7E.b,S),Y		; 73 7E ; Add with carry (stack relative indirect indexed) ($7E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $592525.l		; 22 25 25 59 ; Jump to subroutine long $592525.l [Writes: Stack Pointer] [Flow: call]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B659.w,X		; 1D 59 B6 ; OR accumulator with memory $B659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $733F.w,Y		; BE 3F 73 ; Load X register $733F.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	mvp $18,$59		; 44 59 18 ; Move block positive $18,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $732C.w,X		; 1E 2C 73 ; Arithmetic shift left $732C.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $5927E6.l,X		; 7F E6 27 59 ; Add long $5927E6.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $A5.b		; 25 A5 ; Logical AND $A5.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $E359.w,X		; 1D 59 E3 ; OR accumulator with memory $E359.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $41251E.l		; 2F 1E 25 41 ; AND accumulator with memory (long) $41251E.l [Writes: Accumulator] [Flags: NZ]
	adc $06.b,X		; 75 06 ; Add $06.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2559.w,X		; 1D 59 25 ; OR accumulator with memory $2559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $3E9C.w		; 2E 9C 3E ; Rotate left $3E9C.w [Flags: NCZ]
	adc $438A43.l,X		; 7F 43 8A 43 ; Add long $438A43.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C730.w,Y		; 59 30 C7 ; Exclusive OR accumulator with memory $C730.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2C1A.w,Y		; 59 1A 2C ; Exclusive OR accumulator with memory $2C1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $438F.w		; 20 8F 43 ; Jump to subroutine at $438F.w [Writes: Stack Pointer] [Flow: call]
	ror $06.b,X		; 76 06 ; Rotate right $06.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $1B59.w,X		; 1D 59 1B ; OR accumulator with memory $1B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $22.b,S		; 03 22 ; OR accumulator with stack relative $22.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $E359.w,X		; 1D 59 E3 ; OR accumulator with memory $E359.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $B41F.w,Y		; 59 1F B4 ; Exclusive OR accumulator with memory $B41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2659.w,X		; 1D 59 26 ; OR accumulator with memory $2659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $2D2E25.l,X		; 1F 25 2E 2D ; Logical OR long $2D2E25.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $753F.w,X		; 1E 3F 75 ; Arithmetic shift left $753F.w,X [Reads: X Index] [Flags: NCZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $5929.w,X		; 1E 29 59 ; Arithmetic shift left $5929.w,X [Reads: X Index] [Flags: NCZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $43B6.w,Y		; 59 B6 43 ; Exclusive OR accumulator with memory $43B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $2427E5.l,X		; 7F E5 27 24 ; Add long $2427E5.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $42E3.w,Y		; 59 E3 42 ; Exclusive OR accumulator with memory $42E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $416A.w,Y		; 59 6A 41 ; Exclusive OR accumulator with memory $416A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $B659.w		; 2D 59 B6 ; Logical AND $B659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $BB.b,X		; 75 BB ; Add $BB.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $2C.b		; 24 2C ; Test bits $2C.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $5193.w		; 1C 93 51 ; Test and reset bits $5193.w [Reads: Accumulator] [Flags: Z]
	and $2959.w		; 2D 59 29 ; Logical AND $2959.w with accumulator [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	ror $93.b,X		; 76 93 ; Rotate right $93.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $8A41.w,X		; 1E 41 8A ; Arithmetic shift left $8A41.w,X [Reads: X Index] [Flags: NCZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $B659.w,X		; 1E 59 B6 ; Arithmetic shift left $B659.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $321B59.l,X		; 1F 59 1B 32 ; Logical OR long $321B59.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $B11C.w,Y		; 59 1C B1 ; Exclusive OR accumulator with memory $B11C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$1C.b]		; 27 1C ; AND accumulator with memory (long) [$1C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA2522.l		; 2F 22 25 BA ; AND accumulator with memory (long) $BA2522.l [Writes: Accumulator] [Flags: NZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $42B4A4.l		; 2F A4 B4 42 ; AND accumulator with memory (long) $42B4A4.l [Writes: Accumulator] [Flags: NZ]
	eor $1ACA.w,Y		; 59 CA 1A ; Exclusive OR accumulator with memory $1ACA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	jsr $2F22.w		; 20 22 2F ; Jump to subroutine at $2F22.w [Writes: Stack Pointer] [Flow: call]
	asl $B673.w,X		; 1E 73 B6 ; Arithmetic shift left $B673.w,X [Reads: X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $591D.w		; CE 1D 59 ; Decrement $591D.w [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59BC.w,Y		; 59 BC 59 ; Exclusive OR accumulator with memory $59BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
.ACCU 8
	sep #$25		; E2 25
	and $7E.b		; 25 7E ; Logical AND $7E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($1F.b,S),Y		; 73 1F ; Add with carry (stack relative indirect indexed) ($1F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $CED8.w,Y		; 59 D8 CE ; Exclusive OR accumulator with memory $CED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $8A		; 42 8A ; Reserved instruction
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $B426.w,Y		; 59 26 B4 ; Exclusive OR accumulator with memory $B426.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B559.w,X		; 1D 59 B5 ; OR accumulator with memory $B559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DAB.w,Y		; 59 AB 2D ; Exclusive OR accumulator with memory $2DAB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $20.b,X		; B4 20 ; Load Y register $20.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	ror $B173.w,X		; 7E 73 B1 ; Rotate right $B173.w,X [Reads: X Index] [Flags: NCZ]
	and ($32.b,S),Y		; 33 32 ; AND accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $BE59.w		; 2D 59 BE ; Logical AND $BE59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2E.b)		; D2 2E ; Compare accumulator (indirect) ($2E.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73C6.w,Y		; 59 C6 73 ; Exclusive OR accumulator with memory $73C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $7F43.w,Y		; BE 43 7F ; Load X register $7F43.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251E.w,Y		; 59 1E 25 ; Exclusive OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $76A6.w,X		; 1D A6 76 ; OR accumulator with memory $76A6.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1A.b)		; 12 1A ; OR accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $1A2B.w		; AE 2B 1A ; Load $1A2B.w into X register [Writes: X Index] [Flags: NZ]
	and ($BA.b,X)		; 21 BA ; Logical AND ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc $0001.w		; 6D 01 00 ; Add $0001.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $59.b,S		; C3 59 ; Compare accumulator (stack relative) $59.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $A69D.w,Y		; 59 9D A6 ; Exclusive OR accumulator with memory $A69D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BB59.w		; 2D 59 BB ; Logical AND $BB59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	stz $DE59.w		; 9C 59 DE ; Store zero to $DE59.w
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	tsb $9F2E.w		; 0C 2E 9F ; Test and set bits $9F2E.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $26BE.w,Y		; 59 BE 26 ; Exclusive OR accumulator with memory $26BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$2B.b],Y		; 97 2B ; Store accumulator (long indexed) [$2B.b],Y [Reads: Direct Page, Y Index, Accumulator]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $E2.b,X		; 76 E2 ; Rotate right $E2.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $8B27.w,Y		; BE 27 8B ; Load X register $8B27.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $B4.b		; 25 B4 ; Logical AND $B4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $B459.w,X		; 1E 59 B4 ; Arithmetic shift left $B459.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $2DA6.w,X		; 9D A6 2D ; Store accumulator to $2DA6.w,X [Reads: Accumulator, X Index]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0001.w		; 6D 01 00 ; Add $0001.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $D1BF.w,Y		; 59 BF D1 ; Exclusive OR accumulator with memory $D1BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	cmp $9176.w,X		; DD 76 91 ; Compare accumulator $9176.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A0C.w,Y		; 59 0C 1A ; Exclusive OR accumulator with memory $1A0C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C22.w		; 20 22 1C ; Jump to subroutine at $1C22.w [Writes: Stack Pointer] [Flow: call]
	eor $2112.w,Y		; 59 12 21 ; Exclusive OR accumulator with memory $2112.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $07016D.l,X		; 7F 6D 01 07 ; Add long $07016D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2D1E.w,Y		; BE 1E 2D ; Load X register $2D1E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $C819.w,Y		; 59 19 C8 ; Exclusive OR accumulator with memory $C819.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59B4B3.l		; 2F B3 B4 59 ; AND accumulator with memory (long) $59B4B3.l [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ror $BA.b,X		; 76 BA ; Rotate right $BA.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $D891.w,Y		; 59 91 D8 ; Exclusive OR accumulator with memory $D891.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222B.w,Y		; 59 2B 22 ; Exclusive OR accumulator with memory $222B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $D28B.w,X		; DD 8B D2 ; Compare accumulator $D28B.w,X [Reads: X Index] [Flags: NCZ]
	rol $1C2B.w		; 2E 2B 1C ; Rotate left $1C2B.w [Flags: NCZ]
	asl $7F43.w,X		; 1E 43 7F ; Arithmetic shift left $7F43.w,X [Reads: X Index] [Flags: NCZ]
	adc $0001.w		; 6D 01 00 ; Add $0001.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E6.b,X		; 75 E6 ; Add $E6.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $E459.w,X		; 1E 59 E4 ; Arithmetic shift left $E459.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $0C.b,X		; 76 0C ; Rotate right $0C.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $5925A2.l		; 0F A2 25 59 ; OR accumulator with memory (long) $5925A2.l [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $2673.w,X		; 7E 73 26 ; Rotate right $2673.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $E0DA59.l		; 8F 59 DA E0 ; Store accumulator (long) $E0DA59.l [Reads: Accumulator]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $0475.w,X		; 3E 75 04 ; Rotate left $0475.w,X [Reads: X Index] [Flags: NCZ]
	and $59D8A0.l		; 2F A0 D8 59 ; AND accumulator with memory (long) $59D8A0.l [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tsb $A192.w		; 0C 92 A1 ; Test and set bits $A192.w [Reads: Accumulator] [Flags: Z]
	ora ($30.b)		; 12 30 ; OR accumulator with memory (indirect) ($30.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $1C76.w,X		; 1D 76 1C ; OR accumulator with memory $1C76.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta ($C2.b,S),Y		; 93 C2 ; Store accumulator (stack relative indirect indexed) ($C2.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $2BB1.w,Y		; 59 B1 2B ; Exclusive OR accumulator with memory $2BB1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $988B.w,X		; 1D 8B 98 ; OR accumulator with memory $988B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $4132.w,X		; 1D 32 41 ; OR accumulator with memory $4132.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $00016D.l,X		; 7F 6D 01 00 ; Add long $00016D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E6.b,X		; 75 E6 ; Add $E6.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $E459.w,X		; 1E 59 E4 ; Arithmetic shift left $E459.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2E.b,S		; 23 2E ; AND accumulator with stack relative $2E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	eor $DAB4.w,Y		; 59 B4 DA ; Exclusive OR accumulator with memory $DAB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $76D8.w,Y		; 59 D8 76 ; Exclusive OR accumulator with memory $76D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$2525.w		; E0 25 25 ; Compare #$2525.w with X register [Reads: X Index] [Flags: NCZ]
	eor $A227.w,Y		; 59 27 A2 ; Exclusive OR accumulator with memory $A227.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $B626.w		; 2C 26 B6 ; Test bits $B626.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($32.b,X)		; 21 32 ; Logical AND ($32.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $16016D.l,X		; 7F 6D 01 16 ; Add long $16016D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $C71C.w,Y		; 59 1C C7 ; Exclusive OR accumulator with memory $C71C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $222D.w,X		; 9E 2D 22 ; Store zero to $222D.w,X [Reads: X Index]
	cmp [$75.b]		; C7 75 ; Compare accumulator (long) [$75.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	lda $C0.b,X		; B5 C0 ; Load $C0.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	ldy $1D28.w		; AC 28 1D ; Load $1D28.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $1DDA.w,Y		; 59 DA 1D ; Exclusive OR accumulator with memory $1DDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($41.b)		; 32 41 ; AND accumulator with memory (indirect) ($41.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $0859.w		; 2D 59 08 ; Logical AND $0859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ror $DF.b,X		; 76 DF ; Rotate right $DF.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1E9B.w,Y		; 59 9B 1E ; Exclusive OR accumulator with memory $1E9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $9C96.w,Y		; 59 96 9C ; Exclusive OR accumulator with memory $9C96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $201A.w,Y		; 59 1A 20 ; Exclusive OR accumulator with memory $201A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $6D7F43.l		; 8F 43 7F 6D ; Store accumulator (long) $6D7F43.l [Reads: Accumulator]
	ora ($07.b,X)		; 01 07 ; Logical OR ($07.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $26.b		; 26 26 ; Rotate left $26.b [Reads: Direct Page] [Flags: NCZ]
	rol $43.b		; 26 43 ; Rotate left $43.b [Reads: Direct Page] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $28BB.w,Y		; 59 BB 28 ; Exclusive OR accumulator with memory $28BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	adc $AD.b,X		; 75 AD ; Add $AD.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $5993.w,Y		; 59 93 59 ; Exclusive OR accumulator with memory $5993.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $D6.b,X		; B4 D6 ; Load Y register $D6.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $B3D3.w,X		; 1E D3 B3 ; Arithmetic shift left $B3D3.w,X [Reads: X Index] [Flags: NCZ]
	sta $B42D.w,X		; 9D 2D B4 ; Store accumulator to $B42D.w,X [Reads: Accumulator, X Index]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $0C.b,X		; 76 0C ; Rotate right $0C.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DA8.w,Y		; 59 A8 2D ; Exclusive OR accumulator with memory $2DA8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E27.w		; 2E 27 1E ; Rotate left $1E27.w [Flags: NCZ]
	and $08737E.l,X		; 3F 7E 73 08 ; AND accumulator with memory (long,X) $08737E.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $1E24.w,X		; BD 24 1E ; Load $1E24.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$43.b		; 29 43 ; Logical AND #$43.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $00,$59		; 44 59 00 ; Move block positive $00,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	bit $5924.w		; 2C 24 59 ; Test bits $5924.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $73.b,Y		; B6 73 ; Load X register $73.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $B459.w		; 2D 59 B4 ; Logical AND $B459.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $1E.b,X		; D6 1E ; Decrement memory $1E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	cmp ($1E.b,S),Y		; D3 1E ; Compare accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	ora $7F68.w,X		; 1D 68 7F ; OR accumulator with memory $7F68.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0D01.w		; 6D 01 0D ; Add $0D01.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $6C59.w,X		; 1E 59 6C ; Arithmetic shift left $6C59.w,X [Reads: X Index] [Flags: NCZ]
	brk $6C.b		; 00 6C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($59.b,X)		; 01 59 ; Logical OR ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $2D.b		; 25 2D ; Logical AND $2D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($32.b,X)		; 21 32 ; Logical AND ($32.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	clc		; 18 ; Clear carry flag [Flags: C]
	asl $B11E.w,X		; 1E 1E B1 ; Arithmetic shift left $B11E.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	lda ($59.b),Y		; B1 59 ; Load accumulator ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($21.b),Y		; B1 21 ; Load accumulator ($21.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $6D7F.w,X		; 3E 7F 6D ; Rotate left $6D7F.w,X [Reads: X Index] [Flags: NCZ]
	ora ($08.b,X)		; 01 08 ; Logical OR ($08.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1DB4.w,Y		; 59 B4 1D ; Exclusive OR accumulator with memory $1DB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1AA4.w,X		; 1E A4 1A ; Arithmetic shift left $1AA4.w,X [Reads: X Index] [Flags: NCZ]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $59BC.w,Y		; 59 BC 59 ; Exclusive OR accumulator with memory $59BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $75B5.w,Y		; 59 B5 75 ; Exclusive OR accumulator with memory $75B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 16
	rep #$59		; C2 59
	ldy $D6.b,X		; B4 D6 ; Load Y register $D6.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $A4D3.w,X		; 1E D3 A4 ; Arithmetic shift left $A4D3.w,X [Reads: X Index] [Flags: NCZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	.db $B0, $2C		; B0 2C ; Branch if carry set to $B0, $2C [Flow: branch]
	eor $2E1F.w,Y		; 59 1F 2E ; Exclusive OR accumulator with memory $2E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $CE2E.w		; 2D 2E CE ; Logical AND $CE2E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cmp $A8B3B6.l,X		; DF B6 B3 A8 ; Compare accumulator (long,X) $A8B3B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DCE.w,Y		; 59 CE 2D ; Exclusive OR accumulator with memory $2DCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $272B.w		; 2E 2B 27 ; Rotate left $272B.w [Flags: NCZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2D1E.w,Y		; BE 1E 2D ; Load X register $2D1E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2B.b,S),Y		; D3 2B ; Compare accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $BC59.w,X		; 1E 59 BC ; Arithmetic shift left $BC59.w,X [Reads: X Index] [Flags: NCZ]
	ror $D3.b,X		; 76 D3 ; Rotate right $D3.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $90, $B3		; 90 B3 ; Branch if carry clear to $90, $B3 [Flow: branch]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A69D.w,Y		; 59 9D A6 ; Exclusive OR accumulator with memory $A69D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $7F43.w		; 2D 43 7F ; Logical AND $7F43.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $0001.w		; 6D 01 00 ; Add $0001.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E6.b,X		; 75 E6 ; Add $E6.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2CAC.w,Y		; 59 AC 2C ; Exclusive OR accumulator with memory $2CAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $2922.w		; 2C 22 29 ; Test bits $2922.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A03.w,Y		; 59 03 1A ; Exclusive OR accumulator with memory $1A03.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $76.b		; 24 76 ; Test bits $76.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59AE.w,Y		; 59 AE 59 ; Exclusive OR accumulator with memory $59AE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	asl $2C1A.w,X		; 1E 1A 2C ; Arithmetic shift left $2C1A.w,X [Reads: X Index] [Flags: NCZ]
	rol $A8CD.w		; 2E CD A8 ; Rotate left $A8CD.w [Flags: NCZ]
	eor $7ED8.w,Y		; 59 D8 7E ; Exclusive OR accumulator with memory $7ED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $B424.w		; 2C 24 B4 ; Test bits $B424.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsr $7F43.w		; 20 43 7F ; Jump to subroutine at $7F43.w [Writes: Stack Pointer] [Flow: call]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $262C.w,Y		; 59 2C 26 ; Exclusive OR accumulator with memory $262C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $21.b,Y		; B6 21 ; Load X register $21.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor ($2C.b),Y		; 51 2C ; Exclusive OR accumulator with memory ($2C.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $29.b,X		; 76 29 ; Rotate right $29.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $A127.w		; 2D 27 A1 ; Logical AND $A127.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $1573.w,X		; 7E 73 15 ; Rotate right $1573.w,X [Reads: X Index] [Flags: NCZ]
	jsl $20BA25.l		; 22 25 BA 20 ; Jump to subroutine long $20BA25.l [Writes: Stack Pointer] [Flow: call]
	asl $0E59.w,X		; 1E 59 0E ; Arithmetic shift left $0E59.w,X [Reads: X Index] [Flags: NCZ]
	ora $2E0E59.l,X		; 1F 59 0E 2E ; Logical OR long $2E0E59.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $921C.w		; 2D 1C 92 ; Logical AND $921C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $7F41.w		; 2C 41 7F ; Test bits $7F41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc $0001.w		; 6D 01 00 ; Add $0001.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1EDB.w,Y		; 59 DB 1E ; Exclusive OR accumulator with memory $1EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $CD2E.w		; 2C 2E CD ; Test bits $CD2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	dec $B4D3.w		; CE D3 B4 ; Decrement $B4D3.w [Flags: NZ]
	jsr $B476.w		; 20 76 B4 ; Jump to subroutine at $B476.w [Writes: Stack Pointer] [Flow: call]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2B20.w,Y		; 59 20 2B ; Exclusive OR accumulator with memory $2B20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $1A321E.l		; 2F 1E 32 1A ; AND accumulator with memory (long) $1A321E.l [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $7F41.w,X		; 1D 41 7F ; OR accumulator with memory $7F41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $5932.w		; 2E 32 59 ; Rotate left $5932.w [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E27.w,Y		; 59 27 1E ; Exclusive OR accumulator with memory $1E27.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	bit $B4.b		; 24 B4 ; Test bits $B4.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2698.w,Y		; 59 98 26 ; Exclusive OR accumulator with memory $2698.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ror $B4.b,X		; 76 B4 ; Rotate right $B4.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	eor $2112.w,Y		; 59 12 21 ; Exclusive OR accumulator with memory $2112.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $00016D.l,X		; 7F 6D 01 00 ; Add long $00016D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp $5920D5.l		; CF D5 20 59 ; Compare accumulator (long) $5920D5.l [Reads: Accumulator] [Flags: NCZ]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $761E1D.l		; 22 1D 1E 76 ; Jump to subroutine long $761E1D.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $3229.w,Y		; 59 29 32 ; Exclusive OR accumulator with memory $3229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc $0701.w		; 6D 01 07 ; Add $0701.w to accumulator with carry [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2C2E.w		; 1C 2E 2C ; Test and reset bits $2C2E.w [Reads: Accumulator] [Flags: Z]
	rol $E875.w,X		; 3E 75 E8 ; Rotate left $E875.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $5927.w		; 2E 27 59 ; Rotate left $5927.w [Flags: NCZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stx $2B.b,Y		; 96 2B ; Store X register $2B.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $1F22A1.l		; 22 A1 22 1F ; Jump to subroutine long $1F22A1.l [Writes: Stack Pointer] [Flow: call]
	ror $E3.b,X		; 76 E3 ; Rotate right $E3.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $32DB.w,Y		; 59 DB 32 ; Exclusive OR accumulator with memory $32DB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $A6.b,S		; A3 A6 ; Load accumulator (stack relative) $A6.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ror $0673.w,X		; 7E 73 06 ; Rotate right $0673.w,X [Reads: X Index] [Flags: NCZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	cpx #$412B.w		; E0 2B 41 ; Compare #$412B.w with X register [Reads: X Index] [Flags: NCZ]
	adc $00016D.l,X		; 7F 6D 01 00 ; Add long $00016D.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1D1A.w		; 1C 1A 1D ; Test and reset bits $1D1A.w [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $BA1A.w,Y		; 59 1A BA ; Exclusive OR accumulator with memory $BA1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1A.b		; 24 1A ; Test bits $1A.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($1A.b,S),Y		; 33 1A ; AND accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $12.b		; A4 12 ; Load $12.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	jsl $59DD25.l		; 22 25 DD 59 ; Jump to subroutine long $59DD25.l [Writes: Stack Pointer] [Flow: call]
	brk $2B.b		; 00 2B ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	eor $76DA.w,Y		; 59 DA 76 ; Exclusive OR accumulator with memory $76DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	.db $B0, $2C		; B0 2C ; Branch if carry set to $B0, $2C [Flow: branch]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2826.w,Y		; 59 26 28 ; Exclusive OR accumulator with memory $2826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $2D27.w,Y		; BE 27 2D ; Load X register $2D27.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1FCC.w,Y		; 59 CC 1F ; Exclusive OR accumulator with memory $1FCC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $1A.b,Y		; B6 1A ; Load X register $1A.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	sta $75.b,X		; 95 75 ; Store accumulator to $75.b,X [Reads: Accumulator, X Index]
	cmp ($C8.b,S),Y		; D3 C8 ; Compare accumulator (stack relative indirect indexed) ($C8.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $E3591F.l		; 22 1F 59 E3 ; Jump to subroutine long $E3591F.l [Writes: Stack Pointer] [Flow: call]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $3659.w,Y		; BE 59 36 ; Load X register $3659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	ldx $3F.b,Y		; B6 3F ; Load X register $3F.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $0F,$59		; 44 59 0F ; Move block positive $0F,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit #$03.b		; 89 03 ; Test bits #$03.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $DF59.w		; 2D 59 DF ; Logical AND $DF59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($A2.b,X)		; 21 A2 ; Logical AND ($A2.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $68B6.w,Y		; 59 B6 68 ; Exclusive OR accumulator with memory $68B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $211A07.l,X		; 7F 07 1A 21 ; Add long $211A07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $E58A.w,X		; 3E 8A E5 ; Rotate left $E58A.w,X [Reads: X Index] [Flags: NCZ]
	and [$24.b]		; 27 24 ; AND accumulator with memory (long) [$24.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $32.b		; E6 32 ; Increment $32.b [Reads: Direct Page] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($75.b)		; 32 75 ; AND accumulator with memory (indirect) ($75.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	cmp $59B5.w		; CD B5 59 ; Compare $59B5.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $B42D.w,Y		; 59 2D B4 ; Exclusive OR accumulator with memory $B42D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $2B22.w		; 1C 22 2B ; Test and reset bits $2B22.w [Reads: Accumulator] [Flags: Z]
	trb $1E25.w		; 1C 25 1E ; Test and reset bits $1E25.w [Reads: Accumulator] [Flags: Z]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	stz $762C.w		; 9C 2C 76 ; Store zero to $762C.w
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $24BA.w,Y		; 59 BA 24 ; Exclusive OR accumulator with memory $24BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $9159.w,X		; 1E 59 91 ; Arithmetic shift left $9159.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2ED2.w,Y		; 59 D2 2E ; Exclusive OR accumulator with memory $2ED2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	dec $7E.b		; C6 7E ; Decrement $7E.b [Reads: Direct Page] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $222B.w,Y		; 59 2B 22 ; Exclusive OR accumulator with memory $222B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $8A41.w,X		; DD 41 8A ; Compare accumulator $8A41.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	clv		; B8 ; Clear overflow flag [Flags: V]
	eor $94E1.w,Y		; 59 E1 94 ; Exclusive OR accumulator with memory $94E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $29B1.w,Y		; 59 B1 29 ; Exclusive OR accumulator with memory $29B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$A5.b		; 29 A5 ; Logical AND #$A5.b with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $B2.b		; 26 B2 ; Rotate left $B2.b [Reads: Direct Page] [Flags: NCZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	ora $73272E.l,X		; 1F 2E 27 73 ; Logical OR long $73272E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp $5920D5.l		; CF D5 20 59 ; Compare accumulator (long) $5920D5.l [Reads: Accumulator] [Flags: NCZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $43B6.w,Y		; 59 B6 43 ; Exclusive OR accumulator with memory $43B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $0773.w,X		; 7E 73 07 ; Rotate right $0773.w,X [Reads: X Index] [Flags: NCZ]
	asl $5921.w,X		; 1E 21 59 ; Arithmetic shift left $5921.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($41.b,X)		; 21 41 ; Logical AND ($41.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b)		; 12 1E ; OR accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($41.b,X)		; 21 41 ; Logical AND ($41.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $75C2.w,Y		; 59 C2 75 ; Exclusive OR accumulator with memory $75C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $D6.b,X		; B4 D6 ; Load Y register $D6.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $A4D3.w,X		; 1E D3 A4 ; Arithmetic shift left $A4D3.w,X [Reads: X Index] [Flags: NCZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	and $251A.w		; 2D 1A 25 ; Logical AND $251A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	ror $E1.b,X		; 76 E1 ; Rotate right $E1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1159.w		; AD 59 11 ; Load $1159.w into accumulator [Writes: Accumulator] [Flags: NZ]
	jmp.w [$1E1E]		; DC 1E 1E ; Jump long indirect [$1E1E] [Flow: jump]
	bit $7F43.w		; 2C 43 7F ; Test bits $7F43.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($41.b,X)		; 21 41 ; Logical AND ($41.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $E3.b,X		; 75 E3 ; Add $E3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	rol TSUB.w		; 2E 2D 21 ; Rotate left TSUB.w [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $DA59.w,X		; 1D 59 DA ; OR accumulator with memory $DA59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ror $D9.b,X		; 76 D9 ; Rotate right $D9.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $591F.w,X		; 1E 1F 59 ; Arithmetic shift left $591F.w,X [Reads: X Index] [Flags: NCZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $B20B.w,Y		; 59 0B B2 ; Exclusive OR accumulator with memory $B20B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($CF.b,S),Y		; 73 CF ; Add with carry (stack relative indirect indexed) ($CF.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $1E1F.w,Y		; 59 1F 1E ; Exclusive OR accumulator with memory $1E1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BB.b		; 25 BB ; Logical AND $BB.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp $1EA7.w,Y		; D9 A7 1E ; Compare accumulator $1EA7.w,Y [Reads: Y Index] [Flags: NCZ]
	bit $E059.w		; 2C 59 E0 ; Test bits $E059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($B4.b,S),Y		; 73 B4 ; Add with carry (stack relative indirect indexed) ($B4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $9EB0.w,Y		; 59 B0 9E ; Exclusive OR accumulator with memory $9EB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1C97.w,Y		; 59 97 1C ; Exclusive OR accumulator with memory $1C97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx #$73CE.w		; E0 CE 73 ; Compare #$73CE.w with X register [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $221A2B.l,X		; 1F 2B 1A 22 ; Logical OR long $221A2B.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $B397.w,Y		; 59 97 B3 ; Exclusive OR accumulator with memory $B397.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E1A.w		; 1C 1A 2E ; Test and reset bits $2E1A.w [Reads: Accumulator] [Flags: Z]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cmp $1A592C.l,X		; DF 2C 59 1A ; Compare accumulator (long,X) $1A592C.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $D3BD.w,Y		; 59 BD D3 ; Exclusive OR accumulator with memory $D3BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $73.b		; A6 73 ; Load $73.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $262C.w		; 9C 2C 26 ; Store zero to $262C.w
	ldx $21.b,Y		; B6 21 ; Load X register $21.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $9E		; B0 9E ; Branch if carry set to $B0, $9E [Flow: branch]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CDF.w,Y		; 59 DF 2C ; Exclusive OR accumulator with memory $2CDF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $1F1E.w,Y		; D9 1E 1F ; Compare accumulator $1F1E.w,Y [Reads: Y Index] [Flags: NCZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$CE.b		; 29 CE ; Logical AND #$CE.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and $9EA5.w		; 2D A5 9E ; Logical AND $9EA5.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc ($D3.b,S),Y		; 73 D3 ; Add with carry (stack relative indirect indexed) ($D3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $2659.w,X		; 1E 59 26 ; Arithmetic shift left $2659.w,X [Reads: X Index] [Flags: NCZ]
	jsl $251D1D.l		; 22 1D 1D 25 ; Jump to subroutine long $251D1D.l [Writes: Stack Pointer] [Flow: call]
	asl $1A40.w,X		; 1E 40 1A ; Arithmetic shift left $1A40.w,X [Reads: X Index] [Flags: NCZ]
	jsr $20A4.w		; 20 A4 20 ; Jump to subroutine at $20A4.w [Writes: Stack Pointer] [Flow: call]
	rol $3E32.w		; 2E 32 3E ; Rotate left $3E32.w [Flags: NCZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $59B1.w,Y		; 59 B1 59 ; Exclusive OR accumulator with memory $59B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($43.b),Y		; B1 43 ; Load accumulator ($43.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $211A07.l,X		; 7F 07 1A 21 ; Add long $211A07.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $E58A.w,X		; 3E 8A E5 ; Rotate left $E58A.w,X [Reads: X Index] [Flags: NCZ]
	and [$24.b]		; 27 24 ; AND accumulator with memory (long) [$24.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $1E2D.w,Y		; 59 2D 1E ; Exclusive OR accumulator with memory $1E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $75E3.w,Y		; 59 E3 75 ; Exclusive OR accumulator with memory $75E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $4221.w		; 2D 21 42 ; Logical AND $4221.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B459C4.l,X		; 1F C4 59 B4 ; Logical OR long $B459C4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $9ECE.w		; 1C CE 9E ; Test and reset bits $9ECE.w [Reads: Accumulator] [Flags: Z]
	sta $76.b,X		; 95 76 ; Store accumulator to $76.b,X [Reads: Accumulator, X Index]
	sta [$1A.b],Y		; 97 1A ; Store accumulator (long indexed) [$1A.b],Y [Reads: Direct Page, Y Index, Accumulator]
	rol $322D.w		; 2E 2D 32 ; Rotate left $322D.w [Flags: NCZ]
	eor $2CB4.w,Y		; 59 B4 2C ; Exclusive OR accumulator with memory $2CB4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $3229.w,Y		; 59 29 32 ; Exclusive OR accumulator with memory $3229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	ora $7E42.w,X		; 1D 42 7E ; OR accumulator with memory $7E42.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1B.b,S),Y		; 73 1B ; Add with carry (stack relative indirect indexed) ($1B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cmp $591EC7.l		; CF C7 1E 59 ; Compare accumulator (long) $591EC7.l [Reads: Accumulator] [Flags: NCZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $A4.b		; 25 A4 ; Logical AND $A4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $C89F.w,Y		; 59 9F C8 ; Exclusive OR accumulator with memory $C89F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59DE.w,Y		; 59 DE 59 ; Exclusive OR accumulator with memory $59DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc ($D3.b,S),Y		; 73 D3 ; Add with carry (stack relative indirect indexed) ($D3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $90, $1A		; 90 1A ; Branch if carry clear to $90, $1A [Flow: branch]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $9859.w,X		; 1D 59 98 ; OR accumulator with memory $9859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $321A.w		; 2C 1A 32 ; Test bits $321A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($41.b,X)		; 21 41 ; Logical AND ($41.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $2C.b		; 00 2C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $751A.w,Y		; 59 1A 75 ; Exclusive OR accumulator with memory $751A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $D42D.w,X		; BD 2D D4 ; Load $D42D.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora $2D1C1A.l,X		; 1F 1A 1C 2D ; Logical OR long $2D1C1A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A1.b,S),Y		; D3 A1 ; Compare accumulator (stack relative indirect indexed) ($A1.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $B576.w		; 1C 76 B5 ; Test and reset bits $B576.w [Reads: Accumulator] [Flags: Z]
	eor $24BD.w,Y		; 59 BD 24 ; Exclusive OR accumulator with memory $24BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($B6.b,S),Y		; B3 B6 ; Load accumulator (stack relative indirect indexed) ($B6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8F2B.w,Y		; 59 2B 8F ; Exclusive OR accumulator with memory $8F2B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $DF2C.w,Y		; 59 2C DF ; Exclusive OR accumulator with memory $DF2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $2826.w,Y		; 99 26 28 ; Store accumulator to $2826.w,Y [Reads: Y Index, Accumulator]
	and $D8591E.l		; 2F 1E 59 D8 ; AND accumulator with memory (long) $D8591E.l [Writes: Accumulator] [Flags: NZ]
	eor $221A.w,Y		; 59 1A 22 ; Exclusive OR accumulator with memory $221A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $73DE.w,Y		; 59 DE 73 ; Exclusive OR accumulator with memory $73DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $A859.w,X		; 1E 59 A8 ; Arithmetic shift left $A859.w,X [Reads: X Index] [Flags: NCZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	cmp [$27.b],Y		; D7 27 ; Compare accumulator (long indexed) [$27.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $7342.w		; 2C 42 73 ; Test bits $7342.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $8F2B.w,Y		; 59 2B 8F ; Exclusive OR accumulator with memory $8F2B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $32BD.w,Y		; 59 BD 32 ; Exclusive OR accumulator with memory $32BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $28D3.w,Y		; 59 D3 28 ; Exclusive OR accumulator with memory $28D3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $222712.l,X		; 7F 12 27 22 ; Add long $222712.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $1E251F.l,X		; 1F 1F 25 1E ; Logical OR long $1E251F.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $3E6A.w,Y		; 59 6A 3E ; Exclusive OR accumulator with memory $3E6A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1A59.w		; AD 59 1A ; Load $1A59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2D98.w,Y		; 59 98 2D ; Exclusive OR accumulator with memory $2D98.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $7629.w,X		; 1E 29 76 ; Arithmetic shift left $7629.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $B459.w		; 20 59 B4 ; Jump to subroutine at $B459.w [Writes: Stack Pointer] [Flow: call]
	and $43737E.l,X		; 3F 7E 73 43 ; AND accumulator with memory (long,X) $43737E.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1ED0.w,Y		; 59 D0 1E ; Exclusive OR accumulator with memory $1ED0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $C759.w		; AD 59 C7 ; Load $C759.w into accumulator [Writes: Accumulator] [Flags: NZ]
	asl $7343.w,X		; 1E 43 73 ; Arithmetic shift left $7343.w,X [Reads: X Index] [Flags: NCZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $51.b		; C5 51 ; Compare $51.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NCZ]
	trb $2E1A.w		; 1C 1A 2E ; Test and reset bits $2E1A.w [Reads: Accumulator] [Flags: Z]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222C.w,Y		; 59 2C 22 ; Exclusive OR accumulator with memory $222C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $7543.w		; 9C 43 75 ; Store zero to $7543.w
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $CA281E.l		; 0F 1E 28 CA ; OR accumulator with memory (long) $CA281E.l [Writes: Accumulator] [Flags: NZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $D959.w		; 2D 59 D9 ; Logical AND $D959.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $1C59.w		; 2C 59 1C ; Test bits $1C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $A973.w,X		; 7E 73 A9 ; Rotate right $A973.w,X [Reads: X Index] [Flags: NCZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $D7592B.l		; 22 2B 59 D7 ; Jump to subroutine long $D7592B.l [Writes: Stack Pointer] [Flow: call]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $B49B.w,Y		; 59 9B B4 ; Exclusive OR accumulator with memory $B49B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $9F73.w		; 20 73 9F ; Jump to subroutine at $9F73.w [Writes: Stack Pointer] [Flow: call]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	eor $1FC6.w,Y		; 59 C6 1F ; Exclusive OR accumulator with memory $1FC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $127343.l		; 8F 43 73 12 ; Store accumulator (long) $127343.l [Reads: Accumulator]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $2C591F.l,X		; 1F 1F 59 2C ; Logical OR long $2C591F.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $7E431F.l,X		; 1F 1F 43 7E ; Logical OR long $7E431F.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E7.b,S),Y		; 73 E7 ; Add with carry (stack relative indirect indexed) ($E7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1C40.w		; 20 40 1C ; Jump to subroutine at $1C40.w [Writes: Stack Pointer] [Flow: call]
	sty $1C.b,X		; 94 1C ; Store Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	.db $B0, $27		; B0 27 ; Branch if carry set to $B0, $27 [Flow: branch]
	jsr $2759.w		; 20 59 27 ; Jump to subroutine at $2759.w [Writes: Stack Pointer] [Flow: call]
	asl $412D.w,X		; 1E 2D 41 ; Arithmetic shift left $412D.w,X [Reads: X Index] [Flags: NCZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	sbc ($A0.b,X)		; E1 A0 ; Subtract with carry ($A0.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2D97.w,Y		; 59 97 2D ; Exclusive OR accumulator with memory $2D97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $42.b,X		; D6 42 ; Decrement memory $42.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $A873.w		; 2D 73 A8 ; Logical AND $A873.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $5108.w,Y		; 59 08 51 ; Exclusive OR accumulator with memory $5108.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $A525.w,Y		; 59 25 A5 ; Exclusive OR accumulator with memory $A525.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B659.w,X		; 1D 59 B6 ; OR accumulator with memory $B659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $222712.l,X		; 7F 12 27 22 ; Add long $222712.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $1E251F.l,X		; 1F 1F 25 1E ; Logical OR long $1E251F.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $25E0.w,Y		; 59 E0 25 ; Exclusive OR accumulator with memory $25E0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $75.b		; 25 75 ; Logical AND $75.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($C7.b)		; D2 C7 ; Compare accumulator (indirect) ($C7.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $76.b,S		; 43 76 ; Exclusive OR accumulator with stack relative $76.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $21.b,X		; 16 21 ; Arithmetic shift left $21.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	stz $591D.w,X		; 9E 1D 59 ; Store zero to $591D.w,X [Reads: X Index]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $2659.w,X		; 1E 59 26 ; Arithmetic shift left $2659.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $2022.w		; 2C 22 20 ; Test bits $2022.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$3F.b]		; 27 3F ; AND accumulator with memory (long) [$3F.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $2C75.w		; 2D 75 2C ; Logical AND $2C75.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $BA29.w,Y		; 59 29 BA ; Exclusive OR accumulator with memory $BA29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $1D59.w		; 2C 59 1D ; Test bits $1D59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $BE761E.l		; 2F 1E 76 BE ; AND accumulator with memory (long) $BE761E.l [Writes: Accumulator] [Flags: NZ]
	eor $BB1A.w,Y		; 59 1A BB ; Exclusive OR accumulator with memory $BB1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $128A.w,X		; 3E 8A 12 ; Rotate left $128A.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $D11E.w,X		; 1E 1E D1 ; Arithmetic shift left $D11E.w,X [Reads: X Index] [Flags: NCZ]
	rol $087F.w,X		; 3E 7F 08 ; Rotate left $087F.w,X [Reads: X Index] [Flags: NCZ]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D759.w,X		; 1D 59 D7 ; OR accumulator with memory $D759.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59B8.w,Y		; 59 B8 59 ; Exclusive OR accumulator with memory $59B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $DA59.w,X		; 1D 59 DA ; OR accumulator with memory $DA59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $97.b,X		; 75 97 ; Add $97.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $1F1E.w,Y		; D9 1E 1F ; Compare accumulator $1F1E.w,Y [Reads: Y Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	and $737E76.l,X		; 3F 76 7E 73 ; AND accumulator with memory (long,X) $737E76.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $59.b,S		; C3 59 ; Compare accumulator (stack relative) $59.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $D39A.w,Y		; 59 9A D3 ; Exclusive OR accumulator with memory $D39A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $592525.l		; 22 25 25 59 ; Jump to subroutine long $592525.l [Writes: Stack Pointer] [Flow: call]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $5929.w,X		; 1E 29 59 ; Arithmetic shift left $5929.w,X [Reads: X Index] [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	.db $D0, $1C		; D0 1C ; Branch if not equal to $D0, $1C [Flow: branch]
	dec $592D.w		; CE 2D 59 ; Decrement $592D.w [Flags: NZ]
	lda #$26.b		; A9 26 ; Load #$26.b into accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($A7.b,S),Y		; 73 A7 ; Add with carry (stack relative indirect indexed) ($A7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldx $32.b		; A6 32 ; Load $32.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $251E.w,Y		; 59 1E 25 ; Exclusive OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $3F		; D0 3F ; Branch if not equal to $D0, $3F [Flow: branch]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cpy $B526.w		; CC 26 B5 ; Compare $B526.w with Y register [Reads: Y Index] [Flags: NCZ]
	asl $3F59.w,X		; 1E 59 3F ; Arithmetic shift left $3F59.w,X [Reads: X Index] [Flags: NCZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $0F,$59		; 44 59 0F ; Move block positive $0F,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $B5.b		; 26 B5 ; Rotate left $B5.b [Reads: Direct Page] [Flags: NCZ]
	asl $C259.w,X		; 1E 59 C2 ; Arithmetic shift left $C259.w,X [Reads: X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$13.b		; 89 13 ; Test bits #$13.b with accumulator [Reads: Accumulator] [Flags: Z]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $A6A7.w,Y		; 59 A7 A6 ; Exclusive OR accumulator with memory $A6A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($C7.b)		; 32 C7 ; AND accumulator with memory (indirect) ($C7.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $7F68.w,X		; 1E 68 7F ; Arithmetic shift left $7F68.w,X [Reads: X Index] [Flags: NCZ]
	asl $420A.w		; 0E 0A 42 ; Arithmetic shift left $420A.w [Flags: NCZ]
	eor $1F22.w,Y		; 59 22 1F ; Exclusive OR accumulator with memory $1F22.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $752D27.l,X		; DF 27 2D 75 ; Compare accumulator (long,X) $752D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	ldx $42.b,Y		; B6 42 ; Load X register $42.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A2B.w,X		; 1D 2B 1A ; OR accumulator with memory $1A2B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $D759.w		; 20 59 D7 ; Jump to subroutine at $D759.w [Writes: Stack Pointer] [Flow: call]
	and $9A59.w		; 2D 59 9A ; Logical AND $9A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($76.b,S),Y		; D3 76 ; Compare accumulator (stack relative indirect indexed) ($76.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	lda [$A6.b]		; A7 A6 ; Load accumulator (long) [$A6.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $117F.w,X		; 3E 7F 11 ; Rotate left $117F.w,X [Reads: X Index] [Flags: NCZ]
	asl $26BE.w,X		; 1E BE 26 ; Arithmetic shift left $26BE.w,X [Reads: X Index] [Flags: NCZ]
	sta [$2B.b],Y		; 97 2B ; Store accumulator (long indexed) [$2B.b],Y [Reads: Direct Page, Y Index, Accumulator]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cpy $B526.w		; CC 26 B5 ; Compare $B526.w with Y register [Reads: Y Index] [Flags: NCZ]
	asl $431D.w,X		; 1E 1D 43 ; Arithmetic shift left $431D.w,X [Reads: X Index] [Flags: NCZ]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $3293.w,Y		; 59 93 32 ; Exclusive OR accumulator with memory $3293.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	brk $25.b		; 00 25 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	.db $42, $59		; 42 59 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	lda ($D7.b,S),Y		; B3 D7 ; Load accumulator (stack relative indirect indexed) ($D7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and $9A59.w		; 2D 59 9A ; Logical AND $9A59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp $AF75.w,X		; DD 75 AF ; Compare accumulator $AF75.w,X [Reads: X Index] [Flags: NCZ]
	asl $8A43.w,X		; 1E 43 8A ; Arithmetic shift left $8A43.w,X [Reads: X Index] [Flags: NCZ]
	ora ($A6.b)		; 12 A6 ; OR accumulator with memory (indirect) ($A6.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $2C2E28.l		; 22 28 2E 2C ; Jump to subroutine long $2C2E28.l [Writes: Stack Pointer] [Flow: call]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $5929.w,X		; 1E 29 59 ; Arithmetic shift left $5929.w,X [Reads: X Index] [Flags: NCZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ror $D0.b,X		; 76 D0 ; Rotate right $D0.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	trb $2DCE.w		; 1C CE 2D ; Test and reset bits $2DCE.w [Reads: Accumulator] [Flags: Z]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A6A7.w,Y		; 59 A7 A6 ; Exclusive OR accumulator with memory $A6A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($C7.b)		; 32 C7 ; AND accumulator with memory (indirect) ($C7.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $7F41.w,X		; 1E 41 7F ; Arithmetic shift left $7F41.w,X [Reads: X Index] [Flags: NCZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor #$75.b		; 49 75 ; Exclusive OR #$75.b with accumulator [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor #$47.b		; 49 47 ; Exclusive OR #$47.b with accumulator [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$49.b]		; 47 49 ; Exclusive OR accumulator with memory (long) [$49.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor [$76.b]		; 47 76 ; Exclusive OR accumulator with memory (long) [$76.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pha		; 48 ; Push accumulator [Reads: Accumulator] [Writes: Stack Pointer]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor #$48.b		; 49 48 ; Exclusive OR #$48.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor [$48.b]		; 47 48 ; Exclusive OR accumulator with memory (long) [$48.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor [$7F.b]		; 47 7F ; Exclusive OR accumulator with memory (long) [$7F.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DC.w,Y		; 59 DC 59 ; Exclusive OR accumulator with memory $59DC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $9059.w,X		; 1D 59 90 ; OR accumulator with memory $9059.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $E3.b,X		; 75 E3 ; Add $E3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $C659.w		; 1C 59 C6 ; Test and reset bits $C659.w [Reads: Accumulator] [Flags: Z]
	ror $04.b,X		; 76 04 ; Rotate right $04.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59DC.w,Y		; 59 DC 59 ; Exclusive OR accumulator with memory $59DC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $9059.w,X		; 1D 59 90 ; OR accumulator with memory $9059.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $E3.b,X		; 75 E3 ; Add $E3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $C659.w		; 1C 59 C6 ; Test and reset bits $C659.w [Reads: Accumulator] [Flags: Z]
	ror $01.b,X		; 76 01 ; Rotate right $01.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $98.b		; 26 98 ; Rotate left $98.b [Reads: Direct Page] [Flags: NCZ]
	bit $7F41.w		; 2C 41 7F ; Test bits $7F41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($BA.b,X)		; 01 BA ; Logical OR ($BA.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $24DF.w,Y		; 59 DF 24 ; Exclusive OR accumulator with memory $24DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($BE.b,S),Y		; B3 BE ; Load accumulator (stack relative indirect indexed) ($BE.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc $A9.b,X		; 75 A9 ; Add $A9.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $4229.w,X		; 1E 29 42 ; Arithmetic shift left $4229.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A1D.w,Y		; 59 1D 1A ; Exclusive OR accumulator with memory $1A1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	bit $1E25.w		; 2C 25 1E ; Test bits $1E25.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $3E29.w,X		; 1E 29 3E ; Arithmetic shift left $3E29.w,X [Reads: X Index] [Flags: NCZ]
	ror $43.b,X		; 76 43 ; Rotate right $43.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $93BE.w,Y		; 59 BE 93 ; Exclusive OR accumulator with memory $93BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cmp [$27.b],Y		; D7 27 ; Compare accumulator (long indexed) [$27.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	bit $2C.b		; 24 2C ; Test bits $2C.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $5942.w		; 2D 42 59 ; Logical AND $5942.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $2B22.w		; 2C 22 2B ; Test bits $2B22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $2759.w		; 2D 59 27 ; Logical AND $2759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2FCE.w,Y		; 59 CE 2F ; Exclusive OR accumulator with memory $2FCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $20.b		; A5 20 ; Load $20.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $C773.w,X		; 1E 73 C7 ; Arithmetic shift left $C773.w,X [Reads: X Index] [Flags: NCZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b		; 06 1E ; Arithmetic shift left $1E.b [Reads: Direct Page] [Flags: NCZ]
	and $CE59.w		; 2D 59 CE ; Logical AND $CE59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $5932.w,X		; 1D 32 59 ; OR accumulator with memory $5932.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $3EB6.w,Y		; 59 B6 3E ; Exclusive OR accumulator with memory $3EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tsb $2B.b		; 04 2B ; Test and set bits $2B.b [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	.db $42, $59		; 42 59 ; Reserved instruction
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $0A0E.w,Y		; 59 0E 0A ; Exclusive OR accumulator with memory $0A0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DE.w,Y		; 59 DE 59 ; Exclusive OR accumulator with memory $59DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $2C73.w,X		; 7E 73 2C ; Rotate right $2C73.w,X [Reads: X Index] [Flags: NCZ]
	jsl $7F3F2B.l		; 22 2B 3F 7F ; Jump to subroutine long $7F3F2B.l [Writes: Stack Pointer] [Flow: call]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2EBA.w,Y		; 59 BA 2E ; Exclusive OR accumulator with memory $2EBA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $5921.w		; 20 21 59 ; Jump to subroutine at $5921.w [Writes: Stack Pointer] [Flow: call]
	sta ($E3.b),Y		; 91 E3 ; Store accumulator ($E3.b),Y [Reads: Direct Page, Y Index, Accumulator]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	adc $26.b,X		; 75 26 ; Add $26.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda $A8.b,X		; B5 A8 ; Load $A8.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $272E.w		; 2D 2E 27 ; Logical AND $272E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $8A3E.w,X		; 1E 3E 8A ; Arithmetic shift left $8A3E.w,X [Reads: X Index] [Flags: NCZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $CB761C.l		; 22 1C 76 CB ; Jump to subroutine long $CB761C.l [Writes: Stack Pointer] [Flow: call]
	lda ($E2.b,X)		; A1 E2 ; Load accumulator ($E2.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2B1D.w,Y		; 59 1D 2B ; Exclusive OR accumulator with memory $2B1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $25B1.w,Y		; 59 B1 25 ; Exclusive OR accumulator with memory $25B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $737E3E.l,X		; 1F 3E 7E 73 ; Logical OR long $737E3E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cop $C7.b		; 02 C7 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	jsr $942B.w		; 20 2B 94 ; Jump to subroutine at $942B.w [Writes: Stack Pointer] [Flow: call]
	rol $2DBA.w		; 2E BA 2D ; Rotate left $2DBA.w [Flags: NCZ]
	jsl $3E2CC7.l		; 22 C7 2C 3E ; Jump to subroutine long $3E2CC7.l [Writes: Stack Pointer] [Flow: call]
	adc ($0D.b,S),Y		; 73 0D ; Add with carry (stack relative indirect indexed) ($0D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $D397.w,Y		; 59 97 D3 ; Exclusive OR accumulator with memory $D397.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	lda [$A0.b]		; A7 A0 ; Load accumulator (long) [$A0.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2821.w		; 2D 21 28 ; Logical AND $2821.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $59B6.w		; CD B6 59 ; Compare $59B6.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	.db $30, $C7		; 30 C7 ; Branch if minus to $30, $C7 [Flow: branch]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $28.b		; A5 28 ; Load $28.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	ora [$1A.b]		; 07 1A ; OR accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1A591E.l		; 2F 1E 59 1A ; AND accumulator with memory (long) $1A591E.l [Writes: Accumulator] [Flags: NZ]
	eor $2227.w,Y		; 59 27 22 ; Exclusive OR accumulator with memory $2227.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	ora $321A.w,X		; 1D 1A 32 ; OR accumulator with memory $321A.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $128A.w,X		; 3E 8A 12 ; Rotate left $128A.w,X [Reads: X Index] [Flags: NCZ]
	asl $591E.w,X		; 1E 1E 59 ; Arithmetic shift left $591E.w,X [Reads: X Index] [Flags: NCZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $77006E.l,X		; 7F 6E 00 77 ; Add long $77006E.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora [$7A.b]		; 07 7A ; OR accumulator with memory (long) [$7A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $6B.b,S		; 03 6B ; OR accumulator with stack relative $6B.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $67.b		; 02 67 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $AC1A.w,Y		; 59 1A AC ; Exclusive OR accumulator with memory $AC1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A97.w,Y		; 59 97 1A ; Exclusive OR accumulator with memory $1A97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $222D.w		; 2E 2D 22 ; Rotate left $222D.w [Flags: NCZ]
	ora $75252E.l,X		; 1F 2E 25 75 ; Logical OR long $75252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $B4.b		; 24 B4 ; Test bits $B4.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	jsr $269F.w		; 20 9F 26 ; Jump to subroutine at $269F.w [Writes: Stack Pointer] [Flow: call]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $1E.b		; C4 1E ; Compare $1E.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	ora $1B76.w,X		; 1D 76 1B ; OR accumulator with memory $1B76.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $8C592C.l		; 8F 2C 59 8C ; Store accumulator (long) $8C592C.l [Reads: Accumulator]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $2CD3.w,X		; 1E D3 2C ; Arithmetic shift left $2CD3.w,X [Reads: X Index] [Flags: NCZ]
	eor $78.b,S		; 43 78 ; Exclusive OR accumulator with stack relative $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora #$73.b		; 09 73 ; Logical OR #$73.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	bit $DA59.w		; 2C 59 DA ; Test bits $DA59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $27.b		; 26 27 ; Rotate left $27.b [Reads: Direct Page] [Flags: NCZ]
	jsl $2D2829.l		; 22 29 28 2D ; Jump to subroutine long $2D2829.l [Writes: Stack Pointer] [Flow: call]
	lda $73.b,S		; A3 73 ; Load accumulator (stack relative) $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sty $2628.w		; 8C 28 26 ; Store Y register to $2628.w [Reads: Y Index]
	and [$B5.b]		; 27 B5 ; AND accumulator with memory (long) [$B5.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $A322.w		; 1C 22 A3 ; Test and reset bits $A322.w [Reads: Accumulator] [Flags: Z]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$280F.w		; A0 0F 28 ; Load #$280F.w into Y register [Writes: Y Index] [Flags: NZ]
	cpx #$732B.w		; E0 2B 73 ; Compare #$732B.w with X register [Reads: X Index] [Flags: NCZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $2CCE.w,Y		; 59 CE 2C ; Exclusive OR accumulator with memory $2CCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $B4A41D.l		; 22 1D A4 B4 ; Jump to subroutine long $B4A41D.l [Writes: Stack Pointer] [Flow: call]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $1D		; B0 1D ; Branch if carry set to $B0, $1D [Flow: branch]
	ora $BAA0.w,X		; 1D A0 BA ; OR accumulator with memory $BAA0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($78.b,X)		; 41 78 ; Exclusive OR accumulator with memory ($78.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora #$67.b		; 09 67 ; Logical OR #$67.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc [$73.b]		; 67 73 ; Add with carry (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	tsb $3293.w		; 0C 93 32 ; Test and set bits $3293.w [Reads: Accumulator] [Flags: Z]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $201A.w,Y		; 59 1A 20 ; Exclusive OR accumulator with memory $201A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2CCE.w		; 20 CE 2C ; Jump to subroutine at $2CCE.w [Writes: Stack Pointer] [Flow: call]
	bit $2F22.w		; 2C 22 2F ; Test bits $2F22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $3225.w,X		; 1E 25 32 ; Arithmetic shift left $3225.w,X [Reads: X Index] [Flags: NCZ]
	adc ($D2.b,S),Y		; 73 D2 ; Add with carry (stack relative indirect indexed) ($D2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $DA59.w		; 2D 59 DA ; Logical AND $DA59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $A1A3.w,Y		; 59 A3 A1 ; Exclusive OR accumulator with memory $A1A3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1DB0.w,Y		; 59 B0 1D ; Exclusive OR accumulator with memory $1DB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $73A5.w,X		; 1D A5 73 ; OR accumulator with memory $73A5.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$900B.w		; A0 0B 90 ; Load #$900B.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $78.b,S		; 43 78 ; Exclusive OR accumulator with stack relative $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$73.b]		; 07 73 ; OR accumulator with memory (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $2759.w		; 2D 59 27 ; Logical AND $2759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $A1A7.w,Y		; 59 A7 A1 ; Exclusive OR accumulator with memory $A1A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $7341.w,X		; 1D 41 73 ; OR accumulator with memory $7341.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E27.w		; 0E 27 1E ; Arithmetic shift left $1E27.w [Flags: NCZ]
	eor $1A1D.w,Y		; 59 1D 1A ; Exclusive OR accumulator with memory $1A1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	wai		; CB ; Wait for interrupt
	lda ($97.b,X)		; A1 97 ; Load accumulator ($97.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $5993.w		; 20 93 59 ; Jump to subroutine at $5993.w [Writes: Stack Pointer] [Flow: call]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($1F.b,S),Y		; 73 1F ; Add with carry (stack relative indirect indexed) ($1F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	lda #$26.b		; A9 26 ; Load #$26.b into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$900B.w		; A0 0B 90 ; Load #$900B.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $78.b,S		; 43 78 ; Exclusive OR accumulator with stack relative $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$73.b]		; 07 73 ; OR accumulator with memory (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b)		; 12 28 ; OR accumulator with memory (indirect) ($28.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	lda ($9B.b,S),Y		; B3 9B ; Load accumulator (stack relative indirect indexed) ($9B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ldy $A41D.w,X		; BC 1D A4 ; Load Y register $A41D.w,X [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	.db $D0, $2F		; D0 2F ; Branch if not equal to $D0, $2F [Flow: branch]
	lda $73.b		; A5 73 ; Load $73.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
.INDEX 8
	sep #$D0		; E2 D0
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $9420.w,Y		; 59 20 94 ; Exclusive OR accumulator with memory $9420.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $DA59.w,X		; 1E 59 DA ; Arithmetic shift left $DA59.w,X [Reads: X Index] [Flags: NCZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $8C0B.w,Y		; 59 0B 8C ; Exclusive OR accumulator with memory $8C0B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0F.b		; A0 0F ; Load #$0F.b into Y register [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor ($78.b,X)		; 41 78 ; Exclusive OR accumulator with memory ($78.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora #$67.b		; 09 67 ; Logical OR #$67.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc [$73.b]		; 67 73 ; Add with carry (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	sbc $2D.b		; E5 2D ; Subtract $2D.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $B4BD.w		; CE BD B4 ; Decrement $B4BD.w [Flags: NZ]
	asl $731D.w,X		; 1E 1D 73 ; Arithmetic shift left $731D.w,X [Reads: X Index] [Flags: NCZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $2D8E.w,Y		; 59 8E 2D ; Exclusive OR accumulator with memory $2D8E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $7343BE.l		; 22 BE 43 73 ; Jump to subroutine long $7343BE.l [Writes: Stack Pointer] [Flow: call]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora #$67.b		; 09 67 ; Logical OR #$67.b with accumulator [Writes: Accumulator] [Flags: NZ]
	adc [$73.b]		; 67 73 ; Add with carry (long) [$73.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $01.b,S		; 43 01 ; Exclusive OR accumulator with stack relative $01.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rol $422D.w		; 2E 2D 42 ; Rotate left $422D.w [Flags: NCZ]
	eor $A0E1.w,Y		; 59 E1 A0 ; Exclusive OR accumulator with memory $A0E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	lda [$A3.b]		; A7 A3 ; Load accumulator (long) [$A3.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $E073.w		; 2C 73 E0 ; Test bits $E073.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cmp $1B28.w		; CD 28 1B ; Compare $1B28.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	bit $2E1C.w		; 2C 1C 2E ; Test bits $2E1C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	dec $591D.w		; CE 1D 59 ; Decrement $591D.w [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $B526.w,Y		; 59 26 B5 ; Exclusive OR accumulator with memory $B526.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $73.b		; C6 73 ; Decrement $73.b [Reads: Direct Page] [Flags: NZ]
	and $BE22.w		; 2D 22 BE ; Logical AND $BE22.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $978C.w,Y		; 59 8C 97 ; Exclusive OR accumulator with memory $978C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $BE1A.w		; 1C 1A BE ; Test and reset bits $BE1A.w [Reads: Accumulator] [Flags: Z]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $77.b		; 02 77 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora [$7A.b]		; 07 7A ; OR accumulator with memory (long) [$7A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $74.b,S		; 03 74 ; OR accumulator with stack relative $74.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	jsl $2C2E28.l		; 22 28 2E 2C ; Jump to subroutine long $2C2E28.l [Writes: Stack Pointer] [Flow: call]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $B859.w,X		; 1D 59 B8 ; OR accumulator with memory $B859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $0075.w		; 2C 75 00 ; Test bits $0075.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsr $211A.w		; 20 1A 21 ; Jump to subroutine at $211A.w [Writes: Stack Pointer] [Flow: call]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	trb $BE1A.w		; 1C 1A BE ; Test and reset bits $BE1A.w [Reads: Accumulator] [Flags: Z]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $76DA.w,Y		; 59 DA 76 ; Exclusive OR accumulator with memory $76DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $1E25.w		; CE 25 1E ; Decrement $1E25.w [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $41.b		; 25 41 ; Logical AND $41.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $251E.w,Y		; 59 1E 25 ; Exclusive OR accumulator with memory $251E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $94B426.l		; 22 26 B4 94 ; Jump to subroutine long $94B426.l [Writes: Stack Pointer] [Flow: call]
	asl $781D.w,X		; 1E 1D 78 ; Arithmetic shift left $781D.w,X [Reads: X Index] [Flags: NCZ]
	ora $73.b		; 05 73 ; Logical OR $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $28AC.w,Y		; 59 AC 28 ; Exclusive OR accumulator with memory $28AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $0A59.w,X		; 1D 59 0A ; OR accumulator with memory $0A59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda ($C6.b,S),Y		; B3 C6 ; Load accumulator (stack relative indirect indexed) ($C6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $78.b,S		; 43 78 ; Exclusive OR accumulator with stack relative $78.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $7F.b		; 05 7F ; Logical OR $7F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $77.b		; 02 77 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora [$7A.b]		; 07 7A ; OR accumulator with memory (long) [$7A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $74.b,S		; 03 74 ; OR accumulator with stack relative $74.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora ($21.b,S),Y		; 13 21 ; OR accumulator (stack relative indirect indexed) ($21.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $5942.w		; 1C 42 59 ; Test and reset bits $5942.w [Reads: Accumulator] [Flags: Z]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $2097.w,Y		; 59 97 20 ; Exclusive OR accumulator with memory $2097.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($75.b,S),Y		; 93 75 ; Store accumulator (stack relative indirect indexed) ($75.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $24BD.w,Y		; 59 BD 24 ; Exclusive OR accumulator with memory $24BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $9D59.w,X		; 1E 59 9D ; Arithmetic shift left $9D59.w,X [Reads: X Index] [Flags: NCZ]
	trb $1DA5.w		; 1C A5 1D ; Test and reset bits $1DA5.w [Reads: Accumulator] [Flags: Z]
	sta ($2D.b,S),Y		; 93 2D ; Store accumulator (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $76D8.w,Y		; 59 D8 76 ; Exclusive OR accumulator with memory $76D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2F		; D0 2F ; Branch if not equal to $D0, $2F [Flow: branch]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $5927.w,Y		; BE 27 59 ; Load X register $5927.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $21B593.l		; 2F 93 B5 21 ; AND accumulator with memory (long) $21B593.l [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $73.b		; 05 73 ; Logical OR $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $2893D4.l,X		; 1F D4 93 28 ; Logical OR long $2893D4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor ($78.b,X)		; 41 78 ; Exclusive OR accumulator with memory ($78.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $7F.b		; 05 7F ; Logical OR $7F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rtl		; 6B ; Return from subroutine long [Reads: Stack Pointer] [Writes: Stack Pointer] [Flow: return]

	cop $77.b		; 02 77 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora [$7A.b]		; 07 7A ; OR accumulator with memory (long) [$7A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $74.b,S		; 03 74 ; OR accumulator with stack relative $74.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	brk $27.b		; 00 27 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora $D859.w,X		; 1D 59 D8 ; OR accumulator with memory $D859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $C659.w,Y		; BE 59 C6 ; Load X register $C659.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $2D9D.w,Y		; 59 9D 2D ; Exclusive OR accumulator with memory $2D9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $32.b,X		; B4 32 ; Load Y register $32.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $75A8.w,Y		; 59 A8 75 ; Exclusive OR accumulator with memory $75A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1CB42B.l		; 0F 2B B4 1C ; OR accumulator with memory (long) $1CB42B.l [Writes: Accumulator] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A2B.w,X		; 1D 2B 1A ; OR accumulator with memory $1A2B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$27		; E2 27
	jsr $2776.w		; 20 76 27 ; Jump to subroutine at $2776.w [Writes: Stack Pointer] [Flow: call]
	ldx #$41.b		; A2 41 ; Load #$41.b into X register [Writes: X Index] [Flags: NZ]
	sei		; 78 ; Set interrupt disable flag [Flags: I]
	ora $7F.b		; 05 7F ; Logical OR $7F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b,X)		; 01 1E ; Logical OR ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	trb $2E1A.w		; 1C 1A 2E ; Test and reset bits $2E1A.w [Reads: Accumulator] [Flags: Z]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1E24.w,Y		; 59 24 1E ; Exclusive OR accumulator with memory $1E24.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	stz $1D1E.w		; 9C 1E 1D ; Store zero to $1D1E.w
	adc $B4.b,X		; 75 B4 ; Add $B4.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $1D22.w		; 2C 22 1D ; Test bits $1D22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $D959.w,X		; 1E 59 D9 ; Arithmetic shift left $D959.w,X [Reads: X Index] [Flags: NCZ]
	bit $9A59.w		; 2C 59 9A ; Test bits $9A59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cmp ($42.b,S),Y		; D3 42 ; Compare accumulator (stack relative indirect indexed) ($42.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7693.w		; 1C 93 76 ; Test and reset bits $7693.w [Reads: Accumulator] [Flags: Z]
	and [$A7.b]		; 27 A7 ; AND accumulator with memory (long) [$A7.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($C3.b,X)		; A1 C3 ; Load accumulator ($C3.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $41B6.w,Y		; 59 B6 41 ; Exclusive OR accumulator with memory $41B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $0973.w,X		; 7E 73 09 ; Rotate right $0973.w,X [Reads: X Index] [Flags: NCZ]
	rol $59D3.w		; 2E D3 59 ; Rotate left $59D3.w [Flags: NCZ]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $B659.w,X		; 1E 59 B6 ; Arithmetic shift left $B659.w,X [Reads: X Index] [Flags: NCZ]
	eor $59DE.w,Y		; 59 DE 59 ; Exclusive OR accumulator with memory $59DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $41.b,S		; E3 41 ; Subtract stack-relative $41.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc $343435.l,X		; 7F 35 34 34 ; Add long $343435.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$34.b],Y		; 37 34 ; AND accumulator with memory (long indexed) [$34.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $8A3E.w		; 2C 3E 8A ; Test bits $8A3E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$34.b],Y		; 37 34 ; AND accumulator with memory (long indexed) [$34.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $01.b,X		; 75 01 ; Add $01.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $A859.w		; 2C 59 A8 ; Test bits $A859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $34.b,X		; 35 34 ; Logical AND $34.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	rol $0F76.w,X		; 3E 76 0F ; Rotate left $0F76.w,X [Reads: X Index] [Flags: NCZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $5932.w		; 2E 32 59 ; Rotate left $5932.w [Flags: NCZ]
	eor ($1E.b),Y		; 51 1E ; Exclusive OR accumulator with memory ($1E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $42.b		; 26 42 ; Rotate left $42.b [Reads: Direct Page] [Flags: NCZ]
	eor $B526.w,Y		; 59 26 B5 ; Exclusive OR accumulator with memory $B526.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $343435.l,X		; 7F 35 34 34 ; Add long $343435.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $59A8.w,Y		; 59 A8 59 ; Exclusive OR accumulator with memory $59A8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$34.b],Y		; 37 34 ; AND accumulator with memory (long indexed) [$34.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	bit $8A3E.w		; 2C 3E 8A ; Test bits $8A3E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $251A.w,Y		; 59 1A 25 ; Exclusive OR accumulator with memory $251A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($75.b)		; D2 75 ; Compare accumulator (indirect) ($75.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	lda $1A59.w		; AD 59 1A ; Load $1A59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1E27.w,Y		; 59 27 1E ; Exclusive OR accumulator with memory $1E27.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	ora ($DC.b)		; 12 DC ; OR accumulator with memory (indirect) ($DC.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda ($01.b,X)		; A1 01 ; Load accumulator ($01.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	stz $A876.w		; 9C 76 A8 ; Store zero to $A876.w
	eor $B9C7.w,Y		; 59 C7 B9 ; Exclusive OR accumulator with memory $B9C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $34.b,X		; 35 34 ; Logical AND $34.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	rol $0F8A.w,X		; 3E 8A 0F ; Rotate left $0F8A.w,X [Reads: X Index] [Flags: NCZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $7E		; D0 7E ; Branch if not equal to $D0, $7E [Flow: branch]
	adc ($1B.b,S),Y		; 73 1B ; Add with carry (stack relative indirect indexed) ($1B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $5932.w		; 2E 32 59 ; Rotate left $5932.w [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $42, $59		; 42 59 ; Reserved instruction
	rol $B5.b		; 26 B5 ; Rotate left $B5.b [Reads: Direct Page] [Flags: NCZ]
	dec $3E.b,X		; D6 3E ; Decrement memory $3E.b,X [Reads: Direct Page, X Index] [Flags: NZ]
	adc $2427E5.l,X		; 7F E5 27 24 ; Add long $2427E5.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	lda $41211C.l,X		; BF 1C 21 41 ; Load long $41211C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $E5.b,X		; 75 E5 ; Add $E5.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and [$24.b]		; 27 24 ; AND accumulator with memory (long) [$24.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	lda $41211C.l,X		; BF 1C 21 41 ; Load long $41211C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $2427E5.l,X		; 7F E5 27 24 ; Add long $2427E5.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	lda $41211C.l,X		; BF 1C 21 41 ; Load long $41211C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1D.b,X		; 75 1D ; Add $1D.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	rol $1B.b		; 26 1B ; Rotate left $1B.b [Reads: Direct Page] [Flags: NCZ]
	eor $1FC6.w,Y		; 59 C6 1F ; Exclusive OR accumulator with memory $1FC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3293.w,Y		; 59 93 32 ; Exclusive OR accumulator with memory $3293.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $7641.w,X		; 1E 41 76 ; Arithmetic shift left $7641.w,X [Reads: X Index] [Flags: NCZ]
	eor $0F.b		; 45 0F ; Exclusive OR $0F.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $27DA.w		; 2D DA 27 ; Logical AND $27DA.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($46.b,X)		; 41 46 ; Exclusive OR accumulator with memory ($46.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ror $0F73.w,X		; 7E 73 0F ; Rotate right $0F73.w,X [Reads: X Index] [Flags: NCZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	sta $ABA8C0.l,X		; 9F C0 A8 AB ; Store accumulator (long,X) $ABA8C0.l,X [Reads: Accumulator, X Index]
	eor $41B6.w,Y		; 59 B6 41 ; Exclusive OR accumulator with memory $41B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $59220A.l,X		; 7F 0A 22 59 ; Add long $59220A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	ldx $3559.w,Y		; BE 59 35 ; Load X register $3559.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	bit $34.b,X		; 34 34 ; Test bits $34.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	adc $11.b,X		; 75 11 ; Add $11.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jmp.w [$1E1E]		; DC 1E 1E ; Jump long indirect [$1E1E] [Flow: jump]
	bit $8A42.w		; 2C 42 8A ; Test bits $8A42.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $59.b,S		; C3 59 ; Compare accumulator (stack relative) $59.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	ror $A3.b,X		; 76 A3 ; Rotate right $A3.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	sta ($1C.b,S),Y		; 93 1C ; Store accumulator (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $A859.w,X		; 1E 59 A8 ; Arithmetic shift left $A859.w,X [Reads: X Index] [Flags: NCZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $88733F.l,X		; 9F 3F 73 88 ; Store accumulator (long,X) $88733F.l,X [Reads: Accumulator, X Index]
	mvp $00,$59		; 44 59 00 ; Move block positive $00,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	bit $5924.w		; 2C 24 59 ; Test bits $5924.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $59.b,S		; C3 59 ; Compare accumulator (stack relative) $59.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	ldx $73.b,Y		; B6 73 ; Load X register $73.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$13.b		; 89 13 ; Test bits #$13.b with accumulator [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59C3.w,Y		; 59 C3 59 ; Exclusive OR accumulator with memory $59C3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	ora $0A7F68.l,X		; 1F 68 7F 0A ; Logical OR long $0A7F68.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $078A.w,X		; 3E 8A 07 ; Rotate left $078A.w,X [Reads: X Index] [Flags: NCZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $03.b,X		; 75 03 ; Add $03.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	ora $D85942.l,X		; 1F 42 59 D8 ; Logical OR long $D85942.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and [$3E.b]		; 27 3E ; AND accumulator with memory (long) [$3E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $0A.b,X		; 76 0A ; Rotate right $0A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	jsl $245924.l		; 22 24 59 24 ; Jump to subroutine long $245924.l [Writes: Stack Pointer] [Flow: call]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	rol $0A7F.w,X		; 3E 7F 0A ; Rotate left $0A7F.w,X [Reads: X Index] [Flags: NCZ]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	rol $068A.w,X		; 3E 8A 06 ; Rotate left $068A.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $1C59.w,X		; 1D 59 1C ; OR accumulator with memory $1C59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsl $3E1E1C.l		; 22 1C 1E 3E ; Jump to subroutine long $3E1E1C.l [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $27.b		; E6 27 ; Increment $27.b [Reads: Direct Page] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	adc $35.b,X		; 75 35 ; Add $35.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $34.b,X		; 34 34 ; Test bits $34.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	jsl $245924.l		; 22 24 59 24 ; Jump to subroutine long $245924.l [Writes: Stack Pointer] [Flow: call]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	rol $087F.w,X		; 3E 7F 08 ; Rotate left $087F.w,X [Reads: X Index] [Flags: NCZ]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $220A.w,Y		; 59 0A 22 ; Exclusive OR accumulator with memory $220A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	eor $2FBB.w,Y		; 59 BB 2F ; Exclusive OR accumulator with memory $2FBB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1159.w,X		; 1E 59 11 ; Arithmetic shift left $1159.w,X [Reads: X Index] [Flags: NCZ]
	jmp.w [$1E1E]		; DC 1E 1E ; Jump long indirect [$1E1E] [Flow: jump]
	bit $2659.w		; 2C 59 26 ; Test bits $2659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	asl $D759.w,X		; 1E 59 D7 ; Arithmetic shift left $D759.w,X [Reads: X Index] [Flags: NCZ]
	and [$76.b]		; 27 76 ; AND accumulator with memory (long) [$76.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	cop $93.b		; 02 93 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $8D29.w		; 2C 29 8D ; Test bits $8D29.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ldx $737E.w,Y		; BE 7E 73 ; Load X register $737E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and $34.b,X		; 35 34 ; Logical AND $34.b,X with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	and $59737E.l,X		; 3F 7E 73 59 ; AND accumulator with memory (long,X) $59737E.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $88733F.l,X		; 9F 3F 73 88 ; Store accumulator (long,X) $88733F.l,X [Reads: Accumulator, X Index]
	mvp $06,$59		; 44 59 06 ; Move block positive $06,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	jsl $591E2F.l		; 22 2F 1E 59 ; Jump to subroutine long $591E2F.l [Writes: Stack Pointer] [Flow: call]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $3435.w,Y		; 59 35 34 ; Exclusive OR accumulator with memory $3435.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit #$0D.b		; 89 0D ; Test bits #$0D.b with accumulator [Reads: Accumulator] [Flags: Z]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $3293.w,Y		; 59 93 32 ; Exclusive OR accumulator with memory $3293.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $59220A.l,X		; 7F 0A 22 59 ; Add long $59220A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2224.w,Y		; 59 24 22 ; Exclusive OR accumulator with memory $2224.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $068A.w,X		; 3E 8A 06 ; Rotate left $068A.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $1C59.w,X		; 1D 59 1C ; OR accumulator with memory $1C59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsl $3E1E1C.l		; 22 1C 1E 3E ; Jump to subroutine long $3E1E1C.l [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc $E2.b,X		; 75 E2 ; Add $E2.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1C1A.w,Y		; 59 1A 1C ; Exclusive OR accumulator with memory $1C1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	and #$93.b		; 29 93 ; Logical AND #$93.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	jsl $245924.l		; 22 24 59 24 ; Jump to subroutine long $245924.l [Writes: Stack Pointer] [Flow: call]
	jsl $3E2224.l		; 22 24 22 3E ; Jump to subroutine long $3E2224.l [Writes: Stack Pointer] [Flow: call]
	adc $59220A.l,X		; 7F 0A 22 59 ; Add long $59220A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	rol $078A.w,X		; 3E 8A 07 ; Rotate left $078A.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $2926.w		; 2E 26 29 ; Rotate left $2926.w [Flags: NCZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$28.b]		; 27 28 ; AND accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $CE.b,X		; 75 CE ; Add $CE.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $251A.w		; 2D 1A 25 ; Logical AND $251A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $42E3.w,Y		; 59 E3 42 ; Exclusive OR accumulator with memory $42E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27D8.w,Y		; 59 D8 27 ; Exclusive OR accumulator with memory $27D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($32.b,X)		; 01 32 ; Logical OR ($32.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $1B59.w,X		; 1E 59 1B ; Arithmetic shift left $1B59.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $0A8A.w,X		; 3E 8A 0A ; Rotate left $0A8A.w,X [Reads: X Index] [Flags: NCZ]
	jsl $245924.l		; 22 24 59 24 ; Jump to subroutine long $245924.l [Writes: Stack Pointer] [Flow: call]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	rol $0A7F.w,X		; 3E 7F 0A ; Rotate left $0A7F.w,X [Reads: X Index] [Flags: NCZ]
	jsl $222459.l		; 22 59 24 22 ; Jump to subroutine long $222459.l [Writes: Stack Pointer] [Flow: call]
	and $B1168A.l,X		; 3F 8A 16 B1 ; AND accumulator with memory (long,X) $B1168A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $8D59.w		; 2D 59 8D ; Logical AND $8D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $3F20B4.l,X		; 9F B4 20 3F ; Store accumulator (long,X) $3F20B4.l,X [Reads: Accumulator, X Index]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	dec $7F3E.w		; CE 3E 7F ; Decrement $7F3E.w [Flags: NZ]
	asl $2121.w		; 0E 21 21 ; Arithmetic shift left $2121.w [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cmp [$27.b],Y		; D7 27 ; Compare accumulator (long indexed) [$27.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $5932.w,X		; DD 32 59 ; Compare accumulator $5932.w,X [Reads: X Index] [Flags: NCZ]
	lda $3E211C.l,X		; BF 1C 21 3E ; Load long $3E211C.l,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $3226A4.l		; 2F A4 26 32 ; AND accumulator with memory (long) $3226A4.l [Writes: Accumulator] [Flags: NZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $8A411E.l,X		; 1F 1E 41 8A ; Logical OR long $8A411E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and $241A.w		; 2D 1A 24 ; Logical AND $241A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $BE76.w,X		; 1E 76 BE ; Arithmetic shift left $BE76.w,X [Reads: X Index] [Flags: NCZ]
	eor $2E28.w,Y		; 59 28 2E ; Exclusive OR accumulator with memory $2E28.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $222C.w		; 2D 2C 22 ; Logical AND $222C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $411E.w,X		; 1D 1E 41 ; OR accumulator with memory $411E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $1A3206.l,X		; 7F 06 32 1A ; Add long $1A3206.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($3E.b,X)		; 21 3E ; Logical AND ($3E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $13.b,X		; 75 13 ; Add $13.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $2B1B.w,Y		; 59 1B 2B ; Exclusive OR accumulator with memory $2B1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	rol $047F.w,X		; 3E 7F 04 ; Rotate left $047F.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $1A.b,X		; 16 1A ; Arithmetic shift left $1A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $B426.w,Y		; 59 26 B4 ; Exclusive OR accumulator with memory $B426.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1E2D.w		; 2E 2D 1E ; Rotate left $1E2D.w [Flags: NCZ]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	sta $59ACC0.l,X		; 9F C0 AC 59 ; Store accumulator (long,X) $59ACC0.l,X [Reads: Accumulator, X Index]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	cmp $7F4132.l,X		; DF 32 41 7F ; Compare accumulator (long,X) $7F4132.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2000.w,Y		; 59 00 20 ; Exclusive OR accumulator with memory $2000.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1A.b,X		; B4 1A ; Load Y register $1A.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	and ($41.b,X)		; 21 41 ; Logical AND ($41.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $27D0.w,Y		; 59 D0 27 ; Exclusive OR accumulator with memory $27D0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cmp $7520D5.l		; CF D5 20 75 ; Compare accumulator (long) $7520D5.l [Reads: Accumulator] [Flags: NCZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	lda ($29.b),Y		; B1 29 ; Load accumulator ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$A5.b		; 29 A5 ; Logical AND #$A5.b with accumulator [Writes: Accumulator] [Flags: NZ]
	lda ($B4.b,S),Y		; B3 B4 ; Load accumulator (stack relative indirect indexed) ($B4.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0B.b		; A0 0B ; Load #$0B.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $90, $76		; 90 76 ; Branch if carry clear to $90, $76 [Flow: branch]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $5927.w,Y		; BE 27 59 ; Load X register $5927.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $7E43.w,X		; 1D 43 7E ; OR accumulator with memory $7E43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E7.b,S),Y		; 73 E7 ; Add with carry (stack relative indirect indexed) ($E7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $BF59.w		; 2C 59 BF ; Test bits $BF59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $5927.w,Y		; BE 27 59 ; Load X register $5927.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	dec $0291.w		; CE 91 02 ; Decrement $0291.w [Flags: NZ]
	sty $1A.b,X		; 94 1A ; Store Y register $1A.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	trb $3225.w		; 1C 25 32 ; Test and reset bits $3225.w [Reads: Accumulator] [Flags: Z]
	bit $5926.w		; 2C 26 59 ; Test bits $5926.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $25DA.w,X		; 1E DA 25 ; Arithmetic shift left $25DA.w,X [Reads: X Index] [Flags: NCZ]
	ora $1B59.w,X		; 1D 59 1B ; OR accumulator with memory $1B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $7E43.w,X		; 1D 43 7E ; OR accumulator with memory $7E43.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $5943.w,Y		; 59 43 59 ; Exclusive OR accumulator with memory $5943.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cpy W2R.w		; CC 29 21 ; Compare W2R.w with Y register [Reads: Y Index] [Flags: NCZ]
	asl $321C.w,X		; 1E 1C 32 ; Arithmetic shift left $321C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1A2C.w,Y		; 59 2C 1A ; Exclusive OR accumulator with memory $1A2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	jmp $59E6.w		; 4C E6 59 ; Jump to $59E6.w [Flow: jump]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $8CD3.w,Y		; 59 D3 8C ; Exclusive OR accumulator with memory $8CD3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A69D.w,Y		; 59 9D A6 ; Exclusive OR accumulator with memory $A69D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2159.w		; 2D 59 21 ; Logical AND $2159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $9E.b		; 25 9E ; Logical AND $9E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $D873.w,X		; 7E 73 D8 ; Rotate right $D873.w,X [Reads: X Index] [Flags: NCZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $591F.w		; 0E 1F 59 ; Arithmetic shift left $591F.w [Flags: NCZ]
	tsb $9F2E.w		; 0C 2E 9F ; Test and set bits $9F2E.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($4C.b,X)		; 41 4C ; Exclusive OR accumulator with memory ($4C.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda $D859.w		; AD 59 D8 ; Load $D859.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2801.w,Y		; 59 01 28 ; Exclusive OR accumulator with memory $2801.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $591F.w		; 0E 1F 59 ; Arithmetic shift left $591F.w [Flags: NCZ]
	tsb $9F2E.w		; 0C 2E 9F ; Test and set bits $9F2E.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $CE99.w,Y		; 59 99 CE ; Exclusive OR accumulator with memory $CE99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $D859.w,X		; 1D 59 D8 ; OR accumulator with memory $D859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BA.w,Y		; 59 BA 27 ; Exclusive OR accumulator with memory $27BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1A2E.w		; 20 2E 1A ; Jump to subroutine at $1A2E.w [Writes: Stack Pointer] [Flow: call]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	dec $7E.b		; C6 7E ; Decrement $7E.b [Reads: Direct Page] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $3207.w,Y		; 59 07 32 ; Exclusive OR accumulator with memory $3207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E0F.w,Y		; 59 0F 1E ; Exclusive OR accumulator with memory $1E0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $D159.w		; 2D 59 D1 ; Logical AND $D159.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $73.b		; C6 73 ; Decrement $73.b [Reads: Direct Page] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $2C.b		; 24 2C ; Test bits $2C.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $222F.w,Y		; 59 2F 22 ; Exclusive OR accumulator with memory $222F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA.b		; 25 BA ; Logical AND $BA.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $431E.w		; 20 1E 43 ; Jump to subroutine at $431E.w [Writes: Stack Pointer] [Flow: call]
	ror $E873.w,X		; 7E 73 E8 ; Rotate right $E873.w,X [Reads: X Index] [Flags: NCZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $3E.b,Y		; B6 3E ; Load X register $3E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $59D8.w		; 8D D8 59 ; Store accumulator to $59D8.w [Reads: Accumulator]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2528.w		; 1C 28 25 ; Test and reset bits $2528.w [Reads: Accumulator] [Flags: Z]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $A42D.w		; 1C 2D A4 ; Test and reset bits $A42D.w [Reads: Accumulator] [Flags: Z]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $751E.w		; CE 1E 75 ; Decrement $751E.w [Flags: NZ]
	ora $931DA5.l		; 0F A5 1D 93 ; OR accumulator with memory (long) $931DA5.l [Writes: Accumulator] [Flags: NZ]
	and $412C.w		; 2D 2C 41 ; Logical AND $412C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ror $08.b,X		; 76 08 ; Rotate right $08.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta $1DB4.w		; 8D B4 1D ; Store accumulator to $1DB4.w [Reads: Accumulator]
	asl $D8A4.w,X		; 1E A4 D8 ; Arithmetic shift left $D8A4.w,X [Reads: X Index] [Flags: NCZ]
	eor $28E4.w,Y		; 59 E4 28 ; Exclusive OR accumulator with memory $28E4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $AE73.w,X		; 7E 73 AE ; Rotate right $AE73.w,X [Reads: X Index] [Flags: NCZ]
	eor $B516.w,Y		; 59 16 B5 ; Exclusive OR accumulator with memory $B516.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $594226.l,X		; 9F 26 42 59 ; Store accumulator (long,X) $594226.l,X [Reads: Accumulator, X Index]
	cop $28.b		; 02 28 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	sty $280F.w		; 8C 0F 28 ; Store Y register to $280F.w [Reads: Y Index]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	.db $42, $73		; 42 73 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $920C.w,Y		; 59 0C 92 ; Exclusive OR accumulator with memory $920C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($12.b,X)		; A1 12 ; Load accumulator ($12.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	ora $2C59.w,X		; 1D 59 2C ; OR accumulator with memory $2C59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $B329.w,X		; 1E 29 B3 ; Arithmetic shift left $B329.w,X [Reads: X Index] [Flags: NCZ]
	ldy $73.b,X		; B4 73 ; Load Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1EA8.w,Y		; 59 A8 1E ; Exclusive OR accumulator with memory $1EA8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	bit $7F41.w		; 2C 41 7F ; Test bits $7F41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	brk $B1.b		; 00 B1 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,X)		; 01 28 ; Logical OR ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $591F.w		; 0E 1F 59 ; Arithmetic shift left $591F.w [Flags: NCZ]
	tsb $9F2E.w		; 0C 2E 9F ; Test and set bits $9F2E.w [Reads: Accumulator] [Flags: Z]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor ($75.b,X)		; 41 75 ; Exclusive OR accumulator with memory ($75.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B6.b,X		; 16 B6 ; Arithmetic shift left $B6.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ldx $42.b,Y		; B6 42 ; Load X register $42.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $1ACE.w,Y		; 99 CE 1A ; Store accumulator to $1ACE.w,Y [Reads: Y Index, Accumulator]
	ora $D859.w,X		; 1D 59 D8 ; OR accumulator with memory $D859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ror $BA.b,X		; 76 BA ; Rotate right $BA.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $201A.w		; 2E 1A 20 ; Rotate left $201A.w [Flags: NCZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D88D.w,Y		; 59 8D D8 ; Exclusive OR accumulator with memory $D88D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $E459.w,X		; 1E 59 E4 ; Arithmetic shift left $E459.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $75.b,S		; 43 75 ; Exclusive OR accumulator with stack relative $75.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2597.w,Y		; 59 97 25 ; Exclusive OR accumulator with memory $2597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591EA7.l		; 22 A7 1E 59 ; Jump to subroutine long $591EA7.l [Writes: Stack Pointer] [Flow: call]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$76.b]		; 27 76 ; AND accumulator with memory (long) [$76.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BA.w,Y		; 59 BA 27 ; Exclusive OR accumulator with memory $27BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A59.w,X		; 1D 59 1A ; OR accumulator with memory $1A59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $418F.w		; 20 8F 41 ; Jump to subroutine at $418F.w [Writes: Stack Pointer] [Flow: call]
	adc $592BE8.l,X		; 7F E8 2B 59 ; Add long $592BE8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	jsl $59251A.l		; 22 1A 25 59 ; Jump to subroutine long $59251A.l [Writes: Stack Pointer] [Flow: call]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $A69D.w,Y		; 59 9D A6 ; Exclusive OR accumulator with memory $A69D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $AE59.w		; 2D 59 AE ; Logical AND $AE59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $BD.b,X		; 75 BD ; Add $BD.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora $591E.w,X		; 1D 1E 59 ; OR accumulator with memory $591E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp ($2B.b,S),Y		; D3 2B ; Compare accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $C676.w,X		; 1D 76 C6 ; OR accumulator with memory $C676.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $2F73.w,X		; 7E 73 2F ; Rotate right $2F73.w,X [Reads: X Index] [Flags: NCZ]
	asl $2CB4.w,X		; 1E B4 2C ; Arithmetic shift left $2CB4.w,X [Reads: X Index] [Flags: NCZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $1A.b,X		; 16 1A ; Arithmetic shift left $1A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $B659.w		; 2C 59 B6 ; Test bits $B659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $D39E.w,Y		; 59 9E D3 ; Exclusive OR accumulator with memory $D39E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $972B.w		; 2E 2B 97 ; Rotate left $972B.w [Flags: NCZ]
	ora $2659.w,X		; 1D 59 26 ; OR accumulator with memory $2659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($75.b)		; 32 75 ; AND accumulator with memory (indirect) ($75.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $1F1E.w		; 1C 1E 1F ; Test and reset bits $1F1E.w [Reads: Accumulator] [Flags: Z]
	rol $5925.w		; 2E 25 59 ; Rotate left $5925.w [Flags: NCZ]
	and [$1A.b]		; 27 1A ; AND accumulator with memory (long) [$1A.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$3F.b		; 29 3F ; Logical AND #$3F.b with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	cmp $762C.w,Y		; D9 2C 76 ; Compare accumulator $762C.w,Y [Reads: Y Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $E3591F.l		; 22 1F 59 E3 ; Jump to subroutine long $E3591F.l [Writes: Stack Pointer] [Flow: call]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	cmp $7F3E32.l,X		; DF 32 3E 7F ; Compare accumulator (long,X) $7F3E32.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $9359.w		; AD 59 93 ; Load $9359.w into accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $AC59.w,X		; 1E 59 AC ; Arithmetic shift left $AC59.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2975.w,X		; 1D 75 29 ; OR accumulator with memory $2975.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	dec $27D0.w		; CE D0 27 ; Decrement $27D0.w [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1A.b,S),Y		; 13 1A ; OR accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $B4.b,X		; 76 B4 ; Rotate right $B4.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	cmp ($1E.b,S),Y		; D3 1E ; Compare accumulator (stack relative indirect indexed) ($1E.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $5942.w,X		; 1D 42 59 ; OR accumulator with memory $5942.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp ($3E.b,S),Y		; D3 3E ; Compare accumulator (stack relative indirect indexed) ($3E.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	adc $592818.l,X		; 7F 18 28 59 ; Add long $592818.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $008A.w,X		; 3E 8A 00 ; Rotate left $008A.w,X [Reads: X Index] [Flags: NCZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	jsl $2C2E28.l		; 22 28 2E 2C ; Jump to subroutine long $2C2E28.l [Writes: Stack Pointer] [Flow: call]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $AE75.w		; 20 75 AE ; Jump to subroutine at $AE75.w [Writes: Stack Pointer] [Flow: call]
	eor $1CCE.w,Y		; 59 CE 1C ; Exclusive OR accumulator with memory $1CCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $B9.b,S		; A3 B9 ; Load accumulator (stack relative) $B9.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $25251A.l,X		; 1F 1A 25 25 ; Logical OR long $25251A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$28.b		; A0 28 ; Load #$28.b into Y register [Writes: Y Index] [Flags: NZ]
	cmp $D859.w,X		; DD 59 D8 ; Compare accumulator $D859.w,X [Reads: X Index] [Flags: NCZ]
	ror $A8.b,X		; 76 A8 ; Rotate right $A8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $41D3.w,X		; 1E D3 41 ; Arithmetic shift left $41D3.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $CE1A.w		; 1C 1A CE ; Test and reset bits $CE1A.w [Reads: Accumulator] [Flags: Z]
	ora $3E252E.l,X		; 1F 2E 25 3E ; Logical OR long $3E252E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $321A0C.l,X		; 7F 0C 1A 32 ; Add long $321A0C.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	ldx $8B.b,Y		; B6 8B ; Load X register $8B.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
.ACCU 16
.INDEX 16
	rep #$B0		; C2 B0
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cmp $752C.w,Y		; D9 2C 75 ; Compare accumulator $752C.w,Y [Reads: Y Index] [Flags: NCZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	asl $591E.w,X		; 1E 1E 59 ; Arithmetic shift left $591E.w,X [Reads: X Index] [Flags: NCZ]
	ora $251E1E.l,X		; 1F 1E 1E 25 ; Logical OR long $251E1E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $2459.w		; 2C 59 24 ; Test bits $2459.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($2B.b,S),Y		; D3 2B ; Compare accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	asl $1A59.w,X		; 1E 59 1A ; Arithmetic shift left $1A59.w,X [Reads: X Index] [Flags: NCZ]
	bit $E076.w		; 2C 76 E0 ; Test bits $E076.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $2E1C.w,Y		; 59 1C 2E ; Exclusive OR accumulator with memory $2E1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $B659.w		; 2D 59 B6 ; Logical AND $B659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	clc		; 18 ; Clear carry flag [Flags: C]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $E68A.w,X		; 3E 8A E6 ; Rotate left $E68A.w,X [Reads: X Index] [Flags: NCZ]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $B459.w		; 20 59 B4 ; Jump to subroutine at $B459.w [Writes: Stack Pointer] [Flow: call]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $59D3.w,X		; 1E D3 59 ; Arithmetic shift left $59D3.w,X [Reads: X Index] [Flags: NCZ]
	lda $75.b,X		; B5 75 ; Load $75.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	trb $A225.w		; 1C 25 A2 ; Test and reset bits $A225.w [Reads: Accumulator] [Flags: Z]
	ldy $20.b,X		; B4 20 ; Load Y register $20.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $AC.b,X		; 76 AC ; Rotate right $AC.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $CDD8.w,Y		; 59 D8 CD ; Exclusive OR accumulator with memory $CDD8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $3E8F.w		; 20 8F 3E ; Jump to subroutine at $3E8F.w [Writes: Stack Pointer] [Flow: call]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $187F.w,X		; 3E 7F 18 ; Rotate left $187F.w,X [Reads: X Index] [Flags: NCZ]
	asl $211A.w,X		; 1E 1A 21 ; Arithmetic shift left $211A.w,X [Reads: X Index] [Flags: NCZ]
	eor $426A.w,Y		; 59 6A 42 ; Exclusive OR accumulator with memory $426A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $2A.b,X		; 75 2A ; Add $2A.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $2B1A.w		; 2E 1A 2B ; Rotate left $2B1A.w [Flags: NCZ]
	dec $B325.w		; CE 25 B3 ; Decrement $B325.w [Flags: NZ]
	dec $2659.w,X		; DE 59 26 ; Decrement memory $2659.w,X [Reads: X Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $27.b,S		; E3 27 ; Subtract stack-relative $27.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	jsr $76A6.w		; 20 A6 76 ; Jump to subroutine at $76A6.w [Writes: Stack Pointer] [Flow: call]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $A4.b		; 25 A4 ; Logical AND $A4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $C89F.w,Y		; 59 9F C8 ; Exclusive OR accumulator with memory $C89F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7EDA.w,Y		; 59 DA 7E ; Exclusive OR accumulator with memory $7EDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($B0.b,S),Y		; 73 B0 ; Add with carry (stack relative indirect indexed) ($B0.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $2B59.w		; 2C 59 2B ; Test bits $2B59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $41.b		; 26 41 ; Rotate left $41.b [Reads: Direct Page] [Flags: NCZ]
	adc $592812.l,X		; 7F 12 28 59 ; Add long $592812.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $C89F.w,Y		; 59 9F C8 ; Exclusive OR accumulator with memory $C89F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $B55932.l,X		; DF 32 59 B5 ; Compare accumulator (long,X) $B55932.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $59C3.w,Y		; 59 C3 59 ; Exclusive OR accumulator with memory $59C3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $438F.w		; 20 8F 43 ; Jump to subroutine at $438F.w [Writes: Stack Pointer] [Flow: call]
	adc $0E.b,X		; 75 0E ; Add $0E.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	eor $0A0E.w,Y		; 59 0E 0A ; Exclusive OR accumulator with memory $0A0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	lda $9732.w,X		; BD 32 97 ; Load $9732.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b),Y		; D1 28 ; Compare accumulator ($28.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $24BD.w,Y		; 59 BD 24 ; Exclusive OR accumulator with memory $24BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $DC59.w,X		; 1E 59 DC ; Arithmetic shift left $DC59.w,X [Reads: X Index] [Flags: NCZ]
	ror $DE.b,X		; 76 DE ; Rotate right $DE.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2B1B.w,Y		; 59 1B 2B ; Exclusive OR accumulator with memory $2B1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$1E.b]		; 07 1E ; OR accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	stz $591D.w,X		; 9E 1D 59 ; Store zero to $591D.w,X [Reads: X Index]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	asl $A959.w,X		; 1E 59 A9 ; Arithmetic shift left $A959.w,X [Reads: X Index] [Flags: NCZ]
	rol $75.b		; 26 75 ; Rotate left $75.b [Reads: Direct Page] [Flags: NCZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $2528.w,Y		; 59 28 25 ; Exclusive OR accumulator with memory $2528.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1BA1.w,X		; 1D A1 1B ; OR accumulator with memory $1BA1.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cld		; D8 ; Clear decimal flag [Flags: D]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $3F.b		; 26 3F ; Rotate left $3F.b [Reads: Direct Page] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	bit $2159.w		; 2C 59 21 ; Test bits $2159.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $D376.w,X		; 1E 76 D3 ; Arithmetic shift left $D376.w,X [Reads: X Index] [Flags: NCZ]
	jsl $592525.l		; 22 25 25 59 ; Jump to subroutine long $592525.l [Writes: Stack Pointer] [Flow: call]
	sta ($20.b,S),Y		; 93 20 ; Store accumulator (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3F.b)		; 32 3F ; AND accumulator with memory (indirect) ($3F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $6D027A.l,X		; 7F 7A 02 6D ; Add long $6D027A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1E.b,X		; 75 1E ; Add $1E.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $1A1C.w		; 2C 1C 1A ; Test bits $1A1C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and #$591E.w		; 29 1E 59 ; Logical AND #$591E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda #$5926.w		; A9 26 59 ; Load #$5926.w into accumulator [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251C.w,Y		; 59 1C 25 ; Exclusive OR accumulator with memory $251C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $9A2D.w		; 2E 2D 9A ; Rotate left $9A2D.w [Flags: NCZ]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	sbc [$2C.b]		; E7 2C ; Subtract with carry (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $DA59.w,X		; 1D 59 DA ; OR accumulator with memory $DA59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$8C0B.w		; A0 0B 8C ; Load #$8C0B.w into Y register [Writes: Y Index] [Flags: NZ]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	eor $2B13.w,Y		; 59 13 2B ; Exclusive OR accumulator with memory $2B13.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	adc ($DF.b,S),Y		; 73 DF ; Add with carry (stack relative indirect indexed) ($DF.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $B059.w		; 2C 59 B0 ; Test bits $B059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $A51D.w,X		; 1D 1D A5 ; OR accumulator with memory $A51D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$42.b]		; C7 42 ; Compare accumulator (long) [$42.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $732C.w		; 2C 2C 73 ; Test bits $732C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cmp $1EA7.w,Y		; D9 A7 1E ; Compare accumulator $1EA7.w,Y [Reads: Y Index] [Flags: NCZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
.INDEX 8
	sep #$D1		; E2 D1
	ldy $B6.b		; A4 B6 ; Load $B6.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($DF.b,S),Y		; 73 DF ; Add with carry (stack relative indirect indexed) ($DF.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $DB59.w		; 2C 59 DB ; Test bits $DB59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sta ($2C.b,S),Y		; 93 2C ; Store accumulator (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	ldx $431D.w,Y		; BE 1D 43 ; Load X register $431D.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $1E21.w		; CD 21 1E ; Compare $1E21.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	ldy $2D.b,X		; B4 2D ; Load Y register $2D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	lda $9E.b		; A5 9E ; Load $9E.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73DA.w,Y		; 59 DA 73 ; Exclusive OR accumulator with memory $73DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2AC7.w		; 1C C7 2A ; Test and reset bits $2AC7.w [Reads: Accumulator] [Flags: Z]
	rol $A7A1.w		; 2E A1 A7 ; Rotate left $A7A1.w [Flags: NCZ]
	ldy #$28.b		; A0 28 ; Load #$28.b into Y register [Writes: Y Index] [Flags: NZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	lda ($16.b)		; B2 16 ; Load accumulator (indirect) ($16.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $2E1BD4.l,X		; 1F D4 1B 2E ; Logical OR long $2E1BD4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsl $279E25.l		; 22 25 9E 27 ; Jump to subroutine long $279E25.l [Writes: Stack Pointer] [Flow: call]
	jsr $B059.w		; 20 59 B0 ; Jump to subroutine at $B059.w [Writes: Stack Pointer] [Flow: call]
	bit $CB59.w		; 2C 59 CB ; Test bits $CB59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda ($AF.b,X)		; A1 AF ; Load accumulator ($AF.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $7E41.w,X		; 1E 41 7E ; Arithmetic shift left $7E41.w,X [Reads: X Index] [Flags: NCZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $B559.w,X		; 1E 59 B5 ; Arithmetic shift left $B559.w,X [Reads: X Index] [Flags: NCZ]
	eor $32DB.w,Y		; 59 DB 32 ; Exclusive OR accumulator with memory $32DB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($DA.b,S),Y		; B3 DA ; Load accumulator (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59C3.w,Y		; 59 C3 59 ; Exclusive OR accumulator with memory $59C3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2BBA.w,Y		; 59 BA 2B ; Exclusive OR accumulator with memory $2BBA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $73A6.w		; 20 A6 73 ; Jump to subroutine at $73A6.w [Writes: Stack Pointer] [Flow: call]
	jsr $1E94.w		; 20 94 1E ; Jump to subroutine at $1E94.w [Writes: Stack Pointer] [Flow: call]
	eor $2D97.w,Y		; 59 97 2D ; Exclusive OR accumulator with memory $2D97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$A0.b		; E0 A0 ; Compare #$A0.b with X register [Reads: X Index] [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $2759.w		; 2C 59 27 ; Test bits $2759.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ldx #$59.b		; A2 59 ; Load #$59.b into X register [Writes: X Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($25.b)		; 92 25 ; Store accumulator (indirect) ($25.b) [Reads: Direct Page, Accumulator]
	asl $2E59.w,X		; 1E 59 2E ; Arithmetic shift left $2E59.w,X [Reads: X Index] [Flags: NCZ]
	bit $28B3.w		; 2C B3 28 ; Test bits $28B3.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	wai		; CB ; Wait for interrupt
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $9420.w,Y		; 59 20 94 ; Exclusive OR accumulator with memory $9420.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $B559.w,X		; 1E 59 B5 ; Arithmetic shift left $B559.w,X [Reads: X Index] [Flags: NCZ]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $73.b,S		; C3 73 ; Compare accumulator (stack relative) $73.b,S [Reads: Stack Pointer, Accumulator] [Flags: NCZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	and $B91E.w		; 2D 1E B9 ; Logical AND $B91E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $7343.w		; 2D 43 73 ; Logical AND $7343.w with accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $59E059.l,X		; 1F 59 E0 59 ; Logical OR long $59E059.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2F		; D0 2F ; Branch if not equal to $D0, $2F [Flow: branch]
	ldy #$BD.b		; A0 BD ; Load #$BD.b into Y register [Writes: Y Index] [Flags: NZ]
	jsl $2CA51D.l		; 22 1D A5 2C ; Jump to subroutine long $2CA51D.l [Writes: Stack Pointer] [Flow: call]
	eor $1E9B.w,Y		; 59 9B 1E ; Exclusive OR accumulator with memory $1E9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $DA73.w,X		; 7E 73 DA ; Rotate right $DA73.w,X [Reads: X Index] [Flags: NCZ]
	plb		; AB ; Pull data bank register  [Reads: Stack Pointer] [Writes: Data Bank] [Flags: NZ]
	lda $E05942.l		; AF 42 59 E0 ; Load long $E05942.l into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1B99.w,Y		; 59 99 1B ; Exclusive OR accumulator with memory $1B99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $241A.w		; CE 1A 24 ; Decrement $241A.w [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stx $2B.b,Y		; 96 2B ; Store X register $2B.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $2B1AA1.l		; 22 A1 1A 2B ; Jump to subroutine long $2B1AA1.l [Writes: Stack Pointer] [Flow: call]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$8B.b]		; C7 8B ; Compare accumulator (long) [$8B.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	.db $B0, $9E		; B0 9E ; Branch if carry set to $B0, $9E [Flow: branch]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($29.b,S),Y		; 73 29 ; Add with carry (stack relative indirect indexed) ($29.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $411E.w		; 1C 1E 41 ; Test and reset bits $411E.w [Reads: Accumulator] [Flags: Z]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sbc ($A6.b,X)		; E1 A6 ; Subtract with carry ($A6.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	eor $D828.w,Y		; 59 28 D8 ; Exclusive OR accumulator with memory $D828.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	adc ($20.b,S),Y		; 73 20 ; Add with carry (stack relative indirect indexed) ($20.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $2C252B.l		; 22 2B 25 2C ; Jump to subroutine long $2C252B.l [Writes: Stack Pointer] [Flow: call]
	eor $218D.w,Y		; 59 8D 21 ; Exclusive OR accumulator with memory $218D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2597.w,Y		; 59 97 25 ; Exclusive OR accumulator with memory $2597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591EA7.l		; 22 A7 1E 59 ; Jump to subroutine long $591EA7.l [Writes: Stack Pointer] [Flow: call]
	sbc $73.b,S		; E3 73 ; Subtract stack-relative $73.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta $28DB.w,X		; 9D DB 28 ; Store accumulator to $28DB.w,X [Reads: Accumulator, X Index]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$41.b]		; C7 41 ; Compare accumulator (long) [$41.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $3226.w,Y		; 59 26 32 ; Exclusive OR accumulator with memory $3226.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $22C8.w,Y		; 59 C8 22 ; Exclusive OR accumulator with memory $22C8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1AB4.w		; 20 B4 1A ; Jump to subroutine at $1AB4.w [Writes: Stack Pointer] [Flow: call]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	sta ($D7.b),Y		; 91 D7 ; Store accumulator ($D7.b),Y [Reads: Direct Page, Y Index, Accumulator]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $7341BE.l		; 22 BE 41 73 ; Jump to subroutine long $7341BE.l [Writes: Stack Pointer] [Flow: call]
	eor $5943.w,Y		; 59 43 59 ; Exclusive OR accumulator with memory $5943.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $79.b,S		; 43 79 ; Exclusive OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and $7A7F.w		; 2D 7F 7A ; Logical AND $7A7F.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cop $6D.b		; 02 6D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
	asl $1C2C.w,X		; 1E 2C 1C ; Arithmetic shift left $1C2C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E25.w		; 1C 25 2E ; Test and reset bits $2E25.w [Reads: Accumulator] [Flags: Z]
	and $2C9A.w		; 2D 9A 2C ; Logical AND $2C9A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $76C6.w,Y		; 59 C6 76 ; Exclusive OR accumulator with memory $76C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	ora ($2B.b,S),Y		; 13 2B ; OR accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $932B.w		; 20 2B 93 ; Jump to subroutine at $932B.w [Writes: Stack Pointer] [Flow: call]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp ($1E.b),Y		; D1 1E ; Compare accumulator ($1E.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	rol $2C9A.w		; 2E 9A 2C ; Rotate left $2C9A.w [Flags: NCZ]
	eor $42B6.w,Y		; 59 B6 42 ; Exclusive OR accumulator with memory $42B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $BB59.w		; 2C 59 BB ; Test bits $BB59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2C1A.w,Y		; 59 1A 2C ; Exclusive OR accumulator with memory $2C1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D2C9.w,Y		; 59 C9 D2 ; Exclusive OR accumulator with memory $D2C9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $432C1E.l		; 2F 1E 2C 43 ; AND accumulator with memory (long) $432C1E.l [Writes: Accumulator] [Flags: NZ]
	ror $E573.w,X		; 7E 73 E5 ; Rotate right $E573.w,X [Reads: X Index] [Flags: NCZ]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $32E1.w,Y		; 59 E1 32 ; Exclusive OR accumulator with memory $32E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59B6.w,Y		; 59 B6 59 ; Exclusive OR accumulator with memory $59B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $B0592C.l,X		; DF 2C 59 B0 ; Compare accumulator (long,X) $B0592C.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	ora $A01D.w,X		; 1D 1D A0 ; OR accumulator with memory $A01D.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $73.b,X		; B4 73 ; Load Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0B.b		; A0 0B ; Load #$0B.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $90, $41		; 90 41 ; Branch if carry clear to $90, $41 [Flow: branch]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B927.w		; 0E 27 B9 ; Arithmetic shift left $B927.w [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $25D0.w,Y		; 59 D0 25 ; Exclusive OR accumulator with memory $25D0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($1F.b,S),Y		; 73 1F ; Add with carry (stack relative indirect indexed) ($1F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $5930.w,X		; 1E 30 59 ; Arithmetic shift left $5930.w,X [Reads: X Index] [Flags: NCZ]
	bit $27.b		; 24 27 ; Test bits $27.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $5930.w,X		; 1E 30 59 ; Arithmetic shift left $5930.w,X [Reads: X Index] [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ldx $2C.b,Y		; B6 2C ; Load X register $2C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	eor $1CBB.w,Y		; 59 BB 1C ; Exclusive OR accumulator with memory $1CBB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sty $22.b,X		; 94 22 ; Store Y register $22.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	cmp [$42.b]		; C7 42 ; Compare accumulator (long) [$42.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ror $1B73.w,X		; 7E 73 1B ; Rotate right $1B73.w,X [Reads: X Index] [Flags: NCZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	sta ($CF.b),Y		; 91 CF ; Store accumulator ($CF.b),Y [Reads: Direct Page, Y Index, Accumulator]
	eor $2829.w,Y		; 59 29 28 ; Exclusive OR accumulator with memory $2829.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $2D.b,X		; B4 2D ; Load Y register $2D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($B8.b,S),Y		; 73 B8 ; Add with carry (stack relative indirect indexed) ($B8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $1E20.w,X		; 1D 20 1E ; OR accumulator with memory $1E20.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CDF.w,Y		; 59 DF 2C ; Exclusive OR accumulator with memory $2CDF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D3BB.w,Y		; 59 BB D3 ; Exclusive OR accumulator with memory $D3BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $9ECE.w,Y		; 59 CE 9E ; Exclusive OR accumulator with memory $9ECE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $281C.w		; 2C 1C 28 ; Test bits $281C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cmp $1D1E.w,X		; DD 1E 1D ; Compare accumulator $1D1E.w,X [Reads: X Index] [Flags: NCZ]
	ror $D873.w,X		; 7E 73 D8 ; Rotate right $D873.w,X [Reads: X Index] [Flags: NCZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0B.b		; A0 0B ; Load #$0B.b into Y register [Writes: Y Index] [Flags: NZ]
	sty $2CDF.w		; 8C DF 2C ; Store Y register to $2CDF.w [Reads: Y Index]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	sta $591F2B.l,X		; 9F 2B 1F 59 ; Store accumulator (long,X) $591F2B.l,X [Reads: Accumulator, X Index]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $1F1E.w,Y		; D9 1E 1F ; Compare accumulator $1F1E.w,Y [Reads: Y Index] [Flags: NCZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	rol $229C.w		; 2E 9C 22 ; Rotate left $229C.w [Flags: NCZ]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	cpy #$1F.b		; C0 1F ; Compare #$1F.b with Y register [Reads: Y Index] [Flags: NCZ]
	jsl $CD2E20.l		; 22 20 2E CD ; Jump to subroutine long $CD2E20.l [Writes: Stack Pointer] [Flow: call]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $7E2D.w		; 2E 2D 7E ; Rotate left $7E2D.w [Flags: NCZ]
	adc ($21.b,S),Y		; 73 21 ; Add with carry (stack relative indirect indexed) ($21.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2DCE.w,Y		; 59 CE 2D ; Exclusive OR accumulator with memory $2DCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $272B.w		; 2E 2B 27 ; Rotate left $272B.w [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $220B.w,Y		; 59 0B 22 ; Exclusive OR accumulator with memory $220B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $16.b,S		; 43 16 ; Exclusive OR accumulator with stack relative $16.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	dec $26BE.w		; CE BE 26 ; Decrement $26BE.w [Flags: NZ]
	sta [$2B.b],Y		; 97 2B ; Store accumulator (long indexed) [$2B.b],Y [Reads: Direct Page, Y Index, Accumulator]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7EE3.w,Y		; 59 E3 7E ; Exclusive OR accumulator with memory $7EE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($AD.b,S),Y		; 73 AD ; Add with carry (stack relative indirect indexed) ($AD.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	eor $A6CB.w,Y		; 59 CB A6 ; Exclusive OR accumulator with memory $A6CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	trb $5921.w		; 1C 21 59 ; Test and reset bits $5921.w [Reads: Accumulator] [Flags: Z]
	cmp [$25.b]		; C7 25 ; Compare accumulator (long) [$25.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $BD99.w,Y		; 59 99 BD ; Exclusive OR accumulator with memory $BD99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $28.b		; 26 28 ; Rotate left $28.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	dec $3E.b		; C6 3E ; Decrement $3E.b [Reads: Direct Page] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp $CF8D.w		; CD 8D CF ; Compare $CF8D.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $D828.w,Y		; 59 28 D8 ; Exclusive OR accumulator with memory $D828.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $20BD.w,Y		; 59 BD 20 ; Exclusive OR accumulator with memory $20BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $251A1C.l		; 22 1C 1A 25 ; Jump to subroutine long $251A1C.l [Writes: Stack Pointer] [Flow: call]
	ror $DF73.w,X		; 7E 73 DF ; Rotate right $DF73.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and #$B3.b		; 29 B3 ; Logical AND #$B3.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and #$28.b		; 29 28 ; Logical AND #$28.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $2D.b,X		; B4 2D ; Load Y register $2D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $2559.w		; 2C 59 25 ; Test bits $2559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsl $591E24.l		; 22 24 1E 59 ; Jump to subroutine long $591E24.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73E3.w,Y		; 59 E3 73 ; Exclusive OR accumulator with memory $73E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $301A.w		; 2C 1A 30 ; Test bits $301A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59C7.w,Y		; 59 C7 59 ; Exclusive OR accumulator with memory $59C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1E.b,S		; 03 1E ; OR accumulator with stack relative $1E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	sty $21.b,X		; 94 21 ; Store Y register $21.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $2D27.w		; 2E 27 2D ; Rotate left $2D27.w [Flags: NCZ]
	sta $017341.l		; 8F 41 73 01 ; Store accumulator (long) $017341.l [Reads: Accumulator]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $B32C.w		; 2E 2C B3 ; Rotate left $B32C.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $7EAC.w,Y		; 99 AC 7E ; Store accumulator to $7EAC.w,Y [Reads: Y Index, Accumulator]
	adc ($97.b,S),Y		; 73 97 ; Add with carry (stack relative indirect indexed) ($97.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $A0E0.w		; 2D E0 A0 ; Logical AND $A0E0.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $302D.w,Y		; 59 2D 30 ; Exclusive OR accumulator with memory $302D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $9059.w		; 2C 59 90 ; Test bits $9059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($1F.b,S),Y		; 73 1F ; Add with carry (stack relative indirect indexed) ($1F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldy $1D.b,X		; B4 1D ; Load Y register $1D.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1DB0.w,Y		; 59 B0 1D ; Exclusive OR accumulator with memory $1DB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B4A0.w,X		; 1D A0 B4 ; OR accumulator with memory $B4A0.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D88D.w,Y		; 59 8D D8 ; Exclusive OR accumulator with memory $D88D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25C7.w,Y		; 59 C7 25 ; Exclusive OR accumulator with memory $25C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($7E.b)		; 32 7E ; AND accumulator with memory (indirect) ($7E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($C7.b,S),Y		; 73 C7 ; Add with carry (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $E159.w,X		; 1E 59 E1 ; Arithmetic shift left $E159.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $9D99.w,Y		; 59 99 9D ; Exclusive OR accumulator with memory $9D99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($73.b)		; 32 73 ; AND accumulator with memory (indirect) ($73.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$9F.b]		; C7 9F ; Compare accumulator (long) [$9F.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $D85942.l,X		; 1F 42 59 D8 ; Logical OR long $D85942.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1ED9.w,Y		; 59 D9 1E ; Exclusive OR accumulator with memory $1ED9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $282740.l,X		; 1F 40 27 28 ; Logical OR long $282740.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $73		; 42 73 ; Reserved instruction
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$42.b]		; C7 42 ; Compare accumulator (long) [$42.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl A		; 0A ; Arithmetic shift left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	lda ($0E.b,S),Y		; B3 0E ; Load accumulator (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $03737E.l,X		; 1F 7E 73 03 ; Logical OR long $03737E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $27.b		; 24 27 ; Test bits $27.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	rol $7A7F.w,X		; 3E 7F 7A ; Rotate left $7A7F.w,X [Reads: X Index] [Flags: NCZ]
	cop $6D.b		; 02 6D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
	asl $1C2C.w,X		; 1E 2C 1C ; Arithmetic shift left $1C2C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E25.w		; 1C 25 2E ; Test and reset bits $2E25.w [Reads: Accumulator] [Flags: Z]
	and $2C9A.w		; 2D 9A 2C ; Logical AND $2C9A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $76C6.w,Y		; 59 C6 76 ; Exclusive OR accumulator with memory $76C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $4373.w,X		; 7E 73 43 ; Rotate right $4373.w,X [Reads: X Index] [Flags: NCZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	clv		; B8 ; Clear overflow flag [Flags: V]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpy W2R.w		; CC 29 21 ; Compare W2R.w with Y register [Reads: Y Index] [Flags: NCZ]
	asl $321C.w,X		; 1E 1C 32 ; Arithmetic shift left $321C.w,X [Reads: X Index] [Flags: NCZ]
	eor $73C6.w,Y		; 59 C6 73 ; Exclusive OR accumulator with memory $73C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $CE06.w,Y		; 59 06 CE ; Exclusive OR accumulator with memory $CE06.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($02.b),Y		; 91 02 ; Store accumulator ($02.b),Y [Reads: Direct Page, Y Index, Accumulator]
	sty $1A.b,X		; 94 1A ; Store Y register $1A.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	trb $3225.w		; 1C 25 32 ; Test and reset bits $3225.w [Reads: Accumulator] [Flags: Z]
	bit $3F26.w		; 2C 26 3F ; Test bits $3F26.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($E7.b,S),Y		; 73 E7 ; Add with carry (stack relative indirect indexed) ($E7.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $B559.w		; 2C 59 B5 ; Test bits $B559.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $085932.l,X		; DF 32 59 08 ; Compare accumulator (long,X) $085932.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $B659.w,X		; 1D 59 B6 ; OR accumulator with memory $B659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $591A59.l,X		; 1F 59 1A 59 ; Logical OR long $591A59.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59AE.w,Y		; 59 AE 59 ; Exclusive OR accumulator with memory $59AE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($A2.b,X)		; 21 A2 ; Logical AND ($A2.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $AB59.w		; 2D 59 AB ; Logical AND $AB59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $2B13.w,Y		; 59 13 2B ; Exclusive OR accumulator with memory $2B13.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	.db $42, $59		; 42 59 ; Reserved instruction
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $28E4.w,Y		; 59 E4 28 ; Exclusive OR accumulator with memory $28E4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($B5.b,S),Y		; 73 B5 ; Add with carry (stack relative indirect indexed) ($B5.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2D9D.w,Y		; 59 9D 2D ; Exclusive OR accumulator with memory $2D9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $A4.b,X		; B4 A4 ; Load Y register $A4.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $291A.w,Y		; 59 1A 29 ; Exclusive OR accumulator with memory $291A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$A2.b		; 29 A2 ; Logical AND #$A2.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sty $1E21.w		; 8C 21 1E ; Store Y register to $1E21.w [Reads: Y Index]
	eor $BB1A.w,Y		; 59 1A BB ; Exclusive OR accumulator with memory $BB1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($C9.b,S),Y		; 73 C9 ; Add with carry (stack relative indirect indexed) ($C9.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2097.w,Y		; 59 97 20 ; Exclusive OR accumulator with memory $2097.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $CE06.w,Y		; 59 06 CE ; Exclusive OR accumulator with memory $CE06.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sty $73.b,X		; 94 73 ; Store Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index]
	cop $94.b		; 02 94 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $3225.w		; 1C 25 32 ; Test and reset bits $3225.w [Reads: Accumulator] [Flags: Z]
	bit $4126.w		; 2C 26 41 ; Test bits $4126.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	ora $59D859.l,X		; 1F 59 D8 59 ; Logical OR long $59D859.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$1E.b]		; C7 1E ; Compare accumulator (long) [$1E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $DB9D.w,Y		; 59 9D DB ; Exclusive OR accumulator with memory $DB9D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
.ACCU 16
.INDEX 16
	rep #$B0		; C2 B0
	and [$20.b]		; 27 20 ; AND accumulator with memory (long) [$20.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2C99.w,Y		; 59 99 2C ; Exclusive OR accumulator with memory $2C99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $D8591E.l		; 2F 1E 59 D8 ; AND accumulator with memory (long) $D8591E.l [Writes: Accumulator] [Flags: NZ]
	adc ($30.b,S),Y		; 73 30 ; Add with carry (stack relative indirect indexed) ($30.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $9CE2.w,Y		; 59 E2 9C ; Exclusive OR accumulator with memory $9CE2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $CE.b		; A4 CE ; Load $CE.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	jsl $412720.l		; 22 20 27 41 ; Jump to subroutine long $412720.l [Writes: Stack Pointer] [Flow: call]
	ror $0E73.w,X		; 7E 73 0E ; Rotate right $0E73.w,X [Reads: X Index] [Flags: NCZ]
	and [$B9.b]		; 27 B9 ; AND accumulator with memory (long) [$B9.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $D2C9.w,Y		; 59 C9 D2 ; Exclusive OR accumulator with memory $D2C9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $270A.w,Y		; 59 0A 27 ; Exclusive OR accumulator with memory $270A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $0E59.w		; 2C 59 0E ; Test bits $0E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $320773.l,X		; 1F 73 07 32 ; Logical OR long $320773.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2DCC.w,Y		; 59 CC 2D ; Exclusive OR accumulator with memory $2DCC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	ldy $D8.b		; A4 D8 ; Load $D8.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	adc ($2B.b,S),Y		; 73 2B ; Add with carry (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($1A.b)		; 32 1A ; AND accumulator with memory (indirect) ($1A.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2D.b		; 25 2D ; Logical AND $2D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta $9B97.w,Y		; 99 97 9B ; Store accumulator to $9B97.w,Y [Reads: Y Index, Accumulator]
	asl $737E.w,X		; 1E 7E 73 ; Arithmetic shift left $737E.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $28E4.w,Y		; 59 E4 28 ; Exclusive OR accumulator with memory $28E4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C68D.w,Y		; 59 8D C6 ; Exclusive OR accumulator with memory $C68D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $22D8.w,Y		; 59 D8 22 ; Exclusive OR accumulator with memory $22D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	adc ($1B.b,S),Y		; 73 1B ; Add with carry (stack relative indirect indexed) ($1B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2540.w,X		; 1D 40 25 ; OR accumulator with memory $2540.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $E3C0.w		; CE C0 E3 ; Decrement $E3C0.w [Flags: NZ]
	and $27E68A.l,X		; 3F 8A E6 27 ; AND accumulator with memory (long,X) $27E68A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E3.b,S),Y		; 73 E3 ; Add with carry (stack relative indirect indexed) ($E3.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CCE.w,Y		; 59 CE 2C ; Exclusive OR accumulator with memory $2CCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $1E2E.w		; 1C 2E 1E ; Test and reset bits $1E2E.w [Reads: Accumulator] [Flags: Z]
	ror $1973.w,X		; 7E 73 19 ; Rotate right $1973.w,X [Reads: X Index] [Flags: NCZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $C5DE.w,Y		; 59 DE C5 ; Exclusive OR accumulator with memory $C5DE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $25221A.l,X		; 1F 1A 22 25 ; Logical OR long $25221A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	cop $6D.b		; 02 6D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
	asl $1C2C.w,X		; 1E 2C 1C ; Arithmetic shift left $1C2C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$591E.w		; 29 1E 59 ; Logical AND #$591E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda #$5926.w		; A9 26 59 ; Load #$5926.w into accumulator [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251C.w,Y		; 59 1C 25 ; Exclusive OR accumulator with memory $251C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $9A2D.w		; 2E 2D 9A ; Rotate left $9A2D.w [Flags: NCZ]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $0073.w,X		; 7E 73 00 ; Rotate right $0073.w,X [Reads: X Index] [Flags: NCZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $A4.b		; 25 A4 ; Logical AND $A4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $270A.w,Y		; 59 0A 27 ; Exclusive OR accumulator with memory $270A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $0E73.w		; 2C 73 0E ; Test bits $0E73.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $320759.l,X		; 1F 59 07 32 ; Logical OR long $320759.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $A41DA5.l,X		; 1F A5 1D A4 ; Logical OR long $A41DA5.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	lda #$7E26.w		; A9 26 7E ; Load #$7E26.w into accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2D94.w,Y		; 59 94 2D ; Exclusive OR accumulator with memory $2D94.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	stz $592C.w		; 9C 2C 59 ; Store zero to $592C.w
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $7E41.w		; 2C 41 7E ; Test bits $7E41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D759.w,X		; 1D 59 D7 ; OR accumulator with memory $D759.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $270A.w,Y		; 59 0A 27 ; Exclusive OR accumulator with memory $270A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $0E59.w		; 2C 59 0E ; Test bits $0E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $320773.l,X		; 1F 73 07 32 ; Logical OR long $320773.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol $1E25.w		; 2E 25 1E ; Rotate left $1E25.w [Flags: NCZ]
	eor $CDE0.w,Y		; 59 E0 CD ; Exclusive OR accumulator with memory $CDE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$A2.b]		; 27 A2 ; AND accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $29E2.w,Y		; B9 E2 29 ; Load $29E2.w,Y into accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $C5.b		; A4 C5 ; Load $C5.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	ldy $73.b,X		; B4 73 ; Load Y register $73.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $2D96.w,Y		; 59 96 2D ; Exclusive OR accumulator with memory $2D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($E8.b,S),Y		; 73 E8 ; Add with carry (stack relative indirect indexed) ($E8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $C98D.w,Y		; 59 8D C9 ; Exclusive OR accumulator with memory $C98D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($29.b),Y		; B1 29 ; Load accumulator ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BB1B.w,Y		; 59 1B BB ; Exclusive OR accumulator with memory $BB1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2540.w,X		; 1D 40 25 ; OR accumulator with memory $2540.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $73C6.w,Y		; 59 C6 73 ; Exclusive OR accumulator with memory $73C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $270A.w,Y		; 59 0A 27 ; Exclusive OR accumulator with memory $270A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $7E43.w		; 2C 43 7E ; Test bits $7E43.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2B22.w,Y		; 59 22 2B ; Exclusive OR accumulator with memory $2B22.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$22.b]		; C7 22 ; Compare accumulator (long) [$22.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	trb $D759.w		; 1C 59 D7 ; Test and reset bits $D759.w [Reads: Accumulator] [Flags: Z]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EC7.w,Y		; 59 C7 1E ; Exclusive OR accumulator with memory $1EC7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73B4.w,Y		; 59 B4 73 ; Exclusive OR accumulator with memory $73B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $B425.w,Y		; 59 25 B4 ; Exclusive OR accumulator with memory $B425.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $AE59.w,X		; 1E 59 AE ; Arithmetic shift left $AE59.w,X [Reads: X Index] [Flags: NCZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2D28.w		; 29 28 2D ; Logical AND #$2D28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda $22.b,S		; A3 22 ; Load accumulator (stack relative) $22.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($97.b,S),Y		; 73 97 ; Add with carry (stack relative indirect indexed) ($97.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	eor $28E4.w,Y		; 59 E4 28 ; Exclusive OR accumulator with memory $28E4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($12.b,S),Y		; 73 12 ; Add with carry (stack relative indirect indexed) ($12.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $B9CE.w		; 2E CE B9 ; Rotate left $B9CE.w [Flags: NCZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $DB9D.w,Y		; 99 9D DB ; Store accumulator to $DB9D.w,Y [Reads: Y Index, Accumulator]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$3E.b]		; C7 3E ; Compare accumulator (long) [$3E.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc $6D027A.l,X		; 7F 7A 02 6D ; Add long $6D027A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
	asl $1C2C.w,X		; 1E 2C 1C ; Arithmetic shift left $1C2C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$591E.w		; 29 1E 59 ; Logical AND #$591E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda #$5926.w		; A9 26 59 ; Load #$5926.w into accumulator [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $251C.w,Y		; 59 1C 25 ; Exclusive OR accumulator with memory $251C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $9A2D.w		; 2E 2D 9A ; Rotate left $9A2D.w [Flags: NCZ]
	bit $C659.w		; 2C 59 C6 ; Test bits $C659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $E673.w,X		; 7E 73 E6 ; Rotate right $E673.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $321A.w		; 2C 1A 32 ; Test bits $321A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$DB.b]		; C7 DB ; Compare accumulator (long) [$DB.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $26.b		; A4 26 ; Load $26.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	and ($D3.b)		; 32 D3 ; AND accumulator with memory (indirect) ($D3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $22.b		; A6 22 ; Load $22.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	wai		; CB ; Wait for interrupt
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	.db $42, $73		; 42 73 ; Reserved instruction
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $9E59.w		; 2C 59 9E ; Test bits $9E59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora $D859.w,X		; 1D 59 D8 ; OR accumulator with memory $D859.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$D0E2.w		; A0 E2 D0 ; Load #$D0E2.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BB1B.w,Y		; 59 1B BB ; Exclusive OR accumulator with memory $BB1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$32.b]		; 07 32 ; OR accumulator with memory (long) [$32.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $73AE.w,Y		; 59 AE 73 ; Exclusive OR accumulator with memory $73AE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$9B.b],Y		; 97 9B ; Store accumulator (long indexed) [$9B.b],Y [Reads: Direct Page, Y Index, Accumulator]
	asl $D559.w,X		; 1E 59 D5 ; Arithmetic shift left $D559.w,X [Reads: X Index] [Flags: NCZ]
	eor $DD28.w,Y		; 59 28 DD ; Exclusive OR accumulator with memory $DD28.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $8A41.w,Y		; BE 41 8A ; Load X register $8A41.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $28E1.w,Y		; 59 E1 28 ; Exclusive OR accumulator with memory $28E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BB1B.w,Y		; 59 1B BB ; Exclusive OR accumulator with memory $BB1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $C659.w,X		; 1D 59 C6 ; OR accumulator with memory $C659.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2F		; D0 2F ; Branch if not equal to $D0, $2F [Flow: branch]
	lda $7E.b		; A5 7E ; Load $7E.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $5927.w,Y		; BE 27 59 ; Load X register $5927.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	sta $59C259.l,X		; 9F 59 C2 59 ; Store accumulator (long,X) $59C259.l,X [Reads: Accumulator, X Index]
	and #$2C28.w		; 29 28 2C ; Logical AND #$2C28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $D0, $2C		; D0 2C ; Branch if not equal to $D0, $2C [Flow: branch]
	bit $D359.w		; 2C 59 D3 ; Test bits $D359.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp [$20.b]		; C7 20 ; Compare accumulator (long) [$20.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc ($CB.b,S),Y		; 73 CB ; Add with carry (stack relative indirect indexed) ($CB.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda ($93.b,X)		; A1 93 ; Load accumulator ($93.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C8.b		; 26 C8 ; Rotate left $C8.b [Reads: Direct Page] [Flags: NCZ]
	asl $5942.w,X		; 1E 42 59 ; Arithmetic shift left $5942.w,X [Reads: X Index] [Flags: NCZ]
	asl $AFB6.w,X		; 1E B6 AF ; Arithmetic shift left $AFB6.w,X [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	wai		; CB ; Wait for interrupt
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $D01A.w		; CE 1A D0 ; Decrement $D01A.w [Flags: NZ]
	eor $1F22.w,Y		; 59 22 1F ; Exclusive OR accumulator with memory $1F22.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $73E0.w,Y		; 59 E0 73 ; Exclusive OR accumulator with memory $73E0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $22.b		; 26 22 ; Rotate left $22.b [Reads: Direct Page] [Flags: NCZ]
	and ($59.b),Y		; 31 59 ; AND accumulator with memory ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1A2B.w		; 2E 2B 1A ; Rotate left $1A2B.w [Flags: NCZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $270A.w,Y		; 59 0A 27 ; Exclusive OR accumulator with memory $270A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	bit $DE73.w		; 2C 73 DE ; Test bits $DE73.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.ACCU 8
	sep #$2C		; E2 2C
	sta $C65926.l,X		; 9F 26 59 C6 ; Store accumulator (long,X) $C65926.l,X [Reads: Accumulator, X Index]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
.INDEX 8
	sep #$D0		; E2 D0
	ror $BE73.w,X		; 7E 73 BE ; Rotate right $BE73.w,X [Reads: X Index] [Flags: NCZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B927.w		; 0E 27 B9 ; Arithmetic shift left $B927.w [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $C8D1.w,Y		; 59 D1 C8 ; Exclusive OR accumulator with memory $C8D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $CE59BE.l		; 22 BE 59 CE ; Jump to subroutine long $CE59BE.l [Writes: Stack Pointer] [Flow: call]
	lda $2CB4.w,X		; BD B4 2C ; Load $2CB4.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($2E.b,S),Y		; 73 2E ; Add with carry (stack relative indirect indexed) ($2E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $D85925.l		; 22 25 59 D8 ; Jump to subroutine long $D85925.l [Writes: Stack Pointer] [Flow: call]
	eor $9420.w,Y		; 59 20 94 ; Exclusive OR accumulator with memory $9420.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $9159.w,X		; 1E 59 91 ; Arithmetic shift left $9159.w,X [Reads: X Index] [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($25.b,S),Y		; 73 25 ; Add with carry (stack relative indirect indexed) ($25.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldy $24.b,X		; B4 24 ; Load Y register $24.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	lda ($D8.b,S),Y		; B3 D8 ; Load accumulator (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $C359.w		; 2C 59 C3 ; Test bits $C359.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $737E.w		; 2C 7E 73 ; Test bits $737E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	and $251E.w		; 2D 1E 25 ; Logical AND $251E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($41.b)		; 32 41 ; AND accumulator with memory (indirect) ($41.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	ora $59E359.l,X		; 1F 59 E3 59 ; Logical OR long $59E359.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1F1E.w,X		; 1D 1E 1F ; OR accumulator with memory $1F1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $7394.w,X		; 1E 94 73 ; Arithmetic shift left $7394.w,X [Reads: X Index] [Flags: NCZ]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$42.b]		; C7 42 ; Compare accumulator (long) [$42.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $21B593.l		; 2F 93 B5 21 ; AND accumulator with memory (long) $21B593.l [Writes: Accumulator] [Flags: NZ]
	adc ($8C.b,S),Y		; 73 8C ; Add with carry (stack relative indirect indexed) ($8C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2B13.w,Y		; 59 13 2B ; Exclusive OR accumulator with memory $2B13.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $A859B6.l,X		; DF B6 59 A8 ; Compare accumulator (long,X) $A859B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	ror $1A73.w,X		; 7E 73 1A ; Rotate right $1A73.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E27.w,Y		; 59 27 1E ; Exclusive OR accumulator with memory $1E27.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $41.b		; A6 41 ; Load $41.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2597.w,Y		; 59 97 25 ; Exclusive OR accumulator with memory $2597.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591EA7.l		; 22 A7 1E 59 ; Jump to subroutine long $591EA7.l [Writes: Stack Pointer] [Flow: call]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	sbc $43.b,S		; E3 43 ; Subtract stack-relative $43.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2559.w,X		; 1D 59 25 ; OR accumulator with memory $2559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $3E9C.w		; 2E 9C 3E ; Rotate left $3E9C.w [Flags: NCZ]
	adc $6D027A.l,X		; 7F 7A 02 6D ; Add long $6D027A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $6A.b		; 02 6A ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	.db $42, $59		; 42 59 ; Reserved instruction
	sta [$1C.b],Y		; 97 1C ; Store accumulator (long indexed) [$1C.b],Y [Reads: Direct Page, Y Index, Accumulator]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	sbc $42.b,S		; E3 42 ; Subtract stack-relative $42.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $7593.w		; 1C 93 75 ; Test and reset bits $7593.w [Reads: Accumulator] [Flags: Z]
	asl $1C2C.w,X		; 1E 2C 1C ; Arithmetic shift left $1C2C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $2E25.w		; 1C 25 2E ; Test and reset bits $2E25.w [Reads: Accumulator] [Flags: Z]
	and $2C9A.w		; 2D 9A 2C ; Logical AND $2C9A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $76C6.w,Y		; 59 C6 76 ; Exclusive OR accumulator with memory $76C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22A7.w,Y		; 59 A7 22 ; Exclusive OR accumulator with memory $22A7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	sbc $27.b		; E5 27 ; Subtract $27.b from accumulator with borrow [Reads: Direct Page] [Writes: Accumulator] [Flags: NCVZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc $3E.b,S		; E3 3E ; Subtract stack-relative $3E.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ror $0673.w,X		; 7E 73 06 ; Rotate right $0673.w,X [Reads: X Index] [Flags: NCZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$2D.b		; 29 2D ; Logical AND #$2D.b with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $1DCE.w		; 2E CE 1D ; Rotate left $1DCE.w [Flags: NCZ]
	eor $2C2E.w,Y		; 59 2E 2C ; Exclusive OR accumulator with memory $2C2E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1C97.w,Y		; 59 97 1C ; Exclusive OR accumulator with memory $1C97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	cpy #$1B.b		; C0 1B ; Compare #$1B.b with Y register [Reads: Y Index] [Flags: NCZ]
	dec $241A.w		; CE 1A 24 ; Decrement $241A.w [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $5927.w,Y		; BE 27 59 ; Load X register $5927.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	dec $B059.w,X		; DE 59 B0 ; Decrement memory $B059.w,X [Reads: X Index] [Flags: NZ]
	bit $CB59.w		; 2C 59 CB ; Test bits $CB59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda ($1A.b,X)		; A1 1A ; Load accumulator ($1A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $27D8.w,Y		; 59 D8 27 ; Exclusive OR accumulator with memory $27D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	rol $B32C.w		; 2E 2C B3 ; Rotate left $B32C.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $33E2.w,Y		; 59 E2 33 ; Exclusive OR accumulator with memory $33E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $0073.w,X		; 1D 73 00 ; OR accumulator with memory $0073.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $211A.w		; 20 1A 21 ; Jump to subroutine at $211A.w [Writes: Stack Pointer] [Flow: call]
	and [$22.b]		; 27 22 ; AND accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $B059.w		; 2C 59 B0 ; Test bits $B059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	bit $2959.w		; 2C 59 29 ; Test bits $2959.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	.db $30, $27		; 30 27 ; Branch if minus to $30, $27 [Flow: branch]
	.db $42, $59		; 42 59 ; Reserved instruction
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $CE1D.w,Y		; 59 1D CE ; Exclusive OR accumulator with memory $CE1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	rol $732C.w		; 2E 2C 73 ; Rotate left $732C.w [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $2B1CD4.l,X		; 1F D4 1C 2B ; Logical OR long $2B1CD4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	stz $D8B3.w		; 9C B3 D8 ; Store zero to $D8B3.w
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $2873.w,X		; DE 73 28 ; Decrement memory $2873.w,X [Reads: X Index] [Flags: NZ]
	rol $592B.w		; 2E 2B 59 ; Rotate left $592B.w [Flags: NCZ]
	wai		; CB ; Wait for interrupt
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $A4.b		; 25 A4 ; Logical AND $A4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $731E1D.l		; 22 1D 1E 73 ; Jump to subroutine long $731E1D.l [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	trb $322B.w		; 1C 2B 32 ; Test and reset bits $322B.w [Reads: Accumulator] [Flags: Z]
	cmp ($1A.b,S),Y		; D3 1A ; Compare accumulator (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	and $2C.b		; 25 2C ; Logical AND $2C.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $2F1A.w		; 20 1A 2F ; Jump to subroutine at $2F1A.w [Writes: Stack Pointer] [Flow: call]
	asl $2E59.w,X		; 1E 59 2E ; Arithmetic shift left $2E59.w,X [Reads: X Index] [Flags: NCZ]
	bit $DA59.w		; 2C 59 DA ; Test bits $DA59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $32BB.w,Y		; 59 BB 32 ; Exclusive OR accumulator with memory $32BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $73.b		; 25 73 ; Logical AND $73.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $C7.b		; 26 C7 ; Rotate left $C7.b [Reads: Direct Page] [Flags: NCZ]
	cmp ($A6.b,S),Y		; D3 A6 ; Compare accumulator (stack relative indirect indexed) ($A6.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $0659.w		; 2D 59 06 ; Logical AND $0659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $1D9E.w,Y		; 59 9E 1D ; Exclusive OR accumulator with memory $1D9E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$51.b]		; 27 51 ; AND accumulator with memory (long) [$51.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $2973.w		; 2D 73 29 ; Logical AND $2973.w with accumulator [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $2DAB.w,Y		; 59 AB 2D ; Exclusive OR accumulator with memory $2DAB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($D9.b,S),Y		; B3 D9 ; Load accumulator (stack relative indirect indexed) ($D9.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	bit $1F59.w		; 2C 59 1F ; Test bits $1F59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0D.b,S),Y		; 73 0D ; Add with carry (stack relative indirect indexed) ($0D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $2B0F.w,Y		; 59 0F 2B ; Exclusive OR accumulator with memory $2B0F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $20B4B6.l,X		; DF B6 B4 20 ; Compare accumulator (long,X) $20B4B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	adc ($A8.b,S),Y		; 73 A8 ; Add with carry (stack relative indirect indexed) ($A8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $2C.b,X		; B4 2C ; Load Y register $2C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	jsl $591E1D.l		; 22 1D 1E 59 ; Jump to subroutine long $591E1D.l [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	ora ($2E.b,S),Y		; 13 2E ; OR accumulator (stack relative indirect indexed) ($2E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2811.w,Y		; 59 11 28 ; Exclusive OR accumulator with memory $2811.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $7341.w		; 9C 41 73 ; Store zero to $7341.w
	ora $1A1E25.l		; 0F 25 1E 1A ; OR accumulator with memory (long) $1A1E25.l [Writes: Accumulator] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	and ($2E.b,X)		; 21 2E ; Logical AND ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($3E.b)		; 32 3E ; AND accumulator with memory (indirect) ($3E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $6D027A.l,X		; 7F 7A 02 6D ; Add long $6D027A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $08.b		; 02 08 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $291A.w,Y		; 59 1A 29 ; Exclusive OR accumulator with memory $291A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$CE.b		; 29 CE ; Logical AND #$CE.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $9422.w		; 1C 22 94 ; Test and reset bits $9422.w [Reads: Accumulator] [Flags: Z]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $B39B.w,Y		; 59 9B B3 ; Exclusive OR accumulator with memory $B39B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $752B1A.l,X		; 1F 1A 2B 75 ; Logical OR long $752B1A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2CCE.w,Y		; 59 CE 2C ; Exclusive OR accumulator with memory $2CCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $1E2E.w		; 1C 2E 1E ; Test and reset bits $1E2E.w [Reads: Accumulator] [Flags: Z]
	eor $41BE.w,Y		; 59 BE 41 ; Exclusive OR accumulator with memory $41BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $2C.b		; 00 2C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2821.w		; 2D 21 28 ; Logical AND $2821.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $7642.w		; 2D 42 76 ; Logical AND $7642.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $59D8.w		; 8D D8 59 ; Store accumulator to $59D8.w [Reads: Accumulator]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D251E.l,X		; 1F 1E 25 2D ; Logical OR long $2D251E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D32B22.l,X		; 1F 22 2B D3 ; Logical OR long $D32B22.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($2D.b,S),Y		; 73 2D ; Add with carry (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $E059BE.l		; 22 BE 59 E0 ; Jump to subroutine long $E059BE.l [Writes: Stack Pointer] [Flow: call]
	eor $2DBE.w,Y		; 59 BE 2D ; Exclusive OR accumulator with memory $2DBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $B4B3B6.l,X		; DF B6 B3 B4 ; Compare accumulator (long,X) $B4B3B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	bit $1D22.w		; 2C 22 1D ; Test bits $1D22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $2B21.w		; 2D 21 2B ; Logical AND $2B21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1E94.w		; 20 94 1E ; Jump to subroutine at $1E94.w [Writes: Stack Pointer] [Flow: call]
	eor $B425.w,Y		; 59 25 B4 ; Exclusive OR accumulator with memory $B425.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $302D.w,Y		; 59 2D 30 ; Exclusive OR accumulator with memory $302D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $7E41.w		; 2C 41 7E ; Test bits $7E41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1C.b]		; 27 1C ; AND accumulator with memory (long) [$1C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $0659.w,X		; 1E 59 06 ; Arithmetic shift left $0659.w,X [Reads: X Index] [Flags: NCZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $A6A3.w,Y		; 59 A3 A6 ; Exclusive OR accumulator with memory $A6A3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $220B.w,Y		; 59 0B 22 ; Exclusive OR accumulator with memory $220B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rol $2527.w		; 2E 27 25 ; Rotate left $2527.w [Flags: NCZ]
	jsl $B91E24.l		; 22 24 1E B9 ; Jump to subroutine long $B91E24.l [Writes: Stack Pointer] [Flow: call]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	adc ($93.b,S),Y		; 73 93 ; Add with carry (stack relative indirect indexed) ($93.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($C7.b)		; 32 C7 ; AND accumulator with memory (indirect) ($C7.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $9959.w,X		; 1E 59 99 ; Arithmetic shift left $9959.w,X [Reads: X Index] [Flags: NCZ]
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	jsl $21591F.l		; 22 1F 59 21 ; Jump to subroutine long $21591F.l [Writes: Stack Pointer] [Flow: call]
	asl $D359.w,X		; 1E 59 D3 ; Arithmetic shift left $D359.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BB1C.w,Y		; 59 1C BB ; Exclusive OR accumulator with memory $BB1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1D		; D0 1D ; Branch if not equal to $D0, $1D [Flow: branch]
	adc ($2C.b,S),Y		; 73 2C ; Add with carry (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7393.w		; 1C 93 73 ; Test and reset bits $7393.w [Reads: Accumulator] [Flags: Z]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $A6E1.w,Y		; 59 E1 A6 ; Exclusive OR accumulator with memory $A6E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $2E2B.w,Y		; 59 2B 2E ; Exclusive OR accumulator with memory $2E2B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$2C.b]		; 27 2C ; AND accumulator with memory (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0D.b,S),Y		; 73 0D ; Add with carry (stack relative indirect indexed) ($0D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $42		; 30 42 ; Branch if minus to $30, $42 [Flow: branch]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	rol $168A.w,X		; 3E 8A 16 ; Rotate left $168A.w,X [Reads: X Index] [Flags: NCZ]
	asl $E259.w,X		; 1E 59 E2 ; Arithmetic shift left $E259.w,X [Reads: X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2E28.w,Y		; 59 28 2E ; Exclusive OR accumulator with memory $2E28.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	adc ($9B.b,S),Y		; 73 9B ; Add with carry (stack relative indirect indexed) ($9B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ldy $A4.b,X		; B4 A4 ; Load Y register $A4.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	wai		; CB ; Wait for interrupt
	ldx $2C.b		; A6 2C ; Load $2C.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	dec $241A.w		; CE 1A 24 ; Decrement $241A.w [Flags: NZ]
	eor $7ED8.w,Y		; 59 D8 7E ; Exclusive OR accumulator with memory $7ED8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($96.b,S),Y		; 73 96 ; Add with carry (stack relative indirect indexed) ($96.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $8A41A6.l		; 22 A6 41 8A ; Jump to subroutine long $8A41A6.l [Writes: Stack Pointer] [Flow: call]
	phd		; 0B ; Push direct page register  [Reads: Direct Page] [Writes: Stack Pointer]
	asl $8B2D.w,X		; 1E 2D 8B ; Arithmetic shift left $8B2D.w,X [Reads: X Index] [Flags: NCZ]
	dec $2E2D.w		; CE 2D 2E ; Decrement $2E2D.w [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $DB27.w		; 2E 27 DB ; Rotate left $DB27.w [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $1FC5.w,X		; DE C5 1F ; Decrement memory $1FC5.w,X [Reads: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $734325.l		; 22 25 43 73 ; Jump to subroutine long $734325.l [Writes: Stack Pointer] [Flow: call]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $79.b,S		; 43 79 ; Exclusive OR accumulator with stack relative $79.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	and $7A7F.w		; 2D 7F 7A ; Logical AND $7A7F.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cop $6D.b		; 02 6D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $0C.b		; 02 0C ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $28E4.w,Y		; 59 E4 28 ; Exclusive OR accumulator with memory $28E4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $DA75.w,X		; 1D 75 DA ; OR accumulator with memory $DA75.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2B.b,S),Y		; 13 2B ; OR accumulator (stack relative indirect indexed) ($2B.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	cop $6D.b		; 02 6D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $03.b		; 02 03 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D27.w		; 2E 27 1D ; Rotate left $1D27.w [Flags: NCZ]
	ldx $D3.b		; A6 D3 ; Load $D3.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	.db $90, $3F		; 90 3F ; Branch if carry clear to $90, $3F [Flow: branch]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	mvp $18,$8A		; 44 8A 18 ; Move block positive $18,$8A [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	asl $762C.w,X		; 1E 2C 76 ; Arithmetic shift left $762C.w,X [Reads: X Index] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	ora $2D28.w		; 0D 28 2D ; Logical OR $2D28.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1A91.w,Y		; 59 91 1A ; Exclusive OR accumulator with memory $1A91.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $59426A.l,X		; 7F 6A 42 59 ; Add long $59426A.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpx #$59.b		; E0 59 ; Compare #$59.b with X register [Reads: X Index] [Flags: NCZ]
	sta $B3AC.w		; 8D AC B3 ; Store accumulator to $B3AC.w [Reads: Accumulator]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $CE1B.w,Y		; 59 1B CE ; Exclusive OR accumulator with memory $CE1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $75.b		; 24 75 ; Test bits $75.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2B96.w,Y		; 59 96 2B ; Exclusive OR accumulator with memory $2B96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $59C6A1.l		; 22 A1 C6 59 ; Jump to subroutine long $59C6A1.l [Writes: Stack Pointer] [Flow: call]
	asl $93.b		; 06 93 ; Arithmetic shift left $93.b [Reads: Direct Page] [Flags: NCZ]
	cmp [$8B.b]		; C7 8B ; Compare accumulator (long) [$8B.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	ror $DE.b,X		; 76 DE ; Rotate right $DE.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $2E28.w,Y		; 59 28 2E ; Exclusive OR accumulator with memory $2E28.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $A6CB.w,Y		; 59 CB A6 ; Exclusive OR accumulator with memory $A6CB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ply		; 7A ; Pull Y register [Reads: Stack Pointer] [Writes: Y Index, Stack Pointer] [Flags: NZ]
	cop $6D.b		; 02 6D ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($6B.b,X)		; 01 6B ; Logical OR ($6B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cop $08.b		; 02 08 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $291A.w,Y		; 59 1A 29 ; Exclusive OR accumulator with memory $291A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$CE.b		; 29 CE ; Logical AND #$CE.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $9422.w		; 1C 22 94 ; Test and reset bits $9422.w [Reads: Accumulator] [Flags: Z]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $B39B.w,Y		; 59 9B B3 ; Exclusive OR accumulator with memory $B39B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $752B1A.l,X		; 1F 1A 2B 75 ; Logical OR long $752B1A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $2CCE.w,Y		; 59 CE 2C ; Exclusive OR accumulator with memory $2CCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $1E2E.w		; 1C 2E 1E ; Test and reset bits $1E2E.w [Reads: Accumulator] [Flags: Z]
	eor $41BE.w,Y		; 59 BE 41 ; Exclusive OR accumulator with memory $41BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $2C.b		; 00 2C ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2821.w		; 2D 21 28 ; Logical AND $2821.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	and $7642.w		; 2D 42 76 ; Logical AND $7642.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $59D8.w		; 8D D8 59 ; Store accumulator to $59D8.w [Reads: Accumulator]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2D251E.l,X		; 1F 1E 25 2D ; Logical OR long $2D251E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D32B22.l,X		; 1F 22 2B D3 ; Logical OR long $D32B22.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($2D.b,S),Y		; 73 2D ; Add with carry (stack relative indirect indexed) ($2D.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	jsl $E059BE.l		; 22 BE 59 E0 ; Jump to subroutine long $E059BE.l [Writes: Stack Pointer] [Flow: call]
	eor $2DBE.w,Y		; 59 BE 2D ; Exclusive OR accumulator with memory $2DBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $B4B3B6.l,X		; DF B6 B3 B4 ; Compare accumulator (long,X) $B4B3B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	bit $1D22.w		; 2C 22 1D ; Test bits $1D22.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $C659.w,X		; 1E 59 C6 ; Arithmetic shift left $C659.w,X [Reads: X Index] [Flags: NCZ]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $592C.w		; 2C 2C 59 ; Test bits $592C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $2B21.w		; 2D 21 2B ; Logical AND $2B21.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor $73D8.w,Y		; 59 D8 73 ; Exclusive OR accumulator with memory $73D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1E94.w		; 20 94 1E ; Jump to subroutine at $1E94.w [Writes: Stack Pointer] [Flow: call]
	eor $B425.w,Y		; 59 25 B4 ; Exclusive OR accumulator with memory $B425.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $302D.w,Y		; 59 2D 30 ; Exclusive OR accumulator with memory $302D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $C830.w,Y		; 59 30 C8 ; Exclusive OR accumulator with memory $C830.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $7E41.w		; 2C 41 7E ; Test bits $7E41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$1C.b]		; 27 1C ; AND accumulator with memory (long) [$1C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $0659.w,X		; 1E 59 06 ; Arithmetic shift left $0659.w,X [Reads: X Index] [Flags: NCZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $A6A3.w,Y		; 59 A3 A6 ; Exclusive OR accumulator with memory $A6A3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $D859.w		; 2C 59 D8 ; Test bits $D859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $220B.w,Y		; 59 0B 22 ; Exclusive OR accumulator with memory $220B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $2D21.w		; 20 21 2D ; Jump to subroutine at $2D21.w [Writes: Stack Pointer] [Flow: call]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	rol $2527.w		; 2E 27 25 ; Rotate left $2527.w [Flags: NCZ]
	jsl $B91E24.l		; 22 24 1E B9 ; Jump to subroutine long $B91E24.l [Writes: Stack Pointer] [Flow: call]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	adc ($93.b,S),Y		; 73 93 ; Add with carry (stack relative indirect indexed) ($93.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($C7.b)		; 32 C7 ; AND accumulator with memory (indirect) ($C7.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $9959.w,X		; 1E 59 99 ; Arithmetic shift left $9959.w,X [Reads: X Index] [Flags: NCZ]
	cmp ($28.b,S),Y		; D3 28 ; Compare accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	jsl $21591F.l		; 22 1F 59 21 ; Jump to subroutine long $21591F.l [Writes: Stack Pointer] [Flow: call]
	asl $D359.w,X		; 1E 59 D3 ; Arithmetic shift left $D359.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $BB1C.w,Y		; 59 1C BB ; Exclusive OR accumulator with memory $BB1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1D		; D0 1D ; Branch if not equal to $D0, $1D [Flow: branch]
	adc ($2C.b,S),Y		; 73 2C ; Add with carry (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and #$1A.b		; 29 1A ; Logical AND #$1A.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	trb $7393.w		; 1C 93 73 ; Test and reset bits $7393.w [Reads: Accumulator] [Flags: Z]
	ora $591DB4.l,X		; 1F B4 1D 59 ; Logical OR long $591DB4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $B0, $26		; B0 26 ; Branch if carry set to $B0, $26 [Flow: branch]
	eor $A6E1.w,Y		; 59 E1 A6 ; Exclusive OR accumulator with memory $A6E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $2E2B.w,Y		; 59 2B 2E ; Exclusive OR accumulator with memory $2E2B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$2C.b]		; 27 2C ; AND accumulator with memory (long) [$2C.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($12.b,S),Y		; 73 12 ; Add with carry (stack relative indirect indexed) ($12.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $BD59.w,Y		; BE 59 BD ; Load X register $BD59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	jsl $2CA51D.l		; 22 1D A5 2C ; Jump to subroutine long $2CA51D.l [Writes: Stack Pointer] [Flow: call]
	eor $22D3.w,Y		; 59 D3 22 ; Exclusive OR accumulator with memory $22D3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E27.w,Y		; 59 27 1E ; Exclusive OR accumulator with memory $1E27.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $E3.b		; A4 E3 ; Load $E3.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	adc ($21.b,S),Y		; 73 21 ; Add with carry (stack relative indirect indexed) ($21.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $2925.w,X		; 1E 25 29 ; Arithmetic shift left $2925.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	and $2821.w		; 2D 21 28 ; Logical AND $2821.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1C27.w		; 0E 27 1C ; Arithmetic shift left $1C27.w [Flags: NCZ]
	asl $E359.w,X		; 1E 59 E3 ; Arithmetic shift left $E359.w,X [Reads: X Index] [Flags: NCZ]
	eor $2CCE.w,Y		; 59 CE 2C ; Exclusive OR accumulator with memory $2CCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $1E2E.w		; 1C 2E 1E ; Test and reset bits $1E2E.w [Reads: Accumulator] [Flags: Z]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	ldy $DA59.w		; AC 59 DA ; Load $DA59.w into Y register [Writes: Y Index] [Flags: NZ]
	eor $9306.w,Y		; 59 06 93 ; Exclusive OR accumulator with memory $9306.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$8B.b]		; C7 8B ; Compare accumulator (long) [$8B.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $E159.w,X		; 1E 59 E1 ; Arithmetic shift left $E159.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $C68D.w,Y		; 59 8D C6 ; Exclusive OR accumulator with memory $C68D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2540.w,X		; 1D 40 25 ; OR accumulator with memory $2540.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $73C6.w,Y		; 59 C6 73 ; Exclusive OR accumulator with memory $73C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $D0E2.w,Y		; 59 E2 D0 ; Exclusive OR accumulator with memory $D0E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $27BE.w,Y		; 59 BE 27 ; Exclusive OR accumulator with memory $27BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $732B.w		; 2E 2B 73 ; Rotate left $732B.w [Flags: NCZ]
	wai		; CB ; Wait for interrupt
	lda ($DA.b,X)		; A1 DA ; Load accumulator ($DA.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $CE1B.w,Y		; 59 1B CE ; Exclusive OR accumulator with memory $CE1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $7E.b		; 24 7E ; Test bits $7E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	stx $2B.b,Y		; 96 2B ; Store X register $2B.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $8A3EA6.l		; 22 A6 3E 8A ; Jump to subroutine long $8A3EA6.l [Writes: Stack Pointer] [Flow: call]
	adc ($6A.b,S),Y		; 73 6A ; Add with carry (stack relative indirect indexed) ($6A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2DCE.w,Y		; 59 CE 2D ; Exclusive OR accumulator with memory $2DCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $272B.w		; 2E 2B 27 ; Rotate left $272B.w [Flags: NCZ]
	adc ($29.b,S),Y		; 73 29 ; Add with carry (stack relative indirect indexed) ($29.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $1C1A.w,X		; 1E 1A 1C ; Arithmetic shift left $1C1A.w,X [Reads: X Index] [Flags: NCZ]
	asl $DA59.w,X		; 1E 59 DA ; Arithmetic shift left $DA59.w,X [Reads: X Index] [Flags: NCZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $DB27.w		; 2E 27 DB ; Rotate left $DB27.w [Flags: NCZ]
	and ($43.b)		; 32 43 ; AND accumulator with memory (indirect) ($43.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $21B100.l,X		; 7F 00 B1 21 ; Add long $21B100.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $0875.w,X		; 3E 75 08 ; Rotate left $0875.w,X [Reads: X Index] [Flags: NCZ]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$A0.b],Y		; 97 A0 ; Store accumulator (long indexed) [$A0.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cmp $A8B3B6.l,X		; DF B6 B3 A8 ; Compare accumulator (long,X) $A8B3B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $3EE3.w,Y		; 59 E3 3E ; Exclusive OR accumulator with memory $3EE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $07.b,X		; 76 07 ; Rotate right $07.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	asl $5921.w,X		; 1E 21 59 ; Arithmetic shift left $5921.w,X [Reads: X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and ($43.b,X)		; 21 43 ; Logical AND ($43.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ror $0873.w,X		; 7E 73 08 ; Rotate right $0873.w,X [Reads: X Index] [Flags: NCZ]
	eor $2CDF.w,Y		; 59 DF 2C ; Exclusive OR accumulator with memory $2CDF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$B3.b		; 29 B3 ; Logical AND #$B3.b with accumulator [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $281C.w,Y		; 59 1C 28 ; Exclusive OR accumulator with memory $281C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $24BD.w,Y		; 59 BD 24 ; Exclusive OR accumulator with memory $24BD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1959.w,X		; 1E 59 19 ; Arithmetic shift left $1959.w,X [Reads: X Index] [Flags: NCZ]
	asl $1D25.w,X		; 1E 25 1D ; Arithmetic shift left $1D25.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	adc ($2F.b,S),Y		; 73 2F ; Add with carry (stack relative indirect indexed) ($2F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($B5.b,S),Y		; 93 B5 ; Store accumulator (stack relative indirect indexed) ($B5.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ldy $59.b,X		; B4 59 ; Load Y register $59.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	lda #$27.b		; A9 27 ; Load #$27.b into accumulator [Writes: Accumulator] [Flags: NZ]
	and $C659.w		; 2D 59 C6 ; Logical AND $C659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $321E.w,Y		; 59 1E 32 ; Exclusive OR accumulator with memory $321E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $412C.w,X		; 1E 2C 41 ; Arithmetic shift left $412C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $2821.w,X		; 1E 21 28 ; Arithmetic shift left $2821.w,X [Reads: X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $E68A.w,X		; 3E 8A E6 ; Rotate left $E68A.w,X [Reads: X Index] [Flags: NCZ]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2826.w,Y		; 59 26 28 ; Exclusive OR accumulator with memory $2826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $2D27.w,Y		; BE 27 2D ; Load X register $2D27.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	eor $7EC6.w,Y		; 59 C6 7E ; Exclusive OR accumulator with memory $7EC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($0F.b,S),Y		; 73 0F ; Add with carry (stack relative indirect indexed) ($0F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $2C2C.w,X		; 1E 2C 2C ; Arithmetic shift left $2C2C.w,X [Reads: X Index] [Flags: NCZ]
	eor $1E19.w,Y		; 59 19 1E ; Exclusive OR accumulator with memory $1E19.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $077F.w,X		; 3E 7F 07 ; Rotate left $077F.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	asl $B6.b,X		; 16 B6 ; Arithmetic shift left $B6.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	cmp $422C.w,Y		; D9 2C 42 ; Compare accumulator $422C.w,Y [Reads: Y Index] [Flags: NCZ]
	eor $75D8.w,Y		; 59 D8 75 ; Exclusive OR accumulator with memory $75D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1A		; D0 1A ; Branch if not equal to $D0, $1A [Flow: branch]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2FD0.w,Y		; 59 D0 2F ; Exclusive OR accumulator with memory $2FD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy #$E2.b		; A0 E2 ; Load #$E2.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	ldx $5927.w,Y		; BE 27 59 ; Load X register $5927.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	lda $76.b,X		; B5 76 ; Load $76.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	sta ($BA.b),Y		; 91 BA ; Store accumulator ($BA.b),Y [Reads: Direct Page, Y Index, Accumulator]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	bit $A5.b		; 24 A5 ; Test bits $A5.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $B559.w		; 2D 59 B5 ; Logical AND $B559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2827.w,Y		; 59 27 28 ; Exclusive OR accumulator with memory $2827.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp [$B9.b]		; C7 B9 ; Compare accumulator (long) [$B9.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2DBD.w,Y		; 59 BD 2D ; Exclusive OR accumulator with memory $2DBD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pei ($C6.b)		; D4 C6 ; Push effective indirect address ($C6.b) [Reads: Direct Page] [Writes: Stack Pointer]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $9773.w,Y		; BE 73 97 ; Load X register $9773.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	asl $A759.w,X		; 1E 59 A7 ; Arithmetic shift left $A759.w,X [Reads: X Index] [Flags: NCZ]
	jsl $CB5925.l		; 22 25 59 CB ; Jump to subroutine long $CB5925.l [Writes: Stack Pointer] [Flow: call]
	lda ($1C.b,X)		; A1 1C ; Load accumulator ($1C.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp $592C.w,X		; DD 2C 59 ; Compare accumulator $592C.w,X [Reads: X Index] [Flags: NCZ]
	cmp $732C.w,Y		; D9 2C 73 ; Compare accumulator $732C.w,Y [Reads: Y Index] [Flags: NCZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and [$1D.b]		; 27 1D ; AND accumulator with memory (long) [$1D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($00.b,S),Y		; 73 00 ; Add with carry (stack relative indirect indexed) ($00.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $251AD4.l,X		; 1F D4 1A 25 ; Logical OR long $251AD4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $42.b		; 25 42 ; Logical AND $42.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsr $1DA5.w		; 20 A5 1D ; Jump to subroutine at $1DA5.w [Writes: Stack Pointer] [Flow: call]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C2.b,S),Y		; 93 C2 ; Store accumulator (stack relative indirect indexed) ($C2.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $2E911E.l,X		; 1F 1E 91 2E ; Logical OR long $2E911E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	bit $5942.w		; 2C 42 59 ; Test bits $5942.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $22DB.w,Y		; 59 DB 22 ; Exclusive OR accumulator with memory $22DB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	dec $73.b		; C6 73 ; Decrement $73.b [Reads: Direct Page] [Flags: NZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $42.b		; 25 42 ; Logical AND $42.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $A0E1.w,Y		; 59 E1 A0 ; Exclusive OR accumulator with memory $A0E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$59.b		; E0 59 ; Compare #$59.b with X register [Reads: X Index] [Flags: NCZ]
	sta $2B1A.w		; 8D 1A 2B ; Store accumulator to $2B1A.w [Reads: Accumulator]
	ldx $591D.w,Y		; BE 1D 59 ; Load X register $591D.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	dec $737E.w,X		; DE 7E 73 ; Decrement memory $737E.w,X [Reads: X Index] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora [$28.b]		; 07 28 ; OR accumulator with memory (long) [$28.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59.b,S		; 43 59 ; Exclusive OR accumulator with stack relative $59.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora $3028.w		; 0D 28 30 ; Logical OR $3028.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $3EAC.w,Y		; 59 AC 3E ; Exclusive OR accumulator with memory $3EAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $42210E.l,X		; 7F 0E 21 42 ; Add long $42210E.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $3FD2.w,Y		; 59 D2 3F ; Exclusive OR accumulator with memory $3FD2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $8A.b,S		; 43 8A ; Exclusive OR accumulator with stack relative $8A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $93BE.w,Y		; 59 BE 93 ; Exclusive OR accumulator with memory $93BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $321A.w		; 2C 1A 32 ; Test bits $321A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $75E3.w,Y		; 59 E3 75 ; Exclusive OR accumulator with memory $75E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $28		; 30 28 ; Branch if minus to $30, $28 [Flow: branch]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	and $251A.w		; 2D 1A 25 ; Logical AND $251A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $32.b		; 25 32 ; Logical AND $32.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $9D.b,X		; 76 9D ; Rotate right $9D.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	stp		; DB ; Stop processor (halt CPU clock) [SNES: SNES: Stops CPU until reset] [Flow: halt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $8A3F.w,X		; 1D 3F 8A ; OR accumulator with memory $8A3F.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $BD99.w,Y		; 59 99 BD ; Exclusive OR accumulator with memory $BD99.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ror $E373.w,X		; 7E 73 E3 ; Rotate right $E373.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $D1E2.w,Y		; 59 E2 D1 ; Exclusive OR accumulator with memory $D1E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E9B.w,Y		; 59 9B 1E ; Exclusive OR accumulator with memory $1E9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2EDB.w,Y		; 59 DB 2E ; Exclusive OR accumulator with memory $2EDB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $7F3E.w,X		; 1E 3E 7F ; Arithmetic shift left $7F3E.w,X [Reads: X Index] [Flags: NCZ]
	asl $2B.b		; 06 2B ; Arithmetic shift left $2B.b [Reads: Direct Page] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	rol M7Y.w		; 2E 20 21 ; Rotate left M7Y.w [Flags: NCZ]
	rol $168A.w,X		; 3E 8A 16 ; Rotate left $168A.w,X [Reads: X Index] [Flags: NCZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $2DBE.w,Y		; 59 BE 2D ; Exclusive OR accumulator with memory $2DBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $0B8A.w,X		; 3E 8A 0B ; Rotate left $0B8A.w,X [Reads: X Index] [Flags: NCZ]
	jsl $591E24.l		; 22 24 1E 59 ; Jump to subroutine long $591E24.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $DB.b,X		; 75 DB ; Add $DB.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $591E.w		; 2E 1E 59 ; Rotate left $591E.w [Flags: NCZ]
	cpx $28.b		; E4 28 ; Compare $28.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $7643.w		; CE 43 76 ; Decrement $7643.w [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $0859.w		; 2D 59 08 ; Logical AND $0859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $1D1A.w		; CE 1A 1D ; Decrement $1D1A.w [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1D1A.w,Y		; 59 1A 1D ; Exclusive OR accumulator with memory $1D1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $B6.b		; 26 B6 ; Rotate left $B6.b [Reads: Direct Page] [Flags: NCZ]
	ror $1D73.w,X		; 7E 73 1D ; Rotate right $1D73.w,X [Reads: X Index] [Flags: NCZ]
	asl $1E1F.w,X		; 1E 1F 1E ; Arithmetic shift left $1E1F.w,X [Reads: X Index] [Flags: NCZ]
	sta ($32.b),Y		; 91 32 ; Store accumulator ($32.b),Y [Reads: Direct Page, Y Index, Accumulator]
	asl $412D.w,X		; 1E 2D 41 ; Arithmetic shift left $412D.w,X [Reads: X Index] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $1A2B.w,X		; 1D 2B 1A ; OR accumulator with memory $1A2B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	sbc $73.b,S		; E3 73 ; Subtract stack-relative $73.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1A.b,S		; 03 1A ; OR accumulator with stack relative $1A.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	asl $C8.b,X		; 16 C8 ; Arithmetic shift left $C8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $077F.w,X		; 3E 7F 07 ; Rotate left $077F.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2821.w,Y		; 59 21 28 ; Exclusive OR accumulator with memory $2821.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	and $208B.w		; 2D 8B 20 ; Logical AND $208B.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dec $D791.w		; CE 91 D7 ; Decrement $D791.w [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc $1C.b,X		; 75 1C ; Add $1C.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $1E9B.w,Y		; 59 9B 1E ; Exclusive OR accumulator with memory $1E9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D88E.w,Y		; 59 8E D8 ; Exclusive OR accumulator with memory $D88E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $32DF.w,Y		; 59 DF 32 ; Exclusive OR accumulator with memory $32DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $76		; 42 76 ; Reserved instruction
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $32DD.w,Y		; 59 DD 32 ; Exclusive OR accumulator with memory $32DD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $29B1.w,Y		; 59 B1 29 ; Exclusive OR accumulator with memory $29B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$32.b		; 29 32 ; Logical AND #$32.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	eor $73E3.w,Y		; 59 E3 73 ; Exclusive OR accumulator with memory $73E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $428F.w		; 20 8F 42 ; Jump to subroutine at $428F.w [Writes: Stack Pointer] [Flow: call]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E373.w		; 2D 73 E3 ; Logical AND $E373.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($1D.b),Y		; 51 1D ; Exclusive OR accumulator with memory ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2D97.w,Y		; 59 97 2D ; Exclusive OR accumulator with memory $2D97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pei ($97.b)		; D4 97 ; Push effective indirect address ($97.b) [Reads: Direct Page] [Writes: Stack Pointer]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda [$1E.b]		; A7 1E ; Load accumulator (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2DD7.w,Y		; 59 D7 2D ; Exclusive OR accumulator with memory $2DD7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $7EE0.w,Y		; 59 E0 7E ; Exclusive OR accumulator with memory $7EE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E2.b,S),Y		; 73 E2 ; Add with carry (stack relative indirect indexed) ($E2.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $1A59.w		; AD 59 1A ; Load $1A59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BD9.w,Y		; 59 D9 2B ; Exclusive OR accumulator with memory $2BD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $BE59.w,X		; 1D 59 BE ; OR accumulator with memory $BE59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B42D.w,X		; 1E 2D B4 ; Arithmetic shift left $B42D.w,X [Reads: X Index] [Flags: NCZ]
	jsr $733E.w		; 20 3E 73 ; Jump to subroutine at $733E.w [Writes: Stack Pointer] [Flow: call]
	ora $8D29CE.l		; 0F CE 29 8D ; OR accumulator with memory (long) $8D29CE.l [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $1EBE.w,Y		; 59 BE 1E ; Exclusive OR accumulator with memory $1EBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $289F.w,Y		; 59 9F 28 ; Exclusive OR accumulator with memory $289F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	adc $211A16.l,X		; 7F 16 1A 21 ; Add long $211A16.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B1.w,Y		; 59 B1 59 ; Exclusive OR accumulator with memory $59B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($3E.b),Y		; B1 3E ; Load accumulator ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $B1.b,X		; 16 B1 ; Arithmetic shift left $B1.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $9F59.w		; 2D 59 9F ; Logical AND $9F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $422D27.l,X		; DF 27 2D 42 ; Compare accumulator (long,X) $422D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	adc $25.b,X		; 75 25 ; Add $25.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ldx $2D.b,Y		; B6 2D ; Load X register $2D.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $3FBC.w,Y		; 59 BC 3F ; Exclusive OR accumulator with memory $3FBC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $28.b,S		; 03 28 ; OR accumulator with stack relative $28.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $CF76.w		; AD 76 CF ; Load $CF76.w into accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $5924.w		; 2C 24 59 ; Test bits $5924.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ldx $7E3F.w,Y		; BE 3F 7E ; Load X register $7E3F.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	mvp $08,$8A		; 44 8A 08 ; Move block positive $08,$8A [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	eor $27DF.w,Y		; 59 DF 27 ; Exclusive OR accumulator with memory $27DF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $251F.w,Y		; 59 1F 25 ; Exclusive OR accumulator with memory $251F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $2CC929.l		; 22 29 C9 2C ; Jump to subroutine long $2CC929.l [Writes: Stack Pointer] [Flow: call]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59B7.w,Y		; 59 B7 59 ; Exclusive OR accumulator with memory $59B7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $282B.w,X		; 1D 2B 28 ; OR accumulator with memory $282B.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and #$29.b		; 29 29 ; Logical AND #$29.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $1B.b		; A4 1B ; Load $1B.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	and ($68.b)		; 32 68 ; AND accumulator with memory (indirect) ($68.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $211A16.l,X		; 7F 16 1A 21 ; Add long $211A16.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B1.w,Y		; 59 B1 59 ; Exclusive OR accumulator with memory $59B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($3E.b),Y		; B1 3E ; Load accumulator ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($2E.b,X)		; 01 2E ; Logical OR ($2E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $0859.w		; 2D 59 08 ; Logical AND $0859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda [$75.b],Y		; B7 75 ; Load accumulator (long indexed) [$75.b],Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	ora $292225.l,X		; 1F 25 22 29 ; Logical OR long $292225.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp #$2C.b		; C9 2C ; Compare #$2C.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $DF1A.w,Y		; 59 1A DF ; Exclusive OR accumulator with memory $DF1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $CE1F.w,Y		; 59 1F CE ; Exclusive OR accumulator with memory $CE1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $7641.w,X		; 1E 41 76 ; Arithmetic shift left $7641.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25D0.w,Y		; 59 D0 25 ; Exclusive OR accumulator with memory $25D0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	rol $59.b		; 26 59 ; Rotate left $59.b [Reads: Direct Page] [Flags: NCZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $3439.w,Y		; 59 39 34 ; Exclusive OR accumulator with memory $3439.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $59.b,X		; 34 59 ; Test bits $59.b,X [Reads: Direct Page, X Index] [Flags: NVZ] [Flow: branch]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $7E1A.w,Y		; 59 1A 7E ; Exclusive OR accumulator with memory $7E1A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($29.b,S),Y		; 73 29 ; Add with carry (stack relative indirect indexed) ($29.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsl $7E412B.l		; 22 2B 41 7E ; Jump to subroutine long $7E412B.l [Writes: Stack Pointer] [Flow: call]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $88733F.l,X		; 9F 3F 73 88 ; Store accumulator (long,X) $88733F.l,X [Reads: Accumulator, X Index]
	mvp $0F,$8A		; 44 8A 0F ; Move block positive $0F,$8A [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $3434.w,Y		; 39 34 34 ; AND accumulator with memory $3434.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	adc ($88.b,S),Y		; 73 88 ; Add with carry (stack relative indirect indexed) ($88.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	.db $10, $2E		; 10 2E ; Branch if plus to $10, $2E [Flow: branch]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $251AD4.l,X		; 1F D4 1A 25 ; Logical OR long $251AD4.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $68.b		; 25 68 ; Logical AND $68.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $211A16.l,X		; 7F 16 1A 21 ; Add long $211A16.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $59B1.w,Y		; 59 B1 59 ; Exclusive OR accumulator with memory $59B1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($3E.b),Y		; B1 3E ; Load accumulator ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E27.w		; 0E 27 1E ; Arithmetic shift left $1E27.w [Flags: NCZ]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $C6592B.l		; 22 2B 59 C6 ; Jump to subroutine long $C6592B.l [Writes: Stack Pointer] [Flow: call]
	adc $1F.b,X		; 75 1F ; Add $1F.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and #$C9.b		; 29 C9 ; Logical AND #$C9.b with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $9B59.w		; 2C 59 9B ; Test bits $9B59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	lda ($DC.b,S),Y		; B3 DC ; Load accumulator (stack relative indirect indexed) ($DC.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $76.b		; 25 76 ; Logical AND $76.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $CE1F.w,Y		; 59 1F CE ; Exclusive OR accumulator with memory $CE1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $9859.w,X		; 1E 59 98 ; Arithmetic shift left $9859.w,X [Reads: X Index] [Flags: NCZ]
	and [$2E.b]		; 27 2E ; AND accumulator with memory (long) [$2E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $DE59.w		; 2C 59 DE ; Test bits $DE59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $E373.w,X		; 7E 73 E3 ; Rotate right $E373.w,X [Reads: X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $2E29.w,Y		; 59 29 2E ; Exclusive OR accumulator with memory $2E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	trb $1EAE.w		; 1C AE 1E ; Test and reset bits $1EAE.w [Reads: Accumulator] [Flags: Z]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $D02E.w,Y		; 59 2E D0 ; Exclusive OR accumulator with memory $D02E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $2220.w,X		; BD 20 22 ; Load $2220.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	trb $DF73.w		; 1C 73 DF ; Test and reset bits $DF73.w [Reads: Accumulator] [Flags: Z]
	pei ($DF.b)		; D4 DF ; Push effective indirect address ($DF.b) [Reads: Direct Page] [Writes: Stack Pointer]
	and ($2C.b)		; 32 2C ; AND accumulator with memory (indirect) ($2C.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1AD0.w,Y		; 59 D0 1A ; Exclusive OR accumulator with memory $1AD0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $281F.w,Y		; 59 1F 28 ; Exclusive OR accumulator with memory $281F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $24.b		; 25 24 ; Logical AND $24.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $E173.w,X		; 7E 73 E1 ; Rotate right $E173.w,X [Reads: X Index] [Flags: NCZ]
	jsl $59211C.l		; 22 1C 21 59 ; Jump to subroutine long $59211C.l [Writes: Stack Pointer] [Flow: call]
	and $B4.b		; 25 B4 ; Logical AND $B4.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	bit $8C59.w		; 2C 59 8C ; Test bits $8C59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $412CDD.l		; 22 DD 2C 41 ; Jump to subroutine long $412CDD.l [Writes: Stack Pointer] [Flow: call]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and ($A0.b,X)		; 21 A0 ; Logical AND ($A0.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($22.b,X)		; E1 22 ; Subtract with carry ($22.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and $42.b		; 25 42 ; Logical AND $42.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2F9E.w,Y		; 59 9E 2F ; Exclusive OR accumulator with memory $2F9E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $B473.w,X		; 1E 73 B4 ; Arithmetic shift left $B473.w,X [Reads: X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $41B6.w,Y		; 59 B6 41 ; Exclusive OR accumulator with memory $41B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $A727.w,Y		; 59 27 A7 ; Exclusive OR accumulator with memory $A727.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($B8.b,X)		; A1 B8 ; Load accumulator ($B8.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	eor $A6E1.w,Y		; 59 E1 A6 ; Exclusive OR accumulator with memory $A6E1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $737E.w,X		; 1E 7E 73 ; Arithmetic shift left $737E.w,X [Reads: X Index] [Flags: NCZ]
	sbc $51.b,S		; E3 51 ; Subtract stack-relative $51.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E2C.w,Y		; 59 2C 2E ; Exclusive OR accumulator with memory $2E2C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ora $1E1C1A.l,X		; 1F 1A 1C 1E ; Logical OR long $1E1C1A.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $168A.w,X		; 3E 8A 16 ; Rotate left $168A.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	lda ($59.b),Y		; B1 59 ; Load accumulator ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($3E.b),Y		; B1 3E ; Load accumulator ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1D1A16.l,X		; 7F 16 1A 1D ; Add long $1D1A16.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $9659.w,X		; 1E 59 96 ; Arithmetic shift left $9659.w,X [Reads: X Index] [Flags: NCZ]
	stz $D959.w		; 9C 59 D9 ; Store zero to $D959.w
	bit $DF59.w		; 2C 59 DF ; Test bits $DF59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($A0.b,X)		; E1 A0 ; Subtract with carry ($A0.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $75.b,S		; E3 75 ; Subtract stack-relative $75.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	lda $2659.w		; AD 59 26 ; Load $2659.w into accumulator [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	asl $1159.w,X		; 1E 59 11 ; Arithmetic shift left $1159.w,X [Reads: X Index] [Flags: NCZ]
	jmp.w [$1E1E]		; DC 1E 1E ; Jump long indirect [$1E1E] [Flow: jump]
	bit $7643.w		; 2C 43 76 ; Test bits $7643.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	asl $1A.b,X		; 16 1A ; Arithmetic shift left $1A.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	lda ($59.b),Y		; B1 59 ; Load accumulator ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($3E.b),Y		; B1 3E ; Load accumulator ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $1E		; D0 1E ; Branch if not equal to $D0, $1E [Flow: branch]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $3E8F.w		; 20 8F 3E ; Jump to subroutine at $3E8F.w [Writes: Stack Pointer] [Flow: call]
	adc $94CE06.l,X		; 7F 06 CE 94 ; Add long $94CE06.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	rol $168A.w,X		; 3E 8A 16 ; Rotate left $168A.w,X [Reads: X Index] [Flags: NCZ]
	and ($A5.b,X)		; 21 A5 ; Logical AND ($A5.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	lda [$A1.b]		; A7 A1 ; Load accumulator (long) [$A1.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $592D27.l,X		; DF 27 2D 59 ; Compare accumulator (long,X) $592D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	adc $D0.b,X		; 75 D0 ; Add $D0.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	asl $2659.w,X		; 1E 59 26 ; Arithmetic shift left $2659.w,X [Reads: X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $3221B5.l,X		; 1F B5 21 32 ; Logical OR long $3221B5.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb JOY4L.w		; 1C 1E 42 ; Test and reset bits JOY4L.w [Reads: Accumulator] [Flags: Z]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $E076.w		; CE 76 E0 ; Decrement $E076.w [Flags: NZ]
	and $9B.b		; 25 9B ; Logical AND $9B.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	asl $AF59.w,X		; 1E 59 AF ; Arithmetic shift left $AF59.w,X [Reads: X Index] [Flags: NCZ]
	asl $7E41.w,X		; 1E 41 7E ; Arithmetic shift left $7E41.w,X [Reads: X Index] [Flags: NCZ]
	adc ($43.b,S),Y		; 73 43 ; Add with carry (stack relative indirect indexed) ($43.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	lda ($59.b),Y		; B1 59 ; Load accumulator ($59.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	lda ($3E.b),Y		; B1 3E ; Load accumulator ($3E.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $1B59.w,X		; 1D 59 1B ; OR accumulator with memory $1B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $3E.b,S		; 43 3E ; Exclusive OR accumulator with stack relative $3E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc $592207.l,X		; 7F 07 22 59 ; Add long $592207.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	ror A		; 6A ; Rotate right accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $0475.w,X		; 3E 75 04 ; Rotate left $0475.w,X [Reads: X Index] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $3F.b		; A6 3F ; Load $3F.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	brk $CD.b		; 00 CD ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	and $251A.w		; 2D 1A 25 ; Logical AND $251A.w with accumulator [Writes: Accumulator] [Flags: NZ]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $762D.w		; 2E 2D 76 ; Rotate left $762D.w [Flags: NCZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2B20.w,Y		; 59 20 2B ; Exclusive OR accumulator with memory $2B20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $90, $29		; 90 29 ; Branch if carry clear to $90, $29 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $0A0E8A.l,X		; 3F 8A 0E 0A ; AND accumulator with memory (long,X) $0A0E8A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $8A		; 42 8A ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	sta $2D5127.l,X		; 9F 27 51 2D ; Store accumulator (long,X) $2D5127.l,X [Reads: Accumulator, X Index]
	ror $2D73.w,X		; 7E 73 2D ; Rotate right $2D73.w,X [Reads: X Index] [Flags: NCZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	eor $3293.w,Y		; 59 93 32 ; Exclusive OR accumulator with memory $3293.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1D96.w,Y		; 59 96 1D ; Exclusive OR accumulator with memory $1D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	adc ($1A.b,S),Y		; 73 1A ; Add with carry (stack relative indirect indexed) ($1A.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	tya		; 98 ; Transfer Y to accumulator [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	cmp $412C.w,Y		; D9 2C 41 ; Compare accumulator $412C.w,Y [Reads: Y Index] [Flags: NCZ]
	adc ($07.b,S),Y		; 73 07 ; Add with carry (stack relative indirect indexed) ($07.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $B08B.w,X		; 1E 8B B0 ; Arithmetic shift left $B08B.w,X [Reads: X Index] [Flags: NCZ]
	stz $2027.w,X		; 9E 27 20 ; Store zero to $2027.w,X [Reads: X Index]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1A29.w,Y		; 59 29 1A ; Exclusive OR accumulator with memory $1A29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	trb $591E.w		; 1C 1E 59 ; Test and reset bits $591E.w [Reads: Accumulator] [Flags: Z]
	and #$92.b		; 29 92 ; Logical AND #$92.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ror $D873.w,X		; 7E 73 D8 ; Rotate right $D873.w,X [Reads: X Index] [Flags: NCZ]
	eor $921C.w,Y		; 59 1C 92 ; Exclusive OR accumulator with memory $921C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $242B.w,X		; BD 2B 24 ; Load $242B.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $2829.w		; 2C 29 28 ; Test bits $2829.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and $C759.w		; 2D 59 C7 ; Logical AND $C759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2BE3.w,Y		; 59 E3 2B ; Exclusive OR accumulator with memory $2BE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($BD.b,S),Y		; 73 BD ; Add with carry (stack relative indirect indexed) ($BD.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and #$41.b		; 29 41 ; Logical AND #$41.b with accumulator [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cpx $1E.b		; E4 1E ; Compare $1E.b with X register [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $7943.w		; CE 43 79 ; Decrement $7943.w [Flags: NZ]
	and $037F.w		; 2D 7F 03 ; Logical AND $037F.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $E3591D.l		; 22 1D 59 E3 ; Jump to subroutine long $E3591D.l [Writes: Stack Pointer] [Flow: call]
	eor $1EBE.w,Y		; 59 BE 1E ; Exclusive OR accumulator with memory $1EBE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $D859.w		; 2D 59 D8 ; Logical AND $D859.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2B20.w,Y		; 59 20 2B ; Exclusive OR accumulator with memory $2B20.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $90, $29		; 90 29 ; Branch if carry clear to $90, $29 [Flow: branch]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $1F088A.l,X		; 3F 8A 08 1F ; AND accumulator with memory (long,X) $1F088A.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc $8E.b,X		; 75 8E ; Add $8E.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1D96.w,Y		; 59 96 1D ; Exclusive OR accumulator with memory $1D96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E29.w,Y		; 59 29 1E ; Exclusive OR accumulator with memory $1E29.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	dex		; CA ; Decrement X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	cmp $594232.l,X		; DF 32 42 59 ; Compare accumulator (long,X) $594232.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	ror $99.b,X		; 76 99 ; Rotate right $99.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	asl $9659.w,X		; 1E 59 96 ; Arithmetic shift left $9659.w,X [Reads: X Index] [Flags: NCZ]
	stz $DA59.w		; 9C 59 DA ; Store zero to $DA59.w
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $BA2522.l		; 2F 22 25 BA ; AND accumulator with memory (long) $BA2522.l [Writes: Accumulator] [Flags: NZ]
	jsr $411E.w		; 20 1E 41 ; Jump to subroutine at $411E.w [Writes: Stack Pointer] [Flow: call]
	adc $CD51E8.l,X		; 7F E8 51 CD ; Add long $CD51E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	lda $59421E.l		; AF 1E 42 59 ; Load long $59421E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $E3C0.w		; CE C0 E3 ; Decrement $E3C0.w [Flags: NZ]
	and $220375.l,X		; 3F 75 03 22 ; AND accumulator with memory (long,X) $220375.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $E359.w,X		; 1D 59 E3 ; OR accumulator with memory $E359.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E9B.w,Y		; 59 9B 1E ; Exclusive OR accumulator with memory $1E9B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $28BB.w,Y		; 59 BB 28 ; Exclusive OR accumulator with memory $28BB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $B3.b		; 24 B3 ; Test bits $B3.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	ror $D8.b,X		; 76 D8 ; Rotate right $D8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $16737E.l,X		; 3F 7E 73 16 ; AND accumulator with memory (long,X) $16737E.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $2525.w,X		; 1E 25 25 ; Arithmetic shift left $2525.w,X [Reads: X Index] [Flags: NCZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $51.b,S		; E3 51 ; Subtract stack-relative $51.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $28DA.w		; CD DA 28 ; Compare $28DA.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	eor $2DBA.w,Y		; 59 BA 2D ; Exclusive OR accumulator with memory $2DBA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $8A41.w,X		; 1E 41 8A ; Arithmetic shift left $8A41.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $E259.w		; 2D 59 E2 ; Logical AND $E259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($28.b,S),Y		; 73 28 ; Add with carry (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta [$32.b],Y		; 97 32 ; Store accumulator (long indexed) [$32.b],Y [Reads: Direct Page, Y Index, Accumulator]
	eor $B9C7.w,Y		; 59 C7 B9 ; Exclusive OR accumulator with memory $B9C7.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $2C9A.w		; 2E 9A 2C ; Rotate left $2C9A.w [Flags: NCZ]
	eor $41B6.w,Y		; 59 B6 41 ; Exclusive OR accumulator with memory $41B6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $E673.w,X		; 7E 73 E6 ; Rotate right $E673.w,X [Reads: X Index] [Flags: NCZ]
	eor $59BC.w,Y		; 59 BC 59 ; Exclusive OR accumulator with memory $59BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $BA1C.w,Y		; 59 1C BA ; Exclusive OR accumulator with memory $BA1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsl $591DBE.l		; 22 BE 1D 59 ; Jump to subroutine long $591DBE.l [Writes: Stack Pointer] [Flow: call]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc ($0F.b,S),Y		; 73 0F ; Add with carry (stack relative indirect indexed) ($0F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $D1E2.w,Y		; 59 E2 D1 ; Exclusive OR accumulator with memory $D1E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldy $A8.b		; A4 A8 ; Load $A8.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $2CD9.w,Y		; 59 D9 2C ; Exclusive OR accumulator with memory $2CD9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc ($30.b,S),Y		; 73 30 ; Add with carry (stack relative indirect indexed) ($30.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	and $CE59.w		; 2D 59 CE ; Logical AND $CE59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora $1C1E25.l,X		; 1F 25 1E 1C ; Logical OR long $1C1E25.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $592C.w		; 2D 2C 59 ; Logical AND $592C.w with accumulator [Writes: Accumulator] [Flags: NZ]
	.db $B0, $2C		; B0 2C ; Branch if carry set to $B0, $2C [Flow: branch]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $7E41.w		; 2D 41 7E ; Logical AND $7E41.w with accumulator [Writes: Accumulator] [Flags: NZ]
	adc ($18.b,S),Y		; 73 18 ; Add with carry (stack relative indirect indexed) ($18.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	asl $422C.w,X		; 1E 2C 42 ; Arithmetic shift left $422C.w,X [Reads: X Index] [Flags: NCZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $BE1A.w		; 1C 1A BE ; Test and reset bits $BE1A.w [Reads: Accumulator] [Flags: Z]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1C97.w,Y		; 59 97 1C ; Exclusive OR accumulator with memory $1C97.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	rol $59D0.w		; 2E D0 59 ; Rotate left $59D0.w [Flags: NCZ]
	dec $73.b		; C6 73 ; Decrement $73.b [Reads: Direct Page] [Flags: NZ]
	jsr $A4CE.w		; 20 CE A4 ; Jump to subroutine at $A4CE.w [Writes: Stack Pointer] [Flow: call]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0F.b		; A0 0F ; Load #$0F.b into Y register [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	.db $42, $73		; 42 73 ; Reserved instruction
	sty $28BB.w		; 8C BB 28 ; Store Y register to $28BB.w [Reads: Y Index]
	bit $59.b		; 24 59 ; Test bits $59.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	sbc ($91.b,X)		; E1 91 ; Subtract with carry ($91.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	lda ($29.b),Y		; B1 29 ; Load accumulator ($29.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$A5.b		; 29 A5 ; Logical AND #$A5.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b		; A4 DA ; Load $DA.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor $43BE.w,Y		; 59 BE 43 ; Exclusive OR accumulator with memory $43BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $737E.w,Y		; 59 7E 73 ; Exclusive OR accumulator with memory $737E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $D3CE.w,Y		; 59 CE D3 ; Exclusive OR accumulator with memory $D3CE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	asl $D859.w,X		; 1E 59 D8 ; Arithmetic shift left $D859.w,X [Reads: X Index] [Flags: NCZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0B.b		; A0 0B ; Load #$0B.b into Y register [Writes: Y Index] [Flags: NZ]
	.db $90, $42		; 90 42 ; Branch if carry clear to $90, $42 [Flow: branch]
	eor $731A.w,Y		; 59 1A 73 ; Exclusive OR accumulator with memory $731A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$59.b]		; 27 59 ; AND accumulator with memory (long) [$59.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $3221.w		; 2D 21 32 ; Logical AND $3221.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $73.b		; A5 73 ; Load $73.b into accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $2BE028.l		; 0F 28 E0 2B ; OR accumulator with memory (long) $2BE028.l [Writes: Accumulator] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $D8911E.l,X		; 1F 1E 91 D8 ; Logical OR long $D8911E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $59BC.w,Y		; 59 BC 59 ; Exclusive OR accumulator with memory $59BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($28.b,X)		; E1 28 ; Subtract with carry ($28.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ror $1C73.w,X		; 7E 73 1C ; Rotate right $1C73.w,X [Reads: X Index] [Flags: NCZ]
	dec $A494.w		; CE 94 A4 ; Decrement $A494.w [Flags: NZ]
	cmp $592C.w,Y		; D9 2C 59 ; Compare accumulator $592C.w,Y [Reads: Y Index] [Flags: NCZ]
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	trb $431E.w		; 1C 1E 43 ; Test and reset bits $431E.w [Reads: Accumulator] [Flags: Z]
	adc ($14.b,S),Y		; 73 14 ; Add with carry (stack relative indirect indexed) ($14.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $D75925.l		; 22 25 59 D7 ; Jump to subroutine long $D75925.l [Writes: Stack Pointer] [Flow: call]
	and $2D59.w		; 2D 59 2D ; Logical AND $2D59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	jsl $5942BE.l		; 22 BE 42 59 ; Jump to subroutine long $5942BE.l [Writes: Stack Pointer] [Flow: call]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2ED3.w,Y		; 59 D3 2E ; Exclusive OR accumulator with memory $2ED3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $B459.w		; 9C 59 B4 ; Store zero to $B459.w
	adc ($D9.b,S),Y		; 73 D9 ; Add with carry (stack relative indirect indexed) ($D9.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	bit $1B59.w		; 2C 59 1B ; Test bits $1B59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	jsl $2B1A33.l		; 22 33 1A 2B ; Jump to subroutine long $2B1A33.l [Writes: Stack Pointer] [Flow: call]
	cmp $1AD1.w		; CD D1 1A ; Compare $1AD1.w with accumulator [Reads: Accumulator] [Flags: NCZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	sbc ($91.b,X)		; E1 91 ; Subtract with carry ($91.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $B526.w,Y		; 59 26 B5 ; Exclusive OR accumulator with memory $B526.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	trb $A7B0.w		; 1C B0 A7 ; Test and reset bits $A7B0.w [Reads: Accumulator] [Flags: Z]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $1E25.w,Y		; 59 25 1E ; Exclusive OR accumulator with memory $1E25.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and $25591E.l		; 2F 1E 59 25 ; AND accumulator with memory (long) $25591E.l [Writes: Accumulator] [Flags: NZ]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	cpy $43.b		; C4 43 ; Compare $43.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $7E.b,S		; 43 7E ; Exclusive OR accumulator with stack relative $7E.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	adc ($13.b,S),Y		; 73 13 ; Add with carry (stack relative indirect indexed) ($13.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $1E1CA8.l		; 22 A8 1C 1E ; Jump to subroutine long $1E1CA8.l [Writes: Stack Pointer] [Flow: call]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $0C40.w,Y		; 59 40 0C ; Exclusive OR accumulator with memory $0C40.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($D3.b)		; 32 D3 ; AND accumulator with memory (indirect) ($D3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $22.b		; A6 22 ; Load $22.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	ora $401DC7.l		; 0F C7 1D 40 ; OR accumulator with memory (long) $401DC7.l [Writes: Accumulator] [Flags: NZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $212D.w,Y		; 59 2D 21 ; Exclusive OR accumulator with memory $212D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	cmp $5920D5.l		; CF D5 20 59 ; Compare accumulator (long) $5920D5.l [Reads: Accumulator] [Flags: NCZ]
	ldy $3F.b,X		; B4 3F ; Load Y register $3F.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	ror $7E.b,X		; 76 7E ; Rotate right $7E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	adc ($16.b,S),Y		; 73 16 ; Add with carry (stack relative indirect indexed) ($16.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $88733F.l,X		; 9F 3F 73 88 ; Store accumulator (long,X) $88733F.l,X [Reads: Accumulator, X Index]
	mvp $13,$59		; 44 59 13 ; Move block positive $13,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	and ($2B.b,X)		; 21 2B ; Logical AND ($2B.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	ldx $1E.b,Y		; B6 1E ; Load X register $1E.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $73.b		; 26 73 ; Rotate left $73.b [Reads: Direct Page] [Flags: NCZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	bit #$03.b		; 89 03 ; Test bits #$03.b with accumulator [Reads: Accumulator] [Flags: Z]
	cmp [$51.b]		; C7 51 ; Compare accumulator (long) [$51.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $DB59.w		; 2D 59 DB ; Logical AND $DB59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $68.b,Y		; B6 68 ; Load X register $68.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	adc $51C703.l,X		; 7F 03 C7 51 ; Add long $51C703.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $9F59.w		; 2D 59 9F ; Logical AND $9F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $3EB6.w,Y		; 59 B6 3E ; Exclusive OR accumulator with memory $3EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $51C703.l,X		; 7F 03 C7 51 ; Add long $51C703.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $9F59.w		; 2D 59 9F ; Logical AND $9F59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $3EB6.w,Y		; 59 B6 3E ; Exclusive OR accumulator with memory $3EB6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $E25908.l,X		; 7F 08 59 E2 ; Add long $E25908.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $D9AA.w,Y		; 59 AA D9 ; Exclusive OR accumulator with memory $D9AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $9659.w		; 2C 59 96 ; Test bits $9659.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	stz $DA59.w		; 9C 59 DA ; Store zero to $DA59.w
	eor $75E3.w,Y		; 59 E3 75 ; Exclusive OR accumulator with memory $75E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora $C7.b,S		; 03 C7 ; OR accumulator with stack relative $C7.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2B1D.w,Y		; 59 1D 2B ; Exclusive OR accumulator with memory $2B1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	and #$59.b		; 29 59 ; Logical AND #$59.b with accumulator [Writes: Accumulator] [Flags: NZ]
	ldx $59.b,Y		; B6 59 ; Load X register $59.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	jsr $418F.w		; 20 8F 41 ; Jump to subroutine at $418F.w [Writes: Stack Pointer] [Flow: call]
	adc $302807.l,X		; 7F 07 28 30 ; Add long $302807.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $32BC.w,Y		; 59 BC 32 ; Exclusive OR accumulator with memory $32BC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	bit $3F2C.w		; 2C 2C 3F ; Test bits $3F2C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc $88.b,X		; 75 88 ; Add $88.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	mvp $6C,$59		; 44 59 6C ; Move block positive $6C,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	ora ($6C.b,X)		; 01 6C ; Logical OR ($6C.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	brk $59.b		; 00 59 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	ror $88.b,X		; 76 88 ; Rotate right $88.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit #$6C.b		; 89 6C ; Test bits #$6C.b with accumulator [Reads: Accumulator] [Flags: Z]
	ora $6C.b,S		; 03 6C ; OR accumulator with stack relative $6C.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cop $59.b		; 02 59 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	pla		; 68 ; Pull accumulator [Reads: Stack Pointer] [Writes: Stack Pointer, Accumulator] [Flags: NZ]
	adc $8D59E8.l,X		; 7F E8 59 8D ; Add long $8D59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sta ($59.b,S),Y		; 93 59 ; Store accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	and ($C7.b,X)		; 21 C7 ; Logical AND ($C7.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	asl $59D3.w,X		; 1E D3 59 ; Arithmetic shift left $59D3.w,X [Reads: X Index] [Flags: NCZ]
	cmp #$D2.b		; C9 D2 ; Compare #$D2.b with accumulator [Reads: Accumulator] [Flags: NCZ]
	and [$41.b]		; 27 41 ; AND accumulator with memory (long) [$41.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $08.b,X		; 75 08 ; Add $08.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $08.b,X		; 76 08 ; Rotate right $08.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	tax		; AA ; Transfer accumulator to X [Reads: Accumulator] [Writes: X Index] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $7E20D5.l		; CF D5 20 7E ; Compare accumulator (long) $7E20D5.l [Reads: Accumulator] [Flags: NCZ]
	adc ($22.b,S),Y		; 73 22 ; Add with carry (stack relative indirect indexed) ($22.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $29.b		; 26 29 ; Rotate left $29.b [Reads: Direct Page] [Flags: NCZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $2D93.w		; 2D 93 2D ; Logical AND $2D93.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $73.b,S		; 43 73 ; Exclusive OR accumulator with stack relative $73.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	inc $D0.b		; E6 D0 ; Increment $D0.b [Reads: Direct Page] [Flags: NZ]
	eor $D88D.w,Y		; 59 8D D8 ; Exclusive OR accumulator with memory $D88D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $2212.w,Y		; 59 12 22 ; Exclusive OR accumulator with memory $2212.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $DD.b		; 25 DD ; Logical AND $DD.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2B00.w,Y		; 59 00 2B ; Exclusive OR accumulator with memory $2B00.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $2C		; 30 2C ; Branch if minus to $30, $2C [Flow: branch]
	eor ($73.b,X)		; 41 73 ; Exclusive OR accumulator with memory ($73.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	eor $06AA.w,Y		; 59 AA 06 ; Exclusive OR accumulator with memory $06AA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $2CB0.w,Y		; 59 B0 2C ; Exclusive OR accumulator with memory $2CB0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $D3BA.w,Y		; 59 BA D3 ; Exclusive OR accumulator with memory $D3BA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $2673.w,X		; 7E 73 26 ; Rotate right $2673.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ldx $2D27.w,Y		; BE 27 2D ; Load X register $2D27.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	ora $1F1E.w,X		; 1D 1E 1F ; OR accumulator with memory $1F1E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ldy $B6.b,X		; B4 B6 ; Load Y register $B6.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	asl $27B9.w,X		; 1E B9 27 ; Arithmetic shift left $27B9.w,X [Reads: X Index] [Flags: NCZ]
	asl $1D1E.w,X		; 1E 1E 1D ; Arithmetic shift left $1D1E.w,X [Reads: X Index] [Flags: NCZ]
	adc ($D8.b,S),Y		; 73 D8 ; Add with carry (stack relative indirect indexed) ($D8.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $3E.b		; 26 3E ; Rotate left $3E.b [Reads: Direct Page] [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $59B8.w,Y		; 59 B8 59 ; Exclusive OR accumulator with memory $59B8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol A		; 2A ; Rotate left accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NCZ]
	rol $1EB6.w		; 2E B6 1E ; Rotate left $1EB6.w [Flags: NCZ]
	eor $73AD.w,Y		; 59 AD 73 ; Exclusive OR accumulator with memory $73AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $221F.w,Y		; 59 1F 22 ; Exclusive OR accumulator with memory $221F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $CD2E.w		; 20 2E CD ; Jump to subroutine at $CD2E.w [Writes: Stack Pointer] [Flow: call]
	dec $59.b		; C6 59 ; Decrement $59.b [Reads: Direct Page] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $1A1F.w,Y		; 59 1F 1A ; Exclusive OR accumulator with memory $1A1F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $22.b		; A6 22 ; Load $22.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	asl $7E41.w,X		; 1E 41 7E ; Arithmetic shift left $7E41.w,X [Reads: X Index] [Flags: NCZ]
	adc ($06.b,S),Y		; 73 06 ; Add with carry (stack relative indirect indexed) ($06.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	phb		; 8B ; Push data bank register to stack [Reads: Data Bank] [Writes: Stack Pointer] [SNES: Stack operation: pushes DBR]
	trb $2E2B.w		; 1C 2B 2E ; Test and reset bits $2E2B.w [Reads: Accumulator] [Flags: Z]
	asl $5925.w,X		; 1E 25 59 ; Arithmetic shift left $5925.w,X [Reads: X Index] [Flags: NCZ]
	wai		; CB ; Wait for interrupt
	ldx $73.b		; A6 73 ; Load $73.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	lda $59.b,X		; B5 59 ; Load $59.b,X into accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	phx		; DA ; Push X register [Reads: X Index] [Writes: Stack Pointer]
	eor $BA1B.w,Y		; 59 1B BA ; Exclusive OR accumulator with memory $BA1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $733E.w,Y		; BE 3E 73 ; Load X register $733E.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $D3BF.w,Y		; 59 BF D3 ; Exclusive OR accumulator with memory $D3BF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1E1D.w,Y		; 59 1D 1E ; Exclusive OR accumulator with memory $1E1D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $06911E.l,X		; 1F 1E 91 06 ; Logical OR long $06911E.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sta ($C7.b,S),Y		; 93 C7 ; Store accumulator (stack relative indirect indexed) ($C7.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	rol $757F.w,X		; 3E 7F 75 ; Rotate left $757F.w,X [Reads: X Index] [Flags: NCZ]
	bit #$06.b		; 89 06 ; Test bits #$06.b with accumulator [Reads: Accumulator] [Flags: Z]
	dec $0B91.w		; CE 91 0B ; Decrement $0B91.w [Flags: NZ]
	rol $419C.w		; 2E 9C 41 ; Rotate left $419C.w [Flags: NCZ]
	adc $068975.l,X		; 7F 75 89 06 ; Add long $068975.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $0B59.w,X		; 1D 59 0B ; OR accumulator with memory $0B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $419C.w		; 2E 9C 41 ; Rotate left $419C.w [Flags: NCZ]
	adc $008975.l,X		; 7F 75 89 00 ; Add long $008975.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $B60B.w,Y		; 59 0B B6 ; Exclusive OR accumulator with memory $B60B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1E25.w		; 2D 25 1E ; Logical AND $1E25.w with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $2E0B.w,Y		; 59 0B 2E ; Exclusive OR accumulator with memory $2E0B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stz $7F41.w		; 9C 41 7F ; Store zero to $7F41.w
	adc $89.b,X		; 75 89 ; Add $89.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	ora ($22.b,X)		; 01 22 ; Logical OR ($22.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	jsr $1359.w		; 20 59 13 ; Jump to subroutine at $1359.w [Writes: Stack Pointer] [Flow: call]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $4195.w		; 2E 95 41 ; Rotate left $4195.w [Flags: NCZ]
	adc $59C805.l,X		; 7F 05 C8 59 ; Add long $59C805.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1FCE.w,Y		; 59 CE 1F ; Exclusive OR accumulator with memory $1FCE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $A5.b		; A6 A5 ; Load $A5.b into X register [Reads: Direct Page] [Writes: X Index] [Flags: NZ]
	trb JOY4L.w		; 1C 1E 42 ; Test and reset bits JOY4L.w [Reads: Accumulator] [Flags: Z]
	eor $1DDA.w,Y		; 59 DA 1D ; Exclusive OR accumulator with memory $1DDA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $75.b,S		; E3 75 ; Subtract stack-relative $75.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
.ACCU 8
	sep #$25		; E2 25
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $E87F.w		; AD 7F E8 ; Load $E87F.w into accumulator [Writes: Accumulator] [Flags: NZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$22.b		; 29 22 ; Logical AND #$22.b with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $1E1C.w,X		; 1E 1C 1E ; Arithmetic shift left $1E1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $753E.w		; 2D 3E 75 ; Logical AND $753E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $5352.w,Y		; 59 52 53 ; Exclusive OR accumulator with memory $5352.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2229.w,Y		; 59 29 22 ; Exclusive OR accumulator with memory $2229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E1C.w,X		; 1E 1C 1E ; Arithmetic shift left $1E1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $753E.w		; 2D 3E 75 ; Logical AND $753E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $5354.w,Y		; 59 54 53 ; Exclusive OR accumulator with memory $5354.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2229.w,Y		; 59 29 22 ; Exclusive OR accumulator with memory $2229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E1C.w,X		; 1E 1C 1E ; Arithmetic shift left $1E1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $753E.w		; 2D 3E 75 ; Logical AND $753E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $5655.w,Y		; 59 55 56 ; Exclusive OR accumulator with memory $5655.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $1F59E8.l,X		; 7F E8 59 1F ; Add long $1F59E8.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	cpy $59.b		; C4 59 ; Compare $59.b with Y register [Reads: Direct Page, Y Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2229.w,Y		; 59 29 22 ; Exclusive OR accumulator with memory $2229.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $1E1C.w,X		; 1E 1C 1E ; Arithmetic shift left $1E1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $59C6.w,Y		; 59 C6 59 ; Exclusive OR accumulator with memory $59C6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $753E.w		; 2D 3E 75 ; Logical AND $753E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $5857.w,Y		; 59 57 58 ; Exclusive OR accumulator with memory $5857.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $E8.b,X		; 76 E8 ; Rotate right $E8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $A207.w,Y		; 59 07 A2 ; Exclusive OR accumulator with memory $A207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2559.w		; 2D 59 25 ; Logical AND $2559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda [$1E.b]		; A7 1E ; Load accumulator (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $D01A.w		; CE 1A D0 ; Decrement $D01A.w [Flags: NZ]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C41F.w,Y		; 59 1F C4 ; Exclusive OR accumulator with memory $C41F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora [$A2.b]		; 07 A2 ; OR accumulator with memory (long) [$A2.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $0259.w		; 2D 59 02 ; Logical AND $0259.w with accumulator [Writes: Accumulator] [Flags: NZ]
	cmp [$2D.b]		; C7 2D ; Compare accumulator (long) [$2D.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	sta $753EA6.l		; 8F A6 3E 75 ; Store accumulator (long) $753EA6.l [Reads: Accumulator]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	dey		; 88 ; Decrement Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	eor $5857.w,Y		; 59 57 58 ; Exclusive OR accumulator with memory $5857.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $E8.b,X		; 76 E8 ; Rotate right $E8.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $A207.w,Y		; 59 07 A2 ; Exclusive OR accumulator with memory $A207.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2559.w		; 2D 59 25 ; Logical AND $2559.w with accumulator [Writes: Accumulator] [Flags: NZ]
	lda [$1E.b]		; A7 1E ; Load accumulator (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $1C.b,X		; B4 1C ; Load Y register $1C.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	dec $D01A.w		; CE 1A D0 ; Decrement $D01A.w [Flags: NZ]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($28.b)		; D2 28 ; Compare accumulator (indirect) ($28.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	and $5921.w		; 2D 21 59 ; Logical AND $5921.w with accumulator [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $C430.w,Y		; 59 30 C4 ; Exclusive OR accumulator with memory $C430.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $9059.w		; 2C 59 90 ; Test bits $9059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	adc $9B.b,X		; 75 9B ; Add $9B.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	tay		; A8 ; Transfer accumulator to Y [Reads: Accumulator] [Writes: Y Index] [Flags: NZ]
	and $E359.w		; 2D 59 E3 ; Logical AND $E359.w with accumulator [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AE0.w,Y		; 59 E0 1A ; Exclusive OR accumulator with memory $1AE0.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	ldy $1E.b,X		; B4 1E ; Load Y register $1E.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	bit $432C.w		; 2C 2C 43 ; Test bits $432C.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $02.b,X		; 76 02 ; Rotate right $02.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	tyx		; BB ; Transfer Y to X [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $321E.w,Y		; 59 1E 32 ; Exclusive OR accumulator with memory $321E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	sty $BACE.w		; 8C CE BA ; Store Y register to $BACE.w [Reads: Y Index]
	and ($43.b),Y		; 31 43 ; AND accumulator with memory ($43.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $3F210E.l,X		; 7F 0E 21 3F ; Add long $3F210E.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $21.b,X		; 16 21 ; Arithmetic shift left $21.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $E38D.w,Y		; 59 8D E3 ; Exclusive OR accumulator with memory $E38D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	tsb $412B.w		; 0C 2B 41 ; Test and set bits $412B.w [Reads: Accumulator] [Flags: Z]
	eor $2E01.w,Y		; 59 01 2E ; Exclusive OR accumulator with memory $2E01.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$27.b]		; 27 27 ; AND accumulator with memory (long) [$27.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and ($3F.b)		; 32 3F ; AND accumulator with memory (indirect) ($3F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc $E7.b,X		; 75 E7 ; Add $E7.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $3059.w		; 2C 59 30 ; Test bits $3059.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $251A.w		; CE 1A 25 ; Decrement $251A.w [Flags: NZ]
	ror $30.b,X		; 76 30 ; Rotate right $30.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	lda [$22.b]		; A7 22 ; Load accumulator (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldx $2D59.w		; AE 59 2D ; Load $2D59.w into X register [Writes: X Index] [Flags: NZ]
.INDEX 8
	sep #$D3		; E2 D3
	ldy $B6.b		; A4 B6 ; Load $B6.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	eor ($7E.b,X)		; 41 7E ; Exclusive OR accumulator with memory ($7E.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($E6.b,S),Y		; 73 E6 ; Add with carry (stack relative indirect indexed) ($E6.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $2806.w,Y		; 59 06 28 ; Exclusive OR accumulator with memory $2806.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy #$0F.b		; A0 0F ; Load #$0F.b into Y register [Writes: Y Index] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc ($94.b,X)		; E1 94 ; Subtract with carry ($94.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	lda ($27.b),Y		; B1 27 ; Load accumulator ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $E3A4.w		; 20 A4 E3 ; Jump to subroutine at $E3A4.w [Writes: Stack Pointer] [Flow: call]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $251F.w		; CE 1F 25 ; Decrement $251F.w [Flags: NZ]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	adc ($E1.b,S),Y		; 73 E1 ; Add with carry (stack relative indirect indexed) ($E1.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	sta ($B5.b),Y		; 91 B5 ; Store accumulator ($B5.b),Y [Reads: Direct Page, Y Index, Accumulator]
	eor $59B4.w,Y		; 59 B4 59 ; Exclusive OR accumulator with memory $59B4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $A221.w,Y		; 59 21 A2 ; Exclusive OR accumulator with memory $A221.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $8C59.w		; 2D 59 8C ; Logical AND $8C59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $B4.b		; 26 B4 ; Rotate left $B4.b [Reads: Direct Page] [Flags: NCZ]
	ora $7E41.w,X		; 1D 41 7E ; OR accumulator with memory $7E41.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	adc ($08.b,S),Y		; 73 08 ; Add with carry (stack relative indirect indexed) ($08.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $261A.w,Y		; 59 1A 26 ; Exclusive OR accumulator with memory $261A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $251A.w,Y		; 59 1A 25 ; Exclusive OR accumulator with memory $251A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp $592C32.l,X		; DF 32 2C 59 ; Compare accumulator (long,X) $592C32.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	trb $27B1.w		; 1C B1 27 ; Test and reset bits $27B1.w [Reads: Accumulator] [Flags: Z]
	jsr $26B3.w		; 20 B3 26 ; Jump to subroutine at $26B3.w [Writes: Stack Pointer] [Flow: call]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $B4.b		; 26 B4 ; Rotate left $B4.b [Reads: Direct Page] [Flags: NCZ]
	ora $7342.w,X		; 1D 42 73 ; OR accumulator with memory $7342.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($59.b)		; D2 59 ; Compare accumulator (indirect) ($59.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $2E2D.w,Y		; 59 2D 2E ; Exclusive OR accumulator with memory $2E2D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	and [$A4.b]		; 27 A4 ; AND accumulator with memory (long) [$A4.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $DA.b,X		; B4 DA ; Load Y register $DA.b,X [Reads: Direct Page, X Index] [Writes: Y Index] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stx $25.b,Y		; 96 25 ; Store X register $25.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	and $43.b		; 25 43 ; Logical AND $43.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($01.b,S),Y		; 73 01 ; Add with carry (stack relative indirect indexed) ($01.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	rol $592D.w		; 2E 2D 59 ; Rotate left $592D.w [Flags: NCZ]
	jsl $E3591F.l		; 22 1F 59 E3 ; Jump to subroutine long $E3591F.l [Writes: Stack Pointer] [Flow: call]
	eor $59AD.w,Y		; 59 AD 59 ; Exclusive OR accumulator with memory $59AD.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $2596.w,Y		; 59 96 25 ; Exclusive OR accumulator with memory $2596.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $251A.w		; 1C 1A 25 ; Test and reset bits $251A.w [Reads: Accumulator] [Flags: Z]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora $737E.w,X		; 1D 7E 73 ; OR accumulator with memory $737E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $280C.w,Y		; 59 0C 28 ; Exclusive OR accumulator with memory $280C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$59.b]		; C7 59 ; Compare accumulator (long) [$59.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	ora $4225A2.l		; 0F A2 25 42 ; OR accumulator with memory (long) $4225A2.l [Writes: Accumulator] [Flags: NZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta $1E24.w,Y		; 99 24 1E ; Store accumulator to $1E24.w,Y [Reads: Y Index, Accumulator]
	asl $7329.w,X		; 1E 29 73 ; Arithmetic shift left $7329.w,X [Reads: X Index] [Flags: NCZ]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $22C8.w,Y		; 59 C8 22 ; Exclusive OR accumulator with memory $22C8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1AB4.w		; 20 B4 1A ; Jump to subroutine at $1AB4.w [Writes: Stack Pointer] [Flow: call]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp ($1A.b),Y		; D1 1A ; Compare accumulator ($1A.b),Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1EAF.w,Y		; 59 AF 1E ; Exclusive OR accumulator with memory $1EAF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($7F.b,X)		; 41 7F ; Exclusive OR accumulator with memory ($7F.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $1D9E.w,Y		; 59 9E 1D ; Exclusive OR accumulator with memory $1D9E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpy #$1C.b		; C0 1C ; Compare #$1C.b with Y register [Reads: Y Index] [Flags: NCZ]
	lda ($27.b),Y		; B1 27 ; Load accumulator ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $591E.w		; 20 1E 59 ; Jump to subroutine at $591E.w [Writes: Stack Pointer] [Flow: call]
	sbc $2B.b,S		; E3 2B ; Subtract stack-relative $2B.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and $59E875.l,X		; 3F 75 E8 59 ; AND accumulator with memory (long,X) $59E875.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	dec $B7C0.w		; CE C0 B7 ; Decrement $B7C0.w [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$C8.b]		; 27 C8 ; AND accumulator with memory (long) [$C8.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $5925.w,X		; BD 25 59 ; Load $5925.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	jsr $322E.w		; 20 2E 32 ; Jump to subroutine at $322E.w [Writes: Stack Pointer] [Flow: call]
	.db $42, $76		; 42 76 ; Reserved instruction
	sta $3FE3.w		; 8D E3 3F ; Store accumulator to $3FE3.w [Reads: Accumulator]
	adc $2DB116.l,X		; 7F 16 B1 2D ; Add long $2DB116.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $599F.w,Y		; 59 9F 59 ; Exclusive OR accumulator with memory $599F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	cmp $3F2D27.l,X		; DF 27 2D 3F ; Compare accumulator (long,X) $3F2D27.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	rol $0375.w,X		; 3E 75 03 ; Rotate left $0375.w,X [Reads: X Index] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $CF59.w		; AD 59 CF ; Load $CF59.w into accumulator [Writes: Accumulator] [Flags: NZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $321A.w		; 2C 1A 32 ; Test bits $321A.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ror $DA.b,X		; 76 DA ; Rotate right $DA.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	eor $42BE.w,Y		; 59 BE 42 ; Exclusive OR accumulator with memory $42BE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222C.w,Y		; 59 2C 22 ; Exclusive OR accumulator with memory $222C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $B9.b		; 25 B9 ; Logical AND $B9.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	tas		; 1B ; Transfer C to stack pointer  [Reads: Accumulator] [Writes: Stack Pointer]
	ldx $3F.b,Y		; B6 3F ; Load X register $3F.b,Y [Reads: Direct Page, Y Index] [Writes: X Index] [Flags: NZ]
	rol $737E.w,X		; 3E 7E 73 ; Rotate left $737E.w,X [Reads: X Index] [Flags: NCZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1A1C.w,Y		; 59 1C 1A ; Exclusive OR accumulator with memory $1A1C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $AF59.w,Y		; BE 59 AF ; Load X register $AF59.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	asl $DA59.w,X		; 1E 59 DA ; Arithmetic shift left $DA59.w,X [Reads: X Index] [Flags: NCZ]
	eor $59AB.w,Y		; 59 AB 59 ; Exclusive OR accumulator with memory $59AB.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $280F.w,Y		; 59 0F 28 ; Exclusive OR accumulator with memory $280F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	adc ($0E.b,S),Y		; 73 0E ; Add with carry (stack relative indirect indexed) ($0E.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ora $280659.l,X		; 1F 59 06 28 ; Logical OR long $280659.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E1B.w,Y		; 59 1B 2E ; Exclusive OR accumulator with memory $2E1B.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $2759.w		; 2D 59 27 ; Logical AND $2759.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $30, $59		; 30 59 ; Branch if minus to $30, $59 [Flow: branch]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($26.b),Y		; 51 26 ; Exclusive OR accumulator with memory ($26.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $241ACE.l,X		; 1F CE 1A 24 ; Logical OR long $241ACE.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	eor $7390.w,Y		; 59 90 73 ; Exclusive OR accumulator with memory $7390.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stx $9C.b,Y		; 96 9C ; Store X register $9C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cld		; D8 ; Clear decimal flag [Flags: D]
	eor $1ACE.w,Y		; 59 CE 1A ; Exclusive OR accumulator with memory $1ACE.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $7E.b		; 25 7E ; Logical AND $7E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($30.b,S),Y		; 73 30 ; Add with carry (stack relative indirect indexed) ($30.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	iny		; C8 ; Increment Y register [Reads: Y Index] [Writes: Y Index] [Flags: NZ]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	ora $590859.l,X		; 1F 59 08 59 ; Logical OR long $590859.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cmp [$B9.b]		; C7 B9 ; Compare accumulator (long) [$B9.b] [Reads: Direct Page, Accumulator] [Flags: NCZ]
	lda ($1D.b),Y		; B1 1D ; Load accumulator ($1D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $C728.w		; 0C 28 C7 ; Test and set bits $C728.w [Reads: Accumulator] [Flags: Z]
	adc ($0F.b,S),Y		; 73 0F ; Add with carry (stack relative indirect indexed) ($0F.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	ldx #$25.b		; A2 25 ; Load #$25.b into X register [Writes: X Index] [Flags: NZ]
	eor $26A9.w,Y		; 59 A9 26 ; Exclusive OR accumulator with memory $26A9.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora ($28.b,S),Y		; 13 28 ; OR accumulator (stack relative indirect indexed) ($28.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	cpx #$2B.b		; E0 2B ; Compare #$2B.b with X register [Reads: X Index] [Flags: NCZ]
	eor $1F0E.w,Y		; 59 0E 1F ; Exclusive OR accumulator with memory $1F0E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1AE4.w,Y		; 59 E4 1A ; Exclusive OR accumulator with memory $1AE4.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	adc ($1C.b,S),Y		; 73 1C ; Add with carry (stack relative indirect indexed) ($1C.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $1D25.w		; 2E 25 1D ; Rotate left $1D25.w [Flags: NCZ]
	eor $59AC.w,Y		; 59 AC 59 ; Exclusive OR accumulator with memory $59AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	stx $9C.b,Y		; 96 9C ; Store X register $9C.b,Y [Reads: Direct Page, Y Index] [Writes: X Index]
	eor $59DA.w,Y		; 59 DA 59 ; Exclusive OR accumulator with memory $59DA.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $32.b		; 26 32 ; Rotate left $32.b [Reads: Direct Page] [Flags: NCZ]
	eor $22C8.w,Y		; 59 C8 22 ; Exclusive OR accumulator with memory $22C8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1AB4.w		; 20 B4 1A ; Jump to subroutine at $1AB4.w [Writes: Stack Pointer] [Flow: call]
	and $7E.b		; 25 7E ; Logical AND $7E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	adc ($D1.b,S),Y		; 73 D1 ; Add with carry (stack relative indirect indexed) ($D1.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	rol $088A.w,X		; 3E 8A 08 ; Rotate left $088A.w,X [Reads: X Index] [Flags: NCZ]
	eor ($2F.b),Y		; 51 2F ; Exclusive OR accumulator with memory ($2F.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $AC59.w,X		; 1E 59 AC ; Arithmetic shift left $AC59.w,X [Reads: X Index] [Flags: NCZ]
	and $AC59.w		; 2D 59 AC ; Logical AND $AC59.w with accumulator [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $CE59.w,X		; 1D 59 CE ; OR accumulator with memory $CE59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	cmp ($27.b)		; D2 27 ; Compare accumulator (indirect) ($27.b) [Reads: Direct Page, Accumulator] [Flags: NCZ]
	adc ($DA.b,S),Y		; 73 DA ; Add with carry (stack relative indirect indexed) ($DA.b,S),Y [Reads: Y Index, Stack Pointer] [Writes: Accumulator] [Flags: NCVZ]
	eor $5997.w,Y		; 59 97 59 ; Exclusive OR accumulator with memory $5997.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cmp ($CE.b,S),Y		; D3 CE ; Compare accumulator (stack relative indirect indexed) ($CE.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	bit $1DD0.w		; 2C D0 1D ; Test bits $1DD0.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $2E28.w,Y		; 59 28 2E ; Exclusive OR accumulator with memory $2E28.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $733E.w		; 2D 3E 73 ; Logical AND $733E.w with accumulator [Writes: Accumulator] [Flags: NZ]
	ora ($28.b)		; 12 28 ; OR accumulator with memory (indirect) ($28.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $9C96.w,Y		; 59 96 9C ; Exclusive OR accumulator with memory $9C96.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $1FC6.w,Y		; 59 C6 1F ; Exclusive OR accumulator with memory $1FC6.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	rol $128A.w,X		; 3E 8A 12 ; Rotate left $128A.w,X [Reads: X Index] [Flags: NCZ]
	and ($28.b,X)		; 21 28 ; Logical AND ($28.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $28D1.w,Y		; 59 D1 28 ; Exclusive OR accumulator with memory $28D1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	rol $167F.w,X		; 3E 7F 16 ; Rotate left $167F.w,X [Reads: X Index] [Flags: NCZ]
	asl $3E16.w		; 0E 16 3E ; Arithmetic shift left $3E16.w [Flags: NCZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	eor $1AD1.w,Y		; 59 D1 1A ; Exclusive OR accumulator with memory $1AD1.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and #$1E.b		; 29 1E ; Logical AND #$1E.b with accumulator [Writes: Accumulator] [Flags: NZ]
	eor $1D9E.w,Y		; 59 9E 1D ; Exclusive OR accumulator with memory $1D9E.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	cpy #$1C.b		; C0 1C ; Compare #$1C.b with Y register [Reads: Y Index] [Flags: NCZ]
	lda ($27.b),Y		; B1 27 ; Load accumulator ($27.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $3E1E.w		; 20 1E 3E ; Jump to subroutine at $3E1E.w [Writes: Stack Pointer] [Flow: call]
	adc $E8.b,X		; 75 E8 ; Add $E8.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $2DAC.w,Y		; 59 AC 2D ; Exclusive OR accumulator with memory $2DAC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tsb $C728.w		; 0C 28 C7 ; Test and set bits $C728.w [Reads: Accumulator] [Flags: Z]
	eor $A20F.w,Y		; 59 0F A2 ; Exclusive OR accumulator with memory $A20F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $42.b		; 25 42 ; Logical AND $42.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $2E21.w,Y		; 59 21 2E ; Exclusive OR accumulator with memory $2E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($3F.b,X)		; 21 3F ; Logical AND ($3F.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	adc $592708.l,X		; 7F 08 27 59 ; Add long $592708.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	bit $1C2E.w		; 2C 2E 1C ; Test bits $1C2E.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	and ($59.b,X)		; 21 59 ; Logical AND ($59.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	eor $931D.w,Y		; 59 1D 93 ; Exclusive OR accumulator with memory $931D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $28A6.w		; 20 A6 28 ; Jump to subroutine at $28A6.w [Writes: Stack Pointer] [Flow: call]
	rol $592C.w		; 2E 2C 59 ; Rotate left $592C.w [Flags: NCZ]
	.db $30, $C8		; 30 C8 ; Branch if minus to $30, $C8 [Flow: branch]
	and $1D.b		; 25 1D ; Logical AND $1D.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $75E3.w,Y		; 59 E3 75 ; Exclusive OR accumulator with memory $75E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	lda $5932.w,X		; BD 32 59 ; Load $5932.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $BC.b		; A4 BC ; Load $BC.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $20.b,X		; D5 20 ; Compare accumulator $20.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	bit $8A41.w		; 2C 41 8A ; Test bits $8A41.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	ora ($1E.b)		; 12 1E ; OR accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $762D.w		; 1C 2D 76 ; Test and reset bits $762D.w [Reads: Accumulator] [Flags: Z]
	cmp $5920D5.l		; CF D5 20 59 ; Compare accumulator (long) $5920D5.l [Reads: Accumulator] [Flags: NCZ]
	cmp [$2D.b],Y		; D7 2D ; Compare accumulator (long indexed) [$2D.b],Y [Reads: Direct Page, Y Index, Accumulator] [Flags: NCZ]
	eor $59E3.w,Y		; 59 E3 59 ; Exclusive OR accumulator with memory $59E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $22.b		; 25 22 ; Logical AND $22.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $7F.b,S		; 43 7F ; Exclusive OR accumulator with stack relative $7F.b,S [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NZ]
	ora [$22.b]		; 07 22 ; OR accumulator with memory (long) [$22.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	lda $5932.w,X		; BD 32 59 ; Load $5932.w,X into accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor $1E21.w,Y		; 59 21 1E ; Exclusive OR accumulator with memory $1E21.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $3FE3.w,Y		; 59 E3 3F ; Exclusive OR accumulator with memory $3FE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	adc $C3.b,X		; 75 C3 ; Add $C3.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $302D.w,Y		; 59 2D 30 ; Exclusive OR accumulator with memory $302D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	eor $D39A.w,Y		; 59 9A D3 ; Exclusive OR accumulator with memory $D39A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $A859.w		; 2C 59 A8 ; Test bits $A859.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	eor $3437.w,Y		; 59 37 34 ; Exclusive OR accumulator with memory $3437.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $DC11.w,Y		; 59 11 DC ; Exclusive OR accumulator with memory $DC11.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	eor ($76.b,X)		; 41 76 ; Exclusive OR accumulator with memory ($76.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	asl $21.b,X		; 16 21 ; Arithmetic shift left $21.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta $59E3C0.l,X		; 9F C0 E3 59 ; Store accumulator (long,X) $59E3C0.l,X [Reads: Accumulator, X Index]
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($3F.b)		; 32 3F ; AND accumulator with memory (indirect) ($3F.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ror $1673.w,X		; 7E 73 16 ; Rotate right $1673.w,X [Reads: X Index] [Flags: NCZ]
	lda ($2D.b),Y		; B1 2D ; Load accumulator ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $25E2.w,Y		; 59 E2 25 ; Exclusive OR accumulator with memory $25E2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sbc $59.b,S		; E3 59 ; Subtract stack-relative $59.b,S from accumulator with borrow [Reads: Stack Pointer] [Writes: Accumulator] [Flags: NCVZ] [SNES: Stack-relative addressing]
	sta $88733F.l,X		; 9F 3F 73 88 ; Store accumulator (long,X) $88733F.l,X [Reads: Accumulator, X Index]
	mvp $0F,$59		; 44 59 0F ; Move block positive $0F,$59 [Reads: Y Index, Accumulator, X Index] [Writes: Y Index, Accumulator, X Index]
	tsx		; BA ; Transfer stack pointer to X [Reads: Stack Pointer] [Writes: X Index] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	lda $88731E.l		; AF 1E 73 88 ; Load long $88731E.l into accumulator [Writes: Accumulator] [Flags: NZ]
	bit #$0C.b		; 89 0C ; Test bits #$0C.b with accumulator [Reads: Accumulator] [Flags: Z]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($97.b)		; 32 97 ; AND accumulator with memory (indirect) ($97.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $1E27.w,Y		; 59 27 1E ; Exclusive OR accumulator with memory $1E27.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($2D.b),Y		; 31 2D ; AND accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $222D.w,Y		; 59 2D 22 ; Exclusive OR accumulator with memory $222D.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ldx $7F68.w,Y		; BE 68 7F ; Load X register $7F68.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	asl $1E.b,X		; 16 1E ; Arithmetic shift left $1E.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and $25.b		; 25 25 ; Logical AND $25.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	.db $42, $59		; 42 59 ; Reserved instruction
	txy		; 9B ; Transfer X to Y [Reads: X Index] [Writes: Y Index] [Flags: NZ]
	asl $9659.w,X		; 1E 59 96 ; Arithmetic shift left $9659.w,X [Reads: X Index] [Flags: NCZ]
	stz $8C59.w		; 9C 59 8C ; Store zero to $8C59.w
	and #$BA.b		; 29 BA ; Logical AND #$BA.b with accumulator [Writes: Accumulator] [Flags: NZ]
	and ($59.b)		; 32 59 ; AND accumulator with memory (indirect) ($59.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	cmp $222D75.l		; CF 75 2D 22 ; Compare accumulator (long) $222D75.l [Reads: Accumulator] [Flags: NCZ]
	ldx $8A41.w,Y		; BE 41 8A ; Load X register $8A41.w,Y [Reads: Y Index] [Writes: X Index] [Flags: NZ]
	php		; 08 ; Push processor status [Reads: Processor Status] [Writes: Stack Pointer]
	eor ($25.b),Y		; 51 25 ; Exclusive OR accumulator with memory ($25.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	sta [$59.b],Y		; 97 59 ; Store accumulator (long indexed) [$59.b],Y [Reads: Direct Page, Y Index, Accumulator]
	cmp $A8B3B6.l,X		; DF B6 B3 A8 ; Compare accumulator (long,X) $A8B3B6.l,X [Reads: Accumulator, X Index] [Flags: NCZ]
	eor $41E3.w,Y		; 59 E3 41 ; Exclusive OR accumulator with memory $41E3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ror $14.b,X		; 76 14 ; Rotate right $14.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	and [$2D.b]		; 27 2D ; AND accumulator with memory (long) [$2D.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	jsl $D85925.l		; 22 25 59 D8 ; Jump to subroutine long $D85925.l [Writes: Stack Pointer] [Flow: call]
	and [$42.b]		; 27 42 ; AND accumulator with memory (long) [$42.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $28AC.w,Y		; 59 AC 28 ; Exclusive OR accumulator with memory $28AC.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	ora $1B59.w,X		; 1D 59 1B ; OR accumulator with memory $1B59.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b)		; 32 1E ; AND accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	rol $077F.w,X		; 3E 7F 07 ; Rotate left $077F.w,X [Reads: X Index] [Flags: NCZ]
	asl $5932.w,X		; 1E 32 59 ; Arithmetic shift left $5932.w,X [Reads: X Index] [Flags: NCZ]
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ora $753E.w,X		; 1D 3E 75 ; OR accumulator with memory $753E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C399.w,Y		; 59 99 C3 ; Exclusive OR accumulator with memory $C399.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $591A.w,Y		; 59 1A 59 ; Exclusive OR accumulator with memory $591A.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txs		; 9A ; Transfer X to stack pointer [Reads: X Index] [Writes: Stack Pointer]
	cmp ($59.b,S),Y		; D3 59 ; Compare accumulator (stack relative indirect indexed) ($59.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	ora $2976D6.l,X		; 1F D6 76 29 ; Logical OR long $2976D6.l,X with accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	and ($B3.b)		; 32 B3 ; AND accumulator with memory (indirect) ($B3.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ora ($DC.b),Y		; 11 DC ; OR accumulator with memory ($DC.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $2C1E.w,X		; 1E 1E 2C ; Arithmetic shift left $2C1E.w,X [Reads: X Index] [Flags: NCZ]
	rol $E87F.w,X		; 3E 7F E8 ; Rotate left $E87F.w,X [Reads: X Index] [Flags: NCZ]
	eor $931C.w,Y		; 59 1C 93 ; Exclusive OR accumulator with memory $931C.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	eor ($2D.b),Y		; 51 2D ; Exclusive OR accumulator with memory ($2D.b),Y [Reads: Direct Page, Y Index] [Writes: Accumulator] [Flags: NZ]
	eor $59C3.w,Y		; 59 C3 59 ; Exclusive OR accumulator with memory $59C3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	sta ($32.b,S),Y		; 93 32 ; Store accumulator (stack relative indirect indexed) ($32.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator]
	eor $C826.w,Y		; 59 26 C8 ; Exclusive OR accumulator with memory $C826.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	asl $9A75.w,X		; 1E 75 9A ; Arithmetic shift left $9A75.w,X [Reads: X Index] [Flags: NCZ]
	cmp ($2C.b,S),Y		; D3 2C ; Compare accumulator (stack relative indirect indexed) ($2C.b,S),Y [Reads: Y Index, Stack Pointer, Accumulator] [Flags: NCZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	inc $59.b		; E6 59 ; Increment $59.b [Reads: Direct Page] [Flags: NZ]
	jsr $BE1A.w		; 20 1A BE ; Jump to subroutine at $BE1A.w [Writes: Stack Pointer] [Flow: call]
	eor $59B5.w,Y		; 59 B5 59 ; Exclusive OR accumulator with memory $59B5.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	cmp $7F41.w,X		; DD 41 7F ; Compare accumulator $7F41.w,X [Reads: X Index] [Flags: NCZ]
	brk $25.b		; 00 25 ; Software interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	and $59.b		; 25 59 ; Logical AND $59.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	jsl $2D2120.l		; 22 20 21 2D ; Jump to subroutine long $2D2120.l [Writes: Stack Pointer] [Flow: call]
	.db $42, $59		; 42 59 ; Reserved instruction
	bit $22.b		; 24 22 ; Test bits $22.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ora $7541.w,X		; 1D 41 75 ; OR accumulator with memory $7541.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	cop $21.b		; 02 21 ; Coprocessor interrupt [Writes: Stack Pointer] [Flags: I] [Flow: interrupt]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	.db $D0, $59		; D0 59 ; Branch if not equal to $D0, $59 [Flow: branch]
	cpx #$25.b		; E0 25 ; Compare #$25.b with X register [Reads: X Index] [Flags: NCZ]
	and $3E.b		; 25 3E ; Logical AND $3E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	asl $28.b		; 06 28 ; Arithmetic shift left $28.b [Reads: Direct Page] [Flags: NCZ]
	plp		; 28 ; Pull processor status [Reads: Stack Pointer] [Writes: Processor Status, Stack Pointer] [Flags: MXCZIDVN]
	ora $2559.w,X		; 1D 59 25 ; OR accumulator with memory $2559.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	rol $3E9C.w		; 2E 9C 3E ; Rotate left $3E9C.w [Flags: NCZ]
	adc $321A0C.l,X		; 7F 0C 1A 32 ; Add long $321A0C.l,X to accumulator with carry [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	eor $5908.w,Y		; 59 08 59 ; Exclusive OR accumulator with memory $5908.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and ($1E.b,X)		; 21 1E ; Logical AND ($1E.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	and $29.b		; 25 29 ; Logical AND $29.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor $3FE3.w,Y		; 59 E3 3F ; Exclusive OR accumulator with memory $3FE3.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	txa		; 8A ; Transfer X to accumulator [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	ora ($1E.b)		; 12 1E ; OR accumulator with memory (indirect) ($1E.b) [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $1E.b		; 25 1E ; Logical AND $1E.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	trb $592D.w		; 1C 2D 59 ; Test and reset bits $592D.w [Reads: Accumulator] [Flags: Z]
	cld		; D8 ; Clear decimal flag [Flags: D]
	adc $D5.b,X		; 75 D5 ; Add $D5.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	jsr $E359.w		; 20 59 E3 ; Jump to subroutine at $E359.w [Writes: Stack Pointer] [Flow: call]
	eor $2225.w,Y		; 59 25 22 ; Exclusive OR accumulator with memory $2225.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	eor $0F45.w,Y		; 59 45 0F ; Exclusive OR accumulator with memory $0F45.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	dec $2C2C.w		; CE 2C 2C ; Decrement $2C2C.w [Flags: NZ]
	eor $59D8.w,Y		; 59 D8 59 ; Exclusive OR accumulator with memory $59D8.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	tad		; 5B ; Transfer 16-bit accumulator to direct page register [Reads: Accumulator] [Writes: Direct Page] [Flags: NZ] [SNES: Sets DP register from accumulator]
	ror $01.b,X		; 76 01 ; Rotate right $01.b,X [Reads: Direct Page, X Index] [Flags: NCZ]
	rol $DA2D.w		; 2E 2D DA ; Rotate left $DA2D.w [Flags: NCZ]
	and [$46.b]		; 27 46 ; AND accumulator with memory (long) [$46.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	eor ($8A.b,X)		; 41 8A ; Exclusive OR accumulator with memory ($8A.b,X) [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ]
	ora $1C222B.l		; 0F 2B 22 1C ; OR accumulator with memory (long) $1C222B.l [Writes: Accumulator] [Flags: NZ]
	asl $592C.w,X		; 1E 2C 59 ; Arithmetic shift left $592C.w,X [Reads: X Index] [Flags: NCZ]
	inc A		; 1A ; Increment accumulator [Reads: Accumulator] [Writes: Accumulator] [Flags: NZ]
	bit $BD59.w		; 2C 59 BD ; Test bits $BD59.w with accumulator [Reads: Accumulator] [Flags: NVZ]
	pld		; 2B ; Pull direct page register from stack [Reads: Stack Pointer] [Writes: Direct Page, Stack Pointer] [Flags: NZ] [SNES: Stack operation: pulls DP register]
	bit $1E.b		; 24 1E ; Test bits $1E.b with accumulator [Reads: Direct Page, Accumulator] [Flags: NVZ]
	ora $7F3E.w,X		; 1D 3E 7F ; OR accumulator with memory $7F3E.w,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	inx		; E8 ; Increment X register [Reads: X Index] [Writes: X Index] [Flags: NZ]
	eor $C09F.w,Y		; 59 9F C0 ; Exclusive OR accumulator with memory $C09F.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	and [$1E.b]		; 27 1E ; AND accumulator with memory (long) [$1E.b] [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	ldy $D7.b		; A4 D7 ; Load $D7.b into Y register [Reads: Direct Page] [Writes: Y Index] [Flags: NZ]
	and $B659.w		; 2D 59 B6 ; Logical AND $B659.w with accumulator [Writes: Accumulator] [Flags: NZ]
	asl $4326.w,X		; 1E 26 43 ; Arithmetic shift left $4326.w,X [Reads: X Index] [Flags: NCZ]
	adc $16.b,X		; 75 16 ; Add $16.b,X to accumulator with carry [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NCVZ]
	and ($32.b,X)		; 21 32 ; Logical AND ($32.b,X) with accumulator [Reads: Direct Page, X Index] [Writes: Accumulator] [Flags: NZ] [SNES: Indexed indirect addressing]
	eor $59C2.w,Y		; 59 C2 59 ; Exclusive OR accumulator with memory $59C2.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	.db $D0, $25		; D0 25 ; Branch if not equal to $D0, $25 [Flow: branch]
	asl $2D1C.w,X		; 1E 1C 2D ; Arithmetic shift left $2D1C.w,X [Reads: X Index] [Flags: NCZ]
	eor $D5CF.w,Y		; 59 CF D5 ; Exclusive OR accumulator with memory $D5CF.w,Y [Reads: Y Index] [Writes: Accumulator] [Flags: NZ]
	jsr $1E59.w		; 20 59 1E ; Jump to subroutine at $1E59.w [Writes: Stack Pointer] [Flow: call]
	and $D0.b		; 25 D0 ; Logical AND $D0.b with accumulator [Reads: Direct Page] [Writes: Accumulator] [Flags: NZ]
	and $FF807F.l,X		; 3F 7F 80 FF ; AND accumulator with memory (long,X) $FF807F.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	sbc $FFFFFF.l,X		; FF FF FF FF ; Subtract with carry (long,X) $FFFFFF.l,X [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
	.db $FF		; Opcode FF overrunning bank boundry at 0E7FFF. Skipping. ; Subtract with carry (long,X) $FF [Reads: X Index] [Writes: Accumulator] [Flags: NCVZ]
.ENDS
